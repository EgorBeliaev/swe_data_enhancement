diff --git a/src/main/java/meteordevelopment/meteorclient/pathing/BaritoneSettings.java b/src/main/java/meteordevelopment/meteorclient/pathing/BaritoneSettings.java
index d900c6419a..8294edaa12 100644
--- a/src/main/java/meteordevelopment/meteorclient/pathing/BaritoneSettings.java
+++ b/src/main/java/meteordevelopment/meteorclient/pathing/BaritoneSettings.java
@@ -24,6 +24,8 @@ public class BaritoneSettings implements IPathManager.ISettings {
     private Setting<Boolean> walkOnWater, walkOnLava;
     private Setting<Boolean> step, noFall;
 
+    private static final Map<String, Double> SETTING_MAX_VALUES = new HashMap<>();
+
     public BaritoneSettings() {
         createWrappers();
     }
@@ -58,6 +60,10 @@ public void save() {
         SettingsUtil.save(BaritoneAPI.getSettings());
     }
 
+    static {
+        SETTING_MAX_VALUES.put("pathCutoffFactor", 1.0);
+    }
+
     // Wrappers
 
     @SuppressWarnings({"rawtypes", "unchecked"})
@@ -103,6 +109,8 @@ else if (value instanceof Double) {
                         .name(setting.getName())
                         .description(getDescription(setting.getName()))
                         .defaultValue((double) setting.defaultValue)
+                        .max(SETTING_MAX_VALUES.getOrDefault(setting.getName(), 10.0))
+                        .sliderMax(SETTING_MAX_VALUES.getOrDefault(setting.getName(), 10.0))
                         .onChanged(aDouble -> setting.value = aDouble)
                         .onModuleActivated(doubleSetting -> doubleSetting.set((Double) setting.value))
                         .build()
@@ -113,6 +121,8 @@ else if (value instanceof Float) {
                         .name(setting.getName())
                         .description(getDescription(setting.getName()))
                         .defaultValue(((Float) setting.defaultValue).doubleValue())
+                        .max(SETTING_MAX_VALUES.getOrDefault(setting.getName(), 10.0))
+                        .sliderMax(SETTING_MAX_VALUES.getOrDefault(setting.getName(), 10.0))
                         .onChanged(aDouble -> setting.value = aDouble.floatValue())
                         .onModuleActivated(doubleSetting -> doubleSetting.set(((Float) setting.value).doubleValue()))
                         .build()
