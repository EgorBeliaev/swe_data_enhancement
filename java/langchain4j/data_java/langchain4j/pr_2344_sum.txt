**Instruction to Programmer:**

1. Add a new `ContainsString` filter to the `MetadataFilters` in the repository, enabling filtering of metadata values based on the presence of a specific substring.

2. Implement the `ContainsString` filter for the following embedding stores:
   - Milvus
   - PgVector
   - Qdrant

3. Ensure that the new filter is efficient and case-sensitive, taking into consideration the limitations of each embedding store's implementation.

4. Remove any instances of the `NotContains` filter, as its functionality can be achieved by negating the `ContainsString` filter with a `Not` filter.

5. Update the integration tests for the `ContainsString` filter in `EmbeddingStoreWithFilteringIT` to include scenarios where the filter is supported and return true or false appropriately.

6. Use Java 17 features, such as `instanceof` casting, when making modifications to the code.

7. Ensure that existing APIs are not broken and document the changes thoroughly to communicate the limitations and expected behavior of the `ContainsString` filter to users.

8. Check for any special character handling issues with the `ContainsString` filter and implement any necessary adjustments to align with embedding store capabilities.

9. Modify the `Not` filter to always return false if the passed object is not Metadata, maintaining consistency with the overall filter design.

10. Ensure all unit and integration tests run successfully and are green before finalizing changes. Adjust the documentation to reflect any new changes or limitations introduced by the `ContainsString` filter.