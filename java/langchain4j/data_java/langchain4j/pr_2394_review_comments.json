[
    {
        "title": "MCP: ping responses and simplification of McpTransport"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "- Makes the `McpTransport` interface more generic by squashing most operations into `executeOperationWithResponse` and `executeOperationWithoutResponse` instead of having a separate method for each operation\r\n- Implements responding to server-initiated pings\r\n\r\nTest coverage for pings I currently only have for the Quarkus side https://github.com/jmartisk/quarkus-langchain4j/commit/5cdcf4298e0168b3e5ba42d5f8780710ac4d9c93 because only there I have a mock MCP server where I am able to hook into pings and confirm to the client that the server received a pong"
    },
    {
        "author": null,
        "body": "@jmartisk thanks a lot!"
    },
    {
        "author": {
            "login": "github-actions"
        },
        "body": "Hi @jmartisk, thank you very much for your PR! \u2764\ufe0f\nI'm a bot powered by Google AI Gemini gemini-2.0-flash-exp.\nThe maintainers of LangChain4j will perform a thorough code review as soon as they can, but in the meantime, here\u2019s a preliminary review from me. I hope you find it helpful.\n\n### Potential Issues\n\n#### Potential Breaking Changes\n- \u26a0\ufe0f The `McpTransport` interface has been changed, removing specific methods like `listTools`, `executeTool`, and `cancelOperation` and replacing them with `executeOperationWithResponse` and `executeOperationWithoutResponse`. This will break existing implementations of the interface.\n\n\n#### Potential Design Issues\n-  The `McpOperationHandler` now depends on `McpTransport` which might introduce a circular dependency if not handled carefully.\n-  The generic `executeOperationWithResponse` and `executeOperationWithoutResponse` methods might make it harder to debug specific operations.\n\n\n#### Potential Bugs\n-  If the `McpOperationHandler` does not correctly handle concurrent access to the `pendingOperations` map, it could lead to race conditions and incorrect responses.\n-  If the `PingResponse` is not correctly serialized, the server might not recognize it as a valid pong.\n-  If the `executeOperationWithoutResponse` method does not handle exceptions correctly, it could lead to unhandled exceptions and potential crashes.\n\n\n### Testing\n\nChanges in this PR are sufficiently tested: \u274c\n#### Suggested Positive Test Scenarios\n-\n  - Given: The server sends a ping.\n  - When: The server sends a ping.\n  - Then: The client should respond with a pong.\n\n-\n  - Given: The client sends a request and receives a valid response.\n  - When: A valid response is received.\n  - Then: The client should complete the future with the response.\n\n-\n  - Given: The client sends a request and the server sends a cancellation notification.\n  - When: A cancellation notification is received.\n  - Then: The client should complete the future with an error.\n\n\n\n#### Suggested Negative Test Scenarios\n-\n  - Given: The server sends a ping with an invalid format.\n  - When: The server sends an invalid ping.\n  - Then: The client should log an error and not crash.\n\n-\n  - Given: The server sends a response with an ID that does not match any pending operation.\n  - When: The server sends an invalid response.\n  - Then: The client should log a warning and not crash.\n\n-\n  - Given: The transport layer fails to send a message.\n  - When: The transport layer fails.\n  - Then: The client should handle the exception and not crash.\n\n\n\n#### Suggested Corner Case Test Scenarios\n-\n  - Given: A very large number of concurrent operations are initiated.\n  - When: Multiple threads initiate operations simultaneously.\n  - Then: The client should handle all operations without any resource exhaustion or deadlocks.\n\n-\n  - Given: The server sends a ping with a very large ID.\n  - When: The server sends a ping with a large ID.\n  - Then: The client should correctly respond to the ping.\n\n-\n  - Given: The server sends a ping while another operation is in progress.\n  - When: A ping is received during an ongoing operation.\n  - Then: The client should correctly respond to the ping without interrupting the ongoing operation.\n\n\n\n### Documentation\n\nChanges in this PR are sufficiently documented: \u2705\n"
    }
]