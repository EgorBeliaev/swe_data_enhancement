### Instruction for Programmer:

**Title:** Fix NullPointerException if the response doesn't contain usage info

**Issue:** Currently, when using the OpenAI embedding model, if there is no `usage` element in the response, it fails with a `NullPointerException`.

**Fix Required:**
1. Update the `embedAll` and `embedBatchedTexts` methods in `OpenAiEmbeddingModel` to handle responses where the `usage` element is missing.
2. Implement a filter to remove `null` results before attempting to reduce to a `TokenUsage`.
3. Ensure the change does not disrupt any existing consumer code that might depend on the presence of a `usage` element.
4. Consider logging a warning or using a default value if the `usage` data is missing or invalid.

**Testing:**
- Ensure the code handles responses with both present and missing `usage` fields without throwing a `NullPointerException`.
- Test for valid and invalid `usage` scenarios, including very large text embedding requests and API error responses.
- Validate the model processes multiple text segments correctly.
- Confirm that changes are documented appropriately.

**Additional Considerations:**
- Review potential implications on consumer code that may expect a non-null `usage`.
- Consider future-proofing by handling changes in response structure, such as new or removed fields.
- Review and improve efficiency in null handling, possibly using `Optional` instead of filtering with `Objects::nonNull`.

**Reference:** See PR #2459 for related discussions and context.