[
    {
        "title": "Mistral: map toolCallId for tool messages"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Change\r\nMistral tests are currently fail because all of a sudden Mistral decided to make `tool_call_id` parameter in `tool` messages mandatory:\r\n`Runtime java.lang.RuntimeException: status code: 400; body: {\"object\":\"error\",\"message\":\"Tool call id has to be defined.\",\"type\":\"invalid_request_error\",\"param\":null,\"code\":null}`.\r\n\r\nThis probably affects all Mistral users using tools.\r\n\r\ncc @geoand \r\n\r\n## General checklist\r\n- [X] There are no breaking changes\r\n- [ ] I have added unit and/or integration tests for my change\r\n- [ ] The tests cover both positive and negative cases\r\n- [X] I have manually run all the unit and integration tests in the module I have added/changed, and they are all green\r\n- [ ] I have manually run all the unit and integration tests in the [core](https://github.com/langchain4j/langchain4j/tree/main/langchain4j-core) and [main](https://github.com/langchain4j/langchain4j/tree/main/langchain4j) modules, and they are all green\r\n- [ ] I have added/updated the [documentation](https://github.com/langchain4j/langchain4j/tree/main/docs/docs)\r\n- [ ] I have added an example in the [examples repo](https://github.com/langchain4j/langchain4j-examples) (only for \"big\" features)\r\n- [ ] I have added/updated [Spring Boot starter(s)](https://github.com/langchain4j/langchain4j-spring) (if applicable)"
    },
    {
        "author": {
            "login": "langchain4j-github-bot"
        },
        "body": "/cc @czelabueno (mistral)"
    },
    {
        "author": {
            "login": "github-actions"
        },
        "body": "Hi @langchain4j, thank you very much for your PR! \u2764\ufe0f\nI'm a bot powered by Google AI Gemini gemini-2.0-flash-exp.\nThe maintainers of LangChain4j will perform a thorough code review as soon as they can, but in the meantime, here\u2019s a preliminary review from me. I hope you find it helpful.\n\n### Potential Issues\n\n#### Potential Breaking Changes\n-  While this change is not breaking in terms of API, it fixes a bug that was causing Mistral tool calls to fail. Users relying on the previous broken behavior might see a change in how their tool calls are handled.\n\n\n#### Potential Design Issues\n-  The change is very specific to Mistral's API requirements. It might be better to have a more generic way to handle tool call IDs in the future if other models require similar parameters.\n\n\n#### Potential Bugs\n-  If the `id()` method of `ToolExecutionResultMessage` returns null or an empty string, it could lead to issues. This should be handled gracefully.\n-  If the `toolCallId` is not correctly mapped, it could lead to issues with Mistral's API.\n\n\n### Testing\n\nChanges in this PR are sufficiently tested: \u274c\n#### Suggested Positive Test Scenarios\n-\n  - Given: A valid tool execution result message\n  - When: The message is converted to MistralAiChatMessage\n  - Then: The toolCallId, tool name, and content should be correctly mapped to the MistralAiChatMessage\n\n-\n  - Given: Multiple tool execution result messages\n  - When: The messages are converted to MistralAiChatMessage\n  - Then: Each message should be correctly converted to MistralAiChatMessage with the correct toolCallId\n\n\n\n#### Suggested Negative Test Scenarios\n-\n  - Given: A tool execution result message with a null tool name\n  - When: The message is converted to MistralAiChatMessage\n  - Then: An exception should be thrown or the message should be handled gracefully\n\n-\n  - Given: A tool execution result message with a null content\n  - When: The message is converted to MistralAiChatMessage\n  - Then: An exception should be thrown or the message should be handled gracefully\n\n-\n  - Given: A tool execution result message with an empty tool name\n  - When: The message is converted to MistralAiChatMessage\n  - Then: An exception should be thrown or the message should be handled gracefully\n\n-\n  - Given: A tool execution result message with an empty content\n  - When: The message is converted to MistralAiChatMessage\n  - Then: An exception should be thrown or the message should be handled gracefully\n\n\n\n#### Suggested Corner Case Test Scenarios\n-\n  - Given: A tool execution result message with a very long tool name and content\n  - When: The message is converted to MistralAiChatMessage\n  - Then: The toolCallId should be correctly mapped and the message should be processed without errors\n\n-\n  - Given: A tool execution result message with special characters in the tool name and content\n  - When: The message is converted to MistralAiChatMessage\n  - Then: The toolCallId should be correctly mapped and the message should be processed without errors\n\n\n\n### Documentation\n\nChanges in this PR are sufficiently documented: \u274c\n"
    },
    {
        "author": null,
        "body": "cc @katcharov, this is an example of an issue that would not be caught with mocked LLM responses"
    },
    {
        "author": {
            "login": "geoand"
        },
        "body": "Thanks a lot for the heads up!"
    },
    {
        "author": {
            "login": "czelabueno"
        },
        "body": "hey @langchain4j your changes are enough to fix the issue, however this change for tool messages have introduced also a new `MistralAiToolChoiceName` enum called `required` which is pending to add. This new enum is not strictly related to the tool messages requests but would be great to complete with all changes involved in tool messages\r\nWe would need change `ANY` by `REQUIRED` here:\r\n\r\nhttps://github.com/langchain4j/langchain4j/blob/9b63e2ccdf76b8014699498af39ca8bcf81cc009/langchain4j-mistral-ai/src/main/java/dev/langchain4j/model/mistralai/MistralAiChatModel.java#L163\r\n\r\nand here:\r\n\r\nhttps://github.com/langchain4j/langchain4j/blob/9b63e2ccdf76b8014699498af39ca8bcf81cc009/langchain4j-mistral-ai/src/main/java/dev/langchain4j/model/mistralai/MistralAiStreamingChatModel.java#L156\r\n\r\nWe can handle it in other PR if you prefer it like this. WDYT?"
    },
    {
        "author": null,
        "body": "@czelabueno oh, good to know! I guess tool choice logic can be added after https://github.com/langchain4j/langchain4j/pull/1989 is merged (I plan to merge tomorrow). https://github.com/langchain4j/langchain4j/pull/1989 introduces model-agnostic `ToolChoice`, so I guess it makes sense to wait till then?"
    },
    {
        "author": null,
        "body": "BTW did Mistral announce this **_breaking_** change? I did not get any email notification"
    },
    {
        "author": {
            "login": "czelabueno"
        },
        "body": "@langchain4j about below\r\n\r\n> @czelabueno oh, good to know! I guess tool choice logic can be added after https://github.com/langchain4j/langchain4j/pull/1989 is merged (I plan to merge tomorrow). https://github.com/langchain4j/langchain4j/pull/1989 introduces model-agnostic ToolChoice, so I guess it makes sense to wait till then?\r\n\r\nok make perfect sense to me, in fact the new `ChatParameters` fit well with the current MistralAI API specs, if it will be abstracted would be great!"
    },
    {
        "author": {
            "login": "czelabueno"
        },
        "body": "@langchain4j \r\n\r\n> BTW did Mistral announce this breaking change? I did not get any email notification\r\n\r\nin fact it was changed from May 24 \ud83d\ude05, but I think that due to recent API changes, the API validation is well working now, for their official SDK it's mandatory as well.\r\nThis is my bad because I was away for a few months but I'm already active again to update all the changes \ud83d\ude42\r\n \r\n![image](https://github.com/user-attachments/assets/414a070c-8f2c-459c-8f92-387d717d1efd)\r\n"
    },
    {
        "author": null,
        "body": "@czelabueno ah, I see! But in any case I would expect them to send the \"final warning\" email before actually making it mandatory. I can imagine there are still a lot of applicaitons that do not send the id and were broken by this change"
    }
]