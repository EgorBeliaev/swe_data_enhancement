[
    {
        "title": "Add Oracle Coherence embedding store implementation"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "<!--\r\nThank you so much for your contribution!\r\n\r\nPlease fill in all the sections below.\r\nPlease open the PR as a draft initially. Once it is reviewed and approved, we will ask you to add documentation and examples.\r\nPlease note that PRs with breaking changes or without tests will be rejected.\r\n\r\nPlease note that PRs will be reviewed based on the priority of the issues they address.\r\nWe ask for your patience. We are doing our best to review your PR as quickly as possible.\r\nPlease refrain from pinging and asking when it will be reviewed. Thank you for understanding!\r\n-->\r\n\r\n## Issue\r\n<!-- Please specify the ID of the issue this PR is addressing. For example: \"Closes #1234\" or \"Fixes #1234\" -->\r\nCloses #2002 \r\n\r\n## Change\r\nAdded `langchain4j-coherence` module that provides embedding store and chat memory store implementations that use [Oracle Coherence Community Edition](https://github.com/oracle/coherence) as a store.\r\n\r\n## General checklist\r\n<!-- Please double-check the following points and mark them like this: [X] -->\r\n- [X] There are no breaking changes\r\n- [X] I have added unit and integration tests for my change\r\n- [X] I have manually run all the unit and integration tests in the module I have added/changed, and they are all green\r\n- [*] I have manually run all the unit and integration tests in the [core] (https://github.com/langchain4j/langchain4j/tree/main/langchain4j-core) and [main](https://github.com/langchain4j/langchain4j/tree/main/langchain4j) modules, and they are all green (they are not, but I doubt it had anything to do with my changes -- Jacoco is failing the build because `core` requires 75% code coverage and it's only 68% at the moment)\r\n<!-- Before adding documentation and example(s) (below), please wait until the PR is reviewed and approved. -->\r\n- [x] I have added/updated the [documentation](https://github.com/langchain4j/langchain4j/tree/main/docs/docs)\r\n- [ ] I have added an example in the [examples repo](https://github.com/langchain4j/langchain4j-examples) (only for \"big\" features)\r\n- [ ] I have added/updated [Spring Boot starter(s)](https://github.com/langchain4j/langchain4j-spring) (if applicable)\r\n\r\nWe have all three of the above ready to submit, but will wait until this PR is reviewed and approved before submitting them.\r\n\r\n## Checklist for adding new maven module\r\n<!-- Please double-check the following points and mark them like this: [X] -->\r\n- [X] I have added my new module in the root `pom.xml` and `langchain4j-bom/pom.xml`\r\n\r\n\r\n## Checklist for adding new embedding store integration\r\n<!-- Please double-check the following points and mark them like this: [X] -->\r\n- [X] I have added a `CoherenceEmbeddingStoreIT` that extends from either `EmbeddingStoreIT` or `EmbeddingStoreWithFilteringIT`\r\n- [X] I have added a `CoherenceEmbeddingStoreRemovalIT` that extends from `EmbeddingStoreWithRemovalIT`\r\n"
    },
    {
        "author": {
            "login": "Martin7-1"
        },
        "body": "Thank you! And we should consider the lifecycle of `session`, looks like it's not closed properly now. "
    },
    {
        "author": null,
        "body": "@aseovic thank you!"
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": null,
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": ""
    },
    {
        "author": null,
        "body": ""
    },
    {
        "author": null,
        "body": "@aseovic thank you!"
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": "@Martin7-1 Which `session` lifecycle are you talking about? If it's Coherence `Session`, there really isn't anything to \"close\" -- it's more of a virtual than physical construct."
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": "@langchain4j Thanks for the quick turnaround and a thorough review.\r\n\r\nThe only remaining question is whether to use Coherence or Oracle Coherence, and apply changes you suggested above if we choose the latter. \r\n\r\nI prefer to leave it as is, but if you have strong feelings about it I have no problem renaming it either, so let me know what you want us to do. "
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": "I'm also not sure what you want me to do with Codacy issues.\r\n\r\nI've addressed the doc ones, but the remaining ones are related to test naming. We followed the existing examples and code style, but Codacy rules seem to be different. Let me know what you want us to do."
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": "@langchain4j Anything else preventing this from moving out of draft and getting merged?\r\n\r\nI also have an example and Spring Boot starter to submit PRs for. Not sure when you want me to submit those?"
    },
    {
        "author": null,
        "body": "@aseovic I'll try to review the latest version today and let you know, but I think it should be good to go"
    },
    {
        "author": null,
        "body": "Hi @aseovic, I've noticed that `com.oracle.coherence.ce:coherence` has a \"Universal Permissive License v 1.0\" license.\r\nWhich license should `langchain4j-coherence` module have? Thanks!"
    },
    {
        "author": {
            "login": "aseovic"
        },
        "body": "@langchain4j Yeah, our own projects use UPL 1.0 (Oracle mandate), but contributions to other projects typically use that project's license, so in this case Apache 2.0 (which is compatible with UPL 1.0).\r\n\r\nNormally, we would add Apache 2.0 license headers to the source files to make it clear, but we didn't see any in other code, including Oracle DB vector store integration, so we omitted them. If there is any place you want us to add this information to, let me know and I'll do it."
    }
]