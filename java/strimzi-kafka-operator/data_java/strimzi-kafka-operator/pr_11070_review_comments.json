[
    {
        "title": "Try fix race condition inside TopicControllerIT and KafkaHandlerIT"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "### Type of change\r\n\r\n- Bugfix\r\n- Enhancement / new feature\r\n- Refactoring\r\n\r\n### Description\r\n\r\nThis PR tries to fix the current race condition within TopicControllerIT, which happens in one of 5/10 runs. \r\n```java\r\n[ERROR] Failures: \r\n[ERROR] io.strimzi.operator.topic.TopicControllerIT.shouldUpdateTopicInKafkaWhenConfigRemovedInKube\r\n[ERROR]   Run 1: TopicControllerIT.shouldUpdateTopicInKafkaWhenConfigRemovedInKube:987->shouldUpdateTopicInKafkaWhenConfigChangedInKube:867 expected: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234}> but was: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=true}>\r\n[ERROR]   Run 2: TopicControllerIT.shouldUpdateTopicInKafkaWhenConfigRemovedInKube:987->shouldUpdateTopicInKafkaWhenConfigChangedInKube:867 expected: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234}> but was: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=true}>\r\n[ERROR]   Run 3: TopicControllerIT.shouldUpdateTopicInKafkaWhenConfigRemovedInKube:987->shouldUpdateTopicInKafkaWhenConfigChangedInKube:867 expected: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234}> but was: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=true}>\r\n[INFO] \r\n[WARNING] Flakes: \r\n[WARNING] io.strimzi.operator.topic.TopicControllerIT.shouldUpdateTopicInKafkaWhenBooleanConfigChangedInKube\r\n[ERROR]   Run 1: TopicControllerIT.shouldUpdateTopicInKafkaWhenBooleanConfigChangedInKube:949->shouldUpdateTopicInKafkaWhenConfigChangedInKube:867 expected: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=false}> but was: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=true}>\r\n[INFO]   Run 2: PASS\r\n[INFO] \r\n[WARNING] io.strimzi.operator.topic.TopicControllerIT.shouldUpdateTopicInKafkaWhenDoubleConfigChangedInKube\r\n[ERROR]   Run 1: TopicControllerIT.shouldUpdateTopicInKafkaWhenDoubleConfigChangedInKube:930->shouldUpdateTopicInKafkaWhenConfigChangedInKube:867 expected: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.1, index.interval.bytes=1234, unclean.leader.election.enable=true}> but was: <{compression.type=producer, cleanup.policy=compact, flush.ms=1234, min.cleanable.dirty.ratio=0.6, index.interval.bytes=1234, unclean.leader.election.enable=true}>\r\n[INFO]   Run 2: PASS\r\n[INFO] \r\n[INFO] \r\n[ERROR] Tests run: 102, Failures: 1, Errors: 0, Skipped: 2, Flakes: 2\r\n```\r\n\r\nMoreover, during fixing this problem, I have encountered another one:\r\n```java\r\n[ERROR] Errors: \r\n[ERROR] io.strimzi.operator.topic.KafkaHandlerIT.shouldDescribeTopics\r\n[ERROR]   Run 1: KafkaHandlerIT.shouldDescribeTopics:246 \u00bb NoSuchElement No value present\r\n[ERROR]   Run 2: KafkaHandlerIT.shouldDescribeTopics:246 \u00bb NoSuchElement No value present\r\n[ERROR]   Run 3: KafkaHandlerIT.shouldDescribeTopics:246 \u00bb NoSuchElement No value present\r\n[INFO]\r\n```\r\nThe race condition occurs because Kafka\u2019s topic metadata updates asynchronously after configuration changes in Kubernetes. In **slower** environments, describeConfigs may query metadata before Kafka completes the update, causing tests to fail prematurely. The dynamic wait ensures the configuration update is reflected in Kafka before the test checks, preventing flakiness due to timing mismatches.\r\n\r\n### Checklist\r\n\r\n- [x] Make sure all tests pass\r\n- [x] Update documentation"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "im-konge"
        },
        "body": ""
    },
    {
        "author": {
            "login": "katheris"
        },
        "body": ""
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": "Seems a bit hacky, but as long as it helps I can live with it."
    },
    {
        "author": {
            "login": "katheris"
        },
        "body": ""
    },
    {
        "author": {
            "login": "katheris"
        },
        "body": ""
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "fvaleri"
        },
        "body": "@see-quick thanks for looking into this.\r\n\r\nYou didn't explain the race condition in the PR description, but I think you mean the race between topicOperation.edit (Kube) and admin.describeConfigs (Kafka). In a slow environment, it may be that topic metadata are not yet updated when describeConfigs request comes in. Is my understanding correct?"
    },
    {
        "author": {
            "login": "fvaleri"
        },
        "body": ""
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": ""
    },
    {
        "author": {
            "login": "katheris"
        },
        "body": "Thanks @see-quick  LGTM"
    },
    {
        "author": {
            "login": "fvaleri"
        },
        "body": "LGTM. Thanks."
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "The build seems to be stable after 12 runs without any issues."
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build "
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "see-quick"
        },
        "body": "/azp run build"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    }
]