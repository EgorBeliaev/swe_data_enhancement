diff --git a/systemtest/src/main/java/io/strimzi/systemtest/Environment.java b/systemtest/src/main/java/io/strimzi/systemtest/Environment.java
index ade664a0e75..3fff4f4a2ba 100644
--- a/systemtest/src/main/java/io/strimzi/systemtest/Environment.java
+++ b/systemtest/src/main/java/io/strimzi/systemtest/Environment.java
@@ -186,6 +186,8 @@ public class Environment {
     public static final String KAFKA_TIERED_STORAGE_BASE_IMAGE_ENV = "KAFKA_TIERED_STORAGE_BASE_IMAGE";
     public static final String KANIKO_IMAGE_ENV = "KANIKO_IMAGE";
 
+    public static final String POSTGRES_IMAGE_ENV = "POSTGRES_IMAGE";
+
     /**
      * Defaults
      */
@@ -221,6 +223,8 @@ public class Environment {
     public static final String KAFKA_TIERED_STORAGE_BASE_IMAGE_DEFAULT = STRIMZI_REGISTRY_DEFAULT + "/" + STRIMZI_ORG_DEFAULT + "/kafka:latest-kafka-" + ST_KAFKA_VERSION_DEFAULT;
     public static final String KANIKO_IMAGE_DEFAULT = "gcr.io/kaniko-project/executor:v1.23.2";
 
+    public static final String POSTGRES_IMAGE_DEFAULT = "postgres:latest";
+
     /**
      * Set values
      */
@@ -281,6 +285,8 @@ public class Environment {
     public static final String KAFKA_TIERED_STORAGE_BASE_IMAGE = getOrDefault(KAFKA_TIERED_STORAGE_BASE_IMAGE_ENV, KAFKA_TIERED_STORAGE_BASE_IMAGE_DEFAULT);
     public static final String KANIKO_IMAGE = getOrDefault(KANIKO_IMAGE_ENV, KANIKO_IMAGE_DEFAULT);
 
+    public static final String POSTGRES_IMAGE = getOrDefault(POSTGRES_IMAGE_ENV, POSTGRES_IMAGE_DEFAULT);
+
     private Environment() { }
 
     static {
diff --git a/systemtest/src/main/java/io/strimzi/systemtest/resources/keycloak/SetupKeycloak.java b/systemtest/src/main/java/io/strimzi/systemtest/resources/keycloak/SetupKeycloak.java
index 7df9ba0a658..e3e4d8712ae 100644
--- a/systemtest/src/main/java/io/strimzi/systemtest/resources/keycloak/SetupKeycloak.java
+++ b/systemtest/src/main/java/io/strimzi/systemtest/resources/keycloak/SetupKeycloak.java
@@ -32,6 +32,7 @@
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
+import java.nio.file.Paths;
 import java.util.Base64;
 import java.util.List;
 import java.util.Map;
@@ -103,7 +104,15 @@ private static void deployKeycloak(String namespaceName) {
 
     private static void deployPostgres(String namespaceName) {
         LOGGER.info("Deploying Postgres into Namespace: {}", namespaceName);
-        cmdKubeClient(namespaceName).apply(POSTGRES_FILE_PATH);
+
+        try {
+            final String postgresYaml =  Files.readString(Paths.get(POSTGRES_FILE_PATH)).replace(
+                "${POSTGRES_IMAGE}", Environment.POSTGRES_IMAGE
+            );
+            cmdKubeClient(namespaceName).applyContent(postgresYaml);
+        } catch (IOException e) {
+            throw new RuntimeException("Failed to update the Postgres deployment YAML", e);
+        }
 
         DeploymentUtils.waitForDeploymentAndPodsReady(namespaceName, "postgres", 1);
 
diff --git a/systemtest/src/test/resources/oauth2/postgres.yaml b/systemtest/src/test/resources/oauth2/postgres.yaml
index 9b2ccf2729f..e64a11241c0 100644
--- a/systemtest/src/test/resources/oauth2/postgres.yaml
+++ b/systemtest/src/test/resources/oauth2/postgres.yaml
@@ -24,7 +24,7 @@ spec:
     spec:
       containers:
         - name: postgres
-          image: postgres:latest
+          image: ${POSTGRES_IMAGE}
           envFrom:
             - configMapRef:
                 name: postgres-config
