### Issue Description
The PR is addressing a race condition issue in the `TopicControllerIT` tests. The problem arises due to Kafkaâ€™s topic metadata asynchronously updating after configuration changes in Kubernetes. In slower environments, the `describeConfigs` call may retrieve metadata before Kafka completes the update, causing flakiness in tests.

### Condensed Instructions for Fixes
1. **Race Condition Fix**:
   - Implement dynamic waiting to ensure that configuration updates are completely reflected in Kafka before the tests assert the expected outcomes. This will prevent race conditions in `TopicControllerIT` and `KafkaHandlerIT`.

2. **Specific Test Failures**:
   - The main problematic test is `TopicControllerIT.shouldUpdateTopicInKafkaWhenConfigRemovedInKube`, where unexpected configurations like `unclean.leader.election.enable` show up occasionally.
   - Ensure the test assertions (`expects` and `was` components) are aligned once the async updates are confirmed.

3. **Addressing Another Issue**:
   - There's an additional issue in `KafkaHandlerIT.shouldDescribeTopics` where a `NoSuchElementException` is thrown. Investigate why the value is not present and ensure a reliable metadata availability check before proceeding with assertions.

4. **Build Stability**:
   - Conduct multiple successful build runs (e.g., at least 12 continuous stable runs) to validate the stability of the fix against the fixed issues.

Ensure these changes are integrated with existing tests, and revisit the dependent tests to confirm no additional flakiness persists after these updates.