[
    {
        "title": "Loosen the restrictions for TLS options in `type: custom` listener authentication to enable new features"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "### Type of change\r\n\r\n- Enhancement / new feature\r\n\r\n### Description\r\n\r\nThere are some feature requests that pop-up from time to time related to `type: tls` authentication. For example:\r\n* Trusting custom CA without providing the full custom Clients CA because the user wants to sign its own certificates (currently, this is possible by passing a dummy value as the private key in custom Clients CA)\r\n* Trusting multiple different clients CAs at the same time\r\n* Being able to override the `ssl.principal.mapping.rules` when using a custom CA with more complex subjects\r\n\r\nRight now, when using the `type: custom` authentication, we do not allow to configure any options starting with `ssl.`. This makes it impossible to use `type custom` authentication for the features described above.\r\n\r\nThis PR loosens the restriction and forbids only the keystore configuration options - i.e. starting with `ssl.keystore.`. But let's the users configure other TLS options. That means that the TLS keystore will be still configured by Strimzi based on the listener configuration. But users could for example freely:\r\n* Enable TLS authentication\r\n* Pass custom truststore\r\n* Configure detailed TLS options such as `ssl.principal.mapping.rules` for given listener\r\n\r\nFor example, the 3 feature requests listed above can be done with following configuration:\r\n\r\n```yaml\r\nspec:\r\n  kafka:\r\n    listeners:\r\n      - name: tls\r\n        port: 9093\r\n        tls: true\r\n        type: internal\r\n        authentication:\r\n          type: custom\r\n          sasl: false\r\n          listenerConfig:\r\n            ssl.client.auth: required\r\n            ssl.principal.mapping.rules: RULE:^CN=(.*?),(.*)$/CN=$1/\r\n            ssl.truststore.location: /opt/kafka/custom-authn-secrets/custom-listener-tls-9093/custom-truststore/ca.crt\r\n            ssl.truststore.type: PEM\r\n          secrets:\r\n            - key: ca.crt\r\n              secretName: custom-truststore\r\n```\r\n\r\nThis:\r\n* Configures custom principal mapping rules to use only the certificate CN for the username\r\n* Uses custom PEM file as truststore with one or more trusted CAs\r\n\r\nThis should resolve #2900 and resolve #6566\r\n\r\n### Checklist\r\n\r\n- [x] Write tests\r\n- [x] Make sure all tests pass\r\n- [x] Update documentation\r\n- [x] Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\r\n- [x] Reference relevant issue(s) and close them after merging\r\n- [x] Update CHANGELOG.md"
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": ""
    },
    {
        "author": {
            "login": "PaulRMellor"
        },
        "body": "Thanks Jakub.\r\nWould it make sense to mention this with the config exceptions in [KafkaClusterSpec schema reference](https://strimzi.io/docs/operators/in-development/configuring#type-KafkaClusterSpec-reference), as with allowed `ssl` config for cipher suites?"
    },
    {
        "author": {
            "login": "PaulRMellor"
        },
        "body": "Cheers"
    },
    {
        "author": {
            "login": "katheris"
        },
        "body": "LGTM"
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": "/azp run regression"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": "> Would it make sense to mention this with the config exceptions in [KafkaClusterSpec schema reference](https://strimzi.io/docs/operators/in-development/configuring#type-KafkaClusterSpec-reference), as with allowed ssl config for cipher suites?\r\n\r\nThose are different than this. This does not apply to the `.spec.kafka.config` section but only tot he `type: custom` authentication. So I would probably avoid mising those together as I think it might confuse people."
    }
]