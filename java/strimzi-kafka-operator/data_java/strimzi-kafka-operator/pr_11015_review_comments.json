[
    {
        "title": "Fixed check Optional not null"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "While reviewing a TO related PR I came across the following code which I think is \"wrong\":\r\n\r\n```java\r\nif (configChanges != null && configChanges.isEmpty()) {\r\n                LOGGER.debugCr(reconcilableTopic.reconciliation(), \"Config changes {}\", configChanges);\r\n            } else {\r\n                LOGGER.debugCr(reconcilableTopic.reconciliation(), \"No config change\");\r\n            }\r\n```\r\n\r\nI see a couple of issues here:\r\n\r\n- the `configChanges != null` is not needed because it's always true. The `configChanges` is an Optional coming from a `findFirst()` on a stream which always returns an Optional which can be empty or not but never a null.\r\n- the logging seems to be in the opposite order. If empty logs the config changes, if not empty logs \"no config change\"."
    },
    {
        "author": {
            "login": "fvaleri"
        },
        "body": "You just forgot to call get, otherwise LGTM. \r\nThanks for catching this."
    },
    {
        "author": {
            "login": "fvaleri"
        },
        "body": "LGTM. Thanks."
    },
    {
        "author": {
            "login": "im-konge"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": "@fvaleri as TO expert, what do you think about this? If that's ok with you I will run regression tests."
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": "/azp run regression"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    }
]