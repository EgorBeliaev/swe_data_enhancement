[
    {
        "title": "Remove support for storage class overrides"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "### Type of change\r\n\r\n- Task\r\n\r\n### Description\r\n\r\nThis PR implements the second part of the [SP-080 proposal](https://github.com/strimzi/proposals/blob/main/080-deprecation-and-removal-of-storage-overrides.md) -> it removes support for the storage overrides that allow specifying different storage classes for different nodes.\r\n\r\nWith this PR:\r\n* For new clusters:\r\n    * Any storage class overrides that are specified in the KafkaNodePool resources will be ignored and only rthe StorageClass configuration from the persistent volume configuration itself will be used\r\n    * The following warnings will be added to resource conditions:\r\n      ```yaml\r\n        - lastTransitionTime: \"2025-01-14T14:42:47.398728342Z\"\r\n          message: In resource KafkaNodePool(myproject/aston) in API version kafka.strimzi.io/v1beta2\r\n            the overrides property at path spec.storage.volumes.overrides has been deprecated.\r\n            The storage overrides for individual brokers are not supported anymore since\r\n            Strimzi 0.46.0.\r\n          reason: DeprecatedFields\r\n          status: \"True\"\r\n          type: Warning\r\n      ```\r\n       as well as printed in the log:\r\n      ```\r\n      2025-01-14 14:46:47 WARN  StatusUtils:106 - Reconciliation #10(timer) Kafka(myproject/my-cluster): In resource KafkaNodePool(myproject/aston) in API version kafka.strimzi.io/v1beta2 the overrides property at path spec.storage.volumes.overrides has been deprecated. The storage overrides for individual brokers are not supported anymore since Strimzi 0.46.0.\r\n      ```\r\n* For existing clusters:\r\n    * The same conditions / warnings will be used as for new clusters\r\n    * Any existing PVCs using the storage class from the overrides will be kept and used (We do not patch the storage class or support storage class changes, so they will remain untouched by Strimzi)\r\n    * Any new PVCs created with this configuration under Strimzi 0.46.0 or newer will ignore the overrides and use the storage class directly from the persistent storage configuraton. So e.g. when scaling up, the PVCs for the new nodes will ignore the overrides. Similarly, when the old PVCs with the storage class from the override is deleted and the operator creates a new PVC, the overrides will be ignored.\r\n\r\nUsers who want this feature should instead have different node pools that use different storage classes each.\r\n\r\n### Checklist\r\n\r\n- [x] Write tests\r\n- [x] Make sure all tests pass\r\n- [x] Update documentation\r\n- [x] Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\r\n- [x] Update CHANGELOG.md"
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ppatierno"
        },
        "body": ""
    },
    {
        "author": {
            "login": "scholzj"
        },
        "body": "/azp run regression"
    },
    {
        "author": {
            "login": "azure-pipelines"
        },
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    }
]