This pull request adds support for the DateTime64 type in the ClickHouse connector for PrestoDB. Here are the detailed instructions and issues addressed:

1. **Add DateTime64 Type Support:**
   - Implement support for mapping DateTime64 to the existing timestamp type in PrestoDB.
   - Ensure the functionality is validated with appropriate tests to confirm that this mapping works correctly. Review tests in `TestClickhouseDistributedQueries` for reference.

2. **Test Enhancements:**
   - Add tests to validate the creation of a table with DateTime64 columns, insertion of timestamps into these columns, and selection from them.
   - Adjust timezone handling for tests, making sure they are consistent regardless of the environment. Ensure the session timezone in tests is explicitly set to control time zone-dependent behavior.

3. **Performance Improvements:**
   - Avoid string parsing where possible to enhance performance.
   - Consider updating the out-of-date clickhouse-jdbc client dependency to `com.clickhouse:clickhouse-jdbc:0.7.2`, to potentially leverage better support for timestamps.

4. **Documentation and Release Notes:**
   - Update documentation with the changes for DateTime64 support.
   - Review and refine release notes: "Clickhouse Connector Changes - Add `DateTime64` type support."

5. **Address Timezone Issue in Tests:**
   - Investigate and fix discrepancies occurring due to timezone differences in test environments.
   - Verify that timezone adjustments within tests yield the correct values when inserted and selected from the database.

6. **CI and Build Management:**
   - Ensure continuous integration tests pass by addressing time-out issues and re-triggering builds if necessary.
   - After confirming the PR commits are clean, manage the process for creating the tar.gz PrestoDB file for deployment.

These changes resolve the blocking issue in PrestoDB usage for projects with DateTime64 columns, particularly those requiring millisecond precision in timestamps.