[
    {
        "title": "Raise an exception when provider name contains underscore"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Describe your changes\r\n\r\n## GitHub Issue Link (if applicable)\r\n\r\nCloses #10356 \r\n\r\n## Testing Plan\r\n\r\n- Explanation of why no additional tests are needed\r\n- Unit Tests (JS and/or Python) Done\r\n- E2E Tests\r\n- Any manual testing needed?\r\n\r\n---\r\n\r\n**Contribution License Agreement**\r\n\r\nBy submitting this pull request you agree that all contributions to this project are made under the Apache 2.0 license.\r\n"
    },
    {
        "author": {
            "login": "lukasmasuch"
        },
        "body": ""
    },
    {
        "author": {
            "login": "lukasmasuch"
        },
        "body": ""
    },
    {
        "author": {
            "login": "lukasmasuch"
        },
        "body": "LGTM \ud83d\udc4d "
    },
    {
        "author": {
            "login": "kajarenc"
        },
        "body": ""
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "st.login() when using Google - state parsing appears to be incorrect",
                    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen attempting to configure st.login() with our application, we are getting an error that indicates that the `state` might not be properly set according to the code that attempts to parse it.\n\nWe have confirmed that the received state is the same as the outgoing state, but upon redirect it looks like it doesn't parse as expected.\n\n### Reproducible Code Example\n\n```Python\n# streamlit.py\n\nimport streamlit as st\n\nif st.button(\"Log in with Google\"):\n            st.login(provider='google_dev')\n\n\n# secrets.toml\n[auth]\nredirect_uri = \"http://localhost:8501/oauth2callback\"\ncookie_secret = \"somesecret\"\n\n[auth.google_dev]\nclient_id = \"something-something.apps.googleusercontent.com\"\nclient_secret = \"some-secret\"\nserver_metadata_url = \"https://accounts.google.com/.well-known/openid-configuration\"\n```\n\n### Steps To Reproduce\n\n1. Click on the button\n2. Select your profile\n3. Check server logs\n\n### Expected Behavior\n\nI would have expected what looked to be an incredibly easy way to replace our current homegrown implementation of OAuth in Streamlit! Really pumped for this, just hitting a minor snag that I *think* looks like a bug.\n\n### Current Behavior\n\n```\nTraceback (most recent call last):\n...\nvenv/lib/python3.11/site-packages/streamlit/web/server/oauth_authlib_routes.py\", line 128, in get\n    provider = self._get_provider_by_state()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \".../.venv/lib/python3.11/site-packages/streamlit/web/server/oauth_authlib_routes.py\", line 157, in _get_provider_by_state\n    _, _, recorded_provider, code = key.split(\"_\")\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: too many values to unpack (expected 4)\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.0\n- Authlib version: 1.4.1\n- Python version: 3.11\n- Operating System: MacOS 15.2 (24C101)\n- Browser: Version 132.0.6834.160 (Official Build) (arm64)\n\n### Additional Information\n\n_No response_",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "github-actions"
                                },
                                "body": "**If this issue affects you, please react with a \ud83d\udc4d (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Visits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fissues%2F10356&title=visits&edge_flat=false)\n"
                            },
                            {
                                "author": {
                                    "login": "kajarenc"
                                },
                                "body": "Hello @daileykluck!\nThank you very much for opening this issue! \u2764 \n\nI was able to reproduce the behavior and could confirm that it looks like a bug!\n\nThe root cause of it in our implementation details is that when Authlib sets the `state`, it prefixes the token with the provider name and uses `_` as a delimiter. \n\nWe will work to fix that, but for now, as a workaround, please use a provider name that doesn't contain `_`; this should fix the issue!\n\nE.g. you name your provider `googledev` instead of `google_dev` in `secrets.toml` and in `st.login` call, everything should work as expected!\n\nI hope this is helpful; please let us know if you will have other issues with reusing Auth functionality in Streamlit. "
                            },
                            {
                                "author": {
                                    "login": "daileykluck"
                                },
                                "body": "This is awesome, I can confirm that the workaround provided did indeed do the trick! Thank you for the detailed explanation, sometimes feels like something I should have guessed \ud83d\ude06 !"
                            }
                        ]
                    }
                }
            }
        }
    }
]