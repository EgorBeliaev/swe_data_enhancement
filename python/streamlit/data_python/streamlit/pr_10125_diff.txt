diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[chromium].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[chromium].png
new file mode 100644
index 000000000000..2d292332a6cd
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[chromium].png differ
diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[firefox].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[firefox].png
new file mode 100644
index 000000000000..733927bad4f4
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[firefox].png differ
diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[webkit].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[webkit].png
new file mode 100644
index 000000000000..168962a4193f
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-after_update[webkit].png differ
diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[chromium].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[chromium].png
new file mode 100644
index 000000000000..2781e31ea02b
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[chromium].png differ
diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[firefox].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[firefox].png
new file mode 100644
index 000000000000..3b7bab84c3fd
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[firefox].png differ
diff --git a/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[webkit].png b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[webkit].png
new file mode 100644
index 000000000000..52f8558b4e14
Binary files /dev/null and b/e2e_playwright/__snapshots__/linux/st_vega_lite_chart_test/st_vega_lite_chart-before_update[webkit].png differ
diff --git a/e2e_playwright/st_vega_lite_chart.py b/e2e_playwright/st_vega_lite_chart.py
index b7a4384730f4..e765b0e75d3e 100644
--- a/e2e_playwright/st_vega_lite_chart.py
+++ b/e2e_playwright/st_vega_lite_chart.py
@@ -187,3 +187,51 @@
 
 # empty chart
 st.vega_lite_chart(spec, use_container_width=True)
+
+data1 = {"VALUE": [420, 380, 390], "DATE": [50, 60, 70]}
+data = pd.DataFrame(data1)
+
+data2 = {
+    "VALUE": [420, 380, 600, 390],
+    "DATE": [50, 60, 70, 80],
+}
+
+
+if st.button(label="change"):
+    data = pd.DataFrame(data2)
+
+st.dataframe(data)
+st.vega_lite_chart(
+    data=data,
+    spec={
+        "autosize": {
+            "type": "fit",
+            "contains": "padding",
+            "resize": True,
+        },
+        "title": "test",
+        "layer": [
+            {
+                "layer": [
+                    {
+                        "mark": "line",
+                    },
+                ],
+                "encoding": {
+                    "x": {
+                        "field": "DATE",
+                        "title": "",
+                        "type": "quantitative",
+                    },
+                    "y": {
+                        "field": "VALUE",
+                        "title": "",
+                        "type": "quantitative",
+                    },
+                },
+            },
+        ],
+    },
+    use_container_width=True,
+    theme="streamlit",
+)
diff --git a/e2e_playwright/st_vega_lite_chart_test.py b/e2e_playwright/st_vega_lite_chart_test.py
index 149f70329eef..d1a9c683bffc 100644
--- a/e2e_playwright/st_vega_lite_chart_test.py
+++ b/e2e_playwright/st_vega_lite_chart_test.py
@@ -14,10 +14,10 @@
 
 from playwright.sync_api import Page, expect
 
-from e2e_playwright.conftest import ImageCompareFunction
-from e2e_playwright.shared.app_utils import check_top_level_class
+from e2e_playwright.conftest import ImageCompareFunction, wait_for_app_run
+from e2e_playwright.shared.app_utils import check_top_level_class, get_button
 
-VEGA_LITE_CHART_COUNT = 14
+VEGA_LITE_CHART_COUNT = 15
 
 
 def test_vega_lite_chart(app: Page):
@@ -129,3 +129,27 @@ def test_empty_vega_lite_chart(app: Page, assert_snapshot: ImageCompareFunction)
 def test_check_top_level_class(app: Page):
     """Check that the top level class is correctly set."""
     check_top_level_class(app, "stVegaLiteChart")
+
+
+def test_vega_lite_chart_updates_with_slightly_different_data(
+    app: Page, assert_snapshot: ImageCompareFunction
+):
+    """Tests that it displays interactive charts on the DOM"""
+    vega_lite_charts = app.get_by_test_id("stVegaLiteChart")
+    # expect statement here so that snapshots are taken properly
+    expect(vega_lite_charts).to_have_count(VEGA_LITE_CHART_COUNT)
+    expect(vega_lite_charts.nth(14)).to_be_visible()
+    assert_snapshot(
+        vega_lite_charts.nth(14),
+        name="st_vega_lite_chart-before_update",
+    )
+
+    get_button(app, "change").click()
+    wait_for_app_run(app)
+
+    expect(vega_lite_charts).to_have_count(VEGA_LITE_CHART_COUNT)
+    expect(vega_lite_charts.nth(14)).to_be_visible()
+    assert_snapshot(
+        vega_lite_charts.nth(14),
+        name="st_vega_lite_chart-after_update",
+    )
diff --git a/frontend/lib/src/components/elements/ArrowVegaLiteChart/arrowUtils.ts b/frontend/lib/src/components/elements/ArrowVegaLiteChart/arrowUtils.ts
index 4c6780900af5..7e923c286666 100644
--- a/frontend/lib/src/components/elements/ArrowVegaLiteChart/arrowUtils.ts
+++ b/frontend/lib/src/components/elements/ArrowVegaLiteChart/arrowUtils.ts
@@ -190,47 +190,3 @@ export function getDataArray(
 
   return dataArr
 }
-
-/**
- * Checks if data looks like it's just prevData plus some appended rows.
- */
-export function dataIsAnAppendOfPrev(
-  prevData: Quiver,
-  prevNumRows: number,
-  prevNumCols: number,
-  data: Quiver,
-  numRows: number,
-  numCols: number
-): boolean {
-  // Check whether dataframes have the same shape.
-
-  // not an append
-  if (prevNumCols !== numCols) {
-    return false
-  }
-
-  // Data can be updated, but still have the same number of rows.
-  // We consider the case an append only when the number of rows has increased
-  if (prevNumRows >= numRows) {
-    return false
-  }
-
-  // if no previous data, render from scratch
-  if (prevNumRows === 0) {
-    return false
-  }
-
-  const c = numCols - 1
-  const r = prevNumRows - 1
-
-  // Check if the new dataframe looks like it's a superset of the old one.
-  // (this is a very light check, and not guaranteed to be right!)
-  if (
-    prevData.getDataValue(0, c) !== data.getDataValue(0, c) ||
-    prevData.getDataValue(r, c) !== data.getDataValue(r, c)
-  ) {
-    return false
-  }
-
-  return true
-}
diff --git a/frontend/lib/src/components/elements/ArrowVegaLiteChart/useVegaEmbed.ts b/frontend/lib/src/components/elements/ArrowVegaLiteChart/useVegaEmbed.ts
index 8847024c5680..1b336c7d4966 100644
--- a/frontend/lib/src/components/elements/ArrowVegaLiteChart/useVegaEmbed.ts
+++ b/frontend/lib/src/components/elements/ArrowVegaLiteChart/useVegaEmbed.ts
@@ -26,7 +26,6 @@ import { Quiver } from "@streamlit/lib/src/dataframes/Quiver"
 import { logMessage } from "@streamlit/lib/src/util/log"
 
 import {
-  dataIsAnAppendOfPrev,
   getDataArray,
   getDataArrays,
   getDataSets,
@@ -190,26 +189,8 @@ export function useVegaEmbed(
         return
       }
 
-      const { dataRows: prevNumRows, dataColumns: prevNumCols } =
-        prevData.dimensions
-      const { dataRows: numRows, dataColumns: numCols } = data.dimensions
-
       // Check if dataframes have same "shape" but the new one has more rows.
-      if (
-        dataIsAnAppendOfPrev(
-          prevData,
-          prevNumRows,
-          prevNumCols,
-          data,
-          numRows,
-          numCols
-        )
-      ) {
-        if (prevNumRows < numRows) {
-          // Insert the new rows.
-          view.insert(name, getDataArray(data, prevNumRows))
-        }
-      } else {
+      if (data.hash !== prevData.hash) {
         // Clean the dataset and insert from scratch.
         view.data(name, getDataArray(data))
         logMessage(
diff --git a/frontend/lib/src/dataframes/Quiver.ts b/frontend/lib/src/dataframes/Quiver.ts
index 99acb75f3bfa..c6713647f940 100644
--- a/frontend/lib/src/dataframes/Quiver.ts
+++ b/frontend/lib/src/dataframes/Quiver.ts
@@ -21,7 +21,7 @@ import { Dictionary, Field, Vector } from "apache-arrow"
 import { immerable, produce } from "immer"
 
 import { IArrow, Styler as StylerProto } from "@streamlit/lib/src/proto"
-import { isNullOrUndefined } from "@streamlit/lib/src/util/utils"
+import { hashString, isNullOrUndefined } from "@streamlit/lib/src/util/utils"
 
 import { concat } from "./arrowConcatUtils"
 import {
@@ -153,6 +153,9 @@ export class Quiver {
   /** [optional] DataFrame's Styler data. This will be defined if the user styled the dataframe. */
   private readonly _styler?: Styler
 
+  /** Number of bytes in the Arrow IPC bytes. */
+  private _num_bytes: number
+
   constructor(element: IArrow) {
     const { index, columns, data, types, fields, indexNames } =
       parseArrowIpcBytes(element.data)
@@ -170,6 +173,7 @@ export class Quiver {
     this._fields = fields
     this._styler = styler
     this._indexNames = indexNames
+    this._num_bytes = element.data?.length ?? 0
   }
 
   /**
@@ -280,6 +284,29 @@ export class Quiver {
     }
   }
 
+  /**
+   * A hash that identifies the underlying data.
+   *
+   * This hash is based on various descriptive information
+   * but is not 100% guaranteed to be unique.
+   */
+  public get hash(): string {
+    // Its important to calculate this at runtime
+    // since some of the data can change when `add_rows` is
+    // used.
+    const valuesToHash = [
+      this.dimensions.columns,
+      this.dimensions.dataColumns,
+      this.dimensions.dataRows,
+      this.dimensions.headerColumns,
+      this.dimensions.headerRows,
+      this.dimensions.rows,
+      this._num_bytes,
+      this._columns,
+    ]
+    return hashString(valuesToHash.join("-"))
+  }
+
   /** True if the DataFrame has no index, columns, and data. */
   public isEmpty(): boolean {
     return (
