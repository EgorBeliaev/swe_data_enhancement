[
    {
        "title": "InputAccordion duplicate elem_id handling"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Description\r\n\r\nthis implements handling of duplicate element IDs for `InputAccordion`\r\n- this PR is a supplement too https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16373\r\n\r\nfor more details about this issue read #16373\r\n\r\nthis PR makes  `InputAccordion` function correctly if the issue described in #16373 were to occur, this would also forcibly modify the element ID by app ending a number\r\nif an extension actually relies on the element ID for a specific use case for example inside JavaScript then the JavaScript will still not function\r\nso this is just a \"increase compatibility\" but not a fix\r\n\r\nextension should not rely on this\r\nthe real fixed requires manual modification with the use of #16373\r\n\r\n---\r\n\r\nwith this PR\r\nInputAccordion now tracks all previously used InputAccordion elem_id and if if it input ID is found to be a duplicate then it append a number at the end of the input id\r\n\r\na on_script_unloaded callback is added to clear / reset the accordion_id_set and global_index\r\n> the callback is registered here inside the init amd mpt oput side is becaluse ui_components, happens too early before callbacks can be registered\r\n> well if I really want to I can register the call back some other place in the script\r\n> but I feel like registering it somewhere else introduces more spaghetti in the code so I decided to put everything inside the class itself\r\n\r\n## Checklist:\r\n\r\n- [x] I have read [contributing wiki page](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing)\r\n- [x] I have performed a self-review of my own code\r\n- [x] My code follows the [style guidelines](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing#code-style)\r\n- [x] My code passes [tests](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Tests)\r\n"
    },
    {
        "author": {
            "login": "lawchingman"
        },
        "body": ""
    },
    {
        "author": {
            "login": "catboxanon"
        },
        "body": ""
    },
    {
        "author": {
            "login": "w-e-w"
        },
        "body": "@light-and-ray I added I've implemented the auto resolving of duplicate elem_id for `InputAccordion`"
    },
    {
        "author": {
            "login": "catboxanon"
        },
        "body": "https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16373 seemed more like the correct fix to me. This isn't needed now, right?"
    },
    {
        "author": {
            "login": "w-e-w"
        },
        "body": "> #16373 seemed more like the correct fix to me. This isn't needed now, right?\r\n\r\nnot exactly\r\nPR #16373 fixes broken code \r\n\r\nthis PR makes broken code works correctly by forcibly resolving collisions\r\n\r\n#16373 provides a method that fixes the issue so that the issue don't happen, but it does not prevent the issue from happening\r\nthis PR resolves the issue if the issue happens, \r\n\r\nin practice if an extension did not receive updates and is affected by that issue, it will stop working\r\nthis PR maks it makes it work\r\n\r\nin my opinion while this PR is not a must, is's still better to have it as it increases compatibility"
    },
    {
        "data": {
            "repository": {
                "issue": null
            }
        },
        "errors": [
            {
                "type": "NOT_FOUND",
                "path": [
                    "repository",
                    "issue"
                ],
                "locations": [
                    {
                        "line": 4,
                        "column": 9
                    }
                ],
                "message": "Could not resolve to an Issue with the number of 16373."
            }
        ]
    }
]