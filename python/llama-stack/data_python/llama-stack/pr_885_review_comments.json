[
    {
        "title": "Fix telemetry init"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "# What does this PR do?\r\n\r\nWhen you re-initialize the library client in a notebook, we were seeing this error:\r\n```\r\nGetting traces for session_id=5c8d1969-0957-49d2-b852-32cbb8ef8caf\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n[<ipython-input-11-d74bb6cdd3ab>](https://localhost:8080/#) in <cell line: 0>()\r\n      7 agent_logs = []\r\n      8 \r\n----> 9 for span in client.telemetry.query_spans(\r\n     10     attribute_filters=[\r\n     11         {\"key\": \"session_id\", \"op\": \"eq\", \"value\": session_id},\r\n\r\n10 frames\r\n[/usr/local/lib/python3.11/dist-packages/llama_stack/providers/inline/telemetry/meta_reference/telemetry.py](https://localhost:8080/#) in query_traces(self, attribute_filters, limit, offset, order_by)\r\n    246     ) -> QueryTracesResponse:\r\n    247         return QueryTracesResponse(\r\n--> 248             data=await self.trace_store.query_traces(\r\n    249                 attribute_filters=attribute_filters,\r\n    250                 limit=limit,\r\n\r\nAttributeError: 'TelemetryAdapter' object has no attribute 'trace_store'\r\n```\r\n\r\nThis is happening because the we were skipping some required steps for the object state as part of the global _TRACE_PROVIDER check. This PR moves the initialization of the object state out of the TRACE_PROVIDER init.\r\n"
    },
    {
        "author": {
            "login": "ashwinb"
        },
        "body": ""
    }
]