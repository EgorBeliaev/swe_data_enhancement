[
    {
        "title": "Use a routing tree approach for cli vm ssh/sftp/scp subcommands"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "First three commits are support in Rodish for this style of subcommand, and final commit switches the commands to this.  So the commands now look like:\r\n\r\n```\r\n      vm location vm-name ssh\r\n      vm location vm-name sftp\r\n      vm location vm-name scp local-path :remote-path\r\n    \r\n      # ssh command with arguments\r\n      vm location vm-name ssh cmd cmd-arg\r\n    \r\n      # With options\r\n      vm location vm-name ssh -- -A --\r\n      vm location vm-name ssh -- -A -- cmd cmd-arg\r\n      vm location vm-name sftp -- -A\r\n      vm location vm-name scp local-path :remote-path -r\r\n```\r\n\r\nThe `--` is necessary to separate UbiCli options from ssh/sftp options, and two sets are needed ssh options, because `--` is used to separate ssh options from ssh arguments."
    },
    {
        "author": {
            "login": "fdr"
        },
        "body": ""
    },
    {
        "author": {
            "login": "fdr"
        },
        "body": "That is pretty brutal I have to say, the obliged double-dashing to terminate option parsing, maybe unworkably so, but given most people apply no options most of the time, it may be moving in the right direction"
    },
    {
        "author": {
            "login": "jeremyevans"
        },
        "body": "> That is pretty brutal I have to say, the obliged double-dashing to terminate option parsing, maybe unworkably so, but given most people apply no options most of the time, it may be moving in the right direction\r\n\r\nAn alternative would to move the ubi cli options to the `vm` subcommand:\r\n\r\n```\r\n      vm -4 location vm-name ssh -A -- # still need -- for option/arg separation\r\n      vm -6 location vm-name sftp -A\r\n      vm -u username location vm-name scp local-path :remote-path -r\r\n```\r\n\r\nWhat I don't like about this is the options would also apply to `vm list` and other subcommands where they may not make sense.\r\n\r\nThe options could instead go after the vm reference:\r\n\r\n```\r\n      vm location vm-name -4 ssh -A --\r\n      vm location vm-name -6 sftp -A\r\n      vm location vm-name -u username scp local-path :remote-path -r\r\n```\r\n\r\nThis avoids the options applying to `vm list` and others, but looks kind of weird.\r\n\r\nEither of these options is possible, but would require changes to Rodish to support."
    },
    {
        "author": {
            "login": "fdr"
        },
        "body": "This one makes the most sense to me:\r\n\r\n```\r\n      vm location vm-name -4 ssh -A --\r\n      vm location vm-name -6 sftp -A\r\n      vm location vm-name -u username scp local-path :remote-path -r\r\n```\r\n\r\nI think having `ssh`, `scp`, etc terminate option parsing (that is, `ssh` itself is an implied `--` to terminate option parsing)  makes the most sense to me, but I've hung around GNU getopt for longer than some practitioners have been alive.\r\n\r\nIt does fulfill my objective of good backspace (`C-w` for real ones) ergonomics."
    },
    {
        "author": {
            "login": "jeremyevans"
        },
        "body": "> This one makes the most sense to me:\r\n> \r\n> ```\r\n>       vm location vm-name -4 ssh -A --\r\n>       vm location vm-name -6 sftp -A\r\n>       vm location vm-name -u username scp local-path :remote-path -r\r\n> ```\r\n> \r\n> I think having `ssh`, `scp`, etc terminate option parsing (that is, `ssh` itself is an implied `--` to terminate option parsing) makes the most sense to me, but I've hung around GNU getopt for longer than some practitioners have been alive.\r\n> \r\n> It does fulfill my objective of good backspace (`C-w` for real ones) ergonomics.\r\n\r\nI'll work on changes to Rodish and the vm cli command to support the above command format after merging this."
    },
    {
        "author": {
            "login": "geemus"
        },
        "body": "I suspect the closer to a normal ssh/sftp/scp command (but with a prefix) that you can get, the easier it will be for people to pickup. It also makes it more likely they can find help for edge cases and whatnot (because they can just find a stack overflow that describes how to do a thing in that command generally, as opposed to in your variation of it which might not yet be documented).\r\n\r\nThat said, I guess I'm still not entirely sure how I feel about `vm (subcommand|identity + subcommand)` as a pattern. It's probably workable, but if you do it here I would advocate trying to do it everywhere for the sake of consistency/transfer. And given that it might be good to work through a few known examples from other (probably non-vm) things to see if it breaks down in those contexts. That said, maybe it's worth the outlier status due to the advantages of ssh/sftp/scp transfer, but I'd be wary."
    },
    {
        "author": {
            "login": "jeremyevans"
        },
        "body": "> I suspect the closer to a normal ssh/sftp/scp command (but with a prefix) that you can get, the easier it will be for people to pickup.\r\n\r\nIn terms of the proposed format:\r\n\r\n```\r\n      vm location vm-name -4 ssh -A --\r\n      vm location vm-name -6 sftp -A\r\n      vm location vm-name -u username scp local-path :remote-path -r\r\n```\r\n\r\n* The `ssh` command needs `--` if you are providing ssh options, in order to separate ssh options from ssh arguments, since the cli is not parsing the options and doesn't known which options accept/require arguments.\r\n\r\n* The `sftp` command doesn't accept arguments, so it doesn't need `--` to separate the options.\r\n\r\n* The `scp` command reverses the order of options and arguments. However, since the number of arguments are fixed, we could do `vm location vm-name -u username scp -r local-path :remote-path`.  I think that makes sense, so I'll switch it to that approach after merging.\r\n\r\n> That said, I guess I'm still not entirely sure how I feel about `vm (subcommand|identity + subcommand)` as a pattern. It's probably workable, but if you do it here I would advocate trying to do it everywhere for the sake of consistency/transfer. And given that it might be good to work through a few known examples from other (probably non-vm) things to see if it breaks down in those contexts. That said, maybe it's worth the outlier status due to the advantages of ssh/sftp/scp transfer, but I'd be wary.\r\n\r\nThat makes sense.  I agree we should use the approach in other cases for consistency.  It also makes things simpler internally.\r\n"
    }
]