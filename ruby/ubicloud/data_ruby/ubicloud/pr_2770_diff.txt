diff --git a/scheduling/allocator.rb b/scheduling/allocator.rb
index fb30b067c..5fe461dca 100644
--- a/scheduling/allocator.rb
+++ b/scheduling/allocator.rb
@@ -180,6 +180,7 @@ def self.candidate_hosts(request)
       ds = ds.exclude(Sequel[:vm_host][:id] => request.host_exclusion_filter) unless request.host_exclusion_filter.empty?
       ds = ds.where(location: request.location_filter) unless request.location_filter.empty?
       ds = ds.where(allocation_state: request.allocation_state_filter) unless request.allocation_state_filter.empty?
+      ds = ds.exclude(total_cores: 14, total_cpus: 14) unless request.family == "standard-gpu"
 
       # Emit the allocation query if the project is flagged for
       # diagnostics.
diff --git a/spec/scheduling/allocator_spec.rb b/spec/scheduling/allocator_spec.rb
index fd9d706fb..d6d8aa526 100644
--- a/spec/scheduling/allocator_spec.rb
+++ b/spec/scheduling/allocator_spec.rb
@@ -757,6 +757,7 @@ def create_req(vm, storage_volumes, target_host_utilization: 0.55, distinct_stor
       vmh.update(arch: "x64", total_dies: 1, total_sockets: 1, total_cpus: 14, total_cores: 14, used_cores: 2)
 
       vm = create_vm
+      vm.family = "standard-gpu"
       used_cores = vmh.used_cores
       described_class.allocate(vm, [{"size_gib" => 85, "use_bdev_ubi" => false, "skip_sync" => false, "encrypted" => true, "boot" => false},
         {"size_gib" => 95, "use_bdev_ubi" => false, "skip_sync" => false, "encrypted" => true, "boot" => false}])
@@ -768,6 +769,17 @@ def create_req(vm, storage_volumes, target_host_utilization: 0.55, distinct_stor
       expect(vm.cores).to eq(2)
       expect(used_cores + vm.cores).to eq(vmh.used_cores)
     end
+
+    it "only allocates standard-gpu vms on GEX44 host" do
+      vmh = VmHost.first
+      vmh.update(arch: "x64", total_dies: 1, total_sockets: 1, total_cpus: 14, total_cores: 14, used_cores: 2)
+
+      vm = create_vm
+      expect {
+        described_class.allocate(vm, [{"size_gib" => 85, "use_bdev_ubi" => false, "skip_sync" => false, "encrypted" => true, "boot" => false},
+          {"size_gib" => 95, "use_bdev_ubi" => false, "skip_sync" => false, "encrypted" => true, "boot" => false}])
+      }.to raise_error(RuntimeError, /no space left on any eligible host/)
+    end
   end
 
   describe "slice selection" do
