diff --git a/lib/langchain/prompt/prompt_template.rb b/lib/langchain/prompt/prompt_template.rb
index 76fdd831d..857c074b1 100644
--- a/lib/langchain/prompt/prompt_template.rb
+++ b/lib/langchain/prompt/prompt_template.rb
@@ -58,8 +58,9 @@ def initialize(template:, input_variables:, validate_template: true)
     #
     def format(**kwargs)
       result = @template
+      result = result.gsub(/{{/, "{").gsub(/}}/, "}")
       kwargs.each { |key, value| result = result.gsub(/\{#{key}\}/, value.to_s) }
-      result.gsub(/{{/, "{").gsub(/}}/, "}")
+      result
     end
 
     #
diff --git a/spec/langchain/prompts/prompt_template_spec.rb b/spec/langchain/prompts/prompt_template_spec.rb
index 2ad7f8362..d79035e83 100644
--- a/spec/langchain/prompts/prompt_template_spec.rb
+++ b/spec/langchain/prompts/prompt_template_spec.rb
@@ -63,6 +63,22 @@
       )
 
       expect(prompt.format(adjective: "funny", content: "chickens")).to eq("Tell me a funny joke about chickens.")
+
+      prompt = described_class.new(
+        template: "Tell me a joke about f-strings and escaping {{json: data}}.",
+        input_variables: []
+      )
+
+      expect(prompt.format).to eq("Tell me a joke about f-strings and escaping {json: data}.")
+
+      schema = '{"type": "object", "properties": {"setup": {"type": "string"}, "punchline": {"type": "string"}}}'
+
+      prompt = described_class.new(
+        template: "Tell me a joke that follows this schema: {schema}",
+        input_variables: ["schema"]
+      )
+
+      expect(prompt.format(schema: schema)).to eq("Tell me a joke that follows this schema: #{schema}")
     end
   end
 
