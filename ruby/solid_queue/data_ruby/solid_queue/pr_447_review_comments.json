[
    {
        "title": "Specify `source` of SolidQueue to ErrorReporter"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Currently, the default value `application.active_support` is applied for source. This does not identify it as an exception raised inside SolidQueue.\r\n\r\n> source: a String about the source of the error. The default source is \"application\". Errors reported by internal libraries may set other sources; the Redis cache library may use \"redis_cache_store.active_support\", for instance. Your subscriber can use the source to ignore errors you aren't interested in.\r\n\r\nThis is a quote from the [rails guide](https://github.com/rails/rails/blob/v8.0.0/guides/source/error_reporting.md?plain=1#L216-L220).\r\n\r\nFollow this guide to specify the source so that it can be determined that the error originated from inside SolidQueue.\r\n\r\nFixes #446"
    },
    {
        "author": {
            "login": "tmimura39"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rosa"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rosa"
        },
        "body": "This is great, thank you so much @tmimura39! \ud83d\ude47\u200d\u2640\ufe0f \ud83d\ude4f "
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Specify `source` of SolidQueue to ErrorReporter",
                    "body": "Because SolidQueue uses the [Rails executor](https://guides.rubyonrails.org/threading_and_code_execution.html#executor), exceptions raised in a Job are automatically handled by [ActiveSupport::ErrorReporter](https://guides.rubyonrails.org/error_reporting.html).\r\n\r\nThis is very convenient.\r\nI want to make this even more convenient.\r\n\r\n## Proposal\r\n\r\nSimply put, this is what I propose.\r\n```diff\r\ndiff --git a/lib/solid_queue/app_executor.rb b/lib/solid_queue/app_executor.rb\r\nindex da0976f..0580213 100644\r\n--- a/lib/solid_queue/app_executor.rb\r\n+++ b/lib/solid_queue/app_executor.rb\r\n@@ -4,7 +4,7 @@ module SolidQueue\r\n   module AppExecutor\r\n     def wrap_in_app_executor(&block)\r\n       if SolidQueue.app_executor\r\n-        SolidQueue.app_executor.wrap(&block)\r\n+        SolidQueue.app_executor.wrap(source: \"application.solid_queue\", &block)\r\n       else\r\n         yield\r\n       end\r\n```\r\n\r\nCurrently, the [default value](https://github.com/rails/rails/blob/v8.0.0/activesupport/lib/active_support/execution_wrapper.rb#L86) `application.active_support` is applied for source.\r\nThis does not identify it as an exception raised inside SolidQueue.\r\n\r\nThis is a quote from the [rails guide](https://guides.rubyonrails.org/error_reporting.html#error-reporting-options).\r\n> source: a String about the source of the error. The default source is \"application\". Errors reported by internal libraries may set other sources; the Redis cache library may use \"redis_cache_store.active_support\", for instance. Your subscriber can use the source to ignore errors you aren't interested in.\r\n\r\nAgain, examples of the use of `source` were explained.\r\nhttps://github.com/rails/rails/pull/44999\r\n\r\n\r\nWhat do you think?",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "rosa"
                                },
                                "body": "Ohh, this is a great suggestion! I didn't know this, somehow missed it! \ud83d\ude33 But it makes complete sense. Would you like to open a PR with this change? "
                            },
                            {
                                "author": {
                                    "login": "tmimura39"
                                },
                                "body": "Thanks for the response.\r\n\r\nI'll do it today\ud83d\udc4d"
                            }
                        ]
                    }
                }
            }
        }
    }
]