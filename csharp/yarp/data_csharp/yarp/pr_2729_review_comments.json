[
    {
        "title": "Always enforce HttpVersionPolicy on WebSocket version negotiation"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "When we added HTTP/2 WebSocket support, the intention behind version selection was that we would match `SocketsHttpHandler`/`ClientWebSocket` behavior.\r\n\r\nWhen the user specified `Version=2.0, Policy=RequestVersionOrHigher`, we should be attempting HTTP/2 WebSockets, regardless of whether the destination is using https or not.\r\nCurrently, we'll use HTTP/1.1 instead, which goes against the specified policy.\r\nAside from violating the configured policy, the current behavior is problematic when the backend service only supports HTTP/2. Instead of using H2 as requested, we'll downgrade the H1, and all requests will fail.\r\n\r\nThis change makes YARP strictly follow the version policy. If the user told us not to use HTTP/1.X, we simply shouldn't.\r\nIf the backend server happens to only support HTTP/1.X, then the request will fail, and that's a proxy misconfiguration.\r\n"
    },
    {
        "author": {
            "login": "BrennanConroy"
        },
        "body": ""
    },
    {
        "author": {
            "login": "MihaZupan"
        },
        "body": ""
    },
    {
        "author": {
            "login": "benjaminpetit"
        },
        "body": ""
    },
    {
        "author": {
            "login": "adityamandaleeka"
        },
        "body": "@MihaZupan Can this be merged?"
    },
    {
        "author": {
            "login": "MihaZupan"
        },
        "body": "Yep, I'll add another test and merge it once CI is back up"
    }
]