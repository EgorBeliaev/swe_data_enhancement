**Objective:**
Add a new `Orientation` node type to the `WaypointType`, which focuses only on reorienting towards a target without movement, to enhance existing auto-pathing functionality.

**Necessary Changes:**

1. **Add `Orientation` Node Type:**
   - Integrate an `Orientation` type in the `WaypointType` that allows reorientation towards a target point without moving.

2. **Address Underlying Issues:**
   - Implementing `Orientation` aims at stabilizing fixed orientation towards a point. Current methods using "path" lack precision, and options like "target" may result in the character moving past and then turning back.

3. **Code Modifications:**
   - Review and potentially remove unnecessary actions (`force_tp`, `up_down_grab_leaf`, `log_output`) that do not utilize the `target` type.
   - Focus on only a few actions (`pick_around`, `hydro_collect`, `electro_collect`, `anemo_collect`) to determine whether they should retain special handling. If historical scripts rely on these, consider maintaining them with `waypoint.Action == ...` enhancements.

4. **Improvement in Node Handling:**
   - Ensure nodes that aren't "target" types but also do not belong to specific action types (`ActionEnum` such as `StopFlying`, `NahidaCollect`, `CombatScript`, `Mining`) are required to move closer via small steps with logic like:
     ```csharp
     if (
       ...
       !string.IsNullOrEmpty(waypoint.Action)
       && waypoint.Action != ActionEnum.StopFlying.Code
       && waypoint.Action != ActionEnum.NahidaCollect.Code
       && waypoint.Action != ActionEnum.CombatScript.Code
       && waypoint.Action != ActionEnum.Mining.Code
       ...
     )
     {
       await MoveCloseTo(waypoint);
     }
     ```

**Clarifications from PR Discussion:**

- The `Orientation` node point can serve as the final point where an action is executed. It's about making the orientation adjustments first, enabling compatibility with existing actions.
- The current logic treats the `Orientation` node similarly to a teleport point. However, after reorientation, an action may need execution, aligning with the proposed changes.