[
    {
        "title": "Non-Null Default `SamplingPipeline`"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": " - Made the `SamplingPipeline` default to a `DefaultSamplingPipeline`\r\n - Removed the deprecated sampler parameters\r\n\r\nShould resolve #971 "
    },
    {
        "author": {
            "login": "En3Tho"
        },
        "body": "To be honest I don't really get the design:\r\nI belive `InferenceParams` should be just a part of `LlamaSharpPromtExecutionSettings` so user can just provide all the necessary information.\r\n\r\nI believe it's better to remove duplicating properties (like Temperature, etc) from `LLamaSharpPromptExecutionSettings` and just add `InferenceParams` there directly. It feels really weird that those things are recreated per request for no apparent reason. Also, not all of properties get translated there. So `LLamaSharpPromptExecutionSettings` ends up forcing user to use limited settings\r\n\r\nThis will also make overall usage more uniform: things you use in non-semantic-kernel environment could be transferred in a straightforward way and vise-versa\r\n\r\nE.g. \r\nnon-sematic kernel\r\n```\r\nvar ex = Executor(...)\r\nvar inrerenceParams = ...\r\nex.Infer(inrerenceParams)\r\n```\r\nSemanticKernel =\r\n```\r\nvar ex = Executor(...)\r\nvar inrerenceParams = ...\r\nvar promptExecutionSettings = (..., inrerenceParams)\r\nvar competion = (ex, settings)\r\ncompletion.GetChatMessageContentAsync(promptExecutionSettings)\r\n```\r\n\r\nWhat do you think?"
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": "I didn't write the original semantic kernel integration so I may be wrong here, but from looking at it I think `LlamaSharpPromptExecutionSettings` was written in the way it was to keep serialization simple.\r\n\r\nWhat you suggest sounds like a nicer API to use though, and you could certainly adapt the converter (https://github.com/SciSharp/LLamaSharp/blob/master/LLama.SemanticKernel/LLamaSharpPromptExecutionSettingsConverter.cs) to serialize the more complex object.\r\n\r\nNobody is really \"in charge\" of developing the semantic kernel stuff at the moment, so PRs in this are are very welcome!"
    }
]