**Instructions for PR Improvements:**

1. **Refactor Naming Conventions:**
   - Consider renaming `Fork` to a more user-friendly term if possible. Although `Fork` is semantically correct for developers familiar with system-level concepts, it can be confusing for others. Evaluate whether `Clone` fits better without misleading implications.
   - Rename `Split` function within the 'Node' class to `Fork` to maintain consistent terminology.

2. **Simplify Examples:**
   - Revise examples in `BatchedExecutorFork.cs` to hide or simplify the 'Node' class if possible, as its current implementation might be unnecessary for the context of the example.
   - Update `BatchedExecutorGuidance.cs` to possibly replace `GuidedSampler` with `DefaultSamplingPipeline` for clarity.
   - Rename the `n_len` parameter to `TokenCount` for better understanding.

3. **Documentation and Clarity Enhancements:**
   - Clarify the concept and application of the `rewind` feature, possibly through improved documentation or comments, to emphasize its usability and memory efficiency advantages over the save/load context state method.
   - Distinguish the library and user-level examples more clearly, possibly by creating a separate set of examples for advanced implementations.

This PR is integrating a “double buffering” feature in the batched executor, which aids in prompting new conversations while inference processes continue on others. The enhancement provides error handling to revert to a previous state when necessary.