[
    {
        "title": "Generic Prompt Formatter"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "- more generic default template history transformer\r\n- EOT and EOS token to string\r\n- ~minor refactor of ModelToken to readonly struct~\r\n- template convenience methods\r\n- exposed metadata get by key native handle\r\n- update example to use update default history transform and convenience anti prompt value from model"
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": ""
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": "Please make sure that this compiles under netstandard 2.0. There are a few changes which I'm suspicious may break (e.g. removal of some `using LLamaSharp.Extensions`, which appear unused under NET8 but often contain polyfills for standard 2.0)"
    },
    {
        "author": {
            "login": "patrick-hovsepian"
        },
        "body": "`dotnet build` does compile against all targets with the removed using statements that seemed unused. Would it be better to add a workflow that explicitly targets each framework to make it more automatic?"
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": "> a workflow that explicitly targets each framework to make it more automatic?\r\n\r\nIt would, and I thought we had one to be honest. I double checked before making that comment and was surprised to see we didn't!"
    },
    {
        "author": {
            "login": "martindevans"
        },
        "body": "Looks good to me, thanks for all the hard work @patrick-hovsepian! I'll merge it once the CI finishes :)"
    }
]