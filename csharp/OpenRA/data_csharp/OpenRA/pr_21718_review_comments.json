[
    {
        "title": "Remove floating points from map generation"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Removes all use of floating point from the RaMapGenerator map generator and its dependencies.\r\n\r\nFloating point behavior is potentially non-portable across client hardware. Removing them should make the map generation logic consistent even across clients with different floating point hardware or compiler behavior. This may be useful for sync-safe multiplayer or replay map generation where clients independently generate the map from settings.\r\n\r\nMost previously fractional public-facing settings are now represented as numbers out of 1000, with some exceptions using 1000000. Most internal logic which relies on fixed-point concepts now uses 1024ths, though some floating point mechanisms have been replaced with alternative discrete approximations (e.g. gaussian to binomial).\r\n"
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": "<img width=\"607\" alt=\"Screenshot 2025-01-27 at 13 56 22\" src=\"https://github.com/user-attachments/assets/de2c73d2-225c-49af-84db-1325458a6f26\" />\r\n\r\nIt appears snow has regressed. Otherwise LGTM\r\n"
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Fixed the snow on winter maps. I had missed that particular weight value."
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": "[changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog-(bleed)/_compare/2d5d2791573b5c55e82d19a3356d7ab535e064ab...5d13576d30bd548ccbf5cfcd72facc9e3d53b2e8)"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Seems I introduced a regression.\r\n\r\nTriggering configuration: RA, Desert, 256x256, Seed 1\r\n\r\n```\r\nException of type `System.IndexOutOfRangeException`: Index was outside the bounds of the array.\r\n   at OpenRA.Mods.Common.MapGenerator.MatrixUtils.CalibrateQuantileInPlace(Matrix`1 matrix, Int32 target, Int32 count, Int32 outOf) in /home/ashley/devel/OpenRA/OpenRA.Mods.Common/MapGenerator/MatrixUtils.cs:line 719\r\n   at OpenRA.Mods.Common.Traits.RaMapGenerator.Generate(Map map, MiniYaml settings) in /home/ashley/devel/OpenRA/OpenRA.Mods.Common/Traits/World/RaMapGenerator.cs:line 755\r\n```\r\n\r\nLooks like I need to use long when calculating this:\r\n\r\n`var adjustment = target - sorted[(sorted.Length - 1) * count / outOf];`\r\n\r\nUltimately caught this with the fuzzer, though I should have probably caught this before merging."
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Ah, classic. It was one of those \"harmless\" last minute changes I made _after_ fuzzing. :facepalm: "
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Fix for regression in #21727"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Another regression: see https://github.com/OpenRA/OpenRA/pull/21721#pullrequestreview-2577642120 discussion of the circular ore rings in water.\r\n\r\nSpecifically seems to happen when the map doesn't have enough space to fill the target quota of starting resources."
    }
]