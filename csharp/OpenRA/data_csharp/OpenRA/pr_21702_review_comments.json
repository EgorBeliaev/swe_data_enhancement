[
    {
        "title": "Add CnC map generator support"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Adds map generator support for CnC (all tilesets), largely on par with RA.\r\n\r\nMost tilesets do not have a complete set of beach templates and therefore do not support terrain settings involving water. DESERT is the only tileset supporting water. Unlike in RA, water is not playable space in CnC (no naval units), so only terrain settings with small bodies of water are available.\r\n\r\nMost changes are configuration (tileset and map generator config), with just a small number of code changes.\r\n\r\nDepends on #21700"
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": "In snowy maps we generate way too much snow. It's usually used quite sparingly.\r\n\r\nUnless one picked the overgrown or woodlands gen type, I think all the details are too sparce. Incase enclosed areas are generated with the onstruct option, then there may be enough details.\r\n\r\nUsually a lot of the details in TD are added through actors and rivers and roads. And the current generator adds roads very sparingly and lacks a lot of the actors. No rivers as well\r\n\r\nOn temparate tileset generation can become very slow, something is getting bottlenecked?\r\n\r\nBeach errors are quite common. You can also crash the game by choosing bounds in water"
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": "LGTM, this was quite the improvement"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "Note that this PR currently contains the changes of #21700. I recommend #21700 be merged first separately, and I will then rebase."
    },
    {
        "author": {
            "login": "dragunoff"
        },
        "body": "> Note that this PR currently contains the changes of #21700. I recommend #21700 be merged first separately, and I will then rebase.\n\n\nOur convention is to add a \"Depends on #21700\" to the PR description to signal that. And then there is a label that someone with permissions can add."
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "> In snowy maps we generate way too much snow. It's usually used quite sparingly.\r\n\r\nI should be able to adjust that using MultiBrush weights.\r\n\r\n> I think all the details are too sparce.\r\n\r\nFixing this starts getting into another set of non-trivial code changes, but the extra details could equally benefit RA maps. As such, it might be better to do the detail adding in a separate PR. (I'd propose a _later_ PR, because then you can then at least test CnC skirmishes.)\r\n\r\nSome ideas:\r\n- Rivers have a complete set of templates to work with, so they might not be too problematic. I could potentially use rivers in place of beaches for the otherwise waterless tilesets (or maybe also additionally for DESERT). I could filter out loops if moats-like rivers look a bit weird. Bridging over them is a non-trivial change, though.\r\n- Another option is to add rivers in a similar way to cliffs, though I'd have to introduce tiling errors and cover them up with trees. (Though, this is a common map-making technique for CnC's tileset limitations.)\r\n- I could add civilian buildings and civilians, perhaps biased around roads or their \"junctions\". Maybe using MultiBrush.\r\n- I could try making road laying more aggressive. The path tiling algorithm is probably more capable of road laying than it was when I initially started, so I can probably tweak a few settings.\r\n\r\n> On temparate tileset generation can become very slow, something is getting bottlenecked?\r\n\r\nCan you quantify this? (Map size?, Generator settings?, Time taken?)\r\n\r\nI'm aware of a O(actor_count**2) slowdown _after_ generation when it's copying actors over to the map, which can be _very_ significant for large tree-dense maps. `EditorActorLayer.NextActorName()` being the relevant bottleneck.\r\n\r\n> Beach errors are quite common.\r\n\r\nI can probably tweak some things to relax the tiling constraints here or stricten the inputs to tiling.\r\n\r\n> You can also crash the game by choosing bounds in water\r\n\r\n~~I don't know what that means. Can you share with me repro steps, logs, screenshots/video perhaps?~~"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "> You can also crash the game by choosing bounds in water\r\n\r\nWait, I'm being dumb I know what you mean!"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "> On temparate tileset generation can become very slow, something is getting bottlenecked?\r\n\r\n> EditorActorLayer.NextActorName() being the relevant bottleneck.\r\n\r\nHaving done some recent profiling, I'm not sure if this is likely to be the bottleneck in your case. I think it only applies to _very very_ large maps. However, EditorActorLayer.Add and EditorActorLayer.Remove are, in general, quite slow.\r\n\r\nHere is some left-heavy profiling of a few generations of 128x128 Rocky and Overgrown maps. Note that the repeated generation during the same editor instance consumes significant time to _remove_ actors as well as adding them.\r\n\r\n![image](https://github.com/user-attachments/assets/16fc289b-b6c8-4382-b38f-80fab4591696)\r\n\r\nZoomed in on the blitting:\r\n![image](https://github.com/user-attachments/assets/8a33f799-ab02-40db-85c3-7e677a5e46cf)\r\n\r\n- The editor blitting outweighs the actual map generation.\r\n- `EditorActorLayer.UpdateNeighbours` is expensive.\r\n\r\nMy understanding is that these costs are editor-specific and won't apply to any maps generated directly via some skirmish UI, so might be somewhat unimportant in future."
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "> Beach errors are quite common.\r\n\r\nTurns out there was a bug I introduced during one of my many refactors! I have created a PR for the fix: #21704\r\n"
    },
    {
        "author": {
            "login": "ashleynewson"
        },
        "body": "> the current generator adds roads very sparingly\r\n\r\n#21705 should fix that."
    },
    {
        "author": {
            "login": "PunkPun"
        },
        "body": "[changelog](https://github.com/OpenRA/OpenRA/wiki/Changelog-(bleed)/_compare/f364003c384201edaebe29d9b5d717a629cad47e...66eb698361836815fe424b78a1ad23eaf49f4b4a)"
    }
]