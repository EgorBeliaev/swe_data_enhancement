### Issue Description:
The PR addresses an issue in the "Mouse Without Borders" (MWB) module when running in service mode. A problem arises causing the helper process to terminate improperly during certain desktop events (like UAC prompts), leading to the failure of features such as clipboard sharing. This termination issue is due to failed API calls when the main thread is impersonated with user-level permissions. The identified workaround involves suppressing the execution context flow in non-main threads using `ExecutionContext.SuppressFlow()`.

### Instructions for Implementation:
1. **Review the Identified Fix**: Implement the suppression of the execution context flow in calling threads before invoking `DoSomethingInUIThread`. This prevents the helper process from remaining terminated when desktop switch events occur.
   
2. **Fix Additional Thread Issues**: Address the missing fixes for threads related to sockets and clipboard operations similarly to the current thread fix.

3. **Testing**:
   - Verify that launching MWB in service mode restarts the helper process correctly after desktop switch events such as UAC prompts, Ctrl+Alt+Delete, and Lock Screen.
   - Ensure clipboard sharing functionality works consistently between different machines and scenarios after these events.
   - Reproduce the previously noted test scenario where copy-pasting between machines and invoking Ctrl+Alt+Del fails to restart the helper process. Ensure this is resolved.

4. **Documentation and Comments**: Add comments in the code explaining the reasoning behind the suppression of flow as a temporary fix. This might include marking this workaround for future review in case of framework updates.

5. **Validation**:
   - Retest on different environment setups, such as with and without PowerToys running as admin, to confirm stability.
   - Document any remaining limitations or scenarios where the helper process does not restart as expected.

Following these steps will help ensure the issue is addressed accurately and prevent the functionality from breaking in related scenarios.