[
    {
        "title": "add '0x' handling for divide by 0 scenarios"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->\r\n## Summary of the Pull Request\r\nCloses #36032. Adds divide by zero handling for hex numbers in the calculator plugin.\r\n\r\n<!-- Please review the items on the PR checklist before submitting-->\r\n## PR Checklist\r\n\r\n- [x] **Closes:** ##36032\r\n- [ ] **Communication:** I've discussed this with core contributors already. If work hasn't been agreed, this work might be rejected\r\n- [ ] **Tests:** Added/updated and all pass\r\n- [ ] **Localization:** All end user facing strings can be localized\r\n- [ ] **Dev docs:** Added/updated\r\n- [ ] **New binaries:** Added on the required places\r\n   - [ ] [JSON for signing](https://github.com/microsoft/PowerToys/blob/main/.pipelines/ESRPSigning_core.json) for new binaries\r\n   - [ ] [WXS for installer](https://github.com/microsoft/PowerToys/blob/main/installer/PowerToysSetup/Product.wxs) for new binaries and localization folder\r\n   - [ ] [YML for CI pipeline](https://github.com/microsoft/PowerToys/blob/main/.pipelines/ci/templates/build-powertoys-steps.yml) for new test projects\r\n   - [ ] [YML for signed pipeline](https://github.com/microsoft/PowerToys/blob/main/.pipelines/release.yml)\r\n- [ ] **Documentation updated:** If checked, please file a pull request on [our docs repo](https://github.com/MicrosoftDocs/windows-uwp/tree/docs/hub/powertoys) and link it here: #xxx\r\n\r\n<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->\r\n## Detailed Description of the Pull Request / Additional comments\r\n\r\n<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->\r\n## Validation Steps Performed\r\nTested that reported scenario is fixed, as well as additional equations. \r\n"
    },
    {
        "author": {
            "login": "jaimecbernardo"
        },
        "body": "LGTM! Thank you!"
    },
    {
        "author": {
            "login": "dkaszews"
        },
        "body": "@plante-msft @jaimecbernardo  Won't this crash now on `1 / 0x0`?"
    },
    {
        "author": {
            "login": "dkaszews"
        },
        "body": "Plus, checking division by zero with regex seems like a very silly way to do things, since it won't catch things like `1 / (1 - 1)` or other arbitrary expressions in denominator. "
    },
    {
        "author": {
            "login": "jaimecbernardo"
        },
        "body": "It will not crash, just show a different NaN (Not a Number) or other error instead."
    }
]