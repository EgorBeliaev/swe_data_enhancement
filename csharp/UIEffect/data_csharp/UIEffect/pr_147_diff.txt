diff --git a/Assets/Coffee/UIExtensions/UIEffect/Scripts/Common/EffectPlayer.cs b/Assets/Coffee/UIExtensions/UIEffect/Scripts/Common/EffectPlayer.cs
index 75850ffc..2a652bd6 100644
--- a/Assets/Coffee/UIExtensions/UIEffect/Scripts/Common/EffectPlayer.cs
+++ b/Assets/Coffee/UIExtensions/UIEffect/Scripts/Common/EffectPlayer.cs
@@ -19,6 +19,13 @@ public class EffectPlayer
 		[Tooltip("Playing.")]
 		public bool play = false;
 
+		/// <summary>
+		/// Gets or sets the delay before looping.
+		/// </summary>
+		[Tooltip("Initial play delay.")]
+		[Range(0f, 10f)]
+		public float initialPlayDelay = 0;
+
 		/// <summary>
 		/// Gets or sets a value indicating whether can loop.
 		/// </summary>
@@ -67,7 +74,14 @@ public void OnEnable(Action<float> callback = null)
 			}
 			s_UpdateActions.Add(OnWillRenderCanvases);
 
-			_time = 0;
+			if (play)
+			{
+				_time = -initialPlayDelay;
+			}
+			else
+			{
+				_time = 0;
+			}
 			_callback = callback;
 		}
 
diff --git a/Assets/Coffee/UIExtensions/UIEffect/Scripts/Editor/UIShinyEditor.cs b/Assets/Coffee/UIExtensions/UIEffect/Scripts/Editor/UIShinyEditor.cs
index 87b6509a..ab690207 100644
--- a/Assets/Coffee/UIExtensions/UIEffect/Scripts/Editor/UIShinyEditor.cs
+++ b/Assets/Coffee/UIExtensions/UIEffect/Scripts/Editor/UIShinyEditor.cs
@@ -31,6 +31,7 @@ protected void OnEnable()
 			var player = serializedObject.FindProperty("m_Player");
 			_spPlay = player.FindPropertyRelative("play");
 			_spDuration = player.FindPropertyRelative("duration");
+			_spInitialPlayDelay = player.FindPropertyRelative("initialPlayDelay");
 			_spLoop = player.FindPropertyRelative("loop");
 			_spLoopDelay = player.FindPropertyRelative("loopDelay");
 			_spUpdateMode = player.FindPropertyRelative("updateMode");
@@ -75,6 +76,10 @@ public override void OnInspectorGUI()
 			GUILayout.Space(10);
 			EditorGUILayout.LabelField("Effect Player", EditorStyles.boldLabel);
 			EditorGUILayout.PropertyField(_spPlay);
+			if (_spPlay.boolValue)
+			{
+				EditorGUILayout.PropertyField(_spInitialPlayDelay);
+			}
 			EditorGUILayout.PropertyField(_spDuration);
 			EditorGUILayout.PropertyField(_spLoop);
 			EditorGUILayout.PropertyField(_spLoopDelay);
@@ -115,6 +120,7 @@ public override void OnInspectorGUI()
 		SerializedProperty _spLoop;
 		SerializedProperty _spLoopDelay;
 		SerializedProperty _spDuration;
+		SerializedProperty _spInitialPlayDelay;
 		SerializedProperty _spUpdateMode;
 	}
 }
\ No newline at end of file
