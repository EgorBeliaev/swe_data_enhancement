[
    {
        "title": "Fix RSS with baseURL with subrid when render hooks is enabled"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Fixes #13332\n"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "BaseURL subdir repeated with RSS output format and render hooks enabled",
                    "body": "Reference: <https://discourse.gohugo.io/t/53340>\n\nWe're getting this:\n\n```text\nhttps://example.org/subdir/subdir/s1/p1/\n```\n\nInstead of this:\n\n```text\nhttps://example.org/subdir/s1/p1/\n```\n\nWe're doing some brute force replacements in RSS that aren't doing what they should:\n\nhttps://github.com/gohugoio/hugo/blob/835579b338deca98751fbcf3444928f26e293543/hugolib/site.go#L1429-L1435\n\nThis is just another variant of known issues with `canonifyURLs` which, for the record, I hate. I'm not a fan of `relativeURLs` either, but that's still useful on the rare occasion when someone wants to build a server-less site.\n\n<details>\n<summary>Failing test</summary>\n\n```go\n// Issue 13332\nfunc TestFoo(t *testing.T) {\n\tt.Parallel()\n\n\tfiles := `\n-- hugo.toml --\nbaseURL = 'https://example.org/subdir/'\ndisableKinds = ['section','sitemap','taxonomy','term']\n[markup.goldmark.renderHooks.image]\nenableDefault = true\n[markup.goldmark.renderHooks.link]\nenableDefault = true\n-- layouts/_default/home.html --\n{{ .Content }}|\n-- layouts/_default/single.html --\n{{ .Content }}|\n-- layouts/_default/rss.xml --\n{{ with site.GetPage \"/s1/p2\" }}\n  {{ .Summary | transform.XMLEscape | safeHTML }}\n{{ end }}\n-- content/s1/p1.md --\n---\ntitle: p1\n---\n-- content/s1/p2/index.md --\n---\ntitle: p2\n---\n![alt](a.jpg)\n\n[p1](/s1/p1)\n-- content/s1/p2/a.jpg --\n`\n\n\tb := hugolib.Test(t, files)\n\n\tb.AssertFileContent(\"public/index.xml\", \"https://example.org/subdir/s1/p1/\")\n\tb.AssertFileContent(\"public/index.xml\", \"https://example.org/subdir/s1/p2/a.jpg\")\n}\n\n```\n</details>\n<br>",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "bep"
                                },
                                "body": ">canonifyURLs which, for the record, I hate.\n\nSure, but back when `canonifyURLs` was added, pre render hooks, it was a must have. I have added a workaround patch in #13334 -- but we should make it so we didn't have do do any canonification.\n\nI guess in this case that would mean adding a simpler RSS variant for link/image hooks that uses `Permalink`.\n"
                            },
                            {
                                "author": {
                                    "login": "jmooring"
                                },
                                "body": "> it was a must have\n\nI understand that; I just don't like it _now_. We sort of soft-deprecated it in the documentation quite a while ago.\n\nThanks for the fix."
                            }
                        ]
                    }
                }
            }
        }
    }
]