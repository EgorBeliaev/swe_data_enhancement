**Instructions for Programmer:**

1. **Update `resources.GetRemote` Functionality**:
   - Add support for retrieving response headers, specifically focusing on "Link" headers for API pagination.
   - Ensure these headers are included in `.Data.Headers` as a `map[string][]string`.

2. **Header Handling**:
   - Make header name matching case-insensitive.
   - Implement logic to handle headers like `Set-Cookie` which may contain multiple values.

3. **Parsing the "Link" Header**:
   - Enhance the parsing of the "Link" response header as per RFC 5988, focusing on pagination links (e.g., first, last, next, prev).
   - Establish a structure for storing parsed links directly accessible as `$resource.Links.First`, `$resource.Links.Next`, etc.
   - Retain the raw "Link" header string in `.Data.Headers.LinkRaw` if parsing fails.

4. **Implementation Considerations**:
   - Allow for future expansions or adjustments to additional response headers if needed, such as _Content-Language_.
   - Evaluate an "opt-in" mechanism for parsing complex headers to minimize performance regressions for users not requiring this feature.

5. **Testing and Documentation**:
   - Ensure testing covers both scenarios of successful link extraction and cases with unavailable links in responses.
   - Prepare documentation updates reflecting the changes in header handling and link parsing facilities.