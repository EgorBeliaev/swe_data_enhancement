[
    {
        "title": "Add some more server options/improvements"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "New options:\r\n\r\n* `FromHeaders`: Server header matching for redirects\r\n* `FromRe`: Regexp with group support, i.e. it replaces $1, $2 in To with the group matches.\r\n\r\nNote that if both `From` and `FromRe` is set, both must match.\r\n\r\nAlso\r\n\r\n* Allow redirects to non HTML URLs as long as the Sec-Fetch-Mode is set to navigate on the request.\r\n* Detect and stop redirect loops.\r\n\r\nThis was all done while testing out InertiaJS with Hugo. So, after this commit, this setup will support the main parts of the protocol that Inertia uses:\r\n\r\n```toml\r\n[server]\r\n    [[server.headers]]\r\n        for = '/**/inertia.json'\r\n        [server.headers.values]\r\n            Content-Type = 'text/html'\r\n            X-Inertia    = 'true'\r\n            Vary         = 'Accept'\r\n\r\n    [[server.redirects]]\r\n        force       = true\r\n        from        = '/**/'\r\n        fromRe      = \"^/(.*)/$\"\r\n        fromHeaders = { \"X-Inertia\" = \"true\" }\r\n        status      = 301\r\n        to          = '/$1/inertia.json'\r\n```\r\n\r\nUnfortunately, a provider like Netlify does not support redirects matching by request headers. It should be possible with some edge function, but then again, I'm not sure that InertiaJS is a very good fit with the common Hugo use cases.\r\n\r\nBut this commit should be generally useful."
    }
]