[
    {
        "title": "Fix some server rebuild issues for non-HTML custom output formats"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "The failing test case here is\r\n\r\n* A custom search output format defined on the home page, marked as `noAlternative` and not `permalinkable`\r\n* In fast render mode, when making a change to a data source for that search output format, the JSON file was not refreshed.\r\n\r\nThere are variants of the above, but the gist of it is:\r\n\r\n* The change set was correctly determined, but since the search JSON file was not in the recently visited browser stack, we skipped rendering it.\r\n\r\nRunning with `hugo server --disableFastRender` would be a workaround for the above.\r\n\r\nThis commit fixes this by:\r\n\r\n* Adding a check for the HTTP request header `Sec-Fetch-Mode = navigation` to the condition for if we should track server request as a user navigation (and not e.g. a HTTP request for a linked CSS stylesheet).\r\n* Making sure that we compare against the real relative URL for non-permalinkable output formats.\r\n\r\nFixes #13014\r\n"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "`watch` not working on custom output template",
                    "body": "\r\n### Reproducer\r\n\r\n```yaml\r\n// hugo.yaml\r\noutputFormats:\r\n  SearchIndex:\r\n    baseName: 'Search'\r\n    isPlainText: true\r\n    mediaType: 'application/json'\r\n    noAlternative: true\r\n\r\noutputs:\r\n  home:\r\n    - HTML\r\n    - SearchIndex\r\n```\r\n\r\n```html\r\n// layouts/_default/index.searchindex.json\r\n{{ partial \"index.json\" . }}\r\n```\r\n\r\n```html\r\n// layouts/partials/index.json\r\n{{ $data := dict\r\n  \"version\" 1\r\n}}\r\n{{ jsonify $data }}\r\n```\r\n\r\n### What version of Hugo are you using (`hugo version`)?\r\n\r\n<pre>\r\n$ hugo version\r\nhugo v0.137.0-59c115813595cba1b1c0e70b867e734992648d1b+extended linux/amd64 BuildDate=2024-11-04T16:04:06Z VendorInfo=gohugoio\r\n</pre>\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes. It was also present in earlier versions, such as 0.128.0.\r\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "bep"
                                },
                                "body": "I'm pretty sure the issue title isn't true in general, so it must something ... special.\r\n\r\n\r\n* What do you mean by `watch`? `hugo server --watch`?\r\n* Do you have a complete and failing example living somewhere?"
                            },
                            {
                                "author": {
                                    "login": "razonyang"
                                },
                                "body": "> * What do you mean by `watch`? `hugo server --watch`?\r\n\r\nYes, `hugo server --watch`.\r\n\r\n> * Do you have a complete and failing example living somewhere?\r\n\r\nI just created a testing branch with the code snippets mentioned above.\r\n\r\n```sh\r\ngit clone -b custom-output-watch git@github.com:razonyang/hugo-testing.git hugo-13014\r\n\r\ncd hugo-13014\r\n\r\nhugo server --watch -p 1111\r\n```\r\n\r\nAnd then I modified the `layouts/partials/index.json`, `http://localhost:1111/search.json` won't re-render until restarting Hugo server.\r\n\r\nI can reproduce it on both Linux (as shown in the video I posted) and Windows."
                            },
                            {
                                "author": {
                                    "login": "ibuli"
                                },
                                "body": "+1 This issue is also happening to me - the changes are not reflecting if change a particular file until we restart the server.\r\nCurrently using `hugo v0.114.0+extended darwin/arm64 BuildDate=unknown`"
                            },
                            {
                                "author": {
                                    "login": "bep"
                                },
                                "body": "@razonyang I can reproduce this using your setup. I see what happens and I will try to get a fix into the next release, but the*If you run with `hugo server --disableFastRender`, your example site works, and could possibly be a workaround."
                            }
                        ]
                    }
                }
            }
        }
    }
]