[
    {
        "title": "E2E Test: Create a DiagnosticCollector"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "The `DiagnosticCollector` is an enhanced version of the previously introduced MustGather function, the result is still the same, but now we have granular control over the objects that we want to capture logs for each test and add the option to manually specify which objects to collect from for when running the e2e manually and the user is only interested in the behavior of a particular object. \r\n\r\nIt also defines \"extensions\" referring to CRD's, opening the door for future CRD's we want to check during testing. this initial iteration only defines NFD for `NodeFeature` and `NodeFeatureRule`. "
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "I definitely like the rename!\r\n\r\nI think the implementation can be cleaned up a bit. Please see my suggestions for reusing more functionality."
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "Thanks for the rework, @ArangoGutierrez. \n\nI have made some suggestions for improvements. I think it would also make sense to pull this into a separate package under `common` at this stage already -- especially since I think we can benefit from different files for the implementation."
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "I think this is looking a lot better.\r\n\r\nThere are some minor changes that I think will get this in a state that it would be generally useful.\r\n\r\nLet's keep the Collector interface in mind when we think about adding additions to `kubectl-nv`. I think what we're doing here can also be extended to the changes for https://github.com/NVIDIA/kubectl-nv/pull/8"
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "The last missing bit is cleaning up how we're logging errors. \r\n\r\nHere, we should log a the top-level and ensure that sufficient context is added to the errors to provide information to debug issues.\r\n\r\nI don't think any of these are blockers, but I would rather address them here before we port this code to `kubectl-nv`."
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ArangoGutierrez"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "LGTM."
    }
]