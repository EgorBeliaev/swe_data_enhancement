[
    {
        "title": "Raise a warning instead of an error if GPU mode labeler fails"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "For environments like WSL2 where GPUs do not show up as PCI devices, creating the GPU mode labeler will fail. This change allows GFD to proceed even if it is unable to get the GPU mode label."
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "cdesiniotis"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "cdesiniotis"
        },
        "body": ""
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": ""
    },
    {
        "author": {
            "login": "tariq1890"
        },
        "body": ""
    },
    {
        "author": {
            "login": "cdesiniotis"
        },
        "body": ""
    },
    {
        "author": {
            "login": "tariq1890"
        },
        "body": ""
    },
    {
        "author": {
            "login": "tariq1890"
        },
        "body": "LGTM. I am assuming that GFD just becomes a no-op when run on a node where pci devices aren't detected, yes?\r\n\r\n"
    },
    {
        "author": {
            "login": "cdesiniotis"
        },
        "body": "> LGTM. I am assuming that GFD just becomes a no-op when run on a node where pci devices aren't detected, yes?\n> \n> \n> \n> \n\nIn WSL2, NVML is available so GFD behaves like normal, except for the gpu.mode label which requires information about the PCI device under /sys. "
    },
    {
        "author": {
            "login": "elezar"
        },
        "body": "@cdesiniotis do we need to backport this?\r\n"
    },
    {
        "author": {
            "login": "cdesiniotis"
        },
        "body": "> @cdesiniotis do we need to backport this?\r\n\r\nNo, as long as this change makes it into the next device-plugin release (0.18.0) and our upcoming GPU Operator release picks it up we should be fine."
    }
]