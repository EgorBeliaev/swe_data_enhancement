diff --git a/internal/cdi/cdi.go b/internal/cdi/cdi.go
index 658feb80e..50f756361 100644
--- a/internal/cdi/cdi.go
+++ b/internal/cdi/cdi.go
@@ -26,6 +26,7 @@ import (
 	"github.com/NVIDIA/nvidia-container-toolkit/pkg/nvcdi"
 	transformroot "github.com/NVIDIA/nvidia-container-toolkit/pkg/nvcdi/transform/root"
 	"github.com/sirupsen/logrus"
+	"k8s.io/klog/v2"
 	cdiapi "tags.cncf.io/container-device-interface/pkg/cdi"
 	cdiparser "tags.cncf.io/container-device-interface/pkg/parser"
 
@@ -59,8 +60,8 @@ type cdiHandler struct {
 
 var _ Interface = &cdiHandler{}
 
-// newHandler constructs a new instance of the 'cdi' interface
-func newHandler(infolib info.Interface, nvmllib nvml.Interface, devicelib device.Interface, opts ...Option) (Interface, error) {
+// New constructs a new instance of the 'cdi' interface
+func New(infolib info.Interface, nvmllib nvml.Interface, devicelib device.Interface, opts ...Option) (Interface, error) {
 	c := &cdiHandler{
 		infolib:   infolib,
 		nvmllib:   nvmllib,
@@ -73,6 +74,11 @@ func newHandler(infolib info.Interface, nvmllib nvml.Interface, devicelib device
 	if !c.deviceListStrategies.IsCDIEnabled() {
 		return &null{}, nil
 	}
+	hasNVML, _ := infolib.HasNvml()
+	if !hasNVML {
+		klog.Warning("No valid resources detected, creating a null CDI handler")
+		return &null{}, nil
+	}
 
 	if c.logger == nil {
 		c.logger = logrus.StandardLogger()
diff --git a/internal/cdi/factory.go b/internal/cdi/factory.go
deleted file mode 100644
index 0d7c33995..000000000
--- a/internal/cdi/factory.go
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package cdi
-
-import (
-	"github.com/NVIDIA/go-nvlib/pkg/nvlib/device"
-	"github.com/NVIDIA/go-nvlib/pkg/nvlib/info"
-	"github.com/NVIDIA/go-nvml/pkg/nvml"
-
-	"k8s.io/klog/v2"
-)
-
-// New is a factory method that creates a CDI handler for creating CDI specs.
-func New(infolib info.Interface, nvmllib nvml.Interface, devicelib device.Interface, opts ...Option) (Interface, error) {
-	hasNVML, _ := infolib.HasNvml()
-	if !hasNVML {
-		klog.Warning("No valid resources detected, creating a null CDI handler")
-		return NewNullHandler(), nil
-	}
-
-	return newHandler(infolib, nvmllib, devicelib, opts...)
-}
