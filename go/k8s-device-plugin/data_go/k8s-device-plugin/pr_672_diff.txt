diff --git a/internal/flags/node.go b/internal/flags/node.go
index aaec82225..8a38c98a8 100644
--- a/internal/flags/node.go
+++ b/internal/flags/node.go
@@ -38,7 +38,6 @@ func (n *NodeConfig) Flags() []cli.Flag {
 		&cli.StringFlag{
 			Name:        "node-name",
 			Usage:       "The name of the node to be worked on.",
-			Required:    true,
 			Destination: &n.Name,
 			EnvVars:     []string{"NODE_NAME"},
 		},
diff --git a/internal/lm/output.go b/internal/lm/output.go
index 2a3f8e291..ba546cd9e 100644
--- a/internal/lm/output.go
+++ b/internal/lm/output.go
@@ -153,6 +153,9 @@ type nodeFeatureObject struct {
 // UpdateNodeFeatureObject creates/updates the node-specific NodeFeature custom resource.
 func (n *nodeFeatureObject) Output(labels Labels) error {
 	nodename := n.nodeConfig.Name
+	if nodename == "" {
+		return fmt.Errorf("required flag %q not set", "node-name")
+	}
 	namespace := n.nodeConfig.Namespace
 	nodeFeatureName := strings.Join([]string{nodeFeatureVendorPrefix, nodename}, "-")
 
diff --git a/internal/lm/vgpu.go b/internal/lm/vgpu.go
index 1e6b56bc3..45a80b145 100644
--- a/internal/lm/vgpu.go
+++ b/internal/lm/vgpu.go
@@ -18,6 +18,9 @@ package lm
 
 import (
 	"fmt"
+	"strconv"
+
+	"k8s.io/klog/v2"
 
 	"github.com/NVIDIA/k8s-device-plugin/internal/vgpu"
 )
@@ -37,11 +40,11 @@ func NewVGPULabeler(vgpu vgpu.Interface) Labeler {
 func (manager vgpuLabeler) Labels() (Labels, error) {
 	devices, err := manager.lib.Devices()
 	if err != nil {
-		return nil, fmt.Errorf("unable to get vGPU devices: %v", err)
+		klog.ErrorS(err, "unable to get vGPU devices")
+		return nil, nil
 	}
-	labels := make(Labels)
-	if len(devices) > 0 {
-		labels["nvidia.com/vgpu.present"] = "true"
+	labels := Labels{
+		"nvidia.com/vgpu.present": strconv.FormatBool(len(devices) > 0),
 	}
 	for _, device := range devices {
 		info, err := device.GetInfo()
