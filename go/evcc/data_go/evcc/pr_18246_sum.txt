1. **Remove** the `getmode` function.
2. **Consider** using registers SG1 and SG2 for logical operations to determine modes: Normal, Boost, Stop.
3. **Explore** the potential integration with Modbus for querying SG1 and SG2.
4. **Update** Modbus template with logical conditions as shown in examples provided by `deadrabbit87`:
   ```yaml
   getmode:
     source: go
     script: |
       SG1 && SG2
     in:
       - name: SG1
         type: boolean
         config: 
           source: modbus
           {{- include "modbus" . | indent 5 }}
           register:
             address: 35101
             type: input
             encoding: uint16
       - name: SG2
         type: boolean
         config: 
           source: modbus
           {{- include "modbus" . | indent 5 }}
           register:
             address: 35102
             type: input
             encoding: uint16
   ```

5. **Refine** logic for setting mode:
   ```go
   res := 1
   switch {
   case SG1 == 1 && SG2 == 0: res = 3
   case SG1 == 0 && SG2 == 0: res = 2
   }
   res
   ```

6. **Verify** with `kleini` the hold register functionality; ensure that write operations are correct as current operation only allows reading.

7. **Implement** custom behaviors via external devices like Shelly switches if physical SG Ready inputs are required for operation due to register limitations. 

8. **Review** and test integration for heat pump operations (related to issues raised with modes being not found and documented values).

Ensure thorough testing and documentation updates reflecting the changes and insights from the discussion in the PR.