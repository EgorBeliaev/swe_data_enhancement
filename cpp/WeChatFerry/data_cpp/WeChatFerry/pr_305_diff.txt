diff --git a/WeChatFerry/spy/funcs.cpp b/WeChatFerry/spy/funcs.cpp
index 601fbf69..2d72f5a4 100644
--- a/WeChatFerry/spy/funcs.cpp
+++ b/WeChatFerry/spy/funcs.cpp
@@ -3,8 +3,6 @@
 #include "framework.h"
 #include <filesystem>
 #include <fstream>
-#include <io.h>
-#include <direct.h>
 
 #include "codec.h"
 #include "exec_sql.h"
@@ -77,37 +75,6 @@ static string get_key(uint8_t header1, uint8_t header2, uint8_t *key)
     return ""; // 错误
 }
 
-// 创建多级目录
-bool CreateDir(const char* dir)
-{
-    int m = 0, n;
-    string str1, str2;
-    str1 = dir;
-    str2 = str1.substr(0, 2);
-    str1 = str1.substr(3, str1.size());
-    while (m >= 0)
-    {
-        m = str1.find('/');
-
-        str2 += '/' + str1.substr(0, m);
-        //判断该目录是否存在
-        n = _access(str2.c_str(), 0);
-        if (n == -1)
-        {
-            //创建目录文件
-            int flag = _mkdir(str2.c_str());
-            if (flag != 0) { //创建失败
-                LOG_ERROR("Failed to CreateDir:{}", dir);
-                return false;
-            }
-        }
-
-        str1 = str1.substr(m + 1, str1.size());
-    }
-    LOG_DEBUG("CreateDir {} success.", dir);
-    return true;
-}
-
 string DecryptImage(string src, string dir)
 {
     if (!fs::exists(src)) {
@@ -149,11 +116,10 @@ string DecryptImage(string src, string dir)
             dst = fs::path(src).replace_extension(ext).string();
         } else {
             dst = (dir.back() == '\\' || dir.back() == '/') ? dir : (dir + "/");
-            replace(dst.begin(), dst.end(), '\\', '/');
-
+            
             // 判断dir文件夹是否存在，若不存在则创建（否则将无法创建出文件）
-            if (_access(dst.c_str(), 0) == -1) {//判断该文件夹是否存在
-                bool success = CreateDir(dst.c_str()); //Windows创建文件夹
+            if (!fs::exists(dst)) {//判断该文件夹是否存在
+                bool success = fs::create_directories(dst); //Windows创建文件夹
                 if (!success) { //创建失败
                     LOG_ERROR("Failed to mkdir:{}", dst);
                     return "";
