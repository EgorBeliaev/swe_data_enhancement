This PR updates the cost estimation formula for HNSW index scans in PostgreSQL to better utilize search and index information, thereby improving index selection. Key changes are:

1. **New Cost Estimation Formula:**
   - The formula is revised to:
     ```
     (entryLevel * m) + (layer0TuplesMax * layer0Selectivity)
     ```
   - Where:
     - `(entryLevel * m)` accounts for graph traversal to layer 0.
     - `layer0TuplesMax` estimates the maximum number of tuples to scan at layer 0, calculated as `hnsw.ef_search * m * 2`.
     - `layer0Selectivity` estimates the percentage of tuples scanned, adjusted by a constant scaling factor, initially set to `0.55`.

2. **Parameters Influencing Cost Estimation:**
   - `m` (number of tuples scanned per step)
   - `hnsw.ef_search` (controls scan convergence steps)
   - Standard PostgreSQL parameters (e.g., `random_page_cost`), though these should be adjusted with care.

3. **Additional Considerations:**
   - For zero tuples, consider either pushing costs up to the maximum or adding `1` to ensure the index scan fulfills the query. Use an `unlikely` clause if opting to handle zero tuples differently.
   - Address potential suboptimal index selection by refining selectivity logic, noting a test case where PostgreSQL chose an index scan over a sequential scan with marginal cost difference.

Ensure compliance with co-author feedback, particularly concerning parentheses alignment with the formula and logic for handling zero tuples.

Note: The changes address existing test failures related to the previous cost estimation model and ensure the PostgreSQL planner selects the more efficient index type.