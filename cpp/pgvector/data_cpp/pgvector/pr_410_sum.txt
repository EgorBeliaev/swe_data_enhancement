**Instructions for updating the repository:**

1. **Replace SpinLocks with LWLocks:**
   - Convert `flushLock`, `allocatorLock`, and `entryLock` from SpinLocks to LWLocks.
   - For `flushLock`, consider its exclusive mode and the potential long duration of operations like `FlushPages()`.

2. **Address Per-element Spinlocks:**
   - Change per-element spinlocks, such as those in `HnswUpdateNeighborPagesInMemory()` over a call to `HnswUpdateConnection()`, to LWLocks to prevent errors during operations that may fail (e.g., out-of-memory situations).

3. **LWLock Tranche Utilization:**
   - Use a common tranche for all locks although using individual tranches aids in easy monitoring/debugging.
   - Ensure that the lock names are visible in `pg_stat_activity` by registering the tranche name in the backend, keeping in mind this is for debugging/stats purposes and doesnâ€™t impact locking.

4. **Testing:**
   - Test the performance with these changes to ensure no issues arise due to the conversion from SpinLocks to LWLocks. 

5. **Documentation/Follow-up:**
   - Plan a follow-up commit to update any necessary documentation, reflecting these changes.

This PR addresses multiple locking issues within the repository to improve reliability and error handling by switching from SpinLocks to LWLocks, providing better support for debugging and reducing contention issues.