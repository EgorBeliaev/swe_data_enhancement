[
    {
        "title": "Add acc limit consideration to avoid overshooting in RotationShimController"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->\r\n\r\n---\r\n\r\n## Basic Info\r\n\r\n| Info | Please fill out this column |\r\n| ------ | ----------- |\r\n| Ticket(s) this addresses   | NA\r\n| Primary OS tested on | Ubuntu |\r\n| Robotic platform tested on | own robot hardware |\r\n| Does this PR contain AI generated software? | No |\r\n\r\n---\r\n\r\n## Description of contribution in a few bullet points\r\nCurrently we don't do the deceleration as a function of its target orientation with RotationShimController. This PR implements this behavior using the `max_angular_accel` param. \r\n\r\n## Description of documentation updates required from your changes\r\n\r\nThe parameter description has to be updated.\r\n\r\n---\r\n\r\n## Future work that may be required in bullet points\r\n\r\n<!--\r\n* I think there might be some optimizations to be made from STL vector\r\n* I see alot of redundancy in this package, we might want to add a function `bool XYZ()` to reduce clutter\r\n* I tested on a differential drive robot, but there might be issues turning near corners on an omnidirectional platform\r\n-->\r\n\r\n#### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->\r\n- [ ] Check that any new parameters added are updated in docs.nav2.org\r\n- [ ] Check that any significant change is added to the migration guide\r\n- [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide\r\n- [ ] Check that any new functions have Doxygen added\r\n- [ ] Check that any new features have test coverage\r\n- [ ] Check that any new plugins is added to the plugins page\r\n- [ ] If BT Node, Additionally: add to BT's XML index of nodes for groot, BT package's readme table, and BT library lists\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "i'm curious - did you test this with a small value for `angular_disengage_threshold`? \r\n\r\nIf this worked as expected, I would expect the behavior to be a:\r\n* Rotate accelerating to full rotational speed \r\n* Rotating decelerating to the angle of the path, once in deceleration area \r\n* Stop relatively close to the angle, with a small disengagement threshold (20 deg or less?) \r\n* Then controller starts moving\r\n\r\nIf so, that would make a really nice behavior - very precise, very 'robotic'. A gif to put in the migration guide for this would be splendid to show it at work and the value of it. My hope was that this would be used to create very dynamic hand offs with the controllers, but I think experience has told me now from feedback that this isn't what people want (and most of the controllers don't take kindly to being started in a high-acceleration-turn when starting path tracking)\r\n\r\n> Let me know if you would introduce a separate deceleration limit parameter or if a min_angular_speed param is needed here.\r\n\r\nNah, I think this can be symmetric. If someone has a problem with that, they can have a follow up PR. A bunch of controllers for rotating to heading do this, so this is consistent behavior"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "RBT22"
        },
        "body": "@SteveMacenski Let me know if you would introduce a separate deceleration limit parameter or if a `min_angular_speed` param is needed here."
    },
    {
        "author": {
            "login": "codecov"
        },
        "body": "## [Codecov](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) Report\nAttention: Patch coverage is `66.66667%` with `1 line` in your changes missing coverage. Please review.\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Patch % | Lines |\n|---|---|---|\n| [...m\\_controller/src/nav2\\_rotation\\_shim\\_controller.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?src=pr&el=tree&filepath=nav2_rotation_shim_controller%2Fsrc%2Fnav2_rotation_shim_controller.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9yb3RhdGlvbl9zaGltX2NvbnRyb2xsZXIvc3JjL25hdjJfcm90YXRpb25fc2hpbV9jb250cm9sbGVyLmNwcA==) | 66.66% | [1 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Coverage \u0394 | |\n|---|---|---|\n| [...m\\_controller/src/nav2\\_rotation\\_shim\\_controller.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864?src=pr&el=tree&filepath=nav2_rotation_shim_controller%2Fsrc%2Fnav2_rotation_shim_controller.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9yb3RhdGlvbl9zaGltX2NvbnRyb2xsZXIvc3JjL25hdjJfcm90YXRpb25fc2hpbV9jb250cm9sbGVyLmNwcA==) | `94.73% <66.66%> (-0.51%)` | :arrow_down: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4864/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation)\n"
    },
    {
        "author": {
            "login": "RBT22"
        },
        "body": "Yes, we tested it with a small angular_disengage_threshold and with accelerations. The behavior aligns closely with what you described: accelerating to full rotational speed, decelerating near the path angle, and stopping close to the target with a small disengagement threshold.\r\n\r\nOne thing to note however is that we moved the shim to open-loop to integrate it seamlessly with our setup. This approach worked well for our case, but I'm curious if this is something you'd consider supporting optionally."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "> One thing to note however is that we moved the shim to open-loop to integrate it seamlessly with our setup. This approach worked well for our case, but I'm curious if this is something you'd consider supporting optionally.\r\n\r\nOpen in another PR and I can take a look. At face value, I think its a good idea as a parameterized option. \r\n\r\n---\r\n\r\nI think the only thing left here is the migration guide entry + gif ideally and I can merge the pair, thanks for looking at this!"
    }
]