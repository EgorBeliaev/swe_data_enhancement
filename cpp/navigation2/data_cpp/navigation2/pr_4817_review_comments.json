[
    {
        "title": "fix simple smoother failing during final approach"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->\r\n\r\n## Basic Info\r\n\r\n| Info | Please fill out this column |\r\n| ------ | ----------- |\r\n| Ticket(s) this addresses   | #4710 |\r\n| Primary OS tested on | Ubuntu (osrf/ros:jazzy-desktop-full) |\r\n| Robotic platform tested on | my own custom simulated robot  |\r\n| Does this PR contain AI generated software? | No |\r\n\r\n---\r\n\r\n## Description of contribution in a few bullet points\r\n\r\n* modified smoother server's simple_smoother plugin to not throw FailedToSmoothPath when the robot is approaching the end of path\r\n\r\nI can alter this behavior if requested. My only requirement for this patch is that no error will be thrown when the path is ending and the last and only segment is too short to be processed, causing `segments_smoothed` to be zero.\r\n\r\n#### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->\r\n- [ ] Check that any new parameters added are updated in docs.nav2.org\r\n- [ ] Check that any significant change is added to the migration guide\r\n- [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide\r\n- [ ] Check that any new functions have Doxygen added\r\n- [ ] Check that any new features have test coverage\r\n- [ ] Check that any new plugins is added to the plugins page\r\n- [ ] If BT Node, Additionally: add to BT's XML index of nodes for groot, BT package's readme table, and BT library lists\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Seems very sensible / a good idea "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I think there are a couple of bugs that need to be addressed, but generally looks good to me once resolved. They're pretty small."
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Sorry that this was such a painful review and iteration process, I promise it'll be better in the future :wink: "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "@rayferric two things:\r\n1. There's a CI test failing from this change. I think you just need to set the size of the path > 1 as an input for an exception that should be thrown\r\n2. Please sign your commits with DCO (see the job failure below)\r\n\r\nThen I can merge!"
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@rayferric, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@rayferric, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@rayferric, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": "CI failed due to unrelated errors in TF2@rolling:\r\n\r\n![image](https://github.com/user-attachments/assets/27174d5b-2123-4513-b51c-0daeefa72275)\r\n\r\nI have pushed an unrelated commit, [use tf2's .hpp includes](https://github.com/ros-navigation/navigation2/pull/4817/commits/f4799fddd231fbdc3f888879986b6b3d49655fb7), in order to see if the CI will go through."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "https://github.com/ros-navigation/navigation2/pull/4732 should resolve, I just re-kicked CI on that PR and will merge once passing. You can remove those commits and rebase/pull in `main` changes. \r\n\r\nYou have some CI test failures but ... I'm guessing those are a fluke given nothing about your PR should have changed that behavior (or the rolling release that created the geometry2 API issue also broke something else we depend on in RPP or exposed an RPP internal bug). Lets do the https://github.com/ros-navigation/navigation2/pull/4732 rebase and re-kick CI and see if it comes back again. "
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": "Okay, I've removed the extra commit and rebase-merged the changes from main. Now let's wait until https://github.com/ros-navigation/navigation2/pull/4732 is merged. Also please see if changes in https://github.com/ros-navigation/navigation2/pull/4817/commits/d61eed5c84435f2d8595685a804b32224351177f are acceptable."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@rayferric, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Rebase with https://github.com/ros-navigation/navigation2/pull/4823 for CI"
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": "Here, I rebased with `depreciate_c_headers2`. Now waiting for your decision regarding the test failures"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Rebase on main, it was merged in with some other fixes. It also looks like your PR has an outstanding git conflict. The git diff here shouldn't include any of the `h` to `hpp` changes, that should be provided by `main`"
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "This pull request is in conflict. Could you fix it @rayferric?"
    },
    {
        "author": {
            "login": "codecov"
        },
        "body": "## [Codecov](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4817?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4817?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Coverage \u0394 | |\n|---|---|---|\n| [nav2\\_smoother/src/simple\\_smoother.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4817?src=pr&el=tree&filepath=nav2_smoother%2Fsrc%2Fsimple_smoother.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9zbW9vdGhlci9zcmMvc2ltcGxlX3Ntb290aGVyLmNwcA==) | `100.00% <100.00%> (\u00f8)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4817/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation)\n"
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": "Hey, in order for us to easily resolve this PR, I've reverted my intrusive changes and fixed the tests so that they pass. Is that alright?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I'm going back to the original ticket to remind myself what we were trying to accomplish since we've gone down a few directions. This code has clearly degraded a bit over time and various contributions and refactoring over its lifetime and I want to think about this more abstractly to what we want to do: final path approaches working well and knowing that path segments in various directions can be of arbitrary length.\r\n\r\nI think we need to make a few changes here. The returns for `smoothImpl` and when we throw are a bit crazy - as you point out. \r\n\r\nWithin `smoothImpl`:\r\n- I think the collision failure case should set `path = last_path`, update the orientations, and return true. If we're mid-execution, then the previous is known to be collision free & that's as good as we can do. If its the first iteration and the path is already in collision, then we can't do much here. If the user cares, then they'd have `goal->check_for_collisions` set in which the finally validated path would then throw the path in collision error [in the main Smoother Server](https://github.com/ros-navigation/navigation2/blob/main/nav2_smoother/src/nav2_smoother.cpp#L306C9-L327)\r\n- For this specific type of smoother, we can return a semi-smoothed path (others if not converged are not going to be valid, like those from the Constrained Smoother). So, for `its >= max_its_` I think we can warn log and return true. Its not as smooth as it could have been, but its perfectly valid and a user configuration, not a runtime requirement.\r\n- For maximum duration, I think we can leave that alone as throwing since that's an actual exit failure\r\n\r\nWithin `smooth()`:\r\n- Now, all returns from `smoothImpl` are throwing or `return true`, so we don't need to pay much attention to the return bool anymore. I think we can remove the `segments_smoothed` and success logic. And we can change the `smoothImpl` to be a `void` type.\r\n- That would also imply removing the potential to throw `FailedToSmoothPath`, but looking at the git blame for that, it seems haphazardly implemented ([along with the rest of the issues we're removing in this thread](https://github.com/ros-navigation/navigation2/pull/3296)). I can't think of a reason to keep it. \r\n\r\n---\r\n\r\nI also reviewed `savitzky_golay_smoother.cpp` to see what changes I wanted to make to be aligned with this to fix other potential messy locations. That one looks good to me and does what I basically just suggested.  \r\n\r\n\r\n\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "rayferric"
        },
        "body": "Hi again,\r\nThanks for the in-depth review and your well thought out suggestions! Thanks to them, preparing the new commits was a breeze. I'm happy that you decided to remove the overly restrictive error handling. As a bonus, I have included a test case for the end-of-path approach scenario, so that my original issue doesn't reoccur."
    }
]