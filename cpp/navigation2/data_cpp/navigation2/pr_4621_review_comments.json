[
    {
        "title": "45-50% performance improvement in MPPI controller using Eigen library for computation."
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Basic Info\r\n\r\n| Info | Please fill out this column |\r\n| ------ | ----------- |\r\n| Ticket(s) this addresses   | #4237 #3351  |\r\n| Primary OS tested on | Ubuntu |\r\n| Robotic platform tested on | NA, Optimizer Benchmark |\r\n| Does this PR contain AI generated software? | No |\r\n\r\n---\r\n\r\n## Description of contribution in a few bullet points\r\n\r\n* Replaced xtensor with Eigen library for computation. \r\n* Performance increased by 45-50% with footprint and critics enabled.\r\n* Currently WIP\r\n\r\n## Description of documentation updates required from your changes\r\n---\r\n\r\n## Future work that may be required in bullet points\r\n\r\n\r\n#### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->\r\n- [ ] Check that any new parameters added are updated in docs.nav2.org\r\n- [ ] Check that any significant change is added to the migration guide\r\n- [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide\r\n- [ ] Check that any new functions have Doxygen added\r\n- [ ] Check that any new features have test coverage\r\n- [ ] Check that any new plugins is added to the plugins page\r\n- [ ] If BT Node, Additionally: add to BT's XML index of nodes for groot, BT package's readme table, and BT library lists\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I did a pretty fast review, so far from complete on each detail, but a good starting point! "
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I did a first look through (didn't analyze in detail the math in the critics, but higher level programming items first), but generally looks good to me with some details to answer!"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I got through everything except for the critic functions (but reviewed its unit tests so given that those work properly and have good coverage, I do not expect to find any issues there)"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I got to everything except for the main optimizer file, I ran out of time :("
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Completed the full review"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Otherwise, my only open other things are the ~clamping util~, ~copy in the util return~, stride ~either mistake or~ my misunderstanding, and ~reviewing the test coverage~\r\n\r\nEverything else is on me to do some functional testing for external validation and this is finally good to be merged! I'm very optimistic we can get this in before the end of the year! "
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "It continues to be odd to me that [we have 3 lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621) in the main optimizer that don't have codecov showing even though they're sequential operations with lines that are said to be covered. I assume its a compiler optimization artifact that these lines are optimized out, but it is curious to me. Nothing for you to worry about though unless this sparks a thought. \r\n\r\n```\r\n+   auto yaw_sin = trajectories.yaws.sin().eval();\r\n+   auto dy = (state.vx * yaw_sin).eval();\r\n+   auto dy = (vx * yaw_sin).eval();\r\n```\r\n\r\nI retriggered CI, it should be green now. \r\n\r\n---\r\n\r\nOK, next steps:\r\n\r\n- [x] Steve: do some sanity testing of the various things to make sure they're still working as I expect: (1) each critic, (2) optimizer, (3) motion models, and (4) constraint compliance on the output optimal trajectory. Run for a couple of hours.\r\n- [x] Steve: Performance benchmarking :-)\r\n- [ ] Steve: Ask another non-me party & an ARM user to review the software changes and the performance on their practically applied platform as a second verification \r\n\r\nAnything else you feel should be done here - or are you happy with this as is? :smile: :partying_face: "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "A migration guide entry on docs.nav2.org is necessary since this is such a big change. Add in the improvement metrics too! "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "This pull request is in conflict. Could you fix it @Ayush1285?"
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Let me know here when you want me to take a look again! I'm quite excited for this work - even if for no reason than to move to Eigen + 10% performance boost, since Eigen's release and support is much more known than xtensor's"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Let me know here when you want me to take a look again! I'm quite excited for this work - even if for no reason than to move to Eigen + 10% performance boost, since Eigen's release and support is much more known than xtensor's\r\n\r\nSure, I'm trying a few optimizations and will push changes once I'm done. "
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Let me know here when you want me to take a look again! I'm quite excited for this work - even if for no reason than to move to Eigen + 10% performance boost, since Eigen's release and support is much more known than xtensor's\r\n\r\nI've completed the migration to Eigen. But we need to make sure that functionality-wise everything is correct or not. I'll run tests and ensure that all of them are passing. Meanwhile, you can take a look at the latest changes."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "This pull request is in conflict. Could you fix it @Ayush1285?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I think you may not have done the last rebase / pull correctly. I'm seeing changes in files that don't relate to this PR. It could be due to the conflict and Git's attempt to show me the diffs it can with that in place, but that would need to be resolved before I can review again unfortunately :( \r\n\r\nIts a 3k line PR with 169 files, vast majority are unrelated\r\n"
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> I think you may not have done the last rebase / pull correctly. I'm seeing changes in files that don't relate to this PR. It could be due to the conflict and Git's attempt to show me the diffs it can with that in place, but that would need to be resolved before I can review again unfortunately :(\r\n> \r\n> Its a 3k line PR with 169 files, vast majority are unrelated\r\n\r\nI've corrected the bad rebase/merge. Lint errors are also fixed. "
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "This still appears to have a few test failures - though you're right that linting looks good now :+1: "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Should I have this another review? I know you're actively working and don't want to pester you mid-dev cycle :-)"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Should I have this another review? I know you're actively working and don't want to pester you mid-dev cycle :-)\r\n\r\n Actually, I am also busy in other deliverables. So, I'm not able to allocate much time. But I'll let you know in 3-4 days maybe, once I've finished fixing the test failures and other review comments."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Please request a review or otherwise comment when you want me to take a look again :-) "
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Please request a review or otherwise comment when you want me to take a look again :-)\r\n\r\nYes, I've requested for the review. All unit tests are passing now, but system tests are still failing. "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Retriggering the job - that could just be flaky. I do want to see coverage results before I review so I can use that in my review process. So I'll review once that is uploaded on the job success. I don't think there's an action item for you (just waiting on the build)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "This pull request is in conflict. Could you fix it @Ayush1285?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Reviewing in the next hour or two. I commented on 2 previous comments on `clamp` and if the rolling was implemented. There's a couple more open comments on optimizations, but nothing we need to do immediately (just once we agree on everything else for the final touches). I appreciate your effort and diligence here!"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Reviewing in the next hour or two. I commented on 2 previous comments on `clamp` and if the rolling was implemented. There's a couple more open comments on optimizations, but nothing we need to do immediately (just once we agree on everything else for the final touches). I appreciate your effort and diligence here!\r\n\r\nI'll address those review comments, but I'm not sure why system tests are failing consistently. I've tried running it manually but there is some issue with my docker environment. Can you try running it on your machine if possible?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I'll retrigger CI to see if it'll work on a retry and just a fluke. Admittedly this week I'm running around finishing up ROSCon / ROS-I presentations, flying, and all day meetings in Chicago, so I can't promise how much time I'll have to test, but I will try. Hopefully I can work testing and debugging on the plane. \r\n\r\nEdit: I just looked at the logs, and this looks like a real failure, not just some CI quirk. \r\n\r\n```\r\n\r\n[controller_server-8] [INFO] [1728398318.183782512] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.192005615] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.192141359] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.235159477] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.243666000] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.243732031] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.285450921] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.294741884] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.294834492] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.334985955] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.347333222] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.347411397] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.385154574] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.398325507] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.398394071] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.435473489] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.444402291] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.444483007] [controller_server]: Optimizer fail to compute path\r\n[controller_server-8] [INFO] [1728398318.483917228] [controller_server]: Optimizer reset\r\n[controller_server-8] [INFO] [1728398318.493731596] [controller_server]: Optimizer reset\r\n[controller_server-8] [WARN] [1728398318.493824433] [controller_server]: Optimizer fail to compute path\r\n```"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Edit: I just looked at the logs, and this looks like a real failure, not just some CI quirk.\r\n\r\n@SteveMacenski  Yes, after investigation, I found out that there is some problem with CostCritic. After some control loops, it is always returning `all_trajectories_collide` as True, which causes failure. If I remove the CostCritic plugin, then it works fine. I'll need to look further to pinpoint the exact issue. Also, there is no test for CostCritc in the critics_test.cpp file."
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "@SteveMacenski  It seems system tests are passing now after fixing the CostCritic issue but dwb_critics tests failed, Is it a flaky test? On my local system, it is passing."
    },
    {
        "author": {
            "login": "codecov"
        },
        "body": "## [Codecov](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) Report\nAttention: Patch coverage is `85.09934%` with `45 lines` in your changes missing coverage. Please review.\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Patch % | Lines |\n|---|---|---|\n| [...\\_mppi\\_controller/src/critics/constraint\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fconstraint_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvY29uc3RyYWludF9jcml0aWMuY3Bw) | 21.05% | [15 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...ontroller/src/critics/velocity\\_deadband\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fvelocity_deadband_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvdmVsb2NpdHlfZGVhZGJhbmRfY3JpdGljLmNwcA==) | 28.57% | [10 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...\\_mppi\\_controller/src/critics/path\\_angle\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fpath_angle_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvcGF0aF9hbmdsZV9jcml0aWMuY3Bw) | 83.33% | [3 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...i\\_controller/src/critics/prefer\\_forward\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fprefer_forward_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvcHJlZmVyX2ZvcndhcmRfY3JpdGljLmNwcA==) | 40.00% | [3 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [nav2\\_mppi\\_controller/src/critics/cost\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fcost_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvY29zdF9jcml0aWMuY3Bw) | 80.00% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...\\_mppi\\_controller/src/critics/goal\\_angle\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fgoal_angle_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvZ29hbF9hbmdsZV9jcml0aWMuY3Bw) | 60.00% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [nav2\\_mppi\\_controller/src/critics/goal\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fgoal_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvZ29hbF9jcml0aWMuY3Bw) | 71.42% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...2\\_mppi\\_controller/src/critics/obstacles\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fobstacles_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3Mvb2JzdGFjbGVzX2NyaXRpYy5jcHA=) | 83.33% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [...\\_mppi\\_controller/src/critics/path\\_align\\_critic.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Fcritics%2Fpath_align_critic.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL2NyaXRpY3MvcGF0aF9hbGlnbl9jcml0aWMuY3Bw) | 81.81% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| [nav2\\_mppi\\_controller/src/optimizer.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Fsrc%2Foptimizer.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvc3JjL29wdGltaXplci5jcHA=) | 97.59% | [2 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n| ... and [2 more](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | |\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Coverage \u0394 | |\n|---|---|---|\n| [...er/include/nav2\\_mppi\\_controller/critic\\_manager.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fcritic_manager.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9jcml0aWNfbWFuYWdlci5ocHA=) | `100.00% <\u00f8> (\u00f8)` | |\n| [...e/nav2\\_mppi\\_controller/models/control\\_sequence.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fmodels%2Fcontrol_sequence.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9tb2RlbHMvY29udHJvbF9zZXF1ZW5jZS5ocHA=) | `100.00% <100.00%> (\u00f8)` | |\n| [...oller/include/nav2\\_mppi\\_controller/models/path.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fmodels%2Fpath.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9tb2RlbHMvcGF0aC5ocHA=) | `100.00% <100.00%> (\u00f8)` | |\n| [...ller/include/nav2\\_mppi\\_controller/models/state.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fmodels%2Fstate.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9tb2RlbHMvc3RhdGUuaHBw) | `100.00% <100.00%> (\u00f8)` | |\n| [...clude/nav2\\_mppi\\_controller/models/trajectories.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fmodels%2Ftrajectories.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9tb2RlbHMvdHJhamVjdG9yaWVzLmhwcA==) | `100.00% <100.00%> (\u00f8)` | |\n| [...ler/include/nav2\\_mppi\\_controller/motion\\_models.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Fmotion_models.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9tb3Rpb25fbW9kZWxzLmhwcA==) | `100.00% <100.00%> (\u00f8)` | |\n| [...troller/include/nav2\\_mppi\\_controller/optimizer.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Foptimizer.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci9vcHRpbWl6ZXIuaHBw) | `100.00% <\u00f8> (\u00f8)` | |\n| [...ude/nav2\\_mppi\\_controller/tools/noise\\_generator.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Ftools%2Fnoise_generator.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci90b29scy9ub2lzZV9nZW5lcmF0b3IuaHBw) | `100.00% <\u00f8> (\u00f8)` | |\n| [...v2\\_mppi\\_controller/tools/trajectory\\_visualizer.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Ftools%2Ftrajectory_visualizer.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci90b29scy90cmFqZWN0b3J5X3Zpc3VhbGl6ZXIuaHBw) | `100.00% <\u00f8> (\u00f8)` | |\n| [...oller/include/nav2\\_mppi\\_controller/tools/utils.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree&filepath=nav2_mppi_controller%2Finclude%2Fnav2_mppi_controller%2Ftools%2Futils.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9tcHBpX2NvbnRyb2xsZXIvaW5jbHVkZS9uYXYyX21wcGlfY29udHJvbGxlci90b29scy91dGlscy5ocHA=) | `97.65% <100.00%> (+0.44%)` | :arrow_up: |\n| ... and [14 more](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | |\n\n... and [10 files with indirect coverage changes](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4621/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation)\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Back from ROSCon / ROS-I meetings now. Reviewing the software / remaining open items today. I think next steps from there are for me to play with this on my machine as well and:\r\n- do some sanity testing of the various critics to make sure they're still working as I expect \r\n- do some functional sanity checking on the math for the (1) optimizer, (2) motion models, and (3) constraint compliance on the output optimal trajectory. These are software changes I want to scrutinize a little more functionally after a code review for my own piece of mind \r\n- Performance benchmarking :-) \r\n- Ask another non-me party to review the software changes and the performance on their practically applied platform as a second verification \r\n\r\nThen good to merge and very publicly thank you for this amazing work :fireworks: \r\n\r\nIs there anything else you think needs to be done here or is planned that we should factor in? \r\n\r\nI'm noticing on the code coverage report that there are a couple of lines that are no longer being tested that the UX is saying were covered before in the Obstacle Critic and possibly Optimizer (?). Its just a few stray lines, but makes my eyebrows raise a little bit since I'm not sure how that's possible if the tests are unchanged and they appear to be things that should be triggering :shrug: \r\n\r\nPlease go through all open comments (you may need to expand some the GitHub UX collapses) as some are open questions I want the :+1: on that you checked on those things. There are 5 above this comment :-)"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Is there anything else you think needs to be done here or is planned that we should factor in?\r\n\r\n@SteveMacenski  Verifying the impact of the fast-math compiler flag needs to be done. On my machine, removing fast-math and keeping fma flag resulted in sped up for Eigen.\r\n\r\n> I'm noticing on the code coverage report that there are a couple of lines that are no longer being tested that the UX is saying were covered before in the Obstacle Critic and possibly Optimizer (?). Its just a few stray lines, but makes my eyebrows raise a little bit since I'm not sure how that's possible if the tests are unchanged and they appear to be things that should be triggering \ud83e\udd37\r\n\r\nI'll take a look at it.\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "To prevent us from scrolling up through old comments before the last review: the only one left open is the Clamp question where I responded \"yes, just `min(max())` to make it more ergonomic and help reduce likely issues with later modifications from other users\"\r\n"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Anything else you feel should be done here\r\n\r\n1. System tests are again failing consistently. In the GPS Waypoint Follower test, it passes the first waypoint, but after that action, the server refuses to accept the goal. Is it a generic failure? I've tested manually locally with multiple waypoints; it was okay there.\r\nEdit: System tests are passing now.\r\n2. If we can test this on ARM platforms facing issues for xtensor, then it would be great to know if Eigen works there. Although we have removed all the SIMD extension flags, but as I know Eigen has explicit extrinsic written for SIMD extensions and then it is conditionally compiled based on whatever is supported by the processor. So, I think we might face problems here. Binaries generated by x86 might not work as desired on those ARM platforms."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "On ARM: I added that to my TODO list to find a deployed user, I have a couple in mind. I'll plan on doing benchmarking and the analysis steps in my first bullet this week  "
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> A migration guide entry on docs.nav2.org is necessary since this is such a big change. Add in the improvement metrics too!\r\n\r\nYes, I was thinking that once you've done your testing and performance benchmarking, I'll add an entry on docs.nav2.org."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Performance testing based on the Nav2 bringup default settings and differential drive model:\r\n- Average for xtensor: 10.58ms\r\n- Average for Eigen: 7.31ms\r\n- Improvement: 30.9% \r\n\r\nMoreover from that, a major benefit of just being on Eigen as an extremely well supported math library which I think will be a better solution long term with possible GPU bindings / general releases on Ubuntu distros\r\n\r\nHigh-level initial smoke testing looks good - no issues to report. I'm going to continue to dig into each of the critics just to prove to myself that they are working properly - but what I'm seeing from my testing, I'm not expecting to find anything. \r\n\r\nEdit: completed the critic & constraints testing, all looks good. \r\n\r\nWhile I'm doing that, I'm inviting a few beta testers to the party to have them test it out as well from a deployed end-user's perspective. I think you can start on the docs update :-) \r\n\r\n---\r\n\r\nBTW, I made a pretty big breaking change in #4779, you need to pull in Main to make CI work or with the latest in related packages :-) Its conflict free though, so easy enough \r\n"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "@SteveMacenski Opened the PR for docs changes : [Docs changes PR](https://github.com/ros-navigation/docs.nav2.org/pull/616)"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "Hey @SteveMacenski, any updates on the beta testing? Do I need to handle the merge conflict?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "> any updates on the beta testing? \r\n\r\nI've been following up with folks, but with the holidays I'm receiving a pretty global \"sorry for the delay, we'll get to it in mid-January\" from folks. I'm pretty tempted to merge it given what I think we know, but I did want to get metrics from an ARM user before announcing this change since I think that is a critically key demographic for why this performance improvement is important. \r\n\r\nI will make a second wave for ARM users right now, if nothing else to just get some metrics on a Jetson or RPi. I do want to get this in before EoY though and I've seen nothing that would stop that from happening. \r\n\r\n> Do I need to handle the merge conflict?\r\n\r\nYes please :-)  Can't merge and harder for folks to test without it\r\n\r\n"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> I do want to get this in before EoY though and I've seen nothing that would stop that from happening.\r\n\r\nGreat, thanks!!.\r\n\r\n> Yes please :-) Can't merge and harder for folks to test without it\r\n\r\nDone.\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I have 1 report from an ARM user that the path align critic is having issues, but no other critics / issues in the general solution. I took a look at path align and don't see anything weird, but it might be worth giving that another look if you had 15-20 minutes to re-scrutinize it or any unique APIs we use there that may be having ARM issues. I don't see anything but the strides. \r\n\r\nTo be noted, for the default bringup, the PathAlign critic and Cost critic are the only that use strides. \r\n\r\nThe only thing I noted was that `int strided_traj_cols = data.trajectories.x.cols() / trajectory_point_step_ + 1;` --> I don't know how Eigen strides handle out of bounds or if it checks it, if we `+1` and that causes attempted access after the block. \r\n\r\nThe other use in the cost critic makes sure this isn't possible with `int strided_traj_cols = floor(data.trajectories.x.cols() / trajectory_point_step_);`\r\n\r\n\r\n>  Even at a low weight, enabling it caused erratic motion. When disabled, the performance was acceptable. Unfortunately, we had an issue with that robot today and I couldn't continue testing so we don't have any performance metrics yet. I will be on leave until January 6th, after which I\u2019ll continue working on this. Keep you posted.\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> I have 1 report from an ARM user that the path align critic is having issues, but no other critics / issues in the general solution. I took a look at path align and don't see anything weird, but it might be worth giving that another look if you had 15-20 minutes to re-scrutinize it or any unique APIs we use there that may be having ARM issues. I don't see anything but the strides.\r\n> \r\n> To be noted, for the default bringup, the PathAlign critic and Cost critic are the only that use strides.\r\n> \r\n> The only thing I noted was that `int strided_traj_cols = data.trajectories.x.cols() / trajectory_point_step_ + 1;` --> I don't know how Eigen strides handle out of bounds or if it checks it, if we `+1` and that causes attempted access after the block.\r\n> \r\n> The other use in the cost critic makes sure this isn't possible with `int strided_traj_cols = floor(data.trajectories.x.cols() / trajectory_point_step_);`\r\n> \r\n> > Even at a low weight, enabling it caused erratic motion. When disabled, the performance was acceptable. Unfortunately, we had an issue with that robot today and I couldn't continue testing so we don't have any performance metrics yet. I will be on leave until January 6th, after which I\u2019ll continue working on this. Keep you posted.\r\n\r\nYou're correct. Problem was in the calculation of `strided_traj_cols`. Since, first column in the trajectory will always be selected, the correct way should be: `strided_traj_cols = floor((data.trajectories.x.cols() - 1) / trajectory_point_step_) + 1;`.\r\nSubtracting 1 for the first column and then adding it in the last.\r\nFor trajectories with even no. of columns, it was picking up one extra column with garbage values. It should be fixed now."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Ah, glad we caught that! I just sent that update to the ARM user that was testing this -- lets see what they say (we're all getting back on the horse from the Holidays, so I imagine it'll be next week at this point) "
    },
    {
        "author": {
            "login": "rickarmstrong"
        },
        "body": "@Ayush1285 FYI I took a crack at building the `eigen_mppi` branch (`commit aab0b55497b6fe53fa4683a32d41379feffbd79b (HEAD -> eigen_mppi, origin/eigen_mppi`). Strangely, building `nav2_amcl` failed with \r\n```\r\nStarting >>> nav2_amcl\r\n--- stderr: nav2_amcl                                   \r\nIn file included from /root/tmp/nav2_ayushi_ws/src/navigation2/nav2_amcl/src/amcl_node.cpp:23:\r\n/root/tmp/nav2_ayushi_ws/src/navigation2/nav2_amcl/include/nav2_amcl/amcl_node.hpp:32:10: fatal error: message_filters/subscriber.hpp: No such file or directory\r\n   32 | #include \"message_filters/subscriber.hpp\"\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\nThis was in a Docker container created from image `osrf/ros jazzy-desktop-full   8ea079870e70   4 weeks ago   4.42GB`. Probably just something goofy in my setup, but figured I'd let you know anyhow.\r\n"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> @Ayush1285 FYI I took a crack at building the `eigen_mppi` branch (`commit aab0b55497b6fe53fa4683a32d41379feffbd79b (HEAD -> eigen_mppi, origin/eigen_mppi`). Strangely, building `nav2_amcl` failed with\r\n> \r\n> ```\r\n> Starting >>> nav2_amcl\r\n> --- stderr: nav2_amcl                                   \r\n> In file included from /root/tmp/nav2_ayushi_ws/src/navigation2/nav2_amcl/src/amcl_node.cpp:23:\r\n> /root/tmp/nav2_ayushi_ws/src/navigation2/nav2_amcl/include/nav2_amcl/amcl_node.hpp:32:10: fatal error: message_filters/subscriber.hpp: No such file or directory\r\n>    32 | #include \"message_filters/subscriber.hpp\"\r\n>       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n> ```\r\n> \r\n> This was in a Docker container created from image `osrf/ros jazzy-desktop-full 8ea079870e70 4 weeks ago 4.42GB`. Probably just something goofy in my setup, but figured I'd let you know anyhow.\r\n\r\nI think it is due to because you're trying to build rolling branch of nav2 on Jazzy machine. More precisely, there are lot of C style headers, which were deprecated after launch of Jazzy. For example error that you are facing is due this PR: https://github.com/ros2/message_filters/pull/135\r\nAnd I'm not sure if this change is back ported to Jazzy."
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "> [](https://github.com/ros2/message_filters/pull/135)\r\n> And I'm not sure if this change is back ported to Jazzy.\r\n\r\nThe tf2 headers are back ported to humble and jazzy - but I'm not sure they've sync'd yet to public debs (and even if the have, would have been in the last week or so and so you need to make sure to update your debs)"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "From the ARM testing folks at Kiwibot:\r\n\r\n> We tested the fix you mentioned on simulation and on a robot today and it seems to be working fine (including the PathAlignCritic), except for some oscillations that we think might require some tuning to fix. I will be working on that. Keep you posted.\r\n\r\nIt looks like that fix did the job. I'm helping them with some more tests and metrics gathering but its looking good :-)"
    },
    {
        "author": {
            "login": "jdgalviss"
        },
        "body": "Thanks for this PR! We (Kiwibot) tested it on one of our robots running ROS 2 Iron on Ubuntu 22.04 (Jetson AGX, ARM64). The compilation issues we previously encountered with xtensor are now resolved.\r\n\r\nUsing the default bringup parameters, we observed the following performance metrics:\r\n\r\n17.1 ms average controller execution time\r\n55\u201365% CPU usage on a single core during navigation\r\n25% CPU usage on a single core when idle\r\n0.5% overall memory usage\r\nAs @SteveMacenski mentioned, the controller\u2019s performance has been good, and the issue with the PathAlignCritic is now fixed."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I've heard enough good news at this point (only 2 weeks late from EOY)! \r\n\r\n@Ayush1285 please rebase / pull in main. If CI looks good, I'll merge! Thanks so much for your tireless work and effort here, this is a big improvement in performance and long term maintainability. Even better, this enables this to work well and effectively on Jetson board which were not previously possible due to their relatively weak CPUs. The metrics that @jdgalviss reports from Kiwibot are a major improvement and make it possible to use MPPI even on those boards for production without using insane amount of resources or only able to run at sub-20hz. \r\n\r\nI can't be happier with how this came out and I look forward to any other contributions you'd be interested in helping out with in Nav2! :smile: "
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> I've heard enough good news at this point (only 2 weeks late from EOY)!\r\n> \r\n> @Ayush1285 please rebase / pull in main. If CI looks good, I'll merge! Thanks so much for your tireless work and effort here, this is a big improvement in performance and long term maintainability. Even better, this enables this to work well and effectively on Jetson board which were not previously possible due to their relatively weak CPUs. The metrics that @jdgalviss reports from Kiwibot are a major improvement and make it possible to use MPPI even on those boards for production without using insane amount of resources or only able to run at sub-20hz.\r\n> \r\n> I can't be happier with how this came out and I look forward to any other contributions you'd be interested in helping out with in Nav2! \ud83d\ude04\r\n\r\nI've merged it with the latest main. There are two unrelated test failures. One in collision monitor test: \r\n`\"[ERROR] [1736830701.557335092] [collision_monitor]: Error while getting parameters: parameter 'observation_sources' is not initialized`. Another one in the docking server test: \r\n`[opennav_docking-1] [INFO] [1736830869.904053683] [docking_server]: Creating bond (docking_server) to lifecycle manager.\r\n    [INFO] [lifecycle_manager-2]: sending signal 'SIGINT' to process[lifecycle_manager-2]`. It seems flaky failure to me.\r\n\r\n> I can't be happier with how this came out and I look forward to any other contributions you'd be interested in helping out with in Nav2! \ud83d\ude04\r\n\r\nSure, I'm open to more contributions."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "This pull request is in conflict. Could you fix it @Ayush1285?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "Ugh, I'm sorry to do this to you, but it looks like there are merge conflicts from https://github.com/ros-navigation/navigation2/pull/4812 which changed the use of `path` to the actual goal `pose` to fix a bug in MPPI using the transformed path's end goal as the global goal and shortcutting some critics. \r\n\r\nOtherwise, I tested and this is good to go :smile: \r\n\r\n> Sure, I'm open to more contributions.\r\n\r\nThis was a pretty big undertaking - what's your feeling about working on MPPI some more or switching gears into another part of the codebase / new algorithms? \r\n\r\nOn the MPPI front, there are a few open tickets that would be really nice to hvae someone look at: \r\n- https://github.com/ros-navigation/navigation2/issues/4601 - MPPI acceleration and deceleration profiles being priorly applied when moving in reverse (would be a natural small project from this PR) \r\n- https://github.com/ros-navigation/navigation2/issues/4361 - there's some discussion that the obstacle / cost critics can be simplified or issues removed. I haven't had the cycles to look at it again to solve it\r\n- https://github.com/ros-navigation/navigation2/issues/3351 - This is a general laundry list I've been keeping of potential MPPI updates to improve run-time performance or trajectory generation quality\r\n\r\nOn other fronts:\r\n- I have some thoughts on some ideas for other controllers based on sampling of spirals and other feasible primitives that I haven't really had the time to flush out but could be really nice potential algorithms for users to have access to. For example: the graceful controller computes a smooth spiral from the robot pose to a goal pose from a set of hyper parameters. We could instead sample those hyper parameter space with the same fixed start and goal poses to find the 'best' spiral to get us from A->B minimizing some cost function of curvature, cost, length, etc. We could even have multiple time-steps of sampling as well to create more sophisticated maneuvers\r\n- There have been regular interests in creating AI-based costmap layers for object detection and semantic segmentation, but none of these efforts have culmanated in a ready-to-merge PR with a tested capability. This would be a high value and ROSCon worthy talk subject\r\n- https://github.com/ros-navigation/navigation2/issues/4364 - the collision monitor currently uses single-measurements to decide if the robot could be soon in collision, its been requested that it use a buffer of data so that a single erroneous measurement doesn't trigger the system. This is a pretty straight-forward sounding task that would probably involve some clever architectural changes and modifications if you're interested in a jigsaw puzzle"
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> Ugh, I'm sorry to do this to you, but it looks like there are merge conflicts from #4812 which changed the use of `path` to the actual goal `pose` to fix a bug in MPPI using the transformed path's end goal as the global goal and shortcutting some critics.\r\n\r\nI've fixed the merge conflicts. Let's wait for the CI to run. The optimizer_benchmark was missing a change; it was not updated with the latest evalControl() API changes.\r\n\r\n> This was a pretty big undertaking - what's your feeling about working on MPPI some more or switching gears into another part of the codebase / new algorithms?\r\n\r\nI would like to contribute on other fronts. Playing with new control algorithms and improvising the costmap layer seems exciting ideas to me. Currently, I'm a little short on bandwidth but we can discuss/explore potential ideas for now."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@Ayush1285, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "> I would like to contribute on other fronts. Playing with new control algorithms and improvising the costmap layer seems exciting ideas to me. Currently, I'm a little short on bandwidth but we can discuss/explore potential ideas for now.\r\n\r\nUnderstood - want to chat a bit on the Nav2 Slack? By no means feel limited to those thoughts, the world's our oyster :laughing: "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "@Ayush1285 only small thing that would make a nice followup PR: We talked about compressing some of the rollout stuff a bit more cleanly as so (as a rough hand-written-untested template)\r\n\r\n```\r\n  float last_yaw = initial_yaw;\r\n  for(size_t i = 0; i != n_size; i++) {\r\n    float & curr_yaw = traj_yaws(i);\r\n    curr_yaw = last_yaw + wz(i) * settings_.model_dt;\r\n    last_yaw = curr_yaw;\r\n  }\r\n```\r\n\r\nPlease ping me in Slack / email and lets chat about next projects when you have some bandwidth -- I can't thank you enough for this great work. I know this took alot of time and effort and it is well worth it for the global impact this has"
    },
    {
        "author": {
            "login": "Ayush1285"
        },
        "body": "> @Ayush1285 only small thing that would make a nice followup PR: We talked about compressing some of the rollout stuff a bit more cleanly as so (as a rough hand-written-untested template)\r\n> \r\n> ```\r\n>   float last_yaw = initial_yaw;\r\n>   for(size_t i = 0; i != n_size; i++) {\r\n>     float & curr_yaw = traj_yaws(i);\r\n>     curr_yaw = last_yaw + wz(i) * settings_.model_dt;\r\n>     last_yaw = curr_yaw;\r\n>   }\r\n> ```\r\n\r\nYes, I'll fix it in a follow-up PR.\r\n\r\n> Please ping me in Slack / email and lets chat about next projects when you have some bandwidth -- I can't thank you enough for this great work. I know this took alot of time and effort and it is well worth it for the global impact this has\r\n\r\nI'll ping you on Slack.\r\n\r\n"
    },
    {
        "author": {
            "login": "YoungRicky7"
        },
        "body": "Will this change merge into branch humble?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "No, this cannot be backported. It is a complete ABI/API breakage "
    },
    {
        "data": {
            "repository": {
                "issue": null
            }
        },
        "errors": [
            {
                "type": "NOT_FOUND",
                "path": [
                    "repository",
                    "issue"
                ],
                "locations": [
                    {
                        "line": 4,
                        "column": 9
                    }
                ],
                "message": "Could not resolve to an Issue with the number of 4779."
            }
        ]
    }
]