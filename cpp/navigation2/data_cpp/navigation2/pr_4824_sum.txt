**Instructions for Changes in the PR:**

1. **Remove Map Buffer Clearing:**
   - Eliminate the step of clearing `map_buffer` immediately after running the `processMap` method. This will allow the restoration of the region that was cleared previously.

2. **Remove map_received_in_update_bounds_:**
   - Delete the `map_received_in_update_bounds_` as it seems unnecessary.

3. **Mutex Lock Adjustments:**
   - Retain the mutex lock inside the `processMap` method, since locking is now handled in sections using `processMap`.

4. **Split and Optimize setConvexPolygonCost:**
   - Split `setConvexPolygonCost` into three distinct methods:
     1. Obtain the cells belonging to a convex shape.
     2. Set the value for these cells to a fixed value, such as `FREE_SPACE`.
     3. Reset the values using a vector of originally stored values.
   - Consider performance improvements such as pre-reserving vector sizes to minimize reallocations.

5. **Workflow Reversion:**
   - Revert changes made to the node workflows that cause regressions. Adjust only the `updateCosts` implementation.
   
6. **Footprint Clearing in Master Grid:**
   - Maintain the footprint clearing on the master grid without bypassing user-defined policies like `updateWithXYZ()`. Ensure policies are respected to avoid losing sensor measurement information.

7. **Dynamic Parameter Check:**
   - When using `restore_cleared_map_region`, ensure it's only active if `footprint_clearing_enabled_` is true, especially during dynamic parameter updates.

8. **Add System Test Configuration:**
   - Set `restore_cleared_footprint` and adjust its default. Reflect changes in system test configurations at specified lines in `nav2_system_params.yaml`.

9. **Documentation Updates:**
   - Update the Costmap2D API documentation due to new methods added. Inform users about changes to the default behavior in the migration guide.

10. **Benchmark Performance:**
    - Continue optimizing the `setConvexPolygonCost` function for speed to balance the trade-off between code clarity and performance impact.

These changes aim to improve performance, maintain consistency with user settings, and enhance the documentation surrounding the behavior of the costmap layers.