[
    {
        "title": "Fix: Ensure `server_timeout` Respects Default Values Using `getInputPortOrBlackboard()`"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Basic Info\r\n\r\n| Info | Details |\r\n| ------ | ----------- |\r\n| **Ticket(s) this addresses** | #4618 |\r\n| **Primary OS tested on** | Ubuntu 22.04 |\r\n| **Robotic platform tested on** | Gazebo simulation, Turtlebot3 hardware |\r\n| **Does this PR contain AI generated software?** | No |\r\n\r\n---\r\n\r\n## Description of contribution in a few bullet points\r\n\r\n- Updated `bt_action_node`, `bt_cancel_action_node`, and `bt_service_node` to use `getInputPortOrBlackboard()` for initializing `server_timeout`.\r\n- Ensured that the `server_timeout` parameter now respects the default value from the blackboard if not explicitly set in the BT action node.\r\n- This change addresses the issue where the `default_server_timeout` was always overridden, leading to more consistent behavior and reducing configuration overhead.\r\n\r\n## Description of documentation updates required from your changes\r\n\r\n- No new parameters were added, so no updates to default configs are necessary.\r\n\r\n---\r\n\r\n## Future work that may be required in bullet points\r\n\r\n- Further testing on different robotic platforms to ensure compatibility.\r\n- Potential optimizations in the BT nodes to enhance performance.\r\n- Documentation updates in case of additional related changes in the future.\r\n\r\n---\r\n\r\n#### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->\r\n- [ ] Check that any new parameters added are updated in docs.nav2.org\r\n- [ ] Check that any significant change is added to the migration guide\r\n- [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide\r\n- [ ] Check that any new functions have Doxygen added\r\n- [ ] Check that any new features have test coverage\r\n- [ ] Check that any new plugins are added to the plugins page\r\n- [ ] If BT Node, Additionally: add to BT's XML index of nodes for Groot, BT package's readme table, and BT library lists\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@alanxuefei, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "mergify"
        },
        "body": "@alanxuefei, your PR has failed to build. Please check CI outputs and resolve issues.\nYou may need to rebase or pull in `main` due to API changes (or your contribution genuinely fails)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "@alanxuefei isn't this still true?\r\n\r\n> We'd have the change all the BT nodes not to have defaults in that case then so that getInput would return false when unset to use the global timeout.\r\n\r\n"
    },
    {
        "author": {
            "login": "alanxuefei"
        },
        "body": "> @alanxuefei isn't this still true?\r\n> \r\n> > We'd have the change all the BT nodes not to have defaults in that case then so that getInput would return false when unset to use the global timeout.\r\n\r\nYes, the statement is correct. \r\n \r\nIn the default behavior trees (e.g., [navigate_to_pose_w_replanning_goal_patience_and_recovery.xml](https://github.com/ros-navigation/navigation2/blob/main/nav2_bt_navigator/behavior_trees/navigate_to_pose_w_replanning_goal_patience_and_recovery.xml)), there is no `server_timeout` parameter.\r\n\r\nAfter second analysis, the original code actually works:\r\n```\r\n// Check ROS2 parameter.\r\nserver_timeout_ = config().blackboard->template get<std::chrono::milliseconds>(\"server_timeout\");\r\n// Check BT port (if the BT port is unset, server_timeout_ remains unchanged).    \r\ngetInput<std::chrono::milliseconds>(\"server_timeout\", server_timeout_); \r\n```\r\n\r\nHowever, the new code is more concise and efficient (inline):\r\n```\r\ntemplate<typename T> inline\r\nbool getInputPortOrBlackboard(\r\n  const BT::TreeNode & bt_node,\r\n  const BT::Blackboard & blackboard,\r\n  const std::string & param_name,\r\n  T & value)\r\n{\r\n  if (bt_node.getInput<T>(param_name, value)) {       //check BT port first\r\n    return true;\r\n  }\r\n  if (blackboard.get<T>(param_name, value)) {           // check ROS2 param\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n```\r\n\r\n \r\n "
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "So this doesn't change the behavior? I agree this is cleaner so happy to merge either way, but what sparked this PR / work if you weren't running into a problem (and do you still have a problem)?"
    },
    {
        "author": {
            "login": "alanxuefei"
        },
        "body": "> So this doesn't change the behavior? I agree this is cleaner so happy to merge either way, but what sparked this PR / work if you weren't running into a problem (and do you still have a problem)?\r\n\r\nWe mistakenly thought that once a BT port is declared in a BT node, it must also be included in the XML file. In fact, if the port is not defined in the XML file, `getInput` will return `false` without causing any system errors and remain `server_timeout` unchanged. For `server_timeout`, we can simply remove it from xml and it will use default value.\r\n"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "So we're good to merge this? I assume so, just wanting to verify there's nothing else you want to include here"
    },
    {
        "author": {
            "login": "alanxuefei"
        },
        "body": "Since it is a base function for each BT node, it's good to double-check its functionality. The tests have passed, and the logic has been verified. I believe it's ready to be merged."
    }
]