[
    {
        "title": "graceful_controller: implement iterative selection of control points"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Basic Info\r\n\r\n| Info | Please fill out this column |\r\n| ------ | ----------- |\r\n| Ticket(s) this addresses   | #4115 |\r\n| Primary OS tested on | Ubuntu|\r\n| Robotic platform tested on | UBR-1 |\r\n| Does this PR contain AI generated software? | No, only real intelligence was used |\r\n\r\n---\r\n\r\n## Description of contribution in a few bullet points\r\n\r\n * Iteratively selects a valid target pose to use with the control law. This is done by forward simulating the control law towards the target pose and rejecting the target pose if there is a collision detected.\r\n * Adds collision checking to the \"final_rotation\". If this fails, we will attempt to roll out further movement via the control law (this is especially important for non-circular robots!). With this in mind, the parameter `final_rotation` has been renamed to `prefer_final_rotation`.\r\n * Modifies how `final_rotation` is done a bit - this is closer to how the `graceful_controller` did it. When `prefer_final_rotation` is true, we ignore the rotation of the final pose in the path and drive straight towards (and then do an in-place rotation). Previously, this code was simply using `final_rotation` as \"do we latch and rotate\", which is only half the battle if you aren't using a kinematically aware planner.\r\n\r\n## Description of documentation updates required from your changes\r\n\r\n * Replaces `motion_target_dist` parameter with two new parameters: `min_lookahead` and `max_lookahead`.\r\n * Renames `final_rotation` to `prefer_final_rotation` (to match `graceful_controller` and also indicate that this doesn't actually ensure there is a final rotation, just that the controller will prefer to generate one if it is collision free)\r\n * Replace boolean `initial_rotation` and double `initial_rotation_min_angle` with `initial_rotation_tolerance` which is a better name for what this parameter does (and avoids needing two parameters to do one thing). This also involved a number of tests updates to ensure that `initial_rotation_tolerance` cannot conflict with `allow_backward`.\r\n * Adds parameter `v_angular_min_in_place` to make sure that  rotation commands actually work.\r\n * Fixed a test that was erroneously looking at `twist.angular.x`\r\n\r\n## Future work that may be required in bullet points\r\n\r\nThese will be done before this converts from DRAFT:\r\n\r\n - [x] This still needs to be tested on robot (I'm simply opening for visibility and to see where we are in terms of code coverage)\r\n - [x] ~~There is a TODO around returning cmd_vel when TF fails - this seems like the wrong thing to do, need to look at it closer~~ - updated this to throw, similar to no command found\r\n - [x] ~~Review parameter `max_robot_pose_search_dist` - seems to be a potentially VERY large number?~~ This is consistent with other controllers in nav2\r\n - [x] Port orientation filter (at least NavfnPlanner doesn't set orientations)\r\n \r\n#### For Maintainers:\r\n- [ ] Check that any new parameters added are updated in docs.nav2.org\r\n- [ ] Check that any significant change is added to the migration guide\r\n- [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide\r\n- [ ] Check that any new functions have Doxygen added\r\n- [ ] Check that any new features have test coverage\r\n- [ ] Check that any new plugins is added to the plugins page\r\n- [ ] If BT Node, Additionally: add to BT's XML index of nodes for groot, BT package's readme table, and BT library lists\r\n"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I'll admit, this was reasonably hard for me to review with the diffs and reordering of the main code, so I'm not 100% confident in not having missed something on an initial look. I'll probably need another complete read through after changes to sanity check.\r\n\r\n@ajtudela since this touches the docking code and I know you're thinking about these areas - want to review / test? \r\n\r\n"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ">  I found that the defaults in the controller right now are pretty aggressive on heading correction (which causes both wobbling, and divergence from the path - which appears to be also causing lots of replanning for you).\r\n\r\n> but upon further review, it looks like that isn't the case (the docking server has it's own parameter set). @SteveMacenski thoughts? Should we update the defaults here?\r\n\r\n> I think I might have actually been the one who chose those higher values for the docking server initially - that is an application where you want the robot to come at the charge dock as straight-on as possible, so the values make sense for docking. I think they are too high for general navigation controlling (but it wasn't something I caught back when we originally added the controller here)\r\n\r\nWe can change those, definitely! I want all defaults to have a really nice out of the box experience to showcase algorithm's values without the need of heavy tuning for 'most' applications. "
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "A few other things noted when porting to UBR-1:\r\n * need to add a \"min_in_place_vel_theta\" equivalent - most robots can't generate arbitrarily low angular rotations\r\n * Got my answer - yeah, not all planners output headings - 100% incompatible with the NavfnPlanner - I'm going to port over the orientation filter stuff as well then.\r\n\r\n"
    },
    {
        "author": {
            "login": "codecov"
        },
        "body": "## [Codecov](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) Report\nAttention: Patch coverage is `95.28302%` with `5 lines` in your changes missing coverage. Please review.\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Patch % | Lines |\n|---|---|---|\n| [...v2\\_graceful\\_controller/src/graceful\\_controller.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&filepath=nav2_graceful_controller%2Fsrc%2Fgraceful_controller.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL3NyYy9ncmFjZWZ1bF9jb250cm9sbGVyLmNwcA==) | 93.24% | [5 Missing :warning: ](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) |\n\n| [Files with missing lines](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation) | Coverage \u0394 | |\n|---|---|---|\n| [...e/nav2\\_graceful\\_controller/graceful\\_controller.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&filepath=nav2_graceful_controller%2Finclude%2Fnav2_graceful_controller%2Fgraceful_controller.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL2luY2x1ZGUvbmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL2dyYWNlZnVsX2NvbnRyb2xsZXIuaHBw) | `100.00% <\u00f8> (\u00f8)` | |\n| [...ude/nav2\\_graceful\\_controller/parameter\\_handler.hpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&filepath=nav2_graceful_controller%2Finclude%2Fnav2_graceful_controller%2Fparameter_handler.hpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL2luY2x1ZGUvbmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL3BhcmFtZXRlcl9oYW5kbGVyLmhwcA==) | `100.00% <\u00f8> (\u00f8)` | |\n| [nav2\\_graceful\\_controller/src/parameter\\_handler.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&filepath=nav2_graceful_controller%2Fsrc%2Fparameter_handler.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL3NyYy9wYXJhbWV0ZXJfaGFuZGxlci5jcHA=) | `100.00% <100.00%> (\u00f8)` | |\n| [...v2\\_graceful\\_controller/src/graceful\\_controller.cpp](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795?src=pr&el=tree&filepath=nav2_graceful_controller%2Fsrc%2Fgraceful_controller.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation#diff-bmF2Ml9ncmFjZWZ1bF9jb250cm9sbGVyL3NyYy9ncmFjZWZ1bF9jb250cm9sbGVyLmNwcA==) | `89.69% <93.24%> (-0.82%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/ros-navigation/navigation2/pull/4795/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=ros-navigation)\n"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "This was the updated config for testing this on the UBR-1 (moving from the version of graceful controller in my repo): https://github.com/mikeferguson/ubr_reloaded/commit/a24ad85822dcfef24bd87d5fb1e9ae11351f779a"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "Note for posterity: I did also test \"allow_backward\" - and it still works "
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "Notes on things that are still different versus my controller (that maybe we'd want to do in the future):\r\n\r\n * In the control law - the `slowdown_radius` is a poor approximation for actual deceleration limits. Really, you want to cap the velocity based on knowing you can slow to a stop by the time you arrive at the pose.\r\n * The collision checking in the iterative loop assumes you are starting at max speed (not at your current speed). This is probably not that big of a deal, but if you're going very slowly in a tight area, the controller might wobble a bit more.\r\n * `add_orientations` just adds the orientations but doesn't do any more sophisticated filtering - I'm not actually convinced that additional filtering is really needed though (and, it always had a few odd edge cases - if we were to implement something here, it should really be a bit more sophisticated than what was in my controller)."
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "I'm curious about your thoughts from the ticket brainstorming https://github.com/ros-navigation/navigation2/issues/4115#issuecomment-1973569942 (or is the wobbling here more or less gone with this method recomputing at the full rate?) "
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "> I'm curious about your thoughts from the ticket brainstorming [#4115 (comment)](https://github.com/ros-navigation/navigation2/issues/4115#issuecomment-1973569942) (or is the wobbling here more or less gone with this method recomputing at the full rate?)\r\n\r\nI expect most of the wobbling will be gone since our motion_target can be so much farther away in most cases"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "> @ajtudela since this touches the docking code and I know you're thinking about these areas - want to review / test?\r\n\r\nI don't think this affects the docking code at all, because that is only using the SmoothControlLaw - which is unmodified"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "@SteveMacenski all review comments have been addressed - this is ready for another look when you get a chance"
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": "> I'll admit, this was reasonably hard for me to review with the diffs and reordering of the main code, so I'm not 100% confident in not having missed something on an initial look. I'll probably need another complete read through after changes to sanity check.\r\n> \r\n> @ajtudela since this touches the docking code and I know you're thinking about these areas - want to review / test?\r\n\r\nOf course I'll test it on our robots on Monday morning. \r\n\r\nThis part doesn't change the controller of the docking but this is exactly the behaviour I need for the new following server. I'll have to figure out how to integrate this part into the server reusing most of the code.\r\n"
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": "I tested the improvements with the UBR-1 this morning. Although I don't really like the new order of the \"steps\" (rotation before movement, control, final rotation, ...) because it's harder (for me) to read, I have to admit that these changes take care of the wobbling much better than before.\r\n\r\nTomorrow I'll test all the combinations for the new parameters to make sure I haven't missed anything.\r\n\r\nI recorded a little video if you want to see the changes in motion:\r\n\r\nhttps://github.com/user-attachments/assets/4d2b0396-ac0a-4812-b87e-ae9281d57f8c\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "> I have to admit that these changes take care of the wobbling much better than before.\r\n\r\nWhat are you running for the k_phi/k_delta parameters with the controller? I found that the defaults in the controller right now are pretty aggressive on heading correction (which causes both wobbling, and divergence from the path - which appears to be also causing lots of replanning for you).\r\n\r\nI went with lower values that were actually the defaults in https://github.com/mikeferguson/graceful_controller:\r\n\r\n```yaml\r\nGracefulController:\r\n      plugin: \"nav2_graceful_controller::GracefulController\"\r\n      v_linear_min: 0.1\r\n      v_linear_max: 1.0\r\n      v_angular_max: 2.8\r\n      v_angular_min_in_place: 0.6\r\n      max_lookahead: 1.25\r\n      initial_rotation: true\r\n      initial_rotation_tolerance: 0.25\r\n      prefer_final_rotation: true\r\n      # The defaults aren't as good as this (more wiggling)\r\n      k_phi: 2.0\r\n      k_delta: 1.0\r\n      beta: 0.4\r\n      lambda: 2.0\r\n      # This isn't quite comparable to using actual acceleration limits\r\n      # (but works well in practice)\r\n      slowdown_radius: 0.75\r\n```\r\n\r\nI didn't update these defaults - at first thinking it might impact some people's docking servers - but upon further review, it looks like that isn't the case (the docking server has it's own parameter set). @SteveMacenski thoughts? Should we update the defaults here?"
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": "Yes, they might be a bit high. I used these:\r\n\r\n```yaml\r\n    Graceful:\r\n      plugin: nav2_graceful_controller::GracefulController\r\n      transform_tolerance: 0.5\r\n      motion_target_dist: 1.2\r\n      initial_rotation: true\r\n      initial_rotation_min_angle: 0.75\r\n      final_rotation: true\r\n      allow_backward: false\r\n      k_phi: 3.0\r\n      k_delta: 2.0\r\n      beta: 0.4\r\n      lambda: 2.0\r\n      v_linear_min: 0.1\r\n      v_linear_max: 1.0\r\n      v_angular_max: 5.0\r\n      slowdown_radius: 0.5\r\n```\r\n\r\nBut I agree with you. I had to lower k_phi/k_delta for the docking server. I'd try with these settings tomorrow."
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "> I had to lower k_phi/k_delta for the docking server\r\n\r\nI think I might have actually been the one who chose those higher values for the docking server initially - that is an application where you want the robot to come at the charge dock as straight-on as possible, so the values make sense for docking. I think they are too high for general navigation controlling (but it wasn't something I caught back when we originally added the controller here)"
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": "I made a new video this morning. Lowered k_phi/k_delta reduces the wobble more.\r\n\r\nhttps://github.com/user-attachments/assets/62a3bcb4-abba-43dc-a462-de701e568615\r\n\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "@SteveMacenski bumping this - wasn't sure if you maybe missed my comment that this was ready for another review"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "@ajtudela any thoughts here? This is your work too, so I want to make sure you have a chance to review and give thoughts!"
    },
    {
        "author": {
            "login": "ajtudela"
        },
        "body": "I tested heavily this week and it works pretty well, even in narrow corridors.\r\n\r\nI think there's missing coverage in L212-216 (or I'm ready Codecov wrong).\r\n\r\nOtherwise, LGTM."
    },
    {
        "author": {
            "login": "mikeferguson"
        },
        "body": "@SteveMacenski what else do we need to get this merged?"
    },
    {
        "author": {
            "login": "SteveMacenski"
        },
        "body": "@mikeferguson a couple of small updates in the docs still needed, but code is good -- thanks for the revisions and help! https://github.com/ros-navigation/docs.nav2.org/pull/624"
    }
]