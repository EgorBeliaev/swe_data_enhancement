**Issue Description**:
The PR addresses a problem with the `simple_smoother` plugin in the smoother server where a `FailedToSmoothPath` exception is thrown when the robot approaches the end of a path and the last segment is too short to process, resulting in `segments_smoothed` being zero.

**Proposed Changes**:

1. **smoothImpl Function**:
   - If a collision is detected, set `path = last_path`, update orientations, and return true for mid-execution (where `last_path` is collision-free). If at the start and the path is already in collision, let the exception handle.
   - On reaching `max_its_` iterations, log a warning and return true (allowing for a semi-smoothed path), but continue throwing exceptions for maximum duration failures.

2. **smooth Function**:
   - Alter the return type of `smoothImpl` to `void` as it always returns true or throws.
   - Remove `segments_smoothed` and related success logic since `smoothImpl` will manage success or exception.
   - Eliminate throwing `FailedToSmoothPath`, as its necessity is questioned and appears improperly implemented.

3. **Additional**:
   - A test case should be added for the end-of-path scenario to ensure the initial issue (no exception thrown on an excessively short final segment) does not recur.

These changes aim to simplify error handling and allow for minor successes in smoothing operations rather than stringent failures.