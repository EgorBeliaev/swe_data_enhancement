[
    {
        "title": "Access the Windows clipboard using newer APIs"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "The way of monitoring the clipboard on Windows, using clipboard viewer windows, has been kept on modern Windows for backwards compatibility. It involves inserting a window in the clipboard viewer chain and relying on every program passing the message to the next, which could result in a program failing or stopping processing messages to disconnect the rest of the chain from receiving clipboard messages.\r\n\r\nThis was causing Synergy, and now Deskflow, to stop processing clipboard messages. The solution was to restart the client or copy something to the clipboard from another machine (I used Linux) which would trigger a clipboard re-opening. For me this happened 3 or 4 times per day.\r\n\r\nWith this PR I have been copying and pasting between Windows and Linux for 3 days without a single clipboard hang."
    },
    {
        "author": {
            "login": "sithlord48"
        },
        "body": "Looks good on the surface I am unable to test this however. @nbolton  can you please test this"
    },
    {
        "author": {
            "login": "nbolton"
        },
        "body": "LGTM"
    },
    {
        "author": {
            "login": "sithlord48"
        },
        "body": "It's nice to see someone working on some windows platform updates !\r\n\r\nTwo small nits about this \r\n  1. you need to run [clang-format](https://github.com/deskflow/deskflow/wiki/Clang%E2%80%90Format-Tips-%26-Tricks) on your commits\r\n  2. your commit messages are missing words like `fix` and `feat` explained in our [hacking guide](https://github.com/deskflow/deskflow/wiki/Hacking-Guide). As an example I would use\r\n    - fix: windows, don't encode empty data to clipboard\r\n    - feat: windows use clipboard listener\r\n"
    },
    {
        "author": {
            "login": "pedronavf"
        },
        "body": "Got it. I read that pages and I misinterpreted \"CI enforced\"; I took it to mean that clang-format would run as a pre-commit hook, but I still tried to maintain the same code style.\r\n\r\nAh! Thanks for the link to the Hacking Guide. I actually read that page a couple of days ago and found it very cool how different tags were created, but for the life of me I couldn't find it today when I created the PR! I ended up thinking that I probably had seen those instructions on Input Leap's repo \ud83e\udd26 "
    },
    {
        "author": {
            "login": "pedronavf"
        },
        "body": "Should I create a bug first and then mention it in my commit message?"
    },
    {
        "author": {
            "login": "sithlord48"
        },
        "body": "> Should I create a bug first and then mention it in my commit message?\r\n\r\nNo you do not have to make an issue."
    },
    {
        "author": {
            "login": "nbolton"
        },
        "body": "Thanks for the PR, testing this now. Will report my findings in 2-3 days."
    }
]