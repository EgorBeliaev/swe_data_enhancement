### Instructions for Changes

1. **Transition to Grand Central Dispatch**: Refactor the `OSXEventQueueBuffer` class from using Carbon-based APIs (e.g., EventRef, CreateEvent, PostEventToQueue) to a modern Grand Central Dispatch (GCD)-based approach.
   
2. **Remove Carbon Dependencies**: Eliminate all references and dependencies to Carbon APIs. Specifically, remove `EventQueueRef m_carbonEventQueue;` member.

3. **Implement Thread-Safe Event Queue**: Replace the Carbon event queue with a thread-safe `std::queue<std::uint32_t>` guarded by `std::mutex` and `std::condition_variable`.

4. **Direct Main Dispatch Queue Usage**: In the `addEvent` method, use `dispatch_get_main_queue()` directly. Remove any stored dispatch queue member variables.

5. **Consistent Event Handling**: Ensure that the `addEvent` method only adds 'Syne' (User) events, consistent with original hard-coded behavior. Remove the switch statement for non-'Syne' events since it is unnecessary.

6. **Debug Logging Conventions**: 
   - Use `DEBUG2` for high-frequency debug messages such as in the events system.
   - Omit function names from log strings to maintain log consistency over time.
   - Use lowercase for log lines instead of sentence case.

7. **Copyright Update**: 
   - If applicable, add your name to the copyright section when making non-trivial code changes.

8. **CI Compliance**: Address `clang-format` lint errors reported in continuous integration.

### Issue Addressed by the PR

- The PR fixes a crashing issue observed with Input Leap on macOS 15.2, where logs showed crashes in `PostEventToQueue`, which is discouraged in modern macOS. This refactoring eliminates those deprecated and unstable dependencies, improving the software's stability and compatibility.