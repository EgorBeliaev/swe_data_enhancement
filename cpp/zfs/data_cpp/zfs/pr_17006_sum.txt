### Pull Request Instructions

- **Update `zfs_uio_get_dio_pages_alloc()`**: Modify the check to call `zfs_uio_pin_user_pages()` only if the `iov_iter` type is `ITER_IOVEC` or `ITER_UBUF`.
  
- **Introduce a `boolean_t` variable**: Add a variable named `pinned` within `zfs_uio_dio_t` to track the usage of `pin_user_pages_unlocked()` for Direct I/O pages.

- **Reintroduce config checks**: Reinstate checks for `iov_iter_get_pages2()` for compatibility with kernels version 6.0 and above, ensuring method availability when invoking `zfs_uio_get_dio_pages_iov_iter()`.

- **Add ZFS Test Suite**: Implement a ZTS test case called `dio_loopback_dev` which validates the handling of `ITER_BVEC` types, as initially reported in issue #16956.

- **Testing Verification**: Ensure the changes are tested across different kernel environments:
  1. **Kernel Version**: `4.18.0-240.15.1.el8_3.x86_64` - No `pin_user_pages_unlocked()`, no `iter_is_ubuf()`.
  2. **Kernel Version**: `4.18.0-553.6.1.el8.x86_64` - `pin_user_pages_unlocked()` available, `iter_is_ubuf()` not available.
  3. **Kernel Version**: `6.5.12-100.fc37.x86_64` - Both `pin_user_pages_unlocked()` and `iter_is_ubuf()` available.

- **Documentation Compliance**: Although documentation updates were considered, ensure the code changes align with OpenZFS coding standards and provide appropriate documentation if required.

- **Commit Standards & Validation**: Verify all commit messages adhere to the required format, including the `Signed-off-by` tag. Ensure relevant tests are added or updated to reflect these changes.