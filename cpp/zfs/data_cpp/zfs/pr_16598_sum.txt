**Title:** Always validate checksums for Direct I/O reads

**Summary of Changes:**

1. **Checksum Propagation and Reporting:**
   - Ensure that checksum verification failures for Direct I/O reads are propagated up to the top-level VDEV.
   - Report these errors in `zpool status -d` under the DIO column.

2. **Checksum Failure Handling:**
   - Treat Direct I/O reads with checksum verification failures as suspicious and reissue the I/O request through the ARC to prevent buffer manipulation after issuance.
   - Document two zevents for checksum verify errors: `dio_verify_wr` for writes and `dio_verify_rd` for reads.

3. **Code Adjustments:**
   - Move the declaration of `nbytes` in `zfs_read()` outside the while loop to fix a compilation issue in FreeBSD.
   - Update FreeBSD ABD code to handle `ABD_FLAG_FROM_PAGES` similar to Linux.

4. **Test Adjustments:**
   - Update `manipulate_user_buffer.c` to simulate buffer manipulation during Direct I/O reads and add a new test case `dio_read_verify` for stress-testing.

5. **Mirror and RAIDZ/DRAID Handling:**
   - Modify `vdev_mirror_io_done()` to return immediately on checksum failures to prevent issuing bad data.
   - Use `rc_allow_repair` to avoid self-healing attempts on Direct I/O read checksum errors in RAIDZ and dRAID VDEVs.

6. **Additional Integration:**
   - Enhance JSON output for DIO errors by updating `zpool_main.c`.

**Testing Conducted:**
- New test case added, tested on Linux kernel 6.5.12 and FreeBSD version 13.3 -RELEASE and 14-CURRENT with successful results.
- ZTS direct tests validated on specified systems.

These changes address the problem where buffers manipulated during Direct I/O reads could cause false positive checksum failures and ensure consistent error handling across VDEV configurations.