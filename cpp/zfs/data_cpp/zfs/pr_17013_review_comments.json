[
    {
        "title": "Avoid unnecessary transform operations during prefetch"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This change will prevent prefetch to perform unnecessary transform operations on ARC buffer.\r\n\r\n\r\n<!--- Please fill out the following template, which will help other contributors review your Pull Request. -->\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n<!---\r\nDocumentation on ZFS Buildbot options can be found at\r\nhttps://openzfs.github.io/openzfs-docs/Developer%20Resources/Buildbot%20Options.html\r\n-->\r\n\r\n### Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\n\r\nIn current ZFS, the read performance with prefetch enabled was getting affected because of the extra and unnecessary operations happening on ARC buffer. While the flag to avoid the ARC buffer was set in prefetch path, it was not getting assigned when actual zio is getting data from Disk to ARC.\r\nThis change will reduce the CPU utilization and boost the performance.\r\nCloses https://github.com/openzfs/zfs/issues/17008\r\n\r\n### Description\r\n<!--- Describe your changes in detail -->\r\nThis change is mainly focused on utilizing the existing flag to avoid the unnecessary operations (buffer allocation and transform operations) in prefetch.\r\n\r\n### How Has This Been Tested?\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n<!--- If your change is a performance enhancement, please provide benchmarks here. -->\r\n<!--- Please think about using the draft PR feature if appropriate -->\r\nThis change was tested on following system:\r\nType | Version/Name\r\n-- | --\r\nDistribution Name | Ubuntu\r\nDistribution Version | 23.10\r\nKernel Version | 6.5.0-44-generic\r\nArchitecture | Intel(R) Xeon(R) Gold 6342 CPU\r\nOpenZFS Version | 2.2.6\r\n\r\nParameter | Info\r\n-- | --\r\nBenchmarking Tool | IOR\r\nZpool Drives | 6 NVME 1 TB Each\r\nZpool Configuration | RAID0\r\nZpool Recordsize | 128k\r\nZFS Primarycache | all\r\nZFS compression | on (lz4)\r\nZFS encryption | off\r\nZFS checksum | on\r\nZFS zfs_compressed_arc_enabled | 1\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Performance enhancement (non-breaking change which improves efficiency)\r\n- [ ] Code cleanup (non-breaking change which makes code smaller or more readable)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Library ABI change (libzfs, libzfs\\_core, libnvpair, libuutil and libzfsbootenv)\r\n- [ ] Documentation (a change to man pages or other documentation)\r\n\r\n### Checklist:\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the OpenZFS [code style requirements](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md#coding-conventions).\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the [**contributing** document](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md).\r\n- [ ] I have added [tests](https://github.com/openzfs/zfs/tree/master/tests) to cover my changes.\r\n- [ ] I have run the ZFS Test Suite with this change applied.\r\n- [x] All commit messages are properly formatted and contain [`Signed-off-by`](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md#signed-off-by).\r\n"
    },
    {
        "author": {
            "login": "amotin"
        },
        "body": ""
    },
    {
        "author": {
            "login": "amotin"
        },
        "body": "@JkshirsagarMaxlinear I took a liberty to edit the PR title.  Also I suspect that too long first line of the commit message may not pass the style check.  It is recommended to have the first line to be shorter to be more meaningful in one line commit lists.  Also the commit message is somewhat confusing, since this change is not specific to compression.  It in general saves on buffer allocation and filling, that cost something even if the block is not compressed.  Please amend and force-push to make it nice.  Please read the documents referenced in the PR checklist if not yet."
    },
    {
        "author": {
            "login": "JkshirsagarMaxlinear"
        },
        "body": "@amotin Thank you. I have updated the commit and pull request. "
    },
    {
        "author": {
            "login": "JkshirsagarMaxlinear"
        },
        "body": "Thank you @amotin. It says that I am not authorized to merge the pull request."
    },
    {
        "author": {
            "login": "amotin"
        },
        "body": "@JkshirsagarMaxlinear Only few people can merge here. I'll do it after CI tests pass."
    },
    {
        "author": {
            "login": "amotin"
        },
        "body": "@JkshirsagarMaxlinear But I see you added here unneeded merge commit. Please clean it up with rebase. There should be only one commit."
    },
    {
        "author": {
            "login": "JkshirsagarMaxlinear"
        },
        "body": "Hi @amotin \r\nI cleaned the commit and PR. Can you please merge if everything seems fine."
    }
]