**Instruction for Changes:**

1. **Update vdev_probe on Disk Fault**:
   - Modify the `vdev_probe()` logic to check if a faulted disk is required for the poolâ€™s redundancy. If necessary, suspend the pool to prevent further IO operations until the required disks are returned.

2. **Testing Addition**:
   - Implement a new test to ensure that probe errors from four disks on a raidz3 with a replacing vdev will trigger suspension of the pool. Confirm this behavior by comparing pre-change and post-change pool statuses.

3. **CI and Error Handling Improvements**:
   - Address errors in the `fault/suspend_on_probe_errors` test which may arise due to incomplete resilver operations before scrub execution. Utilize `zpool wait -t resilver` to enforce completion of resilvering before proceeding with a scrub.
   - Investigate and resolve persistent file corruption errors that are resolved upon a second scrub. Confirm robustness of error resolution in the test scenarios.

4. **Ensure compliance with OpenZFS code style**:
   - Ensure that the new code adheres to the OpenZFS code style requirements, with properly formatted commit messages containing the `Signed-off-by` tag.

5. **Rebase Code**:
   - Rebase the feature branch with the latest master to incorporate the most recent changes and ensure compatibility.

**Issue Description**:
The PR addresses a bug where a pool remains operational and accepting IO even when it should not, due to an insufficient contribution of a replacing vdev to redundancy. This occurs specifically in raidz3 pools with missing disks, leading to potential data integrity risks which the change seeks to mitigate by suspending the pool in critical scenarios.