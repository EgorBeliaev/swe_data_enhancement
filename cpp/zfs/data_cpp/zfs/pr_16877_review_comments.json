[
    {
        "title": "Skip iterating over snapshots for share properties"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "\r\n\r\n<!--- Please fill out the following template, which will help other contributors review your Pull Request. -->\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n<!---\r\nDocumentation on ZFS Buildbot options can be found at\r\nhttps://openzfs.github.io/openzfs-docs/Developer%20Resources/Buildbot%20Options.html\r\n-->\r\n\r\n### Motivation and Context\r\nSetting `sharenfs` and `sharesmb` properties on a dataset can become costly if there are large number of snapshots, since setting the share properties iterates over all snapshots present for a dataset. If it is the root dataset for which we are trying to set the share property, snapshots for all child datasets and their children will also be iterated.\r\n\r\n### Description\r\nThis commit skips iterating over snapshots for share properties, instead iterate over all child dataset and their children for share properties.\r\n\r\nThere is no need to iterate over snapshots for share properties because we do not allow share properties or any other property, to be set on a snapshot itself execpt for user properties.\r\n\r\n\r\n### How Has This Been Tested?\r\nAccessed the snapshots over the shares created by setting the share properties for respective datasets. No difference in behavior found while accessing snapshots of dataset and child datasets shared by setting the share properties on dataset.\r\n\r\n### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Performance enhancement (non-breaking change which improves efficiency)\r\n- [ ] Code cleanup (non-breaking change which makes code smaller or more readable)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Library ABI change (libzfs, libzfs\\_core, libnvpair, libuutil and libzfsbootenv)\r\n- [ ] Documentation (a change to man pages or other documentation)\r\n\r\n### Checklist:\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the OpenZFS [code style requirements](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md#coding-conventions).\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the [**contributing** document](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md).\r\n- [ ] I have added [tests](https://github.com/openzfs/zfs/tree/master/tests) to cover my changes.\r\n- [x] I have run the ZFS Test Suite with this change applied.\r\n- [x] All commit messages are properly formatted and contain [`Signed-off-by`](https://github.com/openzfs/zfs/blob/master/.github/CONTRIBUTING.md#signed-off-by).\r\n"
    },
    {
        "author": {
            "login": "amotin"
        },
        "body": ""
    },
    {
        "author": {
            "login": "behlendorf"
        },
        "body": ""
    }
]