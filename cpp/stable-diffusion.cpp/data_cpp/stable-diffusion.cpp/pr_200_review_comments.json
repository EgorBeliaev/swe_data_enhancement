[
    {
        "title": "Addressed a double free bug when running on CPU introduced in the last commit as well as an issue loading SDXL LoRAs"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Fixed a double free issue when running multiple backends on the CPU, eg: CLIP and the primary backend, as this would result in the *_backend pointers both pointing to the same thing resulting in a segfault when calling the StableDiffusionGGML destructor."
    },
    {
        "author": {
            "login": "az13js"
        },
        "body": "I have also encountered this issue. When using it on Windows 11, I encountered a \"Segmentation fault\". My fix:\r\n\r\n```diff\r\n$ git diff\r\ndiff --git a/stable-diffusion.cpp b/stable-diffusion.cpp\r\nindex 4d622dd..1fa115e 100644\r\n--- a/stable-diffusion.cpp\r\n+++ b/stable-diffusion.cpp\r\n@@ -123,9 +123,13 @@ public:\r\n\r\n     ~StableDiffusionGGML() {\r\n         ggml_backend_free(backend);\r\n-        ggml_backend_free(clip_backend);\r\n+        if (clip_backend != backend) {\r\n+            ggml_backend_free(clip_backend);\r\n+        }\r\n         ggml_backend_free(control_net_backend);\r\n-        ggml_backend_free(vae_backend);\r\n+        if (vae_backend != backend) {\r\n+            ggml_backend_free(vae_backend);\r\n+        }\r\n     }\r\n```"
    },
    {
        "author": {
            "login": "leejet"
        },
        "body": "Great! Thank you for fixing this problem."
    }
]