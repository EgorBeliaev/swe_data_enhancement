[
    {
        "title": "avx512 registers & fixes for getting & setting x64 context"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This adds getting & setting thread context for avx-512 registers for 64-bit windows target.\r\n\r\nIt also fixes wrong code for getting xmm & ymm registers - the 128-bit halves were swapped. And `GetXStateFeaturesMask` was used incorrectly - it should be used after `GetThreadContext`, not before.\r\n\r\nTheoretically 32-bit target also should support ymm & zmm registers, but I did not bother updating code for 32-bit codepaths.\r\n\r\nI'm not completely sure about changes to `codeview.h` file - please check if that's fine. I'm not sure if it needs also zmm register enum values there in some form.\r\n\r\nAnd I hope it's ok to change `rdi_format.h` file with new zmm register enums - they are 32 zmm's up from 16 ymm's.\r\n\r\nHere's how the attached test program is running on avx-512 capable CPU:\r\n[a.c.txt](https://github.com/user-attachments/files/16318736/a.c.txt)\r\nIt is compiled with `clang-cl.exe -Zi a.c`\r\n\r\n![image](https://github.com/user-attachments/assets/4ab229e4-9f6f-45e2-ac34-f8907fec6ba6)\r\n\r\nAll the zmmN & kN registers are now visible in `Registers` view too. I would say it probably soon will require some improvements - there are too many of registers. It would be nice if they could be grouped in SSE, AVX, AVX-512 & similar categories. Ideally it also should not show the ones that are not supported on cpu in the target.\r\n\r\nThere is one disadvantage of doing `SetThreadContext` this way. It always sets all AVX and AVX-512 registers, even if user did not change any of them. That means context switches are now a bit more expensive, because OS needs to switch all the ymm and zmm registers. Usually OS does not do that, until first time you modify ymm or zmm register in a thread. Ideally debugger would store some mask in `REGS_RegBlockX64` about which ymm/zmm register groups are modified and set only those.\r\n"
    }
]