[
    {
        "title": "Fixes bad resource usage in rendering"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "D3D11 is quite strict about how resources are supposed to be used - read/write & CPU access. This changes Tex2DKind and BufferKind into one uniform ResourceKind (because it's the same thing really). And it is more strict about usage:\r\n1) `Static` is not allowed to update, resource is immutable, data provided at creation\r\n2) `Dynamic` allows CPU to update GPU resource occasionally via UpdateSubresource\r\n3) `Stream` allows CPU to update GPU resource often via Map/Unmap (currently unused)\r\n\r\nThis should fix #148. And maybe #215."
    },
    {
        "author": {
            "login": "ryanfleury"
        },
        "body": "Thanks Martins!"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Direct3D exception on launch - No MapOnDefaultBuffers support",
                    "body": "When launching the debugger I get the following exception:\r\n```\r\n[Content]\r\nA fatal exception (code 0xc0000005) occurred. The process is terminating.\r\n\r\nCall stack:\r\n1. [0x7ffe78ec9c10] d3d11\r\n2. [0x7ff77db78f34] r_fill_tex2d_region +452, render_d3d11.cpp line 687\r\n3. [0x7ff77db8447a] f_push_run_from_string +3130, font_cache.c line 744\r\n4. [0x7ff77dc1dcd6] df_window_open +1366, df_gfx.c line 972\r\n5. [0x7ff77dc71272] df_gfx_begin_frame +9106, df_gfx.c line 11578\r\n6. [0x7ff77dc834ee] update_and_render +3646, raddbg.c line 237\r\n7. [0x7ff77dc9aed7] entry_point +5671, raddbg.c line 577\r\n8. [0x7ff77dac245d] WinMain +877, raddbg_main.cpp line 348\r\n9. [0x7ff77dc9cb1e] __scrt_common_main_seh +262, exe_common.inl line 288\r\n10. [0x7ffe7f817344] KERNEL32\r\n11. [0x7ffe7fbc26b1] ntdll\r\n\r\nVersion: 0.9.8 [c757388-dirty]\r\n```\r\n\r\n**I want to emphasize that this is happening on a fairly old machine, that I do not rely on to do serious work with at all**\r\nHowever it may still be desirable to handle the error more gracefully.\r\n\r\nGraphics card/D3d information:\r\n```\r\n Card name: Intel(R) HD Graphics 4000\r\n Display Color Space: DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709\r\n         Output Type: Internal\r\nMonitor Capabilities: HDR Not Supported\r\nDisplay Pixel Format: DISPLAYCONFIG_PIXELFORMAT_32BPP\r\n      Advanced Color: Not Supported\r\n         Driver Name: igdumdim64.dll,igd10iumd64.dll,igd10iumd64.dll\r\n Driver File Version: 10.18.0010.4252 (English)\r\n      Driver Version: 10.18.10.4252\r\n         DDI Version: 11.2\r\n      Feature Levels: 11_0,10_1,10_0,9_3,9_2,9_1\r\n        Driver Model: WDDM 1.3\r\n Hardware Scheduling: Supported:False Enabled:False \r\n    Driver Date/Size: 10.07.2015 01:00:00, 11053040 bytes\r\n        D3D9 Overlay: Supported\r\n             DXVA-HD: Supported\r\n        DDraw Status: Enabled\r\n          D3D Status: Enabled\r\n          AGP Status: Enabled\r\n       MPO MaxPlanes: 1\r\n            MPO Caps: Not Supported\r\n         MPO Stretch: Not Supported\r\n     MPO Media Hints: Not Supported\r\n         MPO Formats: Not Supported\r\n    PanelFitter Caps: Not Supported\r\n PanelFitter Stretch: Not Supported\r\n```\r\n\r\nI already looked into the issue and it seems to originate in the `r_tex2d_alloc` function when calling `CreateTexture2D`.\r\n(Called from \u00b4f_push_run_from_string\u00b4 in `font_cache.c`)\r\nDue to the d3d version not supporting [MapOnDefaultBuffers](https://learn.microsoft.com/en-us/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1) and the CPUAccessFlags bits being set to READ and WRITE, the call fails.\r\nThis leads to the ID3D11Texture2D pointer to stay NULL which leads to the exception later on.\r\n\r\nI did not investigate any further but if Mapping of GPU buffers is relied on somewhere it is probably not easy to fix.\r\nAs previously mentioned, the maschine/drivers are fairly old so I do not necessarily expect this to be fixed.\r\nHowever it may still be of interest...",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "alektron"
                                },
                                "body": "I investigated a little further and it seems that Mapping buffers IS in fact supported. Just not if the usage is set to `D3D11_USAGE_DEFAULT`. When usage is set to `D3D11_USAGE_DYNAMIC`, the buffer creation is successfull.\r\n(This aligns with what the documentation says about `MapOnDefaultBuffers`, hence the name).\r\nThis leads to the question if Map/Unmap now actually works, however that does not even matter because:\r\n\r\nThe texture in question is later on actually NOT written via Map/Unmap but via `UpdateSubresource`. Now `UpdateSubresource` does require the usage to be set to `D3D11_USAGE_DEFAULT` again and therefore now fails.\r\n\r\nBy setting the usage for this specific texture to `D3D11_USAGE_DEFAULT` and not setting and accessBits, it seems to work fine.\r\nAs far as I can tell all the Map/Unmap calls in the code are not getting called on texture buffers anyways, so maybe this would be an option.\r\n\r\nHow this whole thing would tie into the API and the usage of the R_Tex2DKind_Static/R_Tex2DKind_Dynamic enum, I am not quite sure.\r\nThere seems to be some inconsistencies here anyways. R_Tex2DKind_Static creates the texture with `D3D11_USAGE_DYNAMIC` and `D3D11_CPU_ACCESS_WRITE` which somewhat defies the meaning of \"static\"."
                            },
                            {
                                "author": {
                                    "login": "hiddenfrog"
                                },
                                "body": "I get the same exception:\r\n\r\n[Content]\r\nA fatal exception (code 0xc0000005) occurred. The process is terminating.\r\n\r\nCall stack:\r\n1. [0x7ff803c49c10] d3d11\r\n2. [0x7ff663f98f24] r_fill_tex2d_region +452, render_d3d11.cpp line 687\r\n3. [0x7ff663fa446a] f_push_run_from_string +3130, font_cache.c line 744\r\n4. [0x7ff66403dcc6] df_window_open +1366, df_gfx.c line 972\r\n5. [0x7ff664092d60] df_gfx_begin_frame +16016, df_gfx.c line 11931\r\n6. [0x7ff6640a34de] update_and_render +3646, raddbg.c line 237\r\n7. [0x7ff6640baec7] entry_point +5671, raddbg.c line 577\r\n8. [0x7ff663ee245d] WinMain +877, raddbg_main.cpp line 348\r\n9. [0x7ff6640bcb0e] __scrt_common_main_seh +262, exe_common.inl line 288\r\n10. [0x7ff80a7f7344] KERNEL32\r\n11. [0x7ff80aae26b1] ntdll\r\n\r\nVersion: 0.9.8\r\n\r\non a netbook with\r\n\r\nAMD E-350 and AMD Radeon HD 6310\r\n"
                            },
                            {
                                "author": {
                                    "login": "ryanfleury"
                                },
                                "body": "This should be fixed by #226, but let me know if you still have issues."
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Fatal Exception when run in a VM",
                    "body": "Context\r\n---------\r\nWhen running the program for the first time in a Windows 11 VM, the program immediately gives a fatal exception message. The VM image I'm using is the default one Microsoft provides for development: https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/.\r\n\r\nFatal Exception Copied Text\r\n------------------------------\r\n```\r\n[Window Title]\r\nFatal Exception\r\n\r\n[Content]\r\nA fatal exception (code 0xc0000005) occurred. The process is terminating.\r\n\r\nPress Ctrl+C to copy this text to clipboard, then create a new issue at\r\nhttps://github.com/EpicGames/raddebugger/issues\r\n\r\nCall stack:\r\n1. [0x7ffcfe1974e4] d3d11\r\n2. [0x7ffcfe23684c] d3d11\r\n3. [0x7ff60e18c154] r_fill_tex2d_region +452, render_d3d11.cpp line 689\r\n4. [0x7ff60e1966aa] f_push_run_from_string +3130, font_cache.c line 744\r\n5. [0x7ff60e238b7c] df_window_open +1388, df_gfx.c line 986\r\n6. [0x7ff60e29e12b] df_gfx_begin_frame +15979, df_gfx.c line 13662\r\n7. [0x7ff60e2b2b7a] update_and_render +4234, raddbg.c line 301\r\n8. [0x7ff60e0fc543] entry_point +4915, raddbg_main.cpp line 307\r\n9. [0x7ff60e0f6d72] main_thread_base_entry_point +562, base_entry_point.c line 81\r\n10. [0x7ff60e2b55b0] w32_entry_point_caller +512, os_core_win32.c line 1794\r\n11. [0x7ff60e0e67f6] wWinMain +54, os_core_win32.c line 1806\r\n12. [0x7ff60e2d48de] __scrt_common_main_seh +262, exe_common.inl line 288\r\n13. [0x7ffd03d2257d] KERNEL32\r\n14. [0x7ffd04e4aa48] ntdll\r\n\r\nVersion: 0.9.10 [e1a5d13]\r\n\r\n[Close]\r\n```",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "ryanfleury"
                                },
                                "body": "Can you try this again after Martins' #226 PR?"
                            },
                            {
                                "author": {
                                    "login": "ingenero"
                                },
                                "body": "Yes, it works now! Thank you. I'll close this issue."
                            }
                        ]
                    }
                }
            }
        }
    }
]