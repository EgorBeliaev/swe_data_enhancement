[
    {
        "title": "Simplify polygons after offset operations"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Clipper offset operations can introduce self-intersecting polygons. Their docs recommend simplifying after performing an offset, especially if performing a subsequent offset: https://www.angusj.com/clipper2/Docs/Units/Clipper.Offset/Classes/ClipperOffset/_Body.htm\r\n\r\nFixes #5554 "
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Issues with offset() in the nightly build",
                    "body": "**Describe the bug**\r\nAfter updating my nightly build, I started noticing some strange geometry bugs around 2-D offset operations. In particular, some large offsets create strange pointy artifacts either inwards or outwards. I'm able to reproduce the outward pointiness, but the inward pointiness went away randomly as I was playing around with it. I cleared the caches and that didn't seem to affect it at all. I was previously running the nightly from about a week ago, and it didn't have this issue.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone this branch of my repo: https://github.com/50an6xy06r6n/hotswap_pcb_generator/tree/openscad_bug_repro\r\n2. Open `scad/plate.scad`\r\n3. Compare the results from the nightly build to the results from the 2021.01 release\r\n\r\n**Expected behavior**\r\n![plate_correct](https://github.com/user-attachments/assets/8f6ae197-34cd-4713-85d9-195cb8ff6ea3)\r\n\r\n**Code reproducing the issue**\r\nCouldn't get an isolated reproduction, and the behavior was somewhat inconsistent\r\n\r\n**Screenshots**\r\n![plate_buggy](https://github.com/user-attachments/assets/d5a6458c-eda2-44e2-bfb3-07361cedb01c)\r\n![plate_buggy_2](https://github.com/user-attachments/assets/1768afca-8e5e-4790-9422-c453b7c363dd)\r\n\r\n\r\n**Environment and Version info (please complete the following information):**\r\n - OS: Ubuntu 2024.04.3\r\n - System: Virtualbox VM on a 64-bit Windows host\r\n - OpenSCAD Version: 2024.12.30, installed via snap\r\n\r\n**Library & Graphics card information**\r\nIf applicable, add the content of the Help->Library Info window, or the output of running the `openscad --info` command.\r\nOpenSCAD Version: 2024.12.30\r\nSystem information: Linux 6.5.0-18-generic #18~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Feb 7 11:40:03 UTC 2 x86_64 Ubuntu Core 20 8 CPUs 31.34 GB RAM\r\nUser Agent: OpenSCAD/2024.12.30 (Linux x86_64; Ubuntu Core 20)\r\nCompiler: Clang \"10.0.0 \" 64bit\r\nMinGW build: No\r\nDebug build: No\r\nBoost version: 1_71\r\nEigen version: 3.3.7\r\nCGAL version, kernels: 5.5.2, Cartesian<Gmpq>, Extended_cartesian<Gmpq>, Epeck\r\nOpenCSG version: OpenCSG 1.5.1\r\nManifold version: 3.0.1\r\nQt version: 5.12.8\r\nQScintilla version: 2.11.2\r\nInputDrivers: \r\nGLib version: 2.64.6\r\nlodepng version: 20230410\r\nlibzip version: 1.5.1\r\nfontconfig version: 2.13.1\r\nfreetype version: 2.10.1\r\nharfbuzz version: 2.6.4\r\ncairo version: 1.16.0\r\nlib3mf version: 1.8.1\r\nFeatures: roof*, input-driver-dbus, lazy-union, vertex-object-renderers-indexing*, textmetrics*, import-function*, predictible-output\r\nApplication Path: /snap/openscad-nightly/4859/usr/bin\r\nDocuments Path: /home/gareth/snap/openscad-nightly/4859/.local/share\r\nUser Documents Path: /home/gareth/snap/openscad-nightly/4859\r\nResource Path: /snap/openscad-nightly/4859/usr/share/openscad-nightly\r\nUser Library Path: /home/gareth/snap/openscad-nightly/4859/.local/share/OpenSCAD/libraries\r\nUser Config Path: /home/gareth/snap/openscad-nightly/4859/.config/OpenSCAD\r\nBackup Path: /home/gareth/snap/openscad-nightly/4859/.local/share/OpenSCAD/backups\r\nOPENSCADPATH: <not set>\r\nOpenSCAD library path:\r\n/home/gareth/snap/openscad-nightly/4859/.local/share/OpenSCAD/libraries\r\n/snap/openscad-nightly/4859/usr/share/openscad-nightly/libraries\r\n\r\nOPENSCAD_FONT_PATH: <not set>\r\nOpenSCAD font path:\r\n/usr/share/fonts\r\n/usr/local/share/fonts\r\n/home/gareth/snap/openscad-nightly/4859/.local/share/fonts\r\n/home/gareth/snap/openscad-nightly/4859/.fonts\r\n/snap/openscad-nightly/4859/usr/share/fonts\r\n/usr/X11/lib/X11/fonts\r\n/System/Library/Fonts\r\n/Library/Fonts\r\n/home/gareth/snap/openscad-nightly/4859/Library/Fonts\r\n/usr/share/fonts/X11\r\n/usr/share/fonts/cMap\r\n/usr/share/fonts/cmap\r\n/usr/share/fonts/opentype\r\n/usr/share/fonts/truetype\r\n/usr/share/fonts/type1\r\n/snap/openscad-nightly/4859/usr/share/fonts/truetype\r\n/usr/share/fonts/X11/Type1\r\n/usr/share/fonts/X11/encodings\r\n/usr/share/fonts/X11/misc\r\n/usr/share/fonts/X11/util\r\n/usr/share/fonts/cmap/adobe-cns1\r\n/usr/share/fonts/cmap/adobe-gb1\r\n/usr/share/fonts/cmap/adobe-japan1\r\n/usr/share/fonts/cmap/adobe-japan2\r\n/usr/share/fonts/cmap/adobe-korea1\r\n/usr/share/fonts/opentype/malayalam\r\n/usr/share/fonts/opentype/noto\r\n/usr/share/fonts/opentype/urw-base35\r\n/usr/share/fonts/truetype/Gargi\r\n/usr/share/fonts/truetype/Gubbi\r\n/usr/share/fonts/truetype/Nakula\r\n/usr/share/fonts/truetype/Navilu\r\n/usr/share/fonts/truetype/Sahadeva\r\n/usr/share/fonts/truetype/Sarai\r\n/usr/share/fonts/truetype/abyssinica\r\n/usr/share/fonts/truetype/arphic\r\n/usr/share/fonts/truetype/dejavu\r\n/usr/share/fonts/truetype/droid\r\n/usr/share/fonts/truetype/fonts-beng-extra\r\n/usr/share/fonts/truetype/fonts-deva-extra\r\n/usr/share/fonts/truetype/fonts-gujr-extra\r\n/usr/share/fonts/truetype/fonts-guru-extra\r\n/usr/share/fonts/truetype/fonts-kalapi\r\n/usr/share/fonts/truetype/fonts-orya-extra\r\n/usr/share/fonts/truetype/fonts-telu-extra\r\n/usr/share/fonts/truetype/fonts-yrsa-rasa\r\n/usr/share/fonts/truetype/freefont\r\n/usr/share/fonts/truetype/kacst\r\n/usr/share/fonts/truetype/kacst-one\r\n/usr/share/fonts/truetype/lao\r\n/usr/share/fonts/truetype/liberation\r\n/usr/share/fonts/truetype/liberation2\r\n/usr/share/fonts/truetype/libreoffice\r\n/usr/share/fonts/truetype/lohit-assamese\r\n/usr/share/fonts/truetype/lohit-bengali\r\n/usr/share/fonts/truetype/lohit-devanagari\r\n/usr/share/fonts/truetype/lohit-gujarati\r\n/usr/share/fonts/truetype/lohit-kannada\r\n/usr/share/fonts/truetype/lohit-malayalam\r\n/usr/share/fonts/truetype/lohit-oriya\r\n/usr/share/fonts/truetype/lohit-punjabi\r\n/usr/share/fonts/truetype/lohit-tamil\r\n/usr/share/fonts/truetype/lohit-tamil-classical\r\n/usr/share/fonts/truetype/lohit-telugu\r\n/usr/share/fonts/truetype/malayalam\r\n/usr/share/fonts/truetype/noto\r\n/usr/share/fonts/truetype/padauk\r\n/usr/share/fonts/truetype/pagul\r\n/usr/share/fonts/truetype/samyak\r\n/usr/share/fonts/truetype/samyak-fonts\r\n/usr/share/fonts/truetype/sinhala\r\n/usr/share/fonts/truetype/teluguvijayam\r\n/usr/share/fonts/truetype/tibetan-machine\r\n/usr/share/fonts/truetype/tlwg\r\n/usr/share/fonts/truetype/ttf-khmeros-core\r\n/usr/share/fonts/truetype/ubuntu\r\n/usr/share/fonts/type1/urw-base35\r\n/snap/openscad-nightly/4859/usr/share/fonts/truetype/dejavu\r\n/snap/openscad-nightly/4859/usr/share/fonts/truetype/ubuntu\r\n/usr/share/fonts/X11/encodings/large\r\nGLEW version: 2.1.0\r\nOpenGL Version: 4.1 (Compatibility Profile) Mesa 21.2.6\r\nGL Renderer: SVGA3D; build: RELEASE; LLVM;\r\nGL Vendor: VMware, Inc.\r\nRGBA(8880), depth(0), stencil(0)\r\nGL_ARB_framebuffer_object: yes\r\nGL_EXT_framebuffer_object: yes\r\nGL_EXT_packed_depth_stencil: yes\r\n\r\nQt graphics widget: QOpenGLWidget\r\nQSurfaceFormat: RGBA(8880), depth(0), stencil(0)\r\n\r\nGL Extensions:\r\nGL_AMD_conservative_depth\r\nGL_AMD_draw_buffers_blend\r\nGL_AMD_multi_draw_indirect\r\nGL_AMD_shader_trinary_minmax\r\nGL_AMD_texture_texture4\r\nGL_ANGLE_texture_compression_dxt3\r\nGL_ANGLE_texture_compression_dxt5\r\nGL_APPLE_packed_pixels\r\nGL_ARB_ES2_compatibility\r\nGL_ARB_ES3_compatibility\r\nGL_ARB_arrays_of_arrays\r\nGL_ARB_blend_func_extended\r\nGL_ARB_buffer_storage\r\nGL_ARB_clear_buffer_object\r\nGL_ARB_clear_texture\r\nGL_ARB_color_buffer_float\r\nGL_ARB_compatibility\r\nGL_ARB_compressed_texture_pixel_storage\r\nGL_ARB_conservative_depth\r\nGL_ARB_copy_buffer\r\nGL_ARB_copy_image\r\nGL_ARB_debug_output\r\nGL_ARB_depth_buffer_float\r\nGL_ARB_depth_clamp\r\nGL_ARB_depth_texture\r\nGL_ARB_direct_state_access\r\nGL_ARB_draw_buffers\r\nGL_ARB_draw_buffers_blend\r\nGL_ARB_draw_elements_base_vertex\r\nGL_ARB_draw_indirect\r\nGL_ARB_draw_instanced\r\nGL_ARB_explicit_attrib_location\r\nGL_ARB_explicit_uniform_location\r\nGL_ARB_fragment_coord_conventions\r\nGL_ARB_fragment_layer_viewport\r\nGL_ARB_fragment_program\r\nGL_ARB_fragment_program_shadow\r\nGL_ARB_fragment_shader\r\nGL_ARB_framebuffer_object\r\nGL_ARB_framebuffer_sRGB\r\nGL_ARB_get_program_binary\r\nGL_ARB_get_texture_sub_image\r\nGL_ARB_gpu_shader5\r\nGL_ARB_gpu_shader_fp64\r\nGL_ARB_half_float_pixel\r\nGL_ARB_half_float_vertex\r\nGL_ARB_instanced_arrays\r\nGL_ARB_internalformat_query\r\nGL_ARB_internalformat_query2\r\nGL_ARB_invalidate_subdata\r\nGL_ARB_map_buffer_alignment\r\nGL_ARB_map_buffer_range\r\nGL_ARB_multi_bind\r\nGL_ARB_multi_draw_indirect\r\nGL_ARB_multisample\r\nGL_ARB_multitexture\r\nGL_ARB_occlusion_query\r\nGL_ARB_occlusion_query2\r\nGL_ARB_parallel_shader_compile\r\nGL_ARB_pixel_buffer_object\r\nGL_ARB_point_parameters\r\nGL_ARB_point_sprite\r\nGL_ARB_program_interface_query\r\nGL_ARB_provoking_vertex\r\nGL_ARB_robustness\r\nGL_ARB_sample_shading\r\nGL_ARB_sampler_objects\r\nGL_ARB_seamless_cube_map\r\nGL_ARB_separate_shader_objects\r\nGL_ARB_shader_bit_encoding\r\nGL_ARB_shader_objects\r\nGL_ARB_shader_precision\r\nGL_ARB_shader_subroutine\r\nGL_ARB_shader_texture_lod\r\nGL_ARB_shading_language_100\r\nGL_ARB_shading_language_420pack\r\nGL_ARB_shading_language_include\r\nGL_ARB_shading_language_packing\r\nGL_ARB_shadow\r\nGL_ARB_sync\r\nGL_ARB_tessellation_shader\r\nGL_ARB_texture_border_clamp\r\nGL_ARB_texture_buffer_object\r\nGL_ARB_texture_buffer_object_rgb32\r\nGL_ARB_texture_buffer_range\r\nGL_ARB_texture_compression\r\nGL_ARB_texture_compression_rgtc\r\nGL_ARB_texture_cube_map\r\nGL_ARB_texture_cube_map_array\r\nGL_ARB_texture_env_add\r\nGL_ARB_texture_env_combine\r\nGL_ARB_texture_env_crossbar\r\nGL_ARB_texture_env_dot3\r\nGL_ARB_texture_filter_anisotropic\r\nGL_ARB_texture_float\r\nGL_ARB_texture_gather\r\nGL_ARB_texture_mirrored_repeat\r\nGL_ARB_texture_multisample\r\nGL_ARB_texture_non_power_of_two\r\nGL_ARB_texture_query_levels\r\nGL_ARB_texture_query_lod\r\nGL_ARB_texture_rectangle\r\nGL_ARB_texture_rg\r\nGL_ARB_texture_rgb10_a2ui\r\nGL_ARB_texture_storage\r\nGL_ARB_texture_storage_multisample\r\nGL_ARB_texture_swizzle\r\nGL_ARB_timer_query\r\nGL_ARB_transform_feedback2\r\nGL_ARB_transform_feedback3\r\nGL_ARB_transform_feedback_instanced\r\nGL_ARB_transpose_matrix\r\nGL_ARB_uniform_buffer_object\r\nGL_ARB_vertex_array_bgra\r\nGL_ARB_vertex_array_object\r\nGL_ARB_vertex_attrib_64bit\r\nGL_ARB_vertex_attrib_binding\r\nGL_ARB_vertex_buffer_object\r\nGL_ARB_vertex_program\r\nGL_ARB_vertex_shader\r\nGL_ARB_vertex_type_2_10_10_10_rev\r\nGL_ARB_viewport_array\r\nGL_ARB_window_pos\r\nGL_ATI_blend_equation_separate\r\nGL_ATI_draw_buffers\r\nGL_ATI_fragment_shader\r\nGL_ATI_separate_stencil\r\nGL_ATI_texture_env_combine3\r\nGL_ATI_texture_float\r\nGL_EXT_EGL_image_storage\r\nGL_EXT_EGL_sync\r\nGL_EXT_abgr\r\nGL_EXT_bgra\r\nGL_EXT_blend_color\r\nGL_EXT_blend_equation_separate\r\nGL_EXT_blend_func_separate\r\nGL_EXT_blend_minmax\r\nGL_EXT_blend_subtract\r\nGL_EXT_compiled_vertex_array\r\nGL_EXT_copy_texture\r\nGL_EXT_direct_state_access\r\nGL_EXT_draw_buffers2\r\nGL_EXT_draw_instanced\r\nGL_EXT_draw_range_elements\r\nGL_EXT_fog_coord\r\nGL_EXT_framebuffer_blit\r\nGL_EXT_framebuffer_multisample\r\nGL_EXT_framebuffer_multisample_blit_scaled\r\nGL_EXT_framebuffer_object\r\nGL_EXT_framebuffer_sRGB\r\nGL_EXT_gpu_program_parameters\r\nGL_EXT_gpu_shader4\r\nGL_EXT_multi_draw_arrays\r\nGL_EXT_packed_depth_stencil\r\nGL_EXT_packed_float\r\nGL_EXT_packed_pixels\r\nGL_EXT_pixel_buffer_object\r\nGL_EXT_point_parameters\r\nGL_EXT_provoking_vertex\r\nGL_EXT_rescale_normal\r\nGL_EXT_secondary_color\r\nGL_EXT_separate_specular_color\r\nGL_EXT_shader_integer_mix\r\nGL_EXT_shadow_funcs\r\nGL_EXT_stencil_two_side\r\nGL_EXT_stencil_wrap\r\nGL_EXT_subtexture\r\nGL_EXT_texture\r\nGL_EXT_texture3D\r\nGL_EXT_texture_array\r\nGL_EXT_texture_buffer_object\r\nGL_EXT_texture_compression_dxt1\r\nGL_EXT_texture_compression_rgtc\r\nGL_EXT_texture_compression_s3tc\r\nGL_EXT_texture_cube_map\r\nGL_EXT_texture_edge_clamp\r\nGL_EXT_texture_env_add\r\nGL_EXT_texture_env_combine\r\nGL_EXT_texture_env_dot3\r\nGL_EXT_texture_filter_anisotropic\r\nGL_EXT_texture_integer\r\nGL_EXT_texture_lod_bias\r\nGL_EXT_texture_object\r\nGL_EXT_texture_rectangle\r\nGL_EXT_texture_sRGB\r\nGL_EXT_texture_sRGB_decode\r\nGL_EXT_texture_shared_exponent\r\nGL_EXT_texture_snorm\r\nGL_EXT_texture_swizzle\r\nGL_EXT_timer_query\r\nGL_EXT_transform_feedback\r\nGL_EXT_vertex_array\r\nGL_EXT_vertex_array_bgra\r\nGL_EXT_vertex_attrib_64bit\r\nGL_IBM_multimode_draw_arrays\r\nGL_IBM_rasterpos_clip\r\nGL_IBM_texture_mirrored_repeat\r\nGL_INGR_blend_func_separate\r\nGL_KHR_context_flush_control\r\nGL_KHR_debug\r\nGL_KHR_no_error\r\nGL_KHR_parallel_shader_compile\r\nGL_KHR_texture_compression_astc_ldr\r\nGL_KHR_texture_compression_astc_sliced_3d\r\nGL_MESA_pack_invert\r\nGL_MESA_shader_integer_functions\r\nGL_MESA_texture_signed_rgba\r\nGL_MESA_window_pos\r\nGL_NV_blend_square\r\nGL_NV_conditional_render\r\nGL_NV_copy_image\r\nGL_NV_depth_clamp\r\nGL_NV_fog_distance\r\nGL_NV_half_float\r\nGL_NV_light_max_exponent\r\nGL_NV_packed_depth_stencil\r\nGL_NV_primitive_restart\r\nGL_NV_texgen_reflection\r\nGL_NV_texture_env_combine4\r\nGL_NV_texture_rectangle\r\nGL_OES_EGL_image\r\nGL_OES_read_format\r\nGL_S3_s3tc\r\nGL_SGIS_generate_mipmap\r\nGL_SGIS_texture_border_clamp\r\nGL_SGIS_texture_edge_clamp\r\nGL_SGIS_texture_lod\r\nGL_SUN_multi_draw_arrays\r\n\r\n**Additional context**\r\nHappens with both Manifold and CGAL, which makes sense since it seems like it's probably a Clipper2 issue",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "Thanks, we need more Clipper2 testing so don't hesitate to report more such issues!"
                            },
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "When testing the example, I get a bunch of `WARNING: Can't open include file 'layout.scad'. in file param_processing.scad, line 4` and no geometry rendered. Did you forget to commit a file?\r\n\r\nIf you have a way of reproducing this with a single-file minimal example, that would be awesome!"
                            },
                            {
                                "author": {
                                    "login": "50an6xy06r6n"
                                },
                                "body": "Ah I totally forgot that `layout.scad` is in the `.gitignore` \ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f If you copy `example_layouts/eggcat/eggcat.scad` to `layout.scad` it should reproduce. I'll push a commit to add that when I'm at my computer. I'll also look into a more minimal reproduction."
                            },
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "I haven't been able to reproduce; I get the expected result when testing plate.scad with the most recent instructions."
                            },
                            {
                                "author": {
                                    "login": "50an6xy06r6n"
                                },
                                "body": "I have a one-file repro:\r\n\r\n(btw just curious: does the 2021 release use a different library for the offsets?)\r\n```\r\n/**\r\n * Business Logic\r\n */\r\n\r\n// Create inner fillets\r\n// offset(-plate_inner_fillet,$fn=360)\r\noffset(delta=plate_inner_fillet)\r\n\r\n// Create outer fillets\r\noffset(plate_outer_fillet,$fn=360)\r\noffset(delta=-plate_outer_fillet)\r\n\r\n// Offset plate margin and do scale-based fudging to merge points (deprecated)\r\noffset(delta=plate_margin)\r\n\r\n// Trim outer edge of the plate to clean up the profile\r\ndifference() {\r\n    // Hull each group and then union separately, which allows for concavity\r\n    union() for (group = plate_layout) {\r\n        hull() {\r\n            layout_pattern(group) {\r\n                let(component_type = $extra_data[0]) {\r\n                    if (component_type == \"switch\")\r\n                        switch_footprint($borders);\r\n                    else if (component_type == \"mcu\"){\r\n                        mcu_footprint($borders);}\r\n                    else if (component_type == \"trrs\")\r\n                        trrs_footprint($borders);\r\n                    else if (component_type == \"stab\")\r\n                        stabilizer_footprint($borders, $extra_data[1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Generate a negative external profile of the plate (useful for cleaning up convex intersections)\r\n    union() for (group = plate_layout) {\r\n        layout_pattern(group) {\r\n            let(component_type = $extra_data[0]) {\r\n                if (component_type == \"switch\")\r\n                    switch_footprint_trim($borders, $trim);\r\n                else if (component_type == \"mcu\"){\r\n                    mcu_footprint_trim($borders, $trim);}\r\n                else if (component_type == \"trrs\")\r\n                    trrs_footprint_trim($borders, $trim);\r\n                else if (component_type == \"stab\")\r\n                    stabilizer_footprint_trim($borders, $extra_data[1], $trim);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Parameters\r\n */\r\nsocket_size = 14;\r\n// Switch spacing distance\r\nunit = 19.05;\r\n// Horizontal unit size (18mm for choc keycaps)\r\nh_unit = unit;\r\n// Vertical unit size (17mm for choc keycaps)\r\nv_unit = unit;\r\n\r\nmcu_socket_width = 22;\r\nmcu_socket_length = 37;\r\n\r\n// Align mcu to a unit\r\nmcu_unit_resolution = .5;  // Grid size to snap to (as fractional unit)\r\nmcu_h_unit_size = ceil(mcu_socket_width/mcu_unit_resolution/h_unit) * mcu_unit_resolution;\r\nmcu_v_unit_size = ceil(mcu_socket_length/mcu_unit_resolution/v_unit) * mcu_unit_resolution;\r\n\r\n// Width of a border unit around the socket (for joining adjacent sockets)\r\nborder_width = (unit - socket_size)/2;\r\nh_border_width = (h_unit - socket_size)/2;\r\nv_border_width = (v_unit - socket_size)/2;\r\n\r\n// Conversion factor from border width to mm (for use in layouts)\r\nmm = 1/border_width;\r\nh_mm = 1/h_border_width;\r\nv_mm = 1/v_border_width;\r\n\r\n// Specific parameters\r\nplate_inner_fillet = 50;\r\nplate_outer_fillet = 2.5;\r\nplate_margin = 5;\r\nscale_factor = 100;\r\ninvert_layout_flag = false;\r\n\r\n// Keyswitch Layout\r\n//     (extra_data = rotate_column)\r\nbase_switch_layout = [\r\n    [[[0,0.125],1,[0,0,0]],[0,1,0,2],false],\r\n    [[[0,1.125],1,[0,0,0]],[1,1,0,1],false],\r\n    [[[0,2.125],1,[0,0,0]],[1,1,0,1],false],\r\n    [[[0,3.125],1,[0,0,0]],[1,0,0,0],false],\r\n    [[[1,0],1,[0,0,0]],[0,1,0,0],false],\r\n    [[[1,1],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[1,2],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[1,3],1,[0,0,0]],[1,0,2,2],false],\r\n    [[[2,0.125],1,[0,0,0]],[0,1,2,2],false],\r\n    [[[2,1.125],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[2,2.125],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[2,3.125],1,[0,0,0]],[1,0,0,0],false],\r\n    [[[3,0],1,[0,0,0]],[0,1,0,0],false],\r\n    [[[3,1],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[3,2],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[3,3],1,[0,0,0]],[1,0,2,2],false],\r\n    [[[4,0.125],1,[0,0,0]],[0,1,2,0],false],\r\n    [[[4,1.125],1,[0,0,0]],[1,1,1,1],false],\r\n    [[[4,2.125],1,[0,0,0]],[1,1,1,0],false],\r\n    [[[4,3.125],1,[0,0,0]],[1,0,0,0],false],\r\n    [[[5,0.25],1,[0,0,0]],[0,1,2,0],false],\r\n    [[[5,1.25],1,[0,0,0]],[1,1,2,0],false],\r\n    [[[5,2.25],1,[0,0,0]],[1,1+15*mm,2,0],false],\r\n    [[[4.875,4.625],1.5,[60,4.875,4.625]],[30*mm,1,0.25*unit*mm,20*mm],true],\r\n    [[[4.875,5.625],1.5,[60,4.875,4.625]],[1,0,0.25*unit*mm,20*mm],true,[false, true, false, false]],\r\n];\r\n\r\n// MCU Position(s)\r\nbase_mcu_layout = [\r\n    [[[6,0.5],mcu_h_unit_size],[0,0,h_border_width,0],undef,[false, false, false, true]],\r\n];\r\n\r\n// TRRS Position(s)\r\nbase_trrs_layout = [\r\n    [[[6.5,2.5],1,[-90,7,3]],[0,h_unit/2+h_border_width,0,20*mm]],\r\n];\r\n\r\n// Plate Layout (if different than PCB)\r\n//     (extra_data = component_type)\r\nbase_plate_layout = [\r\n    concat(\r\n        slice(base_switch_layout, [0,-2], [\"switch\"]),\r\n        // Note that this is (unintentionally) different from the PCB config, creating a small notch in the case\r\n        [[[[6,0.5],mcu_h_unit_size],[-2,0,h_border_width,0], [\"mcu\"], [false, false, false, true]]],\r\n        slice(base_trrs_layout, [0,0], [\"trrs\"])\r\n    ),\r\n    slice(base_switch_layout, [-2,0], [\"switch\"])\r\n];\r\n\r\nplate_layout = [\r\n    for (group = base_plate_layout)\r\n        invert_layout(\r\n            set_defaults(group, [\"switch\"]),\r\n            invert_layout_flag\r\n        )\r\n];\r\n\r\n\r\n/**\r\n * Helpers\r\n */\r\n\r\n// Useful for manipulating layout elements\r\nfunction slice(array, bounds, extra_data_override=undef, trim_override=undef) = [\r\n    let(\r\n        lower = bounds[0] >= 0 ? bounds[0] : max(len(array)+bounds[0], 0),\r\n        upper = bounds[1] > 0 ? min(bounds[1], len(array)) : len(array)+bounds[1],\r\n        step = len(bounds) == 3 ? bounds[2] : 1\r\n    )\r\n    for (i = [lower:step:upper-1]) ([\r\n        array[i][0],\r\n        array[i][1],\r\n        extra_data_override ?\r\n            extra_data_override :\r\n            array[i][2],\r\n        trim_override ?\r\n            trim_override :\r\n            array[i][3]\r\n    ])\r\n];\r\n\r\nfunction set_defaults(layout, extra_data_default=[]) = [\r\n    for (item = layout)\r\n        set_item_defaults(item, extra_data_default)\r\n];\r\n\r\nfunction set_item_defaults(layout_item, extra_data_default=[]) = (\r\n    let(\r\n        // Set unspecified rotations to [0, 0, 0]\r\n        location = len(layout_item[0]) == 3\r\n            ? layout_item[0]\r\n            : len(layout_item[0]) == 2\r\n                ? [layout_item[0][0],layout_item[0][1],[0,0,0]]\r\n                : [layout_item[0][0],1,[0,0,0]],\r\n        borders = len(layout_item) >= 2\r\n            ? layout_item[1]\r\n            : [1,1,1,1],\r\n        extra_data = len(layout_item) >= 3\r\n            ? layout_item[2]\r\n            : extra_data_default,\r\n        trim = len(layout_item) == 4\r\n            ? layout_item[3]\r\n            : undef\r\n    )\r\n    [\r\n        location,\r\n        borders,\r\n        extra_data,\r\n        trim\r\n    ]\r\n);\r\n\r\n// Invert an array of items\r\nfunction invert_layout(layout, invert=invert_layout_flag) = [\r\n    for (item = layout)\r\n        invert_layout_item(item, invert)\r\n];\r\n\r\n// Invert location and associated data\r\nfunction invert_layout_item(layout_item, invert=invert_layout_flag) = (\r\n    invert\r\n        ? let(\r\n            location = layout_item[0],\r\n            borders = layout_item[1],\r\n            extra_data = layout_item[2],\r\n            trim = layout_item[3]\r\n        )\r\n        [\r\n            [\r\n                [-location[0][0]-location[1], location[0][1]],\r\n                location[1],\r\n                [-location[2][0], -location[2][1], location[2][2]],\r\n            ],\r\n            invert_borders(borders),\r\n            extra_data,\r\n            invert_borders(trim),\r\n        ]\r\n        : layout_item\r\n);\r\n\r\n// Swap left and right border values\r\nfunction invert_borders(borders, invert=invert_layout_flag) =\r\n    invert\r\n        ? [borders[0], borders[1], borders[3], borders[2]]\r\n        : borders;\r\n\r\nmodule layout_pattern(layout) {\r\n    union() {\r\n        for (item = layout) {\r\n            position_item(item) {\r\n                children();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Position item according to KLE convention (i.e. move to a position and rotate around a specified point)\r\n// Since the rotate() module operates around the origin, we move the item to its position\r\n// relative to the point of rotation, perform the rotation, and then place the point of rotation\r\nmodule position_item(layout_item) {\r\n    $display_item = layout_item;\r\n    location = layout_item[0];\r\n    $borders = layout_item[1];\r\n    $extra_data = layout_item[2];\r\n    $trim = layout_item[3];\r\n\r\n    switch_offset = (location[1]-1)/2;  // Coordinate offset based on key shape\r\n\r\n    // Move into final position\r\n    translate([location[2][1]*h_unit,-location[2][2]*v_unit,0]) {\r\n        // Perform rotation\r\n        rotate([0,0,location[2][0]]) {\r\n            // Translate the item to put the center of rotation at the origin\r\n            translate([\r\n                (location[0][0]-location[2][1]+switch_offset)*h_unit,\r\n                -(location[0][1] - location[2][2])*v_unit,\r\n                0\r\n            ]) {\r\n                children();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Switch\r\nmodule switch_footprint(borders=[1,1,1,1]) {\r\n    translate([h_unit/2,-v_unit/2,0])\r\n        border_footprint(\r\n            [socket_size,socket_size], \r\n            borders, \r\n            h_border_width, \r\n            v_border_width\r\n        );\r\n}\r\n\r\nmodule switch_footprint_trim(borders=[1,1,1,1], trim=undef) {\r\n    if (trim)\r\n    translate([h_unit/2,-v_unit/2,0])\r\n        border_trim(\r\n            [socket_size,socket_size], \r\n            borders,\r\n            trim,\r\n            h_border_width, \r\n            v_border_width\r\n        );\r\n}\r\n\r\n// MCU\r\nmodule mcu_footprint(borders=[0,0,0,0]) {\r\n    translate([h_unit/2,-mcu_v_unit_size*v_unit/2,0]) {\r\n        border_footprint(\r\n            [mcu_h_unit_size*h_unit,mcu_v_unit_size*v_unit], \r\n            borders\r\n        );\r\n    }\r\n}\r\n\r\nmodule mcu_footprint_trim(borders=[0,0,0,0], trim=undef) {\r\n    if (trim)\r\n    translate([h_unit/2,-mcu_v_unit_size*v_unit/2,0]) {\r\n        border_trim(\r\n            [mcu_h_unit_size*h_unit,mcu_v_unit_size*v_unit], \r\n            borders,\r\n            trim\r\n        );\r\n    }\r\n}\r\n\r\n// TRRS\r\nmodule trrs_footprint(borders=[0,0,0,0]) {\r\n    translate([h_unit/2,-v_unit/2,0])\r\n        border_footprint(\r\n            [h_unit,v_unit], \r\n            borders\r\n        );\r\n}\r\n\r\nmodule trrs_footprint_trim(borders=[0,0,0,0], trim=undef) {\r\n    if (trim) translate([h_unit/2,-v_unit/2,0])\r\n        border_trim(\r\n            [h_unit,v_unit], \r\n            borders,\r\n            trim\r\n        );\r\n}\r\n\r\n// Borders\r\nmodule border_footprint(base_size, borders, h_unit=1, v_unit=1) {\r\n    translate([\r\n        h_unit/2 * (borders[3] - borders[2]),\r\n        v_unit/2 * (borders[0] - borders[1]),\r\n        0\r\n    ]) {\r\n        square([\r\n            base_size[0]+h_unit*(borders[2]+borders[3])+0.001,\r\n            base_size[1]+v_unit*(borders[0]+borders[1])+0.001\r\n        ], center=true);\r\n    }\r\n}\r\n\r\nmodule border_trim(base_size, borders, trim, h_unit=1, v_unit=1) {\r\n    translate([\r\n        h_unit/2 * (borders[3] - borders[2]),\r\n        v_unit/2 * (borders[0] - borders[1]),\r\n        0\r\n    ]) {\r\n        union() {\r\n            for (direction = [0 : 3]) {\r\n                if (trim[direction]) {\r\n                    rotate(direction_to_rotation(direction))\r\n                    translate([\r\n                        -1000,\r\n                        abs(direction_to_vector(direction) * [\r\n                            base_size[0]+h_unit*(borders[2]+borders[3])+0.001,\r\n                            base_size[1]+v_unit*(borders[0]+borders[1])+0.001\r\n                        ] / 2),\r\n                        0\r\n                    ])\r\n                    square([2000, 1000]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction direction_to_vector(direction) = (\r\n    [\r\n        [ 0,  1], // top\r\n        [ 0, -1], // bottom\r\n        [-1,  0], // left\r\n        [ 1,  0], // right\r\n    ][direction]\r\n);\r\n\r\nfunction direction_to_rotation(direction) = (\r\n    [\r\n        0, // top\r\n        180, // bottom\r\n        90, // left\r\n        270, // right\r\n    ][direction]\r\n);\r\n```"
                            },
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "Can't reproduce here. Is this still behaving flakily or does it fail every time for you?"
                            },
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "We've been using ClipperV1 for many years, and upgraded to ClipperV2 in December."
                            },
                            {
                                "author": {
                                    "login": "50an6xy06r6n"
                                },
                                "body": "Hmmm interesting. It reproduces pretty consistently for me (though I can't reproduce the concave defect). It persists through restarts and cache clearing as well. "
                            },
                            {
                                "author": {
                                    "login": "kintel"
                                },
                                "body": "Ok, might be CPU-dependent - I'll try again on Intel"
                            },
                            {
                                "author": {
                                    "login": "rcolyer"
                                },
                                "body": "For the initial plate.scad with eggcat.scad as layout:\r\nOpenSCAD-2024.12.17.ai21648-x86_64.AppImage -- Has the expected behavior.\r\nOpenSCAD-2024.12.20.ai21770-x86_64.AppImage -- Exhibits the reported bug.\r\n\r\n"
                            }
                        ]
                    }
                }
            }
        }
    }
]