### Condensed Instructions for Changes:

1. **Revert Vertex Serialization**: Perform vertex serialization as doubles instead of floats, reverting a change from over a year ago. This aims to address an issue where downstream software parsing ASCII STL as double can recover topology more easily.

2. **Handle Degenerate Triangles**: Retain assertions in the code to detect internal inconsistencies, especially with degenerate triangles, which should not trigger on user input. If a degenerate triangle is detected during export, consider using a warning/error message to inform users to adjust their design or use another export format rather than crashing.

3. **Binary STL Format Compliance**: Ensure that binary STLs are serialized as floats, as per the file format specification.

4. **Investigate Upstream Issues**: Consider recent changes to Manifold that might have introduced vertices close enough to trigger issues in the double-to-float conversion process. Ensure compatibility with vertex creation processes in Manifold to prevent similar problems in future versions.

5. **Develop Regression Test**: Work on producing a minimal example of the issue for regression testing despite its intermittent nature, possibly using tools like ThreadSanitizer (TSAN) or AddressSanitizer (ASAN) to identify race conditions or uninitialized values, if applicable.

### Issue Description:

The repository is experiencing a nondeterministic assertion failure at line 172 in `export_stl.cc`, associated with vertex serialization from double to float, causing downstream issues in mesh integrity (e.g., degenerate triangles). This problem seems linked to changes made approximately a year ago and possibly exacerbated by recent alterations to the Manifold backend. A proposed fix inverts the vertex serialization change, back to using doubles, and highlights the need for better downstream handling of mesh inconsistencies without crashing.