[
    {
        "title": "feat(ui): hide services with missing api key & models not in users pricing plan"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "this hides all the services in the ModelCB which require an API key but don't have one configured.\r\nalso only the CodeGPT models which are in the users current PricingPlan are shown.\r\n\r\n![image](https://github.com/user-attachments/assets/bd418494-257d-424d-996a-cf3586a942e5)\r\n"
    },
    {
        "author": {
            "login": "carlrobertoh"
        },
        "body": "Thank you for contributing!\r\n\r\nCould we please revert the models that were displayed for the CodeGPT provider, regardless of the user's pricing plan? The reason for this is that I would like to make sure which SOTA models are provided by the CodeGPT API as soon as the model dropdown is launched."
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "done. the model list was rather confusing to me, that's why i tried to clean that up \ud83d\ude05\r\n\r\nthis is which models are shown based on the pricing plan:\r\n- **Always**: gpt-4o, gpt-4o-mini, claude-3.5-sonnet\r\n- **Never**: deepseek-coder-33b, wizardlm-2-8x22b\r\n- **Anonymous**: llama-3-8b\r\n- **Free**: codellama:chat, mixtral-8x22b\r\n- **Individual**: claude-3-opus, dbrx\r\n- **Anonymous** & **Individual**: llama-3.1-405b, deepseek-coder-v2\r\n- **Free** & **Individual**: llama-3-70b\r\n\r\nand this doesn't match with the list i get from `https://codegpt-api.carlrobert.ee/v1/users/details`.\r\n\r\nmaybe you could clean that up a little bit and maybe have something like a Locked & Unlocked section in the ComboBox.\r\ni fully understand that you always wanna show which models users can subscribe to.\r\n\r\noh also i think it might be problematic that the userDetails from your api isn't always loaded when the CB is filled. if a user is on the free or individual plan he might not get to select his preferred model."
    },
    {
        "author": {
            "login": "carlrobertoh"
        },
        "body": "Yeah, I need to go through this integration again. The goal was to offer new models as soon as they're launched without needing to upgrade the plugin itself.\r\n\r\nI understand that the popup has grown annoyingly large, especially if you have downloaded dozens of Ollama models. However, the issue with this solution is that if you haven't checked the option to remember the keystore key/value mapping (or can't for whatever reason), then each time you boot up your IDE and open the model combobox, you will be prompted to enter your system password up to four times. I'm not sure how big of an issue this is.\r\n\r\nMaybe instead of hiding the providers based on whether the API key is set, we could organize them in the menu better to save some space. For example, we could create multiple groups where each group represents a provider with an extensible submenu containing the models. What do you think?"
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "submenus sound good to be.\r\nwhat also would help is implementing #553 by adding an enabled checkbox in all the provider setting screens and by default only have CodeGPT enabled (maybe not let users disable CodeGPT for promo reasons if you want \ud83d\ude09)."
    },
    {
        "author": {
            "login": "carlrobertoh"
        },
        "body": "Yep, I'm aware of that ticket. I think once we lift them into separate groups, then this provider enabling/disabling will no longer be required.\r\n\r\nLet's do it like this: leave the CodeGPT models as is and lift the rest into their own groups. The change should be relatively simple:\r\n\r\n```java\r\nvar openaiGroup = DefaultActionGroup.createPopupGroup(() -> \"OpenAI\");\r\nopenaiGroup.getTemplatePresentation().setIcon(Icons.OpenAI);\r\nList.of(\r\n        OpenAIChatCompletionModel.GPT_4_O,\r\n        OpenAIChatCompletionModel.GPT_4_O_MINI,\r\n        OpenAIChatCompletionModel.GPT_4_VISION_PREVIEW,\r\n        OpenAIChatCompletionModel.GPT_4_0125_128k)\r\n    .forEach(model -> openaiGroup.add(createOpenAIModelAction(model, presentation)));\r\nactionGroup.add(openaiGroup);\r\n```\r\n\r\nIf this becomes an issue, we can tackle it later."
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "![image](https://github.com/user-attachments/assets/0a9f517f-2607-4774-ac7b-386385772f91)\r\n\r\ni would still prefer if we could somehow hide the services which aren't configured but it's an improvement \ud83d\ude05"
    },
    {
        "author": {
            "login": "carlrobertoh"
        },
        "body": "I added a few minor changes:\r\n\r\n<img width=\"485\" alt=\"combobox-menu\" src=\"https://github.com/user-attachments/assets/af0d7022-81a7-4c1d-bb15-28981d025e33\">\r\n\r\nI think separating them by cloud vs local gives a clearer understanding of what is being offered and making it easier for users to navigate."
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "oh yeah definitely, great change!"
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "oh btw one minor thing i tried to figure out but couldn't (because of my total lack of plugin dev experience):\r\nright now the submenus need a click and most jetbrains menus already open on mouse over.\r\nprobably an easy thing to change..."
    },
    {
        "author": {
            "login": "carlrobertoh"
        },
        "body": "Good question. I'm not sure if this is easily configurable via a single parameter. The `com.intellij.openapi.ui.popup.ListPopup` has an option to configure it via `setShowSubmenuOnHover`, but I'm unsure if this list is used by the combo box."
    },
    {
        "author": {
            "login": "GenericMale"
        },
        "body": "ah yeah apparently it is [ComboBoxAction.java#L80](https://github.com/JetBrains/intellij-community/blob/cf365294de1809e4cfed5c6d464aa8a8a3a5540d/platform/platform-api/src/com/intellij/openapi/actionSystem/ex/ComboBoxAction.java#L80).\r\n\r\nso i guess this should work in `ModelComboBoxAction`:\r\n```java\r\n@Override\r\nprotected JBPopup createActionPopup(DefaultActionGroup group, @NotNull DataContext context, @Nullable Runnable disposeCallback) {\r\n  ListPopup popup = (ListPopup) super.createActionPopup(group, context, disposeCallback);\r\n  popup.setShowSubmenuOnHover(true);\r\n  return popup;\r\n}\r\n```"
    }
]