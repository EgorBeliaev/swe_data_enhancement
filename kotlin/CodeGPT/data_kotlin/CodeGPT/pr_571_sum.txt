**Instruction to Programmer:**

1. **Enhance Code Completion with Context:**
   - Implement context parsing for code completions by using IntelliJ OpenAPI's Program Structure Interface (PSI).
   - Parse PsiElements at cursor positions, identify parent PsiMethods or PsiClasses, and determine all related PsiTypeElements.
   - Retrieve VirtualFile contents for identified project files, prepending these contents to code-completion prompts.

2. **Integrate Library Code:**
   - Evaluate the possibility of downloading library source code and using PSI to include it in completions, if available.
   - Implement a check for Java libraries using `ClsMethodImpl.sourceMirrorMethod` and `ClsClassImpl.getSourceMirrorClass` to decide library source inclusion.

3. **User Options for Context Inclusion:**
   - Provide users the choice to include/exclude automatic context for code completions, similar to enabling/disabling completion post-processing.

4. **Performance Considerations:**
   - Balance prompt length and response times. Evaluate models for their compromise on completion quality vs. response time.
   - Primary model consideration should be for OpenAIâ€™s `gpt-3.5-turbo-instruct`.

5. **Future Enhancements:**
   - Plan for extending the implementation to support more languages beyond Java.
   - Consider integrating specific framework PSI extensions in later iterations.