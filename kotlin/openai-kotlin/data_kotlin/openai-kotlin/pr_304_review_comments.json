[
    {
        "title": "fix(chat): refactor and fix `Tool`"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "| Q                 | A\r\n| ----------------- | ----------\r\n| Bug fix?          | yes/no\r\n| New feature?      | yes/no    <!-- please update the /CHANGELOG.md file -->\r\n| BC breaks?        | no\r\n| Related Issue     | Fix #301\r\n\r\n## Changes\r\n\r\n- fix(chat): move `description` to `FunctionTool`\r\n- fix(chat): make `FunctionTool#Parameters` nullable\r\n- fix(finetuning): nullable `ErrorInfo#message` and `ErrorInfo#code`\r\n"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Wrong serialization of tools / function description field when using chat completion function calling ",
                    "body": "### Description\r\n\r\nAccording to the OpenAI API documentation https://platform.openai.com/docs/api-reference/chat/create#chat-create-tools\r\n\r\nThe format for each tool object is to have two required fields: `type` and `function`\r\n\r\nEach function object has `name` (required), `description` and `parameters` fields.\r\n\r\nHowever openai-kotlin mixes them up a bit and put the `description` field at the tool level.\r\n\r\nNow, this format works when actually hitting the OpenAI endpoint at https://api.openai.com/v1/\r\n\r\nBut, it fails when hitting another OpenAI-compatible provider Anyscale at https://api.endpoints.anyscale.com/v1/\r\n\r\nYou get 400 error:\r\n\r\n```\r\nHttpClient: REQUEST: https://api.endpoints.anyscale.com/v1/chat/completions\r\nMETHOD: HttpMethod(value=POST)\r\nCOMMON HEADERS\r\n-> Accept: application/json\r\n-> Accept-Charset: UTF-8\r\n-> Authorization: ***\r\nCONTENT HEADERS\r\n-> Content-Length: 589\r\n-> Content-Type: application/json\r\nHttpClient: RESPONSE: 400 \r\nMETHOD: HttpMethod(value=POST)\r\nFROM: https://api.endpoints.anyscale.com/v1/chat/completions\r\nCOMMON HEADERS\r\n-> content-length: 705\r\n-> content-type: application/json\r\n-> date: Thu, 25 Jan 2024 21:06:00 GMT\r\n-> server: uvicorn\r\n-> via: 1.1 38ad358fbfea219ebf363749e56a6f52.cloudfront.net (CloudFront)\r\n-> x-amz-cf-id: yzeL3R-bGSdNmTR8Wpray0oB-ABQ30c0zM0SHN_ocQ9vf_rLiTO9Nw==\r\n-> x-amz-cf-pop: LAX3-C4\r\n-> x-cache: Error from cloudfront\r\n-> x-request-id: 78b32b97-e074-43d6-91af-edc80db4d50e\r\nHttpClient: RESPONSE https://api.endpoints.anyscale.com/v1/chat/completions failed with exception: io.ktor.serialization.JsonConvertException: Unexpected JSON token at offset 635: Expected beginning of the string, but got { at path: $.error.param\r\nJSON input: .....\"OpenAIHTTPException\",\"param\":{}},\"num_total_tokens\":0,\"num_.....\r\n```\r\n\r\nIt seems that the official OpenAI API server is more forgiving/flexible and can work with the incorrect payload format where Anyscale is more strict (my guess is that they try to serialize the tool into an object that doesn't have a description and the extra description field causes the failure).\r\n\r\nNote that using the OpenAI Python library works just fine, so Anyscale does support proper function calling.\r\n\r\nHere is the JSON sent by openai-kotlin (`description` field at tool level)\r\n```\r\n{'messages': [{'content': ' joke', 'role': 'user'}],\r\n 'model': 'mistralai/Mixtral-8x7B-Instruct-v0.1',\r\n 'tool_choice': 'auto',\r\n 'tools': [{'description': 'this function returns employees and their past '\r\n                           'companies',\r\n            'function': {'name': 'get_company_info',\r\n                         'parameters': {'properties': {'companyName': {'description': 'the company name (e.g Netflix)',\r\n                                                                       'type': 'string'}},\r\n                                        'required': ['companyName'],\r\n                                        'type': 'object'}},\r\n            'type': 'function'}]}\r\n```\r\n\r\nHere is the JSON sent with the OpenAI Python library (different function, but see the format and the `description` field being inside the `function`). \r\n```\r\n{'messages': [{'content': 'You are helpful assistant.', 'role': 'system'},\r\n              {'content': \"What's the weather like in San Francisco?\",\r\n               'role': 'user'}],\r\n 'model': 'mistralai/Mixtral-8x7B-Instruct-v0.1',\r\n 'tool_choice': 'auto',\r\n 'tools': [{'function': {'description': 'Get the current weather in a given '\r\n                                        'location',\r\n                         'name': 'get_current_weather',\r\n                         'parameters': {'properties': {'location': {'description': 'The city and state e.g. San Francissco, CA',\r\n                                                                    'type': 'string'},\r\n                                                       'unit': {'enum': ['celsius',\r\n                                                                         'fahrenheit'],\r\n                                                                'type': 'string'}},\r\n                                        'required': ['location'],\r\n                                        'type': 'object'}},\r\n            'type': 'function'}]}\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nYou'll need to register an account and get an API token from Anyscale (you get 10$ worth of free tokens).\r\nSee https://docs.anyscale.com/endpoints/model-serving/get-started\r\n\r\nThen,\r\nHit Anyscale endpoint (https://api.endpoints.anyscale.com/v1/) with a chat completion request that has tools.\r\nYou can also run the same request against OpenAI https://api.openai.com/v1/ and see that it works\r\n\r\nI have a project that demonstrates the problem here:\r\nhttps://github.com/the-gigi/llm-playground-java\r\n\r\n\r\n### Environment\r\n\r\n- **openai-kotlin version**: 3.6.3\r\n- **Kotlin version**: 1.9.21\r\n- **OS**: macOS\r\n\r\n### Additional Info\r\n\r\n*Add any other relevant context here.*\r\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "the-gigi"
                                },
                                "body": "@aallam thanks for fixing this \ud83d\udc4f \r\n\r\nWhen do you plan to cut a new release?"
                            }
                        ]
                    }
                }
            }
        }
    }
]