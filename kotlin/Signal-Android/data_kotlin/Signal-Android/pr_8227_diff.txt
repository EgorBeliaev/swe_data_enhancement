diff --git a/res/drawable-hdpi/ic_profile_default.png b/res/drawable-hdpi/ic_profile_default.png
new file mode 100644
index 00000000000..f6ed109eceb
Binary files /dev/null and b/res/drawable-hdpi/ic_profile_default.png differ
diff --git a/res/drawable-mdpi/ic_profile_default.png b/res/drawable-mdpi/ic_profile_default.png
new file mode 100644
index 00000000000..c17844bd5d0
Binary files /dev/null and b/res/drawable-mdpi/ic_profile_default.png differ
diff --git a/res/drawable-xhdpi/ic_profile_default.png b/res/drawable-xhdpi/ic_profile_default.png
new file mode 100644
index 00000000000..79d9beff280
Binary files /dev/null and b/res/drawable-xhdpi/ic_profile_default.png differ
diff --git a/res/drawable-xxhdpi/ic_profile_default.png b/res/drawable-xxhdpi/ic_profile_default.png
new file mode 100644
index 00000000000..9e1c67e6cca
Binary files /dev/null and b/res/drawable-xxhdpi/ic_profile_default.png differ
diff --git a/res/drawable-xxxhdpi/ic_profile_default.png b/res/drawable-xxxhdpi/ic_profile_default.png
new file mode 100644
index 00000000000..86a661a7aba
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_profile_default.png differ
diff --git a/res/drawable/archived_indicator_background.xml b/res/drawable/archived_indicator_background.xml
index 4fa695590bb..6ef8fb4fcfe 100644
--- a/res/drawable/archived_indicator_background.xml
+++ b/res/drawable/archived_indicator_background.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
-    <solid android:color="@color/core_light_35"/>
+    <solid android:color="@color/core_grey_45"/>
     <corners android:radius="10dp"/>
 </shape>
\ No newline at end of file
diff --git a/res/drawable/avatar_gradient_dark.xml b/res/drawable/avatar_gradient_dark.xml
new file mode 100644
index 00000000000..468abd48a79
--- /dev/null
+++ b/res/drawable/avatar_gradient_dark.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+
+    <gradient
+        android:angle="270"
+        android:startColor="@color/transparent_black_30"
+        android:endColor="@color/transparent_black" />
+
+</shape>
\ No newline at end of file
diff --git a/res/drawable/avatar_gradient_light.xml b/res/drawable/avatar_gradient_light.xml
new file mode 100644
index 00000000000..bb0a83db300
--- /dev/null
+++ b/res/drawable/avatar_gradient_light.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+
+    <gradient
+        android:angle="270"
+        android:startColor="@color/transparent_white_30"
+        android:endColor="@color/transparent" />
+
+</shape>
\ No newline at end of file
diff --git a/res/drawable/compose_background_camera.xml b/res/drawable/compose_background_camera.xml
index 7695987254b..cfb74f334c6 100644
--- a/res/drawable/compose_background_camera.xml
+++ b/res/drawable/compose_background_camera.xml
@@ -5,7 +5,7 @@
 
     <stroke
         android:width="1dp"
-        android:color="@color/core_light_45" />
+        android:color="@color/core_grey_25" />
 
     <solid
         android:color="@color/transparent_black_90" />
diff --git a/res/drawable/compose_background_dark.xml b/res/drawable/compose_background_dark.xml
index c04badbf744..e4a6237f435 100644
--- a/res/drawable/compose_background_dark.xml
+++ b/res/drawable/compose_background_dark.xml
@@ -5,10 +5,10 @@
 
     <stroke
         android:width="1dp"
-        android:color="@color/core_dark_70" />
+        android:color="@color/core_grey_75" />
 
     <solid
-        android:color="@color/core_dark_85" />
+        android:color="@color/core_grey_90" />
 
     <corners
         android:radius="20dp" />
diff --git a/res/drawable/compose_background_light.xml b/res/drawable/compose_background_light.xml
index b93c9edb7b8..dc2e5b16b1b 100644
--- a/res/drawable/compose_background_light.xml
+++ b/res/drawable/compose_background_light.xml
@@ -5,10 +5,10 @@
 
     <stroke
         android:width="1dp"
-        android:color="@color/core_light_10" />
+        android:color="@color/core_grey_05" />
 
     <solid
-        android:color="@color/core_light_02" />
+        android:color="@color/core_grey_02" />
 
     <corners
         android:radius="20dp" />
diff --git a/res/drawable/sticky_date_header_background_dark.xml b/res/drawable/sticky_date_header_background_dark.xml
index d5be2c288c1..554dd74efa9 100644
--- a/res/drawable/sticky_date_header_background_dark.xml
+++ b/res/drawable/sticky_date_header_background_dark.xml
@@ -4,5 +4,5 @@
     android:shape="rectangle">
 
     <corners android:radius="4dp" />
-    <solid android:color="@color/core_dark_85" />
+    <solid android:color="@color/core_grey_90" />
 </shape>
\ No newline at end of file
diff --git a/res/drawable/sticky_date_header_background_light.xml b/res/drawable/sticky_date_header_background_light.xml
index b015b381ba8..3a92469278f 100644
--- a/res/drawable/sticky_date_header_background_light.xml
+++ b/res/drawable/sticky_date_header_background_light.xml
@@ -4,5 +4,5 @@
     android:shape="rectangle">
 
     <corners android:radius="4dp" />
-    <solid android:color="@color/core_light_02" />
+    <solid android:color="@color/core_grey_02" />
 </shape>
\ No newline at end of file
diff --git a/res/drawable/unread_count_background_dark.xml b/res/drawable/unread_count_background_dark.xml
new file mode 100644
index 00000000000..8666e43f676
--- /dev/null
+++ b/res/drawable/unread_count_background_dark.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="@dimen/unread_count_bubble_radius" />
+
+    <solid android:color="@color/core_blue" />
+
+    <stroke
+        android:color="@color/core_grey_95"
+        android:width="1dp"/>
+
+</shape>
\ No newline at end of file
diff --git a/res/drawable/unread_count_background_light.xml b/res/drawable/unread_count_background_light.xml
new file mode 100644
index 00000000000..e87f5160986
--- /dev/null
+++ b/res/drawable/unread_count_background_light.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="@dimen/unread_count_bubble_radius" />
+
+    <solid android:color="@color/core_blue" />
+
+    <stroke
+        android:color="@color/core_white"
+        android:width="1dp"/>
+
+</shape>
\ No newline at end of file
diff --git a/res/layout/alert_view.xml b/res/layout/alert_view.xml
index ee4f9364a5c..fe2ff895c3b 100644
--- a/res/layout/alert_view.xml
+++ b/res/layout/alert_view.xml
@@ -17,7 +17,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:src="@drawable/ic_error"
-        android:tint="@color/core_light_60"
+        android:tint="@color/core_grey_60"
         android:visibility="gone"
         tools:visibility="visible"
         android:layout_gravity="center_vertical"
diff --git a/res/layout/conversation_activity_attachment_editor_stub.xml b/res/layout/conversation_activity_attachment_editor_stub.xml
index 61fb3846207..ec466caeccc 100644
--- a/res/layout/conversation_activity_attachment_editor_stub.xml
+++ b/res/layout/conversation_activity_attachment_editor_stub.xml
@@ -53,8 +53,8 @@
             android:paddingLeft="@dimen/message_bubble_horizontal_padding"
             android:paddingRight="@dimen/message_bubble_horizontal_padding"
             android:background="@drawable/message_bubble_background_sent_alone"
-            app:doc_titleColor="?attr/conversation_item_sent_text_primary_color"
-            app:doc_captionColor="?attr/conversation_item_sent_text_secondary_color"/>
+            app:doc_titleColor="?attr/conversation_item_received_text_primary_color"
+            app:doc_captionColor="?attr/conversation_item_received_text_secondary_color"/>
 
     </org.thoughtcrime.securesms.components.RemovableEditableMediaView>
 
diff --git a/res/layout/conversation_input_panel.xml b/res/layout/conversation_input_panel.xml
index bb7393ac053..b113ea42f3b 100644
--- a/res/layout/conversation_input_panel.xml
+++ b/res/layout/conversation_input_panel.xml
@@ -41,8 +41,8 @@
                 android:layout_marginTop="6dp"
                 android:visibility="gone"
                 app:message_type="preview"
-                app:quote_colorPrimary="?attr/conversation_item_sent_text_primary_color"
-                app:quote_colorSecondary="?attr/conversation_item_sent_text_primary_color"
+                app:quote_colorPrimary="?attr/conversation_item_received_text_primary_color"
+                app:quote_colorSecondary="?attr/conversation_item_received_text_primary_color"
                 tools:visibility="visible"/>
 
             <FrameLayout
@@ -189,7 +189,7 @@
                         android:layout_marginStart="20dp"
                         style="@style/Signal.Text.Body"
                         android:text="00:00"
-                        android:textColor="@color/core_light_60"
+                        android:textColor="@color/core_grey_60"
                         android:singleLine="true"
                         android:visibility="gone"
                         tools:visibility="visible"/>
@@ -209,7 +209,7 @@
                             style="@style/Signal.Text.Caption"
                             android:text="@string/conversation_input_panel__slide_to_cancel"
                             android:textAllCaps="true"
-                            android:textColor="@color/core_light_60"
+                            android:textColor="@color/core_grey_60"
                             android:ellipsize="none"
                             android:visibility="gone"
                             android:paddingRight="50dp"
diff --git a/res/layout/conversation_item_received.xml b/res/layout/conversation_item_received.xml
index 5a34a664865..2cf0cd763b8 100644
--- a/res/layout/conversation_item_received.xml
+++ b/res/layout/conversation_item_received.xml
@@ -38,7 +38,6 @@
                 android:foreground="@drawable/contact_photo_background"
                 android:layout_width="36dp"
                 android:layout_height="36dp"
-                android:layout_marginBottom="6dp"
                 android:cropToPadding="true"
                 android:contentDescription="@string/conversation_item_received__contact_photo_description" />
 
diff --git a/res/layout/conversation_item_sent.xml b/res/layout/conversation_item_sent.xml
index f6ba5bb899d..e9d11a496ca 100644
--- a/res/layout/conversation_item_sent.xml
+++ b/res/layout/conversation_item_sent.xml
@@ -36,7 +36,7 @@
             android:clipToPadding="false"
             android:clipChildren="false"
             android:background="@color/white"
-            tools:backgroundTint="@color/core_light_10">
+            tools:backgroundTint="@color/core_grey_05">
 
             <org.thoughtcrime.securesms.components.QuoteView
                 android:id="@+id/quote_view"
@@ -127,6 +127,7 @@
                 android:layout_marginBottom="@dimen/message_bubble_bottom_padding"
                 android:clipChildren="false"
                 android:clipToPadding="false"
+                android:alpha="0.8"
                 app:footer_text_color="?attr/conversation_item_sent_text_secondary_color"
                 app:footer_icon_color="?attr/conversation_item_sent_icon_color"/>
 
diff --git a/res/layout/conversation_list_activity.xml b/res/layout/conversation_list_activity.xml
index 77a686c5d69..a0cf04f1c8a 100644
--- a/res/layout/conversation_list_activity.xml
+++ b/res/layout/conversation_list_activity.xml
@@ -13,7 +13,7 @@
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
             android:minHeight="?attr/actionBarSize"
-            android:background="?attr/colorPrimary"
+            android:background="?attr/conversation_list_toolbar_background"
             app:contentInsetStart="14dp"
             app:contentInsetLeft="14dp"
             android:elevation="4dp"
@@ -23,7 +23,8 @@
                 android:layout_width="match_parent"
                 android:layout_height="match_parent">
 
-            <ImageView android:layout_width="36dp"
+            <ImageView android:id="@+id/toolbar_icon"
+                       android:layout_width="36dp"
                        android:layout_height="36dp"
                        android:layout_marginLeft="8dp"
                        android:layout_marginStart="8dp"
diff --git a/res/layout/conversation_list_item_view.xml b/res/layout/conversation_list_item_view.xml
index 248356c0cd4..d67e77e8f1d 100644
--- a/res/layout/conversation_list_item_view.xml
+++ b/res/layout/conversation_list_item_view.xml
@@ -12,27 +12,47 @@
         android:paddingLeft="16dp"
         android:paddingRight="16dp">
 
-    <org.thoughtcrime.securesms.components.AvatarImageView
-        android:id="@+id/contact_photo_image"
-        android:foreground="@drawable/contact_photo_background"
-        android:layout_width="48dp"
-        android:layout_height="48dp"
+    <FrameLayout
+        android:id="@+id/avatar_container"
+        android:layout_width="54dp"
+        android:layout_height="wrap_content"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_centerVertical="true"
-        android:cropToPadding="true"
-        tools:src="@drawable/ic_contact_picture"
-        android:contentDescription="@string/conversation_list_item_view__contact_photo_image"
-        android:layout_marginRight="12dp"
-        android:layout_marginEnd="12dp" />
+        android:layout_marginRight="6dp"
+        android:layout_marginEnd="6dp">
+
+        <org.thoughtcrime.securesms.components.AvatarImageView
+            android:id="@+id/contact_photo_image"
+            android:foreground="@drawable/contact_photo_background"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            tools:src="@drawable/ic_contact_picture"
+            android:contentDescription="@string/conversation_list_item_view__contact_photo_image" />
+
+        <TextView
+            android:id="@+id/unread_indicator"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="right|end|top"
+            style="@style/Signal.Text.Caption"
+            android:fontFamily="sans-serif-medium"
+            android:minWidth="@dimen/unread_count_bubble_diameter"
+            android:padding="5sp"
+            android:background="?conversation_list_item_unread_background"
+            android:textColor="@color/core_white"
+            android:gravity="center"
+            tools:text="1"/>
+
+    </FrameLayout>
 
     <RelativeLayout android:layout_width="match_parent"
                   android:layout_height="wrap_content"
                   android:layout_marginLeft="4dp"
                   android:layout_marginStart="4dp"
                   android:layout_centerVertical="true"
-                  android:layout_toRightOf="@id/contact_photo_image"
-                  android:layout_toEndOf="@id/contact_photo_image"
+                  android:layout_toRightOf="@id/avatar_container"
+                  android:layout_toEndOf="@id/avatar_container"
                   android:weightSum="1"
                   android:orientation="horizontal">
 
@@ -151,10 +171,6 @@
                     android:layout_gravity="center_vertical"
                     app:iconColor="?attr/conversation_list_item_delivery_icon_color"/>
 
-            <ImageView android:id="@+id/unread_indicator"
-                       android:layout_width="24dp"
-                       android:layout_height="24dp"/>
-
         </FrameLayout>
 
     </RelativeLayout>
diff --git a/res/layout/document_view.xml b/res/layout/document_view.xml
index fda04118869..a619f038537 100644
--- a/res/layout/document_view.xml
+++ b/res/layout/document_view.xml
@@ -77,6 +77,7 @@
                            android:visibility="gone"
                            android:background="@drawable/circle_touch_highlight_background"
                            android:src="@drawable/ic_download_circle_fill_white_48dp"
+                           android:tint="@color/core_grey_60"
                            android:contentDescription="@string/audio_view__download_accessibility_description"/>
 
             </org.thoughtcrime.securesms.components.AnimatingToggle>
diff --git a/res/layout/quote_view.xml b/res/layout/quote_view.xml
index 4602ef30740..43003a66619 100644
--- a/res/layout/quote_view.xml
+++ b/res/layout/quote_view.xml
@@ -75,7 +75,7 @@
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
                         style="@style/Signal.Text.Body"
-                        android:textColor="@color/core_light_90"
+                        android:textColor="@color/core_grey_90"
                         android:maxLines="1"
                         android:ellipsize="end"
                         tools:text="The-Amazing-Spider-Man.cba" />
@@ -88,7 +88,7 @@
                     android:layout_height="wrap_content"
                     android:layout_marginRight="8dp"
                     style="@style/Signal.Text.Caption"
-                    android:textColor="@color/core_light_90"
+                    android:textColor="@color/core_grey_90"
                     android:paddingTop="4dp"
                     android:textStyle="italic"
                     android:visibility="gone"
@@ -168,7 +168,7 @@
                 android:layout_height="wrap_content"
                 style="@style/Signal.Text.Caption"
                 android:text="@string/QuoteView_original_missing"
-                android:textColor="@color/core_light_90"/>
+                android:textColor="@color/core_grey_90"/>
 
         </LinearLayout>
 
diff --git a/res/layout/scribble_fragment_emojidrawer_stub.xml b/res/layout/scribble_fragment_emojidrawer_stub.xml
index bf4c603ef91..e49b08bfdf9 100644
--- a/res/layout/scribble_fragment_emojidrawer_stub.xml
+++ b/res/layout/scribble_fragment_emojidrawer_stub.xml
@@ -4,5 +4,5 @@
         android:id="@+id/emoji_drawer"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:background="@color/core_light_90"
+        android:background="@color/core_grey_90"
         android:visibility="gone" />
diff --git a/res/layout/scribble_hud.xml b/res/layout/scribble_hud.xml
index 1939b27ffe8..a7973cd3d2c 100644
--- a/res/layout/scribble_hud.xml
+++ b/res/layout/scribble_hud.xml
@@ -7,7 +7,7 @@
     android:layout_height="match_parent"
     android:orientation="vertical"
     tools:parentTag="android.widget.LinearLayout"
-    tools:background="@color/core_light_60">
+    tools:background="@color/core_grey_60">
 
     <FrameLayout
         android:layout_width="match_parent"
diff --git a/res/layout/transfer_controls_view.xml b/res/layout/transfer_controls_view.xml
index 8fb943b7a76..8a4c1b4d8b3 100644
--- a/res/layout/transfer_controls_view.xml
+++ b/res/layout/transfer_controls_view.xml
@@ -18,7 +18,7 @@
               android:padding="15dp"
               android:gravity="center"
               android:longClickable="false"
-              android:textColor="?conversation_item_received_text_primary_color"
+              android:textColor="?conversation_item_sent_text_primary_color"
               android:drawableLeft="@drawable/ic_file_download_white_36dp"
               android:textSize="16dp"
               android:visibility="gone"
diff --git a/res/values/attrs.xml b/res/values/attrs.xml
index c66374ac19e..87d9f9879ae 100644
--- a/res/values/attrs.xml
+++ b/res/values/attrs.xml
@@ -12,7 +12,9 @@
     <attr name="conversation_list_item_delivery_icon_color" format="reference|color"/>
     <attr name="conversation_list_item_date_color" format="reference|color"/>
     <attr name="conversation_list_item_unread_color" format="reference|color"/>
+    <attr name="conversation_list_item_unread_background" format="reference"/>
     <attr name="conversation_list_item_divider" format="reference"/>
+    <attr name="conversation_list_toolbar_background" format="reference"/>
 
     <attr name="conversation_sent_card_background" format="reference|color"/>
     <attr name="conversation_group_member_name" format="reference|color"/>
diff --git a/res/values/conversation_colors.xml b/res/values/conversation_colors.xml
index d44a2364647..9f9e08fb6e3 100644
--- a/res/values/conversation_colors.xml
+++ b/res/values/conversation_colors.xml
@@ -1,32 +1,50 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="conversation_red">#d32f2f</color>
-    <color name="conversation_red_shade">#9a0007</color>
+    <color name="conversation_crimson">#cc163d</color>
+    <color name="conversation_crimson_tint">#eda6ae</color>
+    <color name="conversation_crimson_shade">#8a0f29</color>
 
-    <color name="conversation_pink">#d81b60</color>
-    <color name="conversation_pink_shade">#a00037</color>
+    <color name="conversation_vermillion">#c73800</color>
+    <color name="conversation_vermillion_tint">#eba78e</color>
+    <color name="conversation_vermillion_shade">#872600</color>
 
-    <color name="conversation_purple">#8e24aa</color>
-    <color name="conversation_purple_shade">#5c007a</color>
+    <color name="conversation_burlap">#756c53</color>
+    <color name="conversation_burlap_tint">#c4b997</color>
+    <color name="conversation_burlap_shade">#58513c</color>
 
-    <color name="conversation_indigo">#3949ab</color>
-    <color name="conversation_indigo_shade">#00227b</color>
+    <color name="conversation_forest">#3b7845</color>
+    <color name="conversation_forest_tint">#8fcc9a</color>
+    <color name="conversation_forest_shade">#2b5934</color>
 
-    <color name="conversation_blue">#1976d2</color>
-    <color name="conversation_blue_shade">#004ba0</color>
+    <color name="conversation_wintergreen">#1c8260</color>
+    <color name="conversation_wintergreen_tint">#9bcfbd</color>
+    <color name="conversation_wintergreen_shade">#36544a</color>
 
-    <color name="conversation_cyan">#00838f</color>
-    <color name="conversation_cyan_shade">#005662</color>
+    <color name="conversation_teal">#067589</color>
+    <color name="conversation_teal_tint">#a5cad5</color>
+    <color name="conversation_teal_shade">#055968</color>
 
-    <color name="conversation_teal">#00796b</color>
-    <color name="conversation_teal_shade">#004c40</color>
+    <color name="conversation_blue">#336ba3</color>
+    <color name="conversation_blue_tint">#adc8e1</color>
+    <color name="conversation_blue_shade">#285480</color>
 
-    <color name="conversation_green">#2e7d32</color>
-    <color name="conversation_green_shade">#005005</color>
+    <color name="conversation_indigo">#5951c8</color>
+    <color name="conversation_indigo_tint">#c2c1e8</color>
+    <color name="conversation_indigo_shade">#4840a0</color>
 
-    <color name="conversation_orange">#bf360c</color>
-    <color name="conversation_orange_shade">#870000</color>
+    <color name="conversation_violet">#862caf</color>
+    <color name="conversation_violet_tint">#cdaddc</color>
+    <color name="conversation_violet_shade">#6b248a</color>
 
-    <color name="conversation_grey">#757575</color>
-    <color name="conversation_grey_shade">#494949</color>
+    <color name="conversation_plumb">#a23474</color>
+    <color name="conversation_plumb_tint">#dcb2ca</color>
+    <color name="conversation_plumb_shade">#881b5b</color>
+
+    <color name="conversation_taupe">#895d66</color>
+    <color name="conversation_taupe_tint">#cfb5bb</color>
+    <color name="conversation_taupe_shade">#6a4e54</color>
+
+    <color name="conversation_steel">#6b6b78</color>
+    <color name="conversation_steel_tint">#bebec6</color>
+    <color name="conversation_steel_shade">#5a5a63</color>
 </resources>
\ No newline at end of file
diff --git a/res/values/core_colors.xml b/res/values/core_colors.xml
index 64baca6c0e4..0ec14c534bf 100644
--- a/res/values/core_colors.xml
+++ b/res/values/core_colors.xml
@@ -6,19 +6,16 @@
     <color name="core_red_highlight">#ef5350</color>
 
     <color name="core_white">#ffffff</color>
-    <color name="core_light_02">#F9FAFA</color>
-    <color name="core_light_10">#EEEFEF</color>
-    <color name="core_light_35">#A4A6A9</color>
-    <color name="core_light_45">#8B8E91</color>
-    <color name="core_light_60">#62656A</color>
-    <color name="core_light_90">#070C14</color>
-
     <color name="core_black">#000000</color>
-    <color name="core_dark_05">#EFEFEF</color>
-    <color name="core_dark_30">#A8A9AA</color>
-    <color name="core_dark_55">#88898C</color>
-    <color name="core_dark_60">#797A7C</color>
-    <color name="core_dark_70">#414347</color>
-    <color name="core_dark_85">#1A1C20</color>
-    <color name="core_dark_95">#0A0C11</color>
+
+    <color name="core_grey_02">#f8f9f9</color>
+    <color name="core_grey_05">#eeefef</color>
+    <color name="core_grey_15">#d5d6d6</color>
+    <color name="core_grey_25">#bbbdbe</color>
+    <color name="core_grey_45">#898a8c</color>
+    <color name="core_grey_60">#636467</color>
+    <color name="core_grey_75">#3d3e44</color>
+    <color name="core_grey_85">#23252a</color>
+    <color name="core_grey_90">#17191d</color>
+    <color name="core_grey_95">#0f1012</color>
 </resources>
\ No newline at end of file
diff --git a/res/values/dimens.xml b/res/values/dimens.xml
index 833b858da3a..f463d1012ac 100644
--- a/res/values/dimens.xml
+++ b/res/values/dimens.xml
@@ -55,6 +55,9 @@
     <dimen name="conversation_list_fragment_archive_padding">16dp</dimen>
     <dimen name="contact_selection_actions_tap_area">10dp</dimen>
 
+    <dimen name="unread_count_bubble_radius">13sp</dimen>
+    <dimen name="unread_count_bubble_diameter">26sp</dimen>
+
     <!-- RedPhone -->
 
     <!-- Height of the main row of in-call buttons. -->
diff --git a/res/values/styles.xml b/res/values/styles.xml
index 1a4cbf1bf6a..cedef4f67fe 100644
--- a/res/values/styles.xml
+++ b/res/values/styles.xml
@@ -174,7 +174,7 @@
         <item name="android:background">@null</item>
         <item name="android:maxLines">4</item>
         <item name="android:maxLength">2000</item>
-        <item name="android:textColor">?conversation_item_sent_text_primary_color</item>
+        <item name="android:textColor">?conversation_item_received_text_primary_color</item>
         <item name="android:capitalize">sentences</item>
         <item name="android:autoText">true</item>
         <item name="android:gravity">center_vertical</item>
diff --git a/res/values/themes.xml b/res/values/themes.xml
index 4f61ea02114..e1bc8c06584 100644
--- a/res/values/themes.xml
+++ b/res/values/themes.xml
@@ -21,8 +21,8 @@
         <item name="media_overview_toolbar_background">@color/white</item>
         <item name="media_overview_toolbar_foreground">@color/gray70</item>
         <item name="media_overview_header_foreground">@color/gray50</item>
-        <item name="media_overview_document_primary">@color/core_light_90</item>
-        <item name="media_overview_document_secondary">@color/core_light_60</item>
+        <item name="media_overview_document_primary">@color/core_grey_90</item>
+        <item name="media_overview_document_secondary">@color/core_grey_60</item>
     </style>
 
     <style name="TextSecure.DarkNoActionBar" parent="@style/TextSecure.DarkTheme">
@@ -45,8 +45,8 @@
         <item name="media_overview_toolbar_background">@color/black</item>
         <item name="media_overview_toolbar_foreground">@color/white</item>
         <item name="media_overview_header_foreground">@color/gray10</item>
-        <item name="media_overview_document_primary">@color/core_dark_05</item>
-        <item name="media_overview_document_secondary">@color/core_dark_30</item>
+        <item name="media_overview_document_primary">@color/core_grey_05</item>
+        <item name="media_overview_document_secondary">@color/core_grey_25</item>
     </style>
 
     <style name="TextSecure.HighlightTheme" parent="@style/TextSecure.LightTheme">
@@ -86,7 +86,7 @@
         <item name="centered_app_title_color">@color/gray27</item>
         <item name="ic_arrow_forward">@drawable/ic_arrow_forward_dark</item>
         <item name="lockscreen_watermark">@drawable/lockscreen_watermark_dark</item>
-        <item name="android:windowBackground">@color/black</item>
+        <item name="android:windowBackground">@color/core_grey_95</item>
         <item name="ic_visibility">@drawable/ic_visibility_white_24dp</item>
         <item name="ic_visibility_off">@drawable/ic_visibility_off_white_24dp</item>
 
@@ -132,12 +132,14 @@
         <item name="attachment_document_icon_large">@drawable/ic_document_large_light</item>
 
         <item name="conversation_list_item_background">@drawable/conversation_list_item_background</item>
-        <item name="conversation_list_item_contact_color">@color/core_light_90</item>
-        <item name="conversation_list_item_subject_color">@color/core_light_60</item>
-        <item name="conversation_list_item_delivery_icon_color">@color/core_light_35</item>
-        <item name="conversation_list_item_date_color">@color/core_light_60</item>
+        <item name="conversation_list_item_contact_color">@color/core_grey_90</item>
+        <item name="conversation_list_item_subject_color">@color/core_grey_60</item>
+        <item name="conversation_list_item_delivery_icon_color">@color/core_grey_45</item>
+        <item name="conversation_list_item_date_color">@color/core_grey_60</item>
         <item name="conversation_list_item_unread_color">@color/core_black</item>
+        <item name="conversation_list_item_unread_background">@drawable/unread_count_background_light</item>
         <item name="conversation_list_item_divider">@drawable/conversation_list_divider_shape</item>
+        <item name="conversation_list_toolbar_background">@color/core_blue</item>
 
         <item name="fab_color">@color/textsecure_primary</item>
         <item name="lower_right_divet">@drawable/divet_lower_right_dark</item>
@@ -148,7 +150,7 @@
         <item name="conversation_editor_background">#22000000</item>
         <item name="conversation_editor_text_color">#ff111111</item>
         <item name="conversation_input_background">@drawable/compose_background_light</item>
-        <item name="conversation_input_inline_attach_icon_tint">@color/core_light_60</item>
+        <item name="conversation_input_inline_attach_icon_tint">@color/core_grey_60</item>
         <item name="conversation_transport_sms_indicator">@drawable/ic_send_sms_insecure</item>
         <item name="conversation_transport_push_indicator">@drawable/ic_send_push</item>
         <item name="conversation_transport_popup_background">@color/white</item>
@@ -185,20 +187,20 @@
         <item name="emoji_category_emoticons">@drawable/emoji_category_emoticons_light</item>
 
 
-        <item name="conversation_item_bubble_background">@color/core_light_10</item>
-        <item name="conversation_item_sent_text_primary_color">@color/core_light_90</item>
-        <item name="conversation_item_sent_text_secondary_color">@color/core_light_60</item>
+        <item name="conversation_item_bubble_background">@color/core_grey_05</item>
+        <item name="conversation_item_sent_text_primary_color">@color/core_white</item>
+        <item name="conversation_item_sent_text_secondary_color">@color/core_white</item>
+        <item name="conversation_item_sent_icon_color">@color/core_white</item>
         <item name="conversation_item_sent_text_indicator_tab_color">#99000000</item>
-        <item name="conversation_item_received_text_primary_color">@color/white</item>
-        <item name="conversation_item_received_text_secondary_color">#ffffff</item>
-        <item name="conversation_item_update_text_color">@color/core_light_60</item>
-        <item name="conversation_item_last_seen_text_color">@color/core_light_90</item>
-        <item name="conversation_item_last_seen_line_color">@color/core_light_60</item>
-        <item name="conversation_item_date_line_color">@color/core_light_45</item>
-        <item name="conversation_item_quote_text_color">@color/core_light_90</item>
+        <item name="conversation_item_received_text_primary_color">@color/core_grey_90</item>
+        <item name="conversation_item_received_text_secondary_color">@color/core_grey_60</item>
+        <item name="conversation_item_update_text_color">@color/core_grey_60</item>
+        <item name="conversation_item_last_seen_text_color">@color/core_grey_90</item>
+        <item name="conversation_item_last_seen_line_color">@color/core_grey_60</item>
+        <item name="conversation_item_date_line_color">@color/core_grey_25</item>
+        <item name="conversation_item_quote_text_color">@color/core_grey_90</item>
         <item name="conversation_item_sticky_date_background">@drawable/sticky_date_header_background_light</item>
-        <item name="conversation_item_sticky_date_text_color">@color/core_light_60</item>
-        <item name="conversation_item_sent_icon_color">@color/core_light_45</item>
+        <item name="conversation_item_sticky_date_text_color">@color/core_grey_60</item>
 
         <item name="quick_camera_icon">@drawable/quick_camera_light</item>
         <item name="quick_mic_icon">@drawable/ic_mic_grey600_24dp</item>
@@ -243,7 +245,7 @@
 
         <item name="pref_divider">@drawable/preference_divider_light</item>
 
-        <item name="quote_missing_icon_color">@color/core_light_60</item>
+        <item name="quote_missing_icon_color">@color/core_grey_60</item>
 
         <item name="group_members_dialog_icon">@drawable/ic_group_grey600_24dp</item>
         <item name="preferenceTheme">@style/PreferenceThemeOverlay.Fix</item>
@@ -254,7 +256,7 @@
 
         <item name="shared_contact_details_header_background">@color/grey_100</item>
         <item name="shared_contact_details_titlebar">@color/grey_400</item>
-        <item name="shared_contact_item_button_color">@color/core_light_02</item>
+        <item name="shared_contact_item_button_color">@color/core_grey_02</item>
     </style>
 
     <style name="TextSecure.DarkTheme" parent="@style/Theme.AppCompat">
@@ -269,7 +271,7 @@
         <item name="colorAccent">@color/textsecure_primary_dark</item>
         <item name="colorControlActivated">@color/signal_primary_dark</item>
         <item name="colorControlHighlight">@color/signal_primary_dark</item>
-        <item name="android:windowBackground">@color/black</item>
+        <item name="android:windowBackground">@color/core_grey_95</item>
         <item name="alertDialogTheme">@style/AppCompatAlertDialogStyleDark</item>
         <item name="android:alertDialogTheme">@style/AppCompatDialogStyleDark</item>
 
@@ -280,28 +282,30 @@
         <item name="conversation_list_item_background">@drawable/conversation_list_item_background_dark</item>
         <item name="conversation_list_item_contact_color">#ffdddddd</item>
         <item name="conversation_list_item_subject_color">#ffdddddd</item>
-        <item name="conversation_list_item_delivery_icon_color">@color/core_dark_55</item>
+        <item name="conversation_list_item_delivery_icon_color">@color/core_grey_45</item>
         <item name="conversation_list_item_date_color">#ffdddddd</item>
         <item name="conversation_list_item_unread_color">@color/core_white</item>
+        <item name="conversation_list_item_unread_background">@drawable/unread_count_background_dark</item>
         <item name="conversation_list_item_divider">@drawable/conversation_list_divider_shape_dark</item>
+        <item name="conversation_list_toolbar_background">@color/core_grey_90</item>
 
         <item name="conversation_group_member_name">#99ffffff</item>
 
-        <item name="conversation_item_bubble_background">@color/core_dark_70</item>
-        <item name="conversation_item_sent_text_primary_color">@color/core_dark_05</item>
-        <item name="conversation_item_sent_text_secondary_color">@color/core_dark_30</item>
+        <item name="conversation_item_bubble_background">@color/core_grey_75</item>
+        <item name="conversation_item_sent_text_primary_color">@color/core_grey_05</item>
+        <item name="conversation_item_sent_text_secondary_color">@color/core_grey_05</item>
+        <item name="conversation_item_sent_icon_color">@color/core_grey_05</item>
         <item name="conversation_item_sent_text_indicator_tab_color">#99ffffff</item>
-        <item name="conversation_item_received_text_primary_color">@color/core_dark_05</item>
-        <item name="conversation_item_received_text_secondary_color">#efefef</item>
+        <item name="conversation_item_received_text_primary_color">@color/core_grey_05</item>
+        <item name="conversation_item_received_text_secondary_color">@color/core_grey_25</item>
         <item name="conversation_item_sent_indicator_text_background">@drawable/conversation_item_sent_indicator_text_shape_dark</item>
-        <item name="conversation_item_update_text_color">@color/core_light_35</item>
-        <item name="conversation_item_last_seen_text_color">@color/core_dark_30</item>
-        <item name="conversation_item_last_seen_line_color">@color/core_dark_30</item>
-        <item name="conversation_item_date_line_color">@color/core_dark_55</item>
-        <item name="conversation_item_quote_text_color">@color/core_dark_05</item>
+        <item name="conversation_item_update_text_color">@color/core_grey_45</item>
+        <item name="conversation_item_last_seen_text_color">@color/core_grey_25</item>
+        <item name="conversation_item_last_seen_line_color">@color/core_grey_25</item>
+        <item name="conversation_item_date_line_color">@color/core_grey_45</item>
+        <item name="conversation_item_quote_text_color">@color/core_grey_05</item>
         <item name="conversation_item_sticky_date_background">@drawable/sticky_date_header_background_dark</item>
-        <item name="conversation_item_sticky_date_text_color">@color/core_dark_30</item>
-        <item name="conversation_item_sent_icon_color">@color/core_dark_60</item>
+        <item name="conversation_item_sticky_date_text_color">@color/core_grey_25</item>
 
         <item name="contact_list_divider">@drawable/contact_list_divider_dark</item>
 
@@ -320,11 +324,11 @@
         <item name="fab_color">@color/textsecure_primary_dark</item>
         <item name="lower_right_divet">@drawable/divet_lower_right_light</item>
 
-        <item name="conversation_background">@color/black</item>
+        <item name="conversation_background">@color/core_grey_95</item>
         <item name="conversation_editor_background">#22ffffff</item>
         <item name="conversation_editor_text_color">#ffeeeeee</item>
         <item name="conversation_input_background">@drawable/compose_background_dark</item>
-        <item name="conversation_input_inline_attach_icon_tint">@color/core_dark_05</item>
+        <item name="conversation_input_inline_attach_icon_tint">@color/core_grey_05</item>
         <item name="conversation_transport_sms_indicator">@drawable/ic_send_sms_insecure_dark</item>
         <item name="conversation_transport_push_indicator">@drawable/ic_send_push</item>
         <item name="conversation_transport_popup_background">@color/black</item>
@@ -388,7 +392,7 @@
 
         <item name="pref_divider">@drawable/preference_divider_dark</item>
 
-        <item name="quote_missing_icon_color">@color/core_dark_05</item>
+        <item name="quote_missing_icon_color">@color/core_grey_05</item>
 
         <item name="group_members_dialog_icon">@drawable/ic_group_white_24dp</item>
         <item name="preferenceTheme">@style/PreferenceThemeOverlay.Fix</item>
@@ -398,7 +402,7 @@
 
         <item name="shared_contact_details_header_background">@color/grey_800</item>
         <item name="shared_contact_details_titlebar">@color/grey_900</item>
-        <item name="shared_contact_item_button_color">@color/core_dark_85</item>
+        <item name="shared_contact_item_button_color">@color/core_grey_90</item>
     </style>
     
     <style name="RationaleDialog" parent="Theme.AppCompat.Light.Dialog.Alert">
diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java
index 7fc4128fbf3..4f08d232aaf 100644
--- a/src/org/thoughtcrime/securesms/ConversationActivity.java
+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java
@@ -2246,12 +2246,14 @@ public void handleReplyMessage(MessageRecord messageRecord) {
       inputPanel.setQuote(GlideApp.with(this),
                           messageRecord.getDateSent(),
                           author,
+                          recipient,
                           body,
                           slideDeck);
     } else {
       inputPanel.setQuote(GlideApp.with(this),
                           messageRecord.getDateSent(),
                           author,
+                          recipient,
                           messageRecord.getBody(),
                           messageRecord.isMms() ? ((MmsMessageRecord) messageRecord).getSlideDeck() : new SlideDeck());
     }
diff --git a/src/org/thoughtcrime/securesms/ConversationItem.java b/src/org/thoughtcrime/securesms/ConversationItem.java
index 6d14193f0e3..f6b00a118d1 100644
--- a/src/org/thoughtcrime/securesms/ConversationItem.java
+++ b/src/org/thoughtcrime/securesms/ConversationItem.java
@@ -303,9 +303,9 @@ public MessageRecord getMessageRecord() {
   private void setBubbleState(MessageRecord messageRecord) {
     if (messageRecord.isOutgoing()) {
       bodyBubble.getBackground().setColorFilter(defaultBubbleColor, PorterDuff.Mode.MULTIPLY);
+      bodyBubble.getBackground().setColorFilter(messageRecord.getRecipient().getColor().toConversationColor(context), PorterDuff.Mode.MULTIPLY);
     } else {
       bodyBubble.getBackground().setColorFilter(defaultBubbleColor, PorterDuff.Mode.MULTIPLY);
-      bodyBubble.getBackground().setColorFilter(messageRecord.getRecipient().getColor().toConversationColor(context), PorterDuff.Mode.MULTIPLY);
     }
 
     if (audioViewStub.resolved()) {
@@ -315,13 +315,13 @@ private void setBubbleState(MessageRecord messageRecord) {
 
   private void setAudioViewTint(MessageRecord messageRecord, Recipient recipient) {
     if (messageRecord.isOutgoing()) {
+      audioViewStub.get().setTint(Color.WHITE, recipient.getColor().toConversationColor(context));
+    } else {
       if (DynamicTheme.LIGHT.equals(TextSecurePreferences.getTheme(context))) {
-        audioViewStub.get().setTint(getContext().getResources().getColor(R.color.core_light_60), defaultBubbleColor);
+        audioViewStub.get().setTint(getContext().getResources().getColor(R.color.core_grey_60), defaultBubbleColor);
       } else {
         audioViewStub.get().setTint(Color.WHITE, defaultBubbleColor);
       }
-    } else {
-      audioViewStub.get().setTint(Color.WHITE, recipient.getColor().toConversationColor(context));
     }
   }
 
@@ -599,7 +599,7 @@ private void setQuote(@NonNull MessageRecord current, @NonNull Optional<MessageR
     if (current.isMms() && !current.isMmsNotification() && ((MediaMmsMessageRecord)current).getQuote() != null) {
       Quote quote = ((MediaMmsMessageRecord)current).getQuote();
       assert quote != null;
-      quoteView.setQuote(glideRequests, quote.getId(), Recipient.from(context, quote.getAuthor(), true), quote.getText(), quote.isOriginalMissing(), quote.getAttachment());
+      quoteView.setQuote(glideRequests, quote.getId(), Recipient.from(context, quote.getAuthor(), true), conversationRecipient, quote.getText(), quote.isOriginalMissing(), quote.getAttachment());
       quoteView.setVisibility(View.VISIBLE);
       quoteView.getLayoutParams().width = ViewGroup.LayoutParams.WRAP_CONTENT;
 
diff --git a/src/org/thoughtcrime/securesms/ConversationListActivity.java b/src/org/thoughtcrime/securesms/ConversationListActivity.java
index 1787a5b447d..d50e153fb16 100644
--- a/src/org/thoughtcrime/securesms/ConversationListActivity.java
+++ b/src/org/thoughtcrime/securesms/ConversationListActivity.java
@@ -21,11 +21,13 @@
 import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v7.widget.Toolbar;
 import android.support.v7.widget.TooltipCompat;
+import android.text.TextUtils;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
@@ -33,11 +35,19 @@
 import android.widget.ImageView;
 import android.widget.Toast;
 
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+
+import org.thoughtcrime.securesms.color.MaterialColor;
 import org.thoughtcrime.securesms.components.RatingManager;
 import org.thoughtcrime.securesms.components.SearchToolbar;
+import org.thoughtcrime.securesms.contacts.avatars.ContactColors;
+import org.thoughtcrime.securesms.contacts.avatars.GeneratedContactPhoto;
+import org.thoughtcrime.securesms.contacts.avatars.ProfileContactPhoto;
+import org.thoughtcrime.securesms.database.Address;
 import org.thoughtcrime.securesms.database.DatabaseFactory;
 import org.thoughtcrime.securesms.database.MessagingDatabase.MarkedMessageInfo;
 import org.thoughtcrime.securesms.lock.RegistrationLockDialog;
+import org.thoughtcrime.securesms.mms.GlideApp;
 import org.thoughtcrime.securesms.notifications.MarkReadReceiver;
 import org.thoughtcrime.securesms.notifications.MessageNotifier;
 import org.thoughtcrime.securesms.permissions.Permissions;
@@ -48,6 +58,7 @@
 import org.thoughtcrime.securesms.util.DynamicNoActionBarTheme;
 import org.thoughtcrime.securesms.util.DynamicTheme;
 import org.thoughtcrime.securesms.util.TextSecurePreferences;
+import org.whispersystems.libsignal.util.guava.Optional;
 
 import java.util.List;
 
@@ -97,6 +108,8 @@ public void onResume() {
     super.onResume();
     dynamicTheme.onResume(this);
     dynamicLanguage.onResume(this);
+
+    initializeProfileIcon();
   }
 
   @Override
@@ -161,6 +174,23 @@ public void onSearchClosed() {
     });
   }
 
+  private void initializeProfileIcon() {
+    ImageView     icon          = findViewById(R.id.toolbar_icon);
+    Address       localAddress  = Address.fromSerialized(TextSecurePreferences.getLocalNumber(this));
+    String        profileName   = Optional.fromNullable(TextSecurePreferences.getProfileName(this)).or("");
+    MaterialColor fallbackColor = TextUtils.isEmpty(profileName) ? MaterialColor.STEEL : ContactColors.generateFor(profileName);
+    Drawable      fallback      = new GeneratedContactPhoto(profileName, R.drawable.ic_profile_default).asDrawable(this, fallbackColor.toAvatarColor(this));
+
+    GlideApp.with(this)
+            .load(new ProfileContactPhoto(localAddress, String.valueOf(TextSecurePreferences.getProfileAvatarId(this))))
+            .error(fallback)
+            .circleCrop()
+            .diskCacheStrategy(DiskCacheStrategy.ALL)
+            .into(icon);
+
+    icon.setOnClickListener(v -> handleDisplaySettings());
+  }
+
   @Override
   public boolean onOptionsItemSelected(MenuItem item) {
     super.onOptionsItemSelected(item);
diff --git a/src/org/thoughtcrime/securesms/ConversationListItem.java b/src/org/thoughtcrime/securesms/ConversationListItem.java
index 1fe541ee8c9..12a67859684 100644
--- a/src/org/thoughtcrime/securesms/ConversationListItem.java
+++ b/src/org/thoughtcrime/securesms/ConversationListItem.java
@@ -81,7 +81,7 @@ public class ConversationListItem extends RelativeLayout
   private TextView           archivedView;
   private DeliveryStatusView deliveryStatusIndicator;
   private AlertView          alertView;
-  private ImageView          unreadIndicator;
+  private TextView           unreadIndicator;
   private long               lastSeen;
 
   private int             unreadCount;
@@ -311,14 +311,7 @@ private void setUnreadIndicator(ThreadRecord thread) {
       return;
     }
 
-    unreadIndicator.setImageDrawable(TextDrawable.builder()
-                                                 .beginConfig()
-                                                 .width(ViewUtil.dpToPx(getContext(), 24))
-                                                 .height(ViewUtil.dpToPx(getContext(), 24))
-                                                 .textColor(Color.WHITE)
-                                                 .bold()
-                                                 .endConfig()
-                                                 .buildRound(String.valueOf(thread.getUnreadCount()), getResources().getColor(R.color.textsecure_primary_dark)));
+    unreadIndicator.setText(String.valueOf(unreadCount));
     unreadIndicator.setVisibility(View.VISIBLE);
   }
 
diff --git a/src/org/thoughtcrime/securesms/DatabaseUpgradeActivity.java b/src/org/thoughtcrime/securesms/DatabaseUpgradeActivity.java
index 59525d9f9a8..12fc48fe0e1 100644
--- a/src/org/thoughtcrime/securesms/DatabaseUpgradeActivity.java
+++ b/src/org/thoughtcrime/securesms/DatabaseUpgradeActivity.java
@@ -24,7 +24,14 @@
 import android.database.Cursor;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.support.v7.preference.PreferenceManager;
+
+import org.thoughtcrime.securesms.color.MaterialColor;
+import org.thoughtcrime.securesms.contacts.avatars.ContactColors;
+import org.thoughtcrime.securesms.contacts.avatars.ContactColorsLegacy;
+import org.thoughtcrime.securesms.database.RecipientDatabase;
 import org.thoughtcrime.securesms.logging.Log;
 import android.view.View;
 import android.widget.ProgressBar;
@@ -45,6 +52,7 @@
 import org.thoughtcrime.securesms.jobs.RefreshAttributesJob;
 import org.thoughtcrime.securesms.mms.GlideApp;
 import org.thoughtcrime.securesms.notifications.MessageNotifier;
+import org.thoughtcrime.securesms.recipients.Recipient;
 import org.thoughtcrime.securesms.service.KeyCachingService;
 import org.thoughtcrime.securesms.util.FileUtils;
 import org.thoughtcrime.securesms.util.TextSecurePreferences;
@@ -85,6 +93,7 @@ public class DatabaseUpgradeActivity extends BaseActivity {
   public static final int FULL_TEXT_SEARCH                     = 358;
   public static final int BAD_IMPORT_CLEANUP                   = 373;
   public static final int IMAGE_CACHE_CLEANUP                  = 406;
+  public static final int COLOR_MIGRATION                      = 408;
 
   private static final SortedSet<Integer> UPGRADE_VERSIONS = new TreeSet<Integer>() {{
     add(NO_MORE_KEY_EXCHANGE_PREFIX_VERSION);
@@ -108,6 +117,7 @@ public class DatabaseUpgradeActivity extends BaseActivity {
     add(FULL_TEXT_SEARCH);
     add(BAD_IMPORT_CLEANUP);
     add(IMAGE_CACHE_CLEANUP);
+    add(COLOR_MIGRATION);
   }};
 
   private MasterSecret masterSecret;
@@ -318,6 +328,22 @@ protected Void doInBackground(Integer... params) {
         }
       }
 
+      if (params[0] < COLOR_MIGRATION) {
+        long startTime = System.currentTimeMillis();
+        DatabaseFactory.getRecipientDatabase(context).updateSystemContactColors((name, color) -> {
+          if (color != null) {
+            try {
+              return MaterialColor.fromSerialized(color);
+            } catch (MaterialColor.UnknownColorException e) {
+              Log.w(TAG, "Encountered an unknown color during legacy color migration.", e);
+              return ContactColorsLegacy.generateFor(name);
+            }
+          }
+          return ContactColorsLegacy.generateFor(name);
+        });
+        Log.i(TAG, "Color migration took " + (System.currentTimeMillis() - startTime) + " ms");
+      }
+
       return null;
     }
 
diff --git a/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java b/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java
index f5b50ce0f94..1e74347833c 100644
--- a/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java
+++ b/src/org/thoughtcrime/securesms/RecipientPreferenceActivity.java
@@ -54,6 +54,7 @@
 import org.thoughtcrime.securesms.database.loaders.ThreadMediaLoader;
 import org.thoughtcrime.securesms.jobs.MultiDeviceBlockedUpdateJob;
 import org.thoughtcrime.securesms.jobs.MultiDeviceContactUpdateJob;
+import org.thoughtcrime.securesms.jobs.MultiDeviceGroupUpdateJob;
 import org.thoughtcrime.securesms.mms.GlideApp;
 import org.thoughtcrime.securesms.mms.GlideRequests;
 import org.thoughtcrime.securesms.mms.OutgoingGroupMediaMessage;
@@ -380,15 +381,14 @@ private void setSummaries(Recipient recipient) {
       vibrateCallPreference.setSummary(vibrateCallSummary.first);
       vibrateCallPreference.setValueIndex(vibrateCallSummary.second);
 
+      colorPreference.setColors(MaterialColors.CONVERSATION_PALETTE.asConversationColorArray(getActivity()));
+      colorPreference.setColor(recipient.getColor().toActionBarColor(getActivity()));
+
       if (recipient.isGroupRecipient()) {
-        if (colorPreference    != null) colorPreference.setVisible(false);
         if (identityPreference != null) identityPreference.setVisible(false);
         if (aboutCategory      != null) getPreferenceScreen().removePreference(aboutCategory);
         if (aboutDivider       != null) getPreferenceScreen().removePreference(aboutDivider);
       } else {
-        colorPreference.setColors(MaterialColors.CONVERSATION_PALETTE.asConversationColorArray(getActivity()));
-        colorPreference.setColor(recipient.getColor().toActionBarColor(getActivity()));
-
         aboutPreference.setTitle(formatAddress(recipient.getAddress()));
         aboutPreference.setSummary(recipient.getCustomLabel());
         aboutPreference.setSecure(recipient.getRegistered() == RecipientDatabase.RegisteredState.REGISTERED);
@@ -583,7 +583,11 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
             protected Void doInBackground(Void... params) {
               DatabaseFactory.getRecipientDatabase(context).setColor(recipient, selectedColor);
 
-              if (recipient.resolve().getRegistered() == RecipientDatabase.RegisteredState.REGISTERED) {
+              if (recipient.resolve().isGroupRecipient()) {
+                ApplicationContext.getInstance(context)
+                                  .getJobManager()
+                                  .add(new MultiDeviceGroupUpdateJob(context));
+              } else if (recipient.resolve().getRegistered() == RecipientDatabase.RegisteredState.REGISTERED) {
                 ApplicationContext.getInstance(context)
                                   .getJobManager()
                                   .add(new MultiDeviceContactUpdateJob(context, recipient.getAddress()));
diff --git a/src/org/thoughtcrime/securesms/color/MaterialColor.java b/src/org/thoughtcrime/securesms/color/MaterialColor.java
index d487abbc1f1..3066302f844 100644
--- a/src/org/thoughtcrime/securesms/color/MaterialColor.java
+++ b/src/org/thoughtcrime/securesms/color/MaterialColor.java
@@ -2,6 +2,8 @@
 
 import android.content.Context;
 import android.graphics.Color;
+import android.support.annotation.ColorInt;
+import android.support.annotation.ColorRes;
 import android.support.annotation.NonNull;
 
 import org.thoughtcrime.securesms.R;
@@ -12,119 +14,91 @@
 import static org.thoughtcrime.securesms.util.ThemeUtil.isDarkTheme;
 
 public enum MaterialColor {
-  RED        (R.color.conversation_red,    R.color.conversation_red_shade,    "red"),
-  PINK       (R.color.conversation_pink,   R.color.conversation_pink_shade,   "pink"),
-  PURPLE     (R.color.conversation_purple, R.color.conversation_purple_shade, "purple"),
-  INDIGO     (R.color.conversation_indigo, R.color.conversation_indigo_shade, "indigo"),
-  BLUE       (R.color.conversation_blue,   R.color.conversation_blue_shade,   "blue"),
-  CYAN       (R.color.conversation_cyan,   R.color.conversation_cyan_shade,   "cyan"),
-  TEAL       (R.color.conversation_teal,   R.color.conversation_teal_shade,   "teal"),
-  GREEN      (R.color.conversation_green,  R.color.conversation_green_shade,  "green"),
-  ORANGE     (R.color.conversation_orange, R.color.conversation_orange_shade, "orange"),
-  GREY       (R.color.conversation_grey,   R.color.conversation_grey_shade,   "grey");
+  CRIMSON    (R.color.conversation_crimson,     R.color.conversation_crimson_tint,     R.color.conversation_crimson_shade,     "red"),
+  VERMILLION (R.color.conversation_vermillion,  R.color.conversation_vermillion_tint,  R.color.conversation_vermillion_shade,  "orange"),
+  BURLAP     (R.color.conversation_burlap,      R.color.conversation_burlap_tint,      R.color.conversation_burlap_shade,      "brown"),
+  FOREST     (R.color.conversation_forest,      R.color.conversation_forest_tint,      R.color.conversation_forest_shade,      "green"),
+  WINTERGREEN(R.color.conversation_wintergreen, R.color.conversation_wintergreen_tint, R.color.conversation_wintergreen_shade, "light_green"),
+  TEAL       (R.color.conversation_teal,        R.color.conversation_teal_tint,        R.color.conversation_teal_shade,        "teal"),
+  BLUE       (R.color.conversation_blue,        R.color.conversation_blue_tint,        R.color.conversation_blue_shade,        "blue"),
+  INDIGO     (R.color.conversation_indigo,      R.color.conversation_indigo_tint,      R.color.conversation_indigo_shade,      "indigo"),
+  VIOLET     (R.color.conversation_violet,      R.color.conversation_violet_tint,      R.color.conversation_violet_shade,      "purple"),
+  PLUM       (R.color.conversation_plumb,       R.color.conversation_plumb_tint,       R.color.conversation_plumb_shade,       "pink"),
+  TAUPE      (R.color.conversation_taupe,       R.color.conversation_taupe_tint,       R.color.conversation_taupe_shade,       "blue_grey"),
+  STEEL      (R.color.conversation_steel,       R.color.conversation_steel_tint,       R.color.conversation_steel_shade,       "grey");
 
   private static final Map<String, MaterialColor> COLOR_MATCHES = new HashMap<String, MaterialColor>() {{
-    put("red", RED);
-    put("brown", RED);
-    put("pink", PINK);
-    put("purple", PURPLE);
-    put("deep_purple", PURPLE);
-    put("indigo", INDIGO);
-    put("blue", BLUE);
-    put("light_blue", BLUE);
-    put("cyan", CYAN);
-    put("blue_grey", CYAN);
-    put("teal", TEAL);
-    put("green", GREEN);
-    put("light_green", GREEN);
-    put("lime", GREEN);
-    put("orange", ORANGE);
-    put("amber", ORANGE);
-    put("deep_orange", ORANGE);
-    put("yellow", ORANGE);
-    put("grey", GREY);
+    put("red",         CRIMSON);
+    put("deep_orange", CRIMSON);
+    put("orange",      VERMILLION);
+    put("amber",       VERMILLION);
+    put("brown",       BURLAP);
+    put("yellow",      BURLAP);
+    put("pink",        PLUM);
+    put("purple",      VIOLET);
+    put("deep_purple", VIOLET);
+    put("indigo",      INDIGO);
+    put("blue",        BLUE);
+    put("light_blue",  BLUE);
+    put("cyan",        TEAL);
+    put("teal",        TEAL);
+    put("green",       FOREST);
+    put("light_green", WINTERGREEN);
+    put("lime",        WINTERGREEN);
+    put("blue_grey",   TAUPE);
+    put("grey",        STEEL);
     put("group_color", BLUE);
   }};
 
-  private final int conversationColorLight;
-  private final int actionBarColorLight;
-  private final int statusBarColorLight;
-  private final int conversationColorDark;
-  private final int actionBarColorDark;
-  private final int statusBarColorDark;
+  private final @ColorRes int mainColor;
+  private final @ColorRes int tintColor;
+  private final @ColorRes int shadeColor;
+
   private final String serialized;
 
-  MaterialColor(int conversationColorLight, int actionBarColorLight,
-                int statusBarColorLight, int conversationColorDark,
-                int actionBarColorDark, int statusBarColorDark,
-                String serialized)
-  {
-    this.conversationColorLight = conversationColorLight;
-    this.actionBarColorLight    = actionBarColorLight;
-    this.statusBarColorLight    = statusBarColorLight;
-    this.conversationColorDark  = conversationColorDark;
-    this.actionBarColorDark     = actionBarColorDark;
-    this.statusBarColorDark     = statusBarColorDark;
-    this.serialized             = serialized;
-  }
 
-  MaterialColor(int conversationColor, int statusBarColor, String serialized)
-  {
-    this(conversationColor, conversationColor, statusBarColor,
-         conversationColor, conversationColor, statusBarColor, serialized);
+  MaterialColor(@ColorRes int mainColor, @ColorRes int tintColor, @ColorRes int shadeColor, String serialized) {
+    this.mainColor  = mainColor;
+    this.tintColor  = tintColor;
+    this.shadeColor = shadeColor;
+    this.serialized = serialized;
   }
 
-  public int toConversationColor(@NonNull Context context) {
-    return context.getResources().getColor(isDarkTheme(context) ? conversationColorDark
-                                                                : conversationColorLight);
+  public @ColorInt int toConversationColor(@NonNull Context context) {
+    return context.getResources().getColor(mainColor);
   }
 
-  public int toActionBarColor(@NonNull Context context) {
-    return context.getResources().getColor(isDarkTheme(context) ? actionBarColorDark
-                                                                : actionBarColorLight);
+  public @ColorInt int toAvatarColor(@NonNull Context context) {
+    return context.getResources().getColor(isDarkTheme(context) ? shadeColor : mainColor);
   }
 
-  public int toStatusBarColor(@NonNull Context context) {
-    return context.getResources().getColor(isDarkTheme(context) ? statusBarColorDark
-                                                                : statusBarColorLight);
+  public @ColorInt int toActionBarColor(@NonNull Context context) {
+    return context.getResources().getColor(mainColor);
   }
 
-  public int toQuoteBarColorResource(@NonNull Context context, boolean outgoing) {
-    if (outgoing) {
-      return conversationColorDark;
-    }
-    return R.color.white;
+  public @ColorInt int toStatusBarColor(@NonNull Context context) {
+    return context.getResources().getColor(shadeColor);
   }
 
-  public int toQuoteBackgroundColor(@NonNull Context context, boolean outgoing) {
+  public @ColorRes int toQuoteBarColorResource(@NonNull Context context, boolean outgoing) {
     if (outgoing) {
-      int color = toConversationColor(context);
-      int alpha = isDarkTheme(context) ? (int) (0.2 * 255) : (int) (0.4 * 255);
-
-      return Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color));
+      return isDarkTheme(context) ? R.color.core_black : R.color.core_white;
     }
-    return context.getResources().getColor(isDarkTheme(context) ? R.color.transparent_black_70
-                                                                : R.color.transparent_white_aa);
+    return isDarkTheme(context) ? tintColor : shadeColor;
   }
 
-  public int toQuoteFooterColor(@NonNull Context context, boolean outgoing) {
-    if (outgoing) {
-      int color = toConversationColor(context);
-      int alpha = isDarkTheme(context) ? (int) (0.4 * 255) : (int) (0.6 * 255);
+  public @ColorInt int toQuoteBackgroundColor(@NonNull Context context, boolean outgoing) {
+    return context.getResources().getColor(isDarkTheme(context) ? shadeColor : tintColor);
+  }
 
-      return Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color));
-    }
-    return context.getResources().getColor(isDarkTheme(context) ? R.color.transparent_black_90
-                                                                : R.color.transparent_white_bb);
+  public @ColorInt int toQuoteFooterColor(@NonNull Context context, boolean outgoing) {
+    return context.getResources().getColor(isDarkTheme(context) ? tintColor : shadeColor);
   }
 
   public boolean represents(Context context, int colorValue) {
-    return context.getResources().getColor(conversationColorDark)  == colorValue ||
-           context.getResources().getColor(conversationColorLight) == colorValue ||
-           context.getResources().getColor(actionBarColorDark) == colorValue ||
-           context.getResources().getColor(actionBarColorLight) == colorValue ||
-           context.getResources().getColor(statusBarColorLight) == colorValue ||
-           context.getResources().getColor(statusBarColorDark) == colorValue;
+    return context.getResources().getColor(mainColor)  == colorValue ||
+           context.getResources().getColor(tintColor)  == colorValue ||
+           context.getResources().getColor(shadeColor) == colorValue;
   }
 
   public String serialize() {
@@ -144,5 +118,4 @@ public UnknownColorException(String message) {
       super(message);
     }
   }
-
 }
diff --git a/src/org/thoughtcrime/securesms/color/MaterialColors.java b/src/org/thoughtcrime/securesms/color/MaterialColors.java
index dd6124e355e..5a0d5bf7710 100644
--- a/src/org/thoughtcrime/securesms/color/MaterialColors.java
+++ b/src/org/thoughtcrime/securesms/color/MaterialColors.java
@@ -11,15 +11,18 @@
 public class MaterialColors {
 
   public static final MaterialColorList CONVERSATION_PALETTE = new MaterialColorList(new ArrayList<>(Arrays.asList(
-    MaterialColor.ORANGE,
-    MaterialColor.RED,
-    MaterialColor.PINK,
-    MaterialColor.PURPLE,
-    MaterialColor.INDIGO,
+    MaterialColor.PLUM,
+    MaterialColor.CRIMSON,
+    MaterialColor.VERMILLION,
+    MaterialColor.VIOLET,
     MaterialColor.BLUE,
-    MaterialColor.GREEN,
+    MaterialColor.INDIGO,
+    MaterialColor.FOREST,
+    MaterialColor.WINTERGREEN,
     MaterialColor.TEAL,
-    MaterialColor.CYAN
+    MaterialColor.BURLAP,
+    MaterialColor.TAUPE,
+    MaterialColor.STEEL
   )));
 
   public static class MaterialColorList {
diff --git a/src/org/thoughtcrime/securesms/components/AvatarImageView.java b/src/org/thoughtcrime/securesms/components/AvatarImageView.java
index f16e44d5043..7ea9bffbf9e 100644
--- a/src/org/thoughtcrime/securesms/components/AvatarImageView.java
+++ b/src/org/thoughtcrime/securesms/components/AvatarImageView.java
@@ -3,6 +3,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
 import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -15,23 +18,45 @@
 import org.thoughtcrime.securesms.R;
 import org.thoughtcrime.securesms.contacts.avatars.ContactColors;
 import org.thoughtcrime.securesms.contacts.avatars.GeneratedContactPhoto;
+import org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto;
 import org.thoughtcrime.securesms.mms.GlideRequests;
 import org.thoughtcrime.securesms.recipients.Recipient;
+import org.thoughtcrime.securesms.util.ThemeUtil;
 
 public class AvatarImageView extends AppCompatImageView {
 
   private static final String TAG = AvatarImageView.class.getSimpleName();
 
-  private boolean inverted;
-  private OnClickListener listener = null;
+  private static final Paint LIGHT_THEME_OUTLINE_PAINT = new Paint();
+  private static final Paint DARK_THEME_OUTLINE_PAINT  = new Paint();
+
+  static {
+    LIGHT_THEME_OUTLINE_PAINT.setColor(Color.argb((int) (255 * 0.2), 0, 0, 0));
+    LIGHT_THEME_OUTLINE_PAINT.setStyle(Paint.Style.STROKE);
+    LIGHT_THEME_OUTLINE_PAINT.setStrokeWidth(1f);
+    LIGHT_THEME_OUTLINE_PAINT.setAntiAlias(true);
+
+    DARK_THEME_OUTLINE_PAINT.setColor(Color.argb((int) (255 * 0.2), 255, 255, 255));
+    DARK_THEME_OUTLINE_PAINT.setStyle(Paint.Style.STROKE);
+    DARK_THEME_OUTLINE_PAINT.setStrokeWidth(1f);
+    DARK_THEME_OUTLINE_PAINT.setAntiAlias(true);
+  }
+
+  private boolean         inverted;
+  private Paint           outlinePaint;
+  private OnClickListener listener;
 
   public AvatarImageView(Context context) {
     super(context);
-    setScaleType(ScaleType.CENTER_CROP);
+    initialize(context, null);
   }
 
   public AvatarImageView(Context context, AttributeSet attrs) {
     super(context, attrs);
+    initialize(context, attrs);
+  }
+
+  private void initialize(@NonNull Context context, @Nullable AttributeSet attrs) {
     setScaleType(ScaleType.CENTER_CROP);
 
     if (attrs != null) {
@@ -39,6 +64,19 @@ public AvatarImageView(Context context, AttributeSet attrs) {
       inverted = typedArray.getBoolean(0, false);
       typedArray.recycle();
     }
+
+    outlinePaint = ThemeUtil.isDarkTheme(getContext()) ? DARK_THEME_OUTLINE_PAINT : LIGHT_THEME_OUTLINE_PAINT;
+  }
+
+  @Override
+  protected void dispatchDraw(Canvas canvas) {
+    super.dispatchDraw(canvas);
+
+    float cx     = canvas.getWidth()  / 2;
+    float cy     = canvas.getHeight() / 2;
+    float radius = (canvas.getWidth() / 2) - (outlinePaint.getStrokeWidth() / 2);
+    
+    canvas.drawCircle(cx, cy, radius, outlinePaint);
   }
 
   @Override
@@ -57,7 +95,7 @@ public void setAvatar(@NonNull GlideRequests requestManager, @Nullable Recipient
                     .into(this);
       setAvatarClickHandler(recipient, quickContactEnabled);
     } else {
-      setImageDrawable(new GeneratedContactPhoto("#").asDrawable(getContext(), ContactColors.UNKNOWN_COLOR.toConversationColor(getContext()), inverted));
+      setImageDrawable(new ResourceContactPhoto(R.drawable.ic_profile_default).asDrawable(getContext(), ContactColors.UNKNOWN_COLOR.toConversationColor(getContext()), inverted));
       super.setOnClickListener(listener);
     }
   }
diff --git a/src/org/thoughtcrime/securesms/components/InputPanel.java b/src/org/thoughtcrime/securesms/components/InputPanel.java
index 031acc46b01..1211fb1c051 100644
--- a/src/org/thoughtcrime/securesms/components/InputPanel.java
+++ b/src/org/thoughtcrime/securesms/components/InputPanel.java
@@ -120,8 +120,8 @@ public void setMediaListener(@NonNull MediaListener listener) {
     composeText.setMediaListener(listener);
   }
 
-  public void setQuote(@NonNull GlideRequests glideRequests, long id, @NonNull Recipient author, @NonNull String body, @NonNull SlideDeck attachments) {
-    this.quoteView.setQuote(glideRequests, id, author, body, false, attachments);
+  public void setQuote(@NonNull GlideRequests glideRequests, long id, @NonNull Recipient author, @NonNull Recipient conversation, @NonNull String body, @NonNull SlideDeck attachments) {
+    this.quoteView.setQuote(glideRequests, id, author, conversation, body, false, attachments);
     this.quoteView.setVisibility(View.VISIBLE);
   }
 
diff --git a/src/org/thoughtcrime/securesms/components/QuoteView.java b/src/org/thoughtcrime/securesms/components/QuoteView.java
index dc6eba85fc4..47541fc9205 100644
--- a/src/org/thoughtcrime/securesms/components/QuoteView.java
+++ b/src/org/thoughtcrime/securesms/components/QuoteView.java
@@ -54,6 +54,7 @@ public class QuoteView extends FrameLayout implements RecipientModifiedListener
 
   private long       id;
   private Recipient  author;
+  private Recipient  conversation;
   private String     body;
   private TextView   mediaDescriptionText;
   private TextView   missingLinkText;
@@ -154,22 +155,24 @@ protected void dispatchDraw(Canvas canvas) {
   public void setQuote(GlideRequests glideRequests,
                        long id,
                        @NonNull Recipient author,
+                       @NonNull Recipient conversation,
                        @Nullable String body,
                        boolean originalMissing,
                        @NonNull SlideDeck attachments)
   {
     if (this.author != null) this.author.removeListener(this);
 
-    this.id          = id;
-    this.author      = author;
-    this.body        = body;
-    this.attachments = attachments;
+    this.id           = id;
+    this.author       = author;
+    this.conversation = conversation;
+    this.body         = body;
+    this.attachments  = attachments;
 
     author.addListener(this);
-    setQuoteAuthor(author);
+    setQuoteAuthor(author, conversation);
     setQuoteText(body, attachments);
     setQuoteAttachment(glideRequests, attachments);
-    setQuoteMissingFooter(originalMissing);
+    setQuoteMissingFooter(originalMissing, conversation);
   }
 
   public void setTopCornerSizes(boolean topLeftLarge, boolean topRightLarge) {
@@ -191,21 +194,21 @@ public void dismiss() {
   public void onModified(Recipient recipient) {
     Util.runOnMain(() -> {
       if (recipient == author) {
-        setQuoteAuthor(recipient);
+        setQuoteAuthor(recipient, conversation);
       }
     });
   }
 
-  private void setQuoteAuthor(@NonNull Recipient author) {
-    boolean outgoing    = messageType != MESSAGE_TYPE_INCOMING;
+  private void setQuoteAuthor(@NonNull Recipient author, @NonNull Recipient conversation) {
+    boolean outgoing    = messageType == MESSAGE_TYPE_OUTGOING;
     boolean isOwnNumber = Util.isOwnNumber(getContext(), author.getAddress());
 
     authorView.setText(isOwnNumber ? getContext().getString(R.string.QuoteView_you)
                                    : author.toShortString());
 
     // We use the raw color resource because Android 4.x was struggling with tints here
-    quoteBarView.setImageResource(author.getColor().toQuoteBarColorResource(getContext(), outgoing));
-    mainView.setBackgroundColor(author.getColor().toQuoteBackgroundColor(getContext(), outgoing));
+    quoteBarView.setImageResource(conversation.getColor().toQuoteBarColorResource(getContext(), outgoing));
+    mainView.setBackgroundColor(conversation.getColor().toQuoteBackgroundColor(getContext(), outgoing));
   }
 
   private void setQuoteText(@Nullable String body, @NonNull SlideDeck attachments) {
@@ -268,9 +271,9 @@ private void setQuoteAttachment(@NonNull GlideRequests glideRequests, @NonNull S
     }
   }
 
-  private void setQuoteMissingFooter(boolean missing) {
+  private void setQuoteMissingFooter(boolean missing, @NonNull Recipient conversation) {
     footerView.setVisibility(missing ? VISIBLE : GONE);
-    footerView.setBackgroundColor(author.getColor().toQuoteFooterColor(getContext(), messageType != MESSAGE_TYPE_INCOMING));
+    footerView.setBackgroundColor(conversation.getColor().toQuoteFooterColor(getContext(), messageType == MESSAGE_TYPE_OUTGOING));
   }
 
   public long getQuoteId() {
diff --git a/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java
index 0385d692924..12c11532348 100644
--- a/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java
+++ b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColors.java
@@ -5,35 +5,30 @@
 import org.thoughtcrime.securesms.color.MaterialColor;
 import org.thoughtcrime.securesms.color.MaterialColors;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
 public class ContactColors {
 
-  public static final MaterialColor UNKNOWN_COLOR = MaterialColor.GREY;
+  public static final MaterialColor UNKNOWN_COLOR = MaterialColor.STEEL;
 
-  private static final String[] LEGACY_PALETTE = new String[] {
-      "red",
-      "pink",
-      "purple",
-      "deep_purple",
-      "indigo",
-      "blue",
-      "light_blue",
-      "cyan",
-      "teal",
-      "green",
-      "light_green",
-      "orange",
-      "deep_orange",
-      "amber",
-      "blue_grey"
-  };
+  private static final List<MaterialColor> CONVERSATION_PALETTE = new ArrayList<>(Arrays.asList(
+      MaterialColor.PLUM,
+      MaterialColor.CRIMSON,
+      MaterialColor.VERMILLION,
+      MaterialColor.VIOLET,
+      MaterialColor.BLUE,
+      MaterialColor.INDIGO,
+      MaterialColor.FOREST,
+      MaterialColor.WINTERGREEN,
+      MaterialColor.TEAL,
+      MaterialColor.BURLAP,
+      MaterialColor.TAUPE,
+      MaterialColor.STEEL
+  ));
 
   public static MaterialColor generateFor(@NonNull String name) {
-    String serialized = LEGACY_PALETTE[Math.abs(name.hashCode()) % LEGACY_PALETTE.length];
-    try {
-      return MaterialColor.fromSerialized(serialized);
-    } catch (MaterialColor.UnknownColorException e) {
-      return MaterialColors.CONVERSATION_PALETTE.get(Math.abs(name.hashCode()) % MaterialColors.CONVERSATION_PALETTE.size());
-    }
+    return CONVERSATION_PALETTE.get(Math.abs(name.hashCode()) % CONVERSATION_PALETTE.size());
   }
-
 }
diff --git a/src/org/thoughtcrime/securesms/contacts/avatars/ContactColorsLegacy.java b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColorsLegacy.java
new file mode 100644
index 00000000000..ec99f4d36de
--- /dev/null
+++ b/src/org/thoughtcrime/securesms/contacts/avatars/ContactColorsLegacy.java
@@ -0,0 +1,40 @@
+package org.thoughtcrime.securesms.contacts.avatars;
+
+import android.support.annotation.NonNull;
+
+import org.thoughtcrime.securesms.color.MaterialColor;
+import org.thoughtcrime.securesms.color.MaterialColors;
+
+/**
+ * Used for migrating legacy colors to modern colors. For normal color generation, use
+ * {@link ContactColors}.
+ */
+public class ContactColorsLegacy {
+
+  private static final String[] LEGACY_PALETTE = new String[] {
+      "red",
+      "pink",
+      "purple",
+      "deep_purple",
+      "indigo",
+      "blue",
+      "light_blue",
+      "cyan",
+      "teal",
+      "green",
+      "light_green",
+      "orange",
+      "deep_orange",
+      "amber",
+      "blue_grey"
+  };
+
+  public static MaterialColor generateFor(@NonNull String name) {
+    String serialized = LEGACY_PALETTE[Math.abs(name.hashCode()) % LEGACY_PALETTE.length];
+    try {
+      return MaterialColor.fromSerialized(serialized);
+    } catch (MaterialColor.UnknownColorException e) {
+      return ContactColors.generateFor(name);
+    }
+  }
+}
diff --git a/src/org/thoughtcrime/securesms/contacts/avatars/GeneratedContactPhoto.java b/src/org/thoughtcrime/securesms/contacts/avatars/GeneratedContactPhoto.java
index 61e6f06f66b..5464486ce0c 100644
--- a/src/org/thoughtcrime/securesms/contacts/avatars/GeneratedContactPhoto.java
+++ b/src/org/thoughtcrime/securesms/contacts/avatars/GeneratedContactPhoto.java
@@ -2,52 +2,82 @@
 
 import android.content.Context;
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
+import android.graphics.drawable.LayerDrawable;
 import android.support.annotation.NonNull;
-import android.support.v4.content.ContextCompat;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.Nullable;
 import android.support.v7.content.res.AppCompatResources;
+import android.text.TextUtils;
 
 import com.amulyakhare.textdrawable.TextDrawable;
 
 import org.thoughtcrime.securesms.R;
+import org.thoughtcrime.securesms.util.ThemeUtil;
+import org.thoughtcrime.securesms.util.ViewUtil;
 
 import java.util.regex.Pattern;
 
 public class GeneratedContactPhoto implements FallbackContactPhoto {
 
-  private static final Pattern PATTERN = Pattern.compile("[^\\p{L}\\p{Nd}\\p{P}\\p{S}]+");
+  private static final Pattern  PATTERN  = Pattern.compile("[^\\p{L}\\p{Nd}\\p{P}\\p{S}]+");
+  private static final Typeface TYPEFACE = Typeface.create("sans-serif-medium", Typeface.NORMAL);
 
   private final String name;
+  private final int    fallbackResId;
 
-  public GeneratedContactPhoto(@NonNull String name) {
-    this.name  = name;
+  public GeneratedContactPhoto(@NonNull String name, @DrawableRes int fallbackResId) {
+    this.name          = name;
+    this.fallbackResId = fallbackResId;
   }
 
   @Override
   public Drawable asDrawable(Context context, int color) {
-    return asDrawable(context, color, false);
+    return asDrawable(context, color,false);
   }
 
   @Override
   public Drawable asDrawable(Context context, int color, boolean inverted) {
     int targetSize = context.getResources().getDimensionPixelSize(R.dimen.contact_photo_target_size);
+    String character = getAbbreviation(name);
 
-    return TextDrawable.builder()
-                       .beginConfig()
-                       .width(targetSize)
-                       .height(targetSize)
-                       .textColor(inverted ? color : Color.WHITE)
-                       .endConfig()
-                       .buildRound(getCharacter(name), inverted ? Color.WHITE : color);
+    if (!TextUtils.isEmpty(character)) {
+      Drawable base = TextDrawable.builder()
+                                  .beginConfig()
+                                  .width(targetSize)
+                                  .height(targetSize)
+                                  .useFont(TYPEFACE)
+                                  .fontSize(ViewUtil.dpToPx(context, 24))
+                                  .textColor(inverted ? color : Color.WHITE)
+                                  .endConfig()
+                                  .buildRound(character, inverted ? Color.WHITE : color);
+
+      Drawable gradient = context.getResources().getDrawable(ThemeUtil.isDarkTheme(context) ? R.drawable.avatar_gradient_dark
+                                                                                            : R.drawable.avatar_gradient_light);
+      return new LayerDrawable(new Drawable[] { base, gradient });
+    }
+
+    return new ResourceContactPhoto(fallbackResId).asDrawable(context, color, inverted);
   }
 
-  private String getCharacter(String name) {
-    String cleanedName = PATTERN.matcher(name).replaceFirst("");
+  private @Nullable String getAbbreviation(String name) {
+    String[]      parts   = name.split(" ");
+    StringBuilder builder = new StringBuilder();
+    int           count   = 0;
+
+    for (int i = 0; i < parts.length && count < 2; i++) {
+      String cleaned = PATTERN.matcher(parts[i]).replaceFirst("");
+      if (!TextUtils.isEmpty(cleaned)) {
+        builder.appendCodePoint(cleaned.codePointAt(0));
+        count++;
+      }
+    }
 
-    if (cleanedName.isEmpty()) {
-      return "#";
+    if (builder.length() == 0) {
+      return null;
     } else {
-      return new StringBuilder().appendCodePoint(cleanedName.codePointAt(0)).toString();
+      return builder.toString();
     }
   }
 
diff --git a/src/org/thoughtcrime/securesms/contacts/avatars/ResourceContactPhoto.java b/src/org/thoughtcrime/securesms/contacts/avatars/ResourceContactPhoto.java
index edb902c3569..c4010bef63a 100644
--- a/src/org/thoughtcrime/securesms/contacts/avatars/ResourceContactPhoto.java
+++ b/src/org/thoughtcrime/securesms/contacts/avatars/ResourceContactPhoto.java
@@ -12,6 +12,9 @@
 import com.amulyakhare.textdrawable.TextDrawable;
 import com.makeramen.roundedimageview.RoundedDrawable;
 
+import org.thoughtcrime.securesms.R;
+import org.thoughtcrime.securesms.util.ThemeUtil;
+
 public class ResourceContactPhoto implements FallbackContactPhoto {
 
   private final int resourceId;
@@ -42,7 +45,10 @@ public Drawable asDrawable(Context context, int color, boolean inverted) {
       foreground.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
     }
 
-    return new ExpandingLayerDrawable(new Drawable[] {background, foreground});
+    Drawable gradient = context.getResources().getDrawable(ThemeUtil.isDarkTheme(context) ? R.drawable.avatar_gradient_dark
+                                                                                          : R.drawable.avatar_gradient_light);
+
+    return new ExpandingLayerDrawable(new Drawable[] {background, foreground, gradient});
   }
 
   @Override
diff --git a/src/org/thoughtcrime/securesms/database/RecipientDatabase.java b/src/org/thoughtcrime/securesms/database/RecipientDatabase.java
index 28f887b4ffa..4cca0b7f422 100644
--- a/src/org/thoughtcrime/securesms/database/RecipientDatabase.java
+++ b/src/org/thoughtcrime/securesms/database/RecipientDatabase.java
@@ -27,6 +27,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import java.util.function.Consumer;
 
 public class RecipientDatabase extends Database {
 
@@ -150,7 +151,6 @@ public RecipientReader getRecipientsWithNotificationChannels() {
     return new RecipientReader(context, cursor);
   }
 
-
   public Optional<RecipientSettings> getRecipientSettings(@NonNull Address address) {
     SQLiteDatabase database = databaseHelper.getReadableDatabase();
     Cursor         cursor   = null;
@@ -410,6 +410,35 @@ public List<Address> getSystemContacts() {
     return results;
   }
 
+  public void updateSystemContactColors(@NonNull ColorUpdater updater) {
+    SQLiteDatabase              db      = databaseHelper.getReadableDatabase();
+    Map<Address, MaterialColor> updates = new HashMap<>();
+
+    db.beginTransaction();
+    try (Cursor cursor = db.query(TABLE_NAME, new String[] {ADDRESS, COLOR, SYSTEM_DISPLAY_NAME}, SYSTEM_DISPLAY_NAME + " IS NOT NULL AND " + SYSTEM_DISPLAY_NAME + " != \"\"", null, null, null, null)) {
+      while (cursor != null && cursor.moveToNext()) {
+        Address address = Address.fromSerialized(cursor.getString(cursor.getColumnIndexOrThrow(ADDRESS)));
+        MaterialColor newColor = updater.update(cursor.getString(cursor.getColumnIndexOrThrow(SYSTEM_DISPLAY_NAME)),
+                                                cursor.getString(cursor.getColumnIndexOrThrow(COLOR)));
+
+        ContentValues contentValues = new ContentValues(1);
+        contentValues.put(COLOR, newColor.serialize());
+        db.update(TABLE_NAME, contentValues, ADDRESS + " = ?", new String[]{address.serialize()});
+
+        updates.put(address, newColor);
+      }
+    } finally {
+      db.setTransactionSuccessful();
+      db.endTransaction();
+
+      Stream.of(updates.entrySet()).forEach(entry -> {
+        Recipient.applyCached(entry.getKey(), recipient -> {
+          recipient.setColor(entry.getValue());
+        });
+      });
+    }
+  }
+
   // XXX This shouldn't be here, and is just a temporary workaround
   public RegisteredState isRegistered(@NonNull Address address) {
     SQLiteDatabase db = databaseHelper.getReadableDatabase();
@@ -472,6 +501,10 @@ public void finish() {
     }
   }
 
+  public interface ColorUpdater {
+    MaterialColor update(@NonNull String name, @Nullable String color);
+  }
+
   public static class RecipientSettings {
     private final boolean         blocked;
     private final long            muteUntil;
@@ -633,7 +666,7 @@ public static class RecipientReader implements Closeable {
     }
 
     public @Nullable Recipient getNext() {
-      if (!cursor.moveToNext()) {
+      if (cursor != null && !cursor.moveToNext()) {
         return null;
       }
 
diff --git a/src/org/thoughtcrime/securesms/notifications/SingleRecipientNotificationBuilder.java b/src/org/thoughtcrime/securesms/notifications/SingleRecipientNotificationBuilder.java
index 45c60fc91af..db5ef29d08f 100644
--- a/src/org/thoughtcrime/securesms/notifications/SingleRecipientNotificationBuilder.java
+++ b/src/org/thoughtcrime/securesms/notifications/SingleRecipientNotificationBuilder.java
@@ -92,7 +92,7 @@ public void setThread(@NonNull Recipient recipient) {
 
     } else {
       setContentTitle(context.getString(R.string.SingleRecipientNotificationBuilder_signal));
-      setLargeIcon(new GeneratedContactPhoto("Unknown").asDrawable(context, ContactColors.UNKNOWN_COLOR.toConversationColor(context)));
+      setLargeIcon(new GeneratedContactPhoto("Unknown", R.drawable.ic_profile_default).asDrawable(context, ContactColors.UNKNOWN_COLOR.toConversationColor(context)));
     }
   }
 
diff --git a/src/org/thoughtcrime/securesms/recipients/Recipient.java b/src/org/thoughtcrime/securesms/recipients/Recipient.java
index 41b8638e350..602b5b921f9 100644
--- a/src/org/thoughtcrime/securesms/recipients/Recipient.java
+++ b/src/org/thoughtcrime/securesms/recipients/Recipient.java
@@ -292,8 +292,7 @@ public void setName(@Nullable String name) {
   }
 
   public synchronized @NonNull MaterialColor getColor() {
-    if      (isGroupRecipient()) return MaterialColor.BLUE;
-    else if (color != null)      return color;
+    if      (color != null)      return color;
     else if (name != null)       return ContactColors.generateFor(name);
     else                         return ContactColors.UNKNOWN_COLOR;
   }
@@ -420,14 +419,14 @@ public synchronized String toShortString() {
   }
 
   public synchronized @NonNull Drawable getFallbackContactPhotoDrawable(Context context, boolean inverted) {
-    return getFallbackContactPhoto().asDrawable(context, getColor().toConversationColor(context), inverted);
+    return getFallbackContactPhoto().asDrawable(context, getColor().toAvatarColor(context), inverted);
   }
 
   public synchronized @NonNull FallbackContactPhoto getFallbackContactPhoto() {
     if      (isResolving())            return new TransparentContactPhoto();
     else if (isGroupRecipient())       return new ResourceContactPhoto(R.drawable.ic_group_white_24dp, R.drawable.ic_group_large);
-    else if (!TextUtils.isEmpty(name)) return new GeneratedContactPhoto(name);
-    else                               return new GeneratedContactPhoto("#");
+    else if (!TextUtils.isEmpty(name)) return new GeneratedContactPhoto(name, R.drawable.ic_profile_default);
+    else                               return new ResourceContactPhoto(R.drawable.ic_profile_default);
   }
 
   public synchronized @Nullable ContactPhoto getContactPhoto() {
