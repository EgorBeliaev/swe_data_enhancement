**Title**: Switch to WorkManager

**Purpose**: Adapt project to comply with `targetSdk 26` requirements by migrating from `JobScheduler` to `WorkManager`.

**Key Changes**:
1. **Job Subclassing**: 
   - Change `Job` to subclass `Worker`.
   - Maintain the behavior of `JobConsumer` within `Job` by implementing `onRun()` to return `SUCCESS`, `FAILURE`, or `RETRY`.

2. **Data Persistence**:
   - Introduce `serialize()` and `initialize()` methods in `Job` for state persistence using WorkManager's `Data` object.

3. **Constructors**:
   - Add no-argument constructors to all `Worker` subclasses as required by WorkManager.

4. **Migration**:
   - Migrate existing persisted jobs to the new JobManager during app upgrade.
   - Retain all existing Requirement classes due to dependency on Java serialization for migration.

5. **Requirement Handling**:
   - Remove new requirements from JobParameters. Use named setters for existing requirements.

6. **SDK Updates**:
   - Update `compileSdk` to 28 for WorkManager compatibility.
   - Update support library versions accordingly.

**Testing**:
- Validate changes on the following devices:
  - Moto E (2nd Gen) with Android 5.1, API 22
  - Nexus 5X with Android 8.1, API 27
  - Moto X (2nd Gen) with Android 7.1, API 25
  - Android 9 Emulator under various network conditions