**Instructions for Implementing New Photo Capture Flow:**

1. **Feature Enhancement:** Modify the quick-capture camera button to open a fullscreen camera instead of a half-height one.

2. **CameraActivity Implementation:**
   - Launch `CameraActivity` with the quick-capture button. 
   - Ensure `CameraActivity` returns a result containing the Uri of the captured image and the selected transport method for sending.

3. **Camera API Utilization:**
   - Integrate `Camera1Fragment` using the Camera1 API for image capture within `CameraActivity`.
   - Consider future extensibility by planning for a `Camera2Fragment` using the Camera2 API.

4. **UI Transition and Annotation:**
   - Post-image capture, transition `CameraActivity` to display `ScribbleFragment`.
   - Pass the captured image Uri to `ScribbleFragment`.

5. **Refactor ScribbleComponent:**
   - Extract `ScribbleFragment` from `ScribbleActivity`.
   - Add a compose bar at the bottom of `ScribbleFragment` for annotation and captioning purposes.

6. **Device Testing Ensure Testing on Following Devices:**
   - Nexus 5X (API 27)
   - Huawei Mate 10 Lite (API 24)
   - Moto E (2nd Gen) (API 22)
   - Google Pixel 2 (API 28)
   - Google Pixel (API 28)
   - Samsung Galaxy S9 (API 26)
   - Moto G4 (API 24)
   - Moto X (2nd Gen) (API 25)

Ensure all these changes are implemented as specified to enable the new photo capture, annotation, and sending functionalities. Manual testing must be conducted on the listed devices to verify compatibility and performance.