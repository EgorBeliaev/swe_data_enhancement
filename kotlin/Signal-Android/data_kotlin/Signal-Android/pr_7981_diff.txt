diff --git a/res/drawable-hdpi/ic_delivery_status_delivered.png b/res/drawable-hdpi/ic_delivery_status_delivered.png
new file mode 100644
index 00000000000..089afc0b541
Binary files /dev/null and b/res/drawable-hdpi/ic_delivery_status_delivered.png differ
diff --git a/res/drawable-hdpi/ic_delivery_status_read.png b/res/drawable-hdpi/ic_delivery_status_read.png
new file mode 100644
index 00000000000..307190cae65
Binary files /dev/null and b/res/drawable-hdpi/ic_delivery_status_read.png differ
diff --git a/res/drawable-hdpi/ic_delivery_status_sending.png b/res/drawable-hdpi/ic_delivery_status_sending.png
new file mode 100644
index 00000000000..fbdcef3583e
Binary files /dev/null and b/res/drawable-hdpi/ic_delivery_status_sending.png differ
diff --git a/res/drawable-hdpi/ic_delivery_status_sent.png b/res/drawable-hdpi/ic_delivery_status_sent.png
new file mode 100644
index 00000000000..72b685aee4d
Binary files /dev/null and b/res/drawable-hdpi/ic_delivery_status_sent.png differ
diff --git a/res/drawable-hdpi/ic_document_large_dark.png b/res/drawable-hdpi/ic_document_large_dark.png
new file mode 100644
index 00000000000..f17a5078a63
Binary files /dev/null and b/res/drawable-hdpi/ic_document_large_dark.png differ
diff --git a/res/drawable-hdpi/ic_document_large_light.png b/res/drawable-hdpi/ic_document_large_light.png
new file mode 100644
index 00000000000..1c3bd34be6a
Binary files /dev/null and b/res/drawable-hdpi/ic_document_large_light.png differ
diff --git a/res/drawable-hdpi/ic_document_small_dark.png b/res/drawable-hdpi/ic_document_small_dark.png
new file mode 100644
index 00000000000..4142741f319
Binary files /dev/null and b/res/drawable-hdpi/ic_document_small_dark.png differ
diff --git a/res/drawable-hdpi/ic_document_small_light.png b/res/drawable-hdpi/ic_document_small_light.png
new file mode 100644
index 00000000000..a68e1c5a66c
Binary files /dev/null and b/res/drawable-hdpi/ic_document_small_light.png differ
diff --git a/res/drawable-hdpi/ic_error.png b/res/drawable-hdpi/ic_error.png
new file mode 100644
index 00000000000..93bf72064ea
Binary files /dev/null and b/res/drawable-hdpi/ic_error.png differ
diff --git a/res/drawable-hdpi/ic_timer.png b/res/drawable-hdpi/ic_timer.png
new file mode 100644
index 00000000000..c820ea2b0ae
Binary files /dev/null and b/res/drawable-hdpi/ic_timer.png differ
diff --git a/res/drawable-hdpi/ic_timer_disabled.png b/res/drawable-hdpi/ic_timer_disabled.png
new file mode 100644
index 00000000000..9e6127d54f0
Binary files /dev/null and b/res/drawable-hdpi/ic_timer_disabled.png differ
diff --git a/res/drawable-hdpi/received_bubble.9.png b/res/drawable-hdpi/received_bubble.9.png
deleted file mode 100644
index ef8ce1e3d7e..00000000000
Binary files a/res/drawable-hdpi/received_bubble.9.png and /dev/null differ
diff --git a/res/drawable-hdpi/sent_bubble.9.png b/res/drawable-hdpi/sent_bubble.9.png
deleted file mode 100644
index 803d27693ba..00000000000
Binary files a/res/drawable-hdpi/sent_bubble.9.png and /dev/null differ
diff --git a/res/drawable-hdpi/timer00.png b/res/drawable-hdpi/timer00.png
new file mode 100644
index 00000000000..7674e0065cc
Binary files /dev/null and b/res/drawable-hdpi/timer00.png differ
diff --git a/res/drawable-hdpi/timer05.png b/res/drawable-hdpi/timer05.png
new file mode 100644
index 00000000000..259b184434b
Binary files /dev/null and b/res/drawable-hdpi/timer05.png differ
diff --git a/res/drawable-hdpi/timer10.png b/res/drawable-hdpi/timer10.png
new file mode 100644
index 00000000000..710c6a07553
Binary files /dev/null and b/res/drawable-hdpi/timer10.png differ
diff --git a/res/drawable-hdpi/timer15.png b/res/drawable-hdpi/timer15.png
new file mode 100644
index 00000000000..47767b4cac9
Binary files /dev/null and b/res/drawable-hdpi/timer15.png differ
diff --git a/res/drawable-hdpi/timer20.png b/res/drawable-hdpi/timer20.png
new file mode 100644
index 00000000000..4dcb446ef3b
Binary files /dev/null and b/res/drawable-hdpi/timer20.png differ
diff --git a/res/drawable-hdpi/timer25.png b/res/drawable-hdpi/timer25.png
new file mode 100644
index 00000000000..194ebc397a4
Binary files /dev/null and b/res/drawable-hdpi/timer25.png differ
diff --git a/res/drawable-hdpi/timer30.png b/res/drawable-hdpi/timer30.png
new file mode 100644
index 00000000000..4cffeef9932
Binary files /dev/null and b/res/drawable-hdpi/timer30.png differ
diff --git a/res/drawable-hdpi/timer35.png b/res/drawable-hdpi/timer35.png
new file mode 100644
index 00000000000..3fdbb5e902c
Binary files /dev/null and b/res/drawable-hdpi/timer35.png differ
diff --git a/res/drawable-hdpi/timer40.png b/res/drawable-hdpi/timer40.png
new file mode 100644
index 00000000000..43d4607b414
Binary files /dev/null and b/res/drawable-hdpi/timer40.png differ
diff --git a/res/drawable-hdpi/timer45.png b/res/drawable-hdpi/timer45.png
new file mode 100644
index 00000000000..ddac60676cb
Binary files /dev/null and b/res/drawable-hdpi/timer45.png differ
diff --git a/res/drawable-hdpi/timer50.png b/res/drawable-hdpi/timer50.png
new file mode 100644
index 00000000000..ba5cbce0306
Binary files /dev/null and b/res/drawable-hdpi/timer50.png differ
diff --git a/res/drawable-hdpi/timer55.png b/res/drawable-hdpi/timer55.png
new file mode 100644
index 00000000000..2eeaad9c9f2
Binary files /dev/null and b/res/drawable-hdpi/timer55.png differ
diff --git a/res/drawable-hdpi/timer60.png b/res/drawable-hdpi/timer60.png
new file mode 100644
index 00000000000..85fdb05febb
Binary files /dev/null and b/res/drawable-hdpi/timer60.png differ
diff --git a/res/drawable-mdpi/ic_delivery_status_delivered.png b/res/drawable-mdpi/ic_delivery_status_delivered.png
new file mode 100644
index 00000000000..c66da8360b1
Binary files /dev/null and b/res/drawable-mdpi/ic_delivery_status_delivered.png differ
diff --git a/res/drawable-mdpi/ic_delivery_status_read.png b/res/drawable-mdpi/ic_delivery_status_read.png
new file mode 100644
index 00000000000..eee83ef591c
Binary files /dev/null and b/res/drawable-mdpi/ic_delivery_status_read.png differ
diff --git a/res/drawable-mdpi/ic_delivery_status_sending.png b/res/drawable-mdpi/ic_delivery_status_sending.png
new file mode 100644
index 00000000000..b34ea32b8b6
Binary files /dev/null and b/res/drawable-mdpi/ic_delivery_status_sending.png differ
diff --git a/res/drawable-mdpi/ic_delivery_status_sent.png b/res/drawable-mdpi/ic_delivery_status_sent.png
new file mode 100644
index 00000000000..ff6bf0fac5c
Binary files /dev/null and b/res/drawable-mdpi/ic_delivery_status_sent.png differ
diff --git a/res/drawable-mdpi/ic_document_large_dark.png b/res/drawable-mdpi/ic_document_large_dark.png
new file mode 100644
index 00000000000..52f8d3654c6
Binary files /dev/null and b/res/drawable-mdpi/ic_document_large_dark.png differ
diff --git a/res/drawable-mdpi/ic_document_large_light.png b/res/drawable-mdpi/ic_document_large_light.png
new file mode 100644
index 00000000000..d0b6f2a2ff2
Binary files /dev/null and b/res/drawable-mdpi/ic_document_large_light.png differ
diff --git a/res/drawable-mdpi/ic_document_small_dark.png b/res/drawable-mdpi/ic_document_small_dark.png
new file mode 100644
index 00000000000..2dad4a5ddc0
Binary files /dev/null and b/res/drawable-mdpi/ic_document_small_dark.png differ
diff --git a/res/drawable-mdpi/ic_document_small_light.png b/res/drawable-mdpi/ic_document_small_light.png
new file mode 100644
index 00000000000..8972c8b6260
Binary files /dev/null and b/res/drawable-mdpi/ic_document_small_light.png differ
diff --git a/res/drawable-mdpi/ic_error.png b/res/drawable-mdpi/ic_error.png
new file mode 100644
index 00000000000..bf1a9f376d0
Binary files /dev/null and b/res/drawable-mdpi/ic_error.png differ
diff --git a/res/drawable-mdpi/ic_timer.png b/res/drawable-mdpi/ic_timer.png
new file mode 100644
index 00000000000..c999a9e2c66
Binary files /dev/null and b/res/drawable-mdpi/ic_timer.png differ
diff --git a/res/drawable-mdpi/ic_timer_disabled.png b/res/drawable-mdpi/ic_timer_disabled.png
new file mode 100644
index 00000000000..b2cd951a91f
Binary files /dev/null and b/res/drawable-mdpi/ic_timer_disabled.png differ
diff --git a/res/drawable-mdpi/received_bubble.9.png b/res/drawable-mdpi/received_bubble.9.png
deleted file mode 100644
index 178cb588c97..00000000000
Binary files a/res/drawable-mdpi/received_bubble.9.png and /dev/null differ
diff --git a/res/drawable-mdpi/sent_bubble.9.png b/res/drawable-mdpi/sent_bubble.9.png
deleted file mode 100644
index dcf271c8641..00000000000
Binary files a/res/drawable-mdpi/sent_bubble.9.png and /dev/null differ
diff --git a/res/drawable-mdpi/timer00.png b/res/drawable-mdpi/timer00.png
new file mode 100644
index 00000000000..0cfff1ec1ef
Binary files /dev/null and b/res/drawable-mdpi/timer00.png differ
diff --git a/res/drawable-mdpi/timer05.png b/res/drawable-mdpi/timer05.png
new file mode 100644
index 00000000000..4e4502c6dba
Binary files /dev/null and b/res/drawable-mdpi/timer05.png differ
diff --git a/res/drawable-mdpi/timer10.png b/res/drawable-mdpi/timer10.png
new file mode 100644
index 00000000000..99f61783353
Binary files /dev/null and b/res/drawable-mdpi/timer10.png differ
diff --git a/res/drawable-mdpi/timer15.png b/res/drawable-mdpi/timer15.png
new file mode 100644
index 00000000000..0f2a68de401
Binary files /dev/null and b/res/drawable-mdpi/timer15.png differ
diff --git a/res/drawable-mdpi/timer20.png b/res/drawable-mdpi/timer20.png
new file mode 100644
index 00000000000..8d5f3b58d81
Binary files /dev/null and b/res/drawable-mdpi/timer20.png differ
diff --git a/res/drawable-mdpi/timer25.png b/res/drawable-mdpi/timer25.png
new file mode 100644
index 00000000000..9527b342085
Binary files /dev/null and b/res/drawable-mdpi/timer25.png differ
diff --git a/res/drawable-mdpi/timer30.png b/res/drawable-mdpi/timer30.png
new file mode 100644
index 00000000000..038d94a9e5c
Binary files /dev/null and b/res/drawable-mdpi/timer30.png differ
diff --git a/res/drawable-mdpi/timer35.png b/res/drawable-mdpi/timer35.png
new file mode 100644
index 00000000000..2d3d3f7de41
Binary files /dev/null and b/res/drawable-mdpi/timer35.png differ
diff --git a/res/drawable-mdpi/timer40.png b/res/drawable-mdpi/timer40.png
new file mode 100644
index 00000000000..2a72f424103
Binary files /dev/null and b/res/drawable-mdpi/timer40.png differ
diff --git a/res/drawable-mdpi/timer45.png b/res/drawable-mdpi/timer45.png
new file mode 100644
index 00000000000..a5b2b454f0d
Binary files /dev/null and b/res/drawable-mdpi/timer45.png differ
diff --git a/res/drawable-mdpi/timer50.png b/res/drawable-mdpi/timer50.png
new file mode 100644
index 00000000000..ac0dfc30a6b
Binary files /dev/null and b/res/drawable-mdpi/timer50.png differ
diff --git a/res/drawable-mdpi/timer55.png b/res/drawable-mdpi/timer55.png
new file mode 100644
index 00000000000..dc887764a42
Binary files /dev/null and b/res/drawable-mdpi/timer55.png differ
diff --git a/res/drawable-mdpi/timer60.png b/res/drawable-mdpi/timer60.png
new file mode 100644
index 00000000000..f641da09d56
Binary files /dev/null and b/res/drawable-mdpi/timer60.png differ
diff --git a/res/drawable-xhdpi/ic_delivery_status_delivered.png b/res/drawable-xhdpi/ic_delivery_status_delivered.png
new file mode 100644
index 00000000000..5d42fec8f77
Binary files /dev/null and b/res/drawable-xhdpi/ic_delivery_status_delivered.png differ
diff --git a/res/drawable-xhdpi/ic_delivery_status_read.png b/res/drawable-xhdpi/ic_delivery_status_read.png
new file mode 100644
index 00000000000..79c4857f6c9
Binary files /dev/null and b/res/drawable-xhdpi/ic_delivery_status_read.png differ
diff --git a/res/drawable-xhdpi/ic_delivery_status_sending.png b/res/drawable-xhdpi/ic_delivery_status_sending.png
new file mode 100644
index 00000000000..aca7fe7ef33
Binary files /dev/null and b/res/drawable-xhdpi/ic_delivery_status_sending.png differ
diff --git a/res/drawable-xhdpi/ic_delivery_status_sent.png b/res/drawable-xhdpi/ic_delivery_status_sent.png
new file mode 100644
index 00000000000..811a54373df
Binary files /dev/null and b/res/drawable-xhdpi/ic_delivery_status_sent.png differ
diff --git a/res/drawable-xhdpi/ic_document_large_dark.png b/res/drawable-xhdpi/ic_document_large_dark.png
new file mode 100644
index 00000000000..cb4e3f6defa
Binary files /dev/null and b/res/drawable-xhdpi/ic_document_large_dark.png differ
diff --git a/res/drawable-xhdpi/ic_document_large_light.png b/res/drawable-xhdpi/ic_document_large_light.png
new file mode 100644
index 00000000000..24027f54509
Binary files /dev/null and b/res/drawable-xhdpi/ic_document_large_light.png differ
diff --git a/res/drawable-xhdpi/ic_document_small_dark.png b/res/drawable-xhdpi/ic_document_small_dark.png
new file mode 100644
index 00000000000..801b63381f7
Binary files /dev/null and b/res/drawable-xhdpi/ic_document_small_dark.png differ
diff --git a/res/drawable-xhdpi/ic_document_small_light.png b/res/drawable-xhdpi/ic_document_small_light.png
new file mode 100644
index 00000000000..d2378b17759
Binary files /dev/null and b/res/drawable-xhdpi/ic_document_small_light.png differ
diff --git a/res/drawable-xhdpi/ic_error.png b/res/drawable-xhdpi/ic_error.png
new file mode 100644
index 00000000000..5d36611473e
Binary files /dev/null and b/res/drawable-xhdpi/ic_error.png differ
diff --git a/res/drawable-xhdpi/ic_timer.png b/res/drawable-xhdpi/ic_timer.png
new file mode 100644
index 00000000000..eacdf73a070
Binary files /dev/null and b/res/drawable-xhdpi/ic_timer.png differ
diff --git a/res/drawable-xhdpi/ic_timer_disabled.png b/res/drawable-xhdpi/ic_timer_disabled.png
new file mode 100644
index 00000000000..45165abecc2
Binary files /dev/null and b/res/drawable-xhdpi/ic_timer_disabled.png differ
diff --git a/res/drawable-xhdpi/received_bubble.9.png b/res/drawable-xhdpi/received_bubble.9.png
deleted file mode 100644
index 76d8de2cf7a..00000000000
Binary files a/res/drawable-xhdpi/received_bubble.9.png and /dev/null differ
diff --git a/res/drawable-xhdpi/sent_bubble.9.png b/res/drawable-xhdpi/sent_bubble.9.png
deleted file mode 100644
index cbcf0930a81..00000000000
Binary files a/res/drawable-xhdpi/sent_bubble.9.png and /dev/null differ
diff --git a/res/drawable-xhdpi/timer00.png b/res/drawable-xhdpi/timer00.png
new file mode 100644
index 00000000000..74d03ec1e8d
Binary files /dev/null and b/res/drawable-xhdpi/timer00.png differ
diff --git a/res/drawable-xhdpi/timer05.png b/res/drawable-xhdpi/timer05.png
new file mode 100644
index 00000000000..5536951ed19
Binary files /dev/null and b/res/drawable-xhdpi/timer05.png differ
diff --git a/res/drawable-xhdpi/timer10.png b/res/drawable-xhdpi/timer10.png
new file mode 100644
index 00000000000..a0efa5a2821
Binary files /dev/null and b/res/drawable-xhdpi/timer10.png differ
diff --git a/res/drawable-xhdpi/timer15.png b/res/drawable-xhdpi/timer15.png
new file mode 100644
index 00000000000..58ecf78ca9b
Binary files /dev/null and b/res/drawable-xhdpi/timer15.png differ
diff --git a/res/drawable-xhdpi/timer20.png b/res/drawable-xhdpi/timer20.png
new file mode 100644
index 00000000000..ea87eab10ce
Binary files /dev/null and b/res/drawable-xhdpi/timer20.png differ
diff --git a/res/drawable-xhdpi/timer25.png b/res/drawable-xhdpi/timer25.png
new file mode 100644
index 00000000000..edf88b9efc6
Binary files /dev/null and b/res/drawable-xhdpi/timer25.png differ
diff --git a/res/drawable-xhdpi/timer30.png b/res/drawable-xhdpi/timer30.png
new file mode 100644
index 00000000000..941e0bed736
Binary files /dev/null and b/res/drawable-xhdpi/timer30.png differ
diff --git a/res/drawable-xhdpi/timer35.png b/res/drawable-xhdpi/timer35.png
new file mode 100644
index 00000000000..64444a7960f
Binary files /dev/null and b/res/drawable-xhdpi/timer35.png differ
diff --git a/res/drawable-xhdpi/timer40.png b/res/drawable-xhdpi/timer40.png
new file mode 100644
index 00000000000..a57dad11a90
Binary files /dev/null and b/res/drawable-xhdpi/timer40.png differ
diff --git a/res/drawable-xhdpi/timer45.png b/res/drawable-xhdpi/timer45.png
new file mode 100644
index 00000000000..fff7ec324f3
Binary files /dev/null and b/res/drawable-xhdpi/timer45.png differ
diff --git a/res/drawable-xhdpi/timer50.png b/res/drawable-xhdpi/timer50.png
new file mode 100644
index 00000000000..eba73f75764
Binary files /dev/null and b/res/drawable-xhdpi/timer50.png differ
diff --git a/res/drawable-xhdpi/timer55.png b/res/drawable-xhdpi/timer55.png
new file mode 100644
index 00000000000..c999a9e2c66
Binary files /dev/null and b/res/drawable-xhdpi/timer55.png differ
diff --git a/res/drawable-xhdpi/timer60.png b/res/drawable-xhdpi/timer60.png
new file mode 100644
index 00000000000..4066835b030
Binary files /dev/null and b/res/drawable-xhdpi/timer60.png differ
diff --git a/res/drawable-xxhdpi/ic_delivery_status_delivered.png b/res/drawable-xxhdpi/ic_delivery_status_delivered.png
new file mode 100644
index 00000000000..27d3b3e21b1
Binary files /dev/null and b/res/drawable-xxhdpi/ic_delivery_status_delivered.png differ
diff --git a/res/drawable-xxhdpi/ic_delivery_status_read.png b/res/drawable-xxhdpi/ic_delivery_status_read.png
new file mode 100644
index 00000000000..474a570724f
Binary files /dev/null and b/res/drawable-xxhdpi/ic_delivery_status_read.png differ
diff --git a/res/drawable-xxhdpi/ic_delivery_status_sending.png b/res/drawable-xxhdpi/ic_delivery_status_sending.png
new file mode 100644
index 00000000000..4a81c629d8f
Binary files /dev/null and b/res/drawable-xxhdpi/ic_delivery_status_sending.png differ
diff --git a/res/drawable-xxhdpi/ic_delivery_status_sent.png b/res/drawable-xxhdpi/ic_delivery_status_sent.png
new file mode 100644
index 00000000000..f679aaf2448
Binary files /dev/null and b/res/drawable-xxhdpi/ic_delivery_status_sent.png differ
diff --git a/res/drawable-xxhdpi/ic_document_large_dark.png b/res/drawable-xxhdpi/ic_document_large_dark.png
new file mode 100644
index 00000000000..f6f21a9cdb7
Binary files /dev/null and b/res/drawable-xxhdpi/ic_document_large_dark.png differ
diff --git a/res/drawable-xxhdpi/ic_document_large_light.png b/res/drawable-xxhdpi/ic_document_large_light.png
new file mode 100644
index 00000000000..26c2172dbab
Binary files /dev/null and b/res/drawable-xxhdpi/ic_document_large_light.png differ
diff --git a/res/drawable-xxhdpi/ic_document_small_dark.png b/res/drawable-xxhdpi/ic_document_small_dark.png
new file mode 100644
index 00000000000..9b9e773af0f
Binary files /dev/null and b/res/drawable-xxhdpi/ic_document_small_dark.png differ
diff --git a/res/drawable-xxhdpi/ic_document_small_light.png b/res/drawable-xxhdpi/ic_document_small_light.png
new file mode 100644
index 00000000000..4bf082e0d83
Binary files /dev/null and b/res/drawable-xxhdpi/ic_document_small_light.png differ
diff --git a/res/drawable-xxhdpi/ic_error.png b/res/drawable-xxhdpi/ic_error.png
new file mode 100644
index 00000000000..8dbbc3292a1
Binary files /dev/null and b/res/drawable-xxhdpi/ic_error.png differ
diff --git a/res/drawable-xxhdpi/ic_timer.png b/res/drawable-xxhdpi/ic_timer.png
new file mode 100644
index 00000000000..48adc80b74c
Binary files /dev/null and b/res/drawable-xxhdpi/ic_timer.png differ
diff --git a/res/drawable-xxhdpi/ic_timer_disabled.png b/res/drawable-xxhdpi/ic_timer_disabled.png
new file mode 100644
index 00000000000..fabf9ffdbaf
Binary files /dev/null and b/res/drawable-xxhdpi/ic_timer_disabled.png differ
diff --git a/res/drawable-xxhdpi/received_bubble.9.png b/res/drawable-xxhdpi/received_bubble.9.png
deleted file mode 100644
index cb8e72d02a3..00000000000
Binary files a/res/drawable-xxhdpi/received_bubble.9.png and /dev/null differ
diff --git a/res/drawable-xxhdpi/sent_bubble.9.png b/res/drawable-xxhdpi/sent_bubble.9.png
deleted file mode 100644
index 2c5716625ec..00000000000
Binary files a/res/drawable-xxhdpi/sent_bubble.9.png and /dev/null differ
diff --git a/res/drawable-xxhdpi/timer00.png b/res/drawable-xxhdpi/timer00.png
new file mode 100644
index 00000000000..aa0be20b2d5
Binary files /dev/null and b/res/drawable-xxhdpi/timer00.png differ
diff --git a/res/drawable-xxhdpi/timer05.png b/res/drawable-xxhdpi/timer05.png
new file mode 100644
index 00000000000..a26c7a701d0
Binary files /dev/null and b/res/drawable-xxhdpi/timer05.png differ
diff --git a/res/drawable-xxhdpi/timer10.png b/res/drawable-xxhdpi/timer10.png
new file mode 100644
index 00000000000..1d77cf314a1
Binary files /dev/null and b/res/drawable-xxhdpi/timer10.png differ
diff --git a/res/drawable-xxhdpi/timer15.png b/res/drawable-xxhdpi/timer15.png
new file mode 100644
index 00000000000..73d67a5fd20
Binary files /dev/null and b/res/drawable-xxhdpi/timer15.png differ
diff --git a/res/drawable-xxhdpi/timer20.png b/res/drawable-xxhdpi/timer20.png
new file mode 100644
index 00000000000..ac0aee0b52a
Binary files /dev/null and b/res/drawable-xxhdpi/timer20.png differ
diff --git a/res/drawable-xxhdpi/timer25.png b/res/drawable-xxhdpi/timer25.png
new file mode 100644
index 00000000000..7fd3966f207
Binary files /dev/null and b/res/drawable-xxhdpi/timer25.png differ
diff --git a/res/drawable-xxhdpi/timer30.png b/res/drawable-xxhdpi/timer30.png
new file mode 100644
index 00000000000..f31ca334fb8
Binary files /dev/null and b/res/drawable-xxhdpi/timer30.png differ
diff --git a/res/drawable-xxhdpi/timer35.png b/res/drawable-xxhdpi/timer35.png
new file mode 100644
index 00000000000..922c95886ca
Binary files /dev/null and b/res/drawable-xxhdpi/timer35.png differ
diff --git a/res/drawable-xxhdpi/timer40.png b/res/drawable-xxhdpi/timer40.png
new file mode 100644
index 00000000000..53f431cbdda
Binary files /dev/null and b/res/drawable-xxhdpi/timer40.png differ
diff --git a/res/drawable-xxhdpi/timer45.png b/res/drawable-xxhdpi/timer45.png
new file mode 100644
index 00000000000..8781c30bfc1
Binary files /dev/null and b/res/drawable-xxhdpi/timer45.png differ
diff --git a/res/drawable-xxhdpi/timer50.png b/res/drawable-xxhdpi/timer50.png
new file mode 100644
index 00000000000..dcae6b34015
Binary files /dev/null and b/res/drawable-xxhdpi/timer50.png differ
diff --git a/res/drawable-xxhdpi/timer55.png b/res/drawable-xxhdpi/timer55.png
new file mode 100644
index 00000000000..c820ea2b0ae
Binary files /dev/null and b/res/drawable-xxhdpi/timer55.png differ
diff --git a/res/drawable-xxhdpi/timer60.png b/res/drawable-xxhdpi/timer60.png
new file mode 100644
index 00000000000..e4e87569666
Binary files /dev/null and b/res/drawable-xxhdpi/timer60.png differ
diff --git a/res/drawable-xxxhdpi/ic_delivery_status_delivered.png b/res/drawable-xxxhdpi/ic_delivery_status_delivered.png
new file mode 100644
index 00000000000..039cf55b271
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_delivery_status_delivered.png differ
diff --git a/res/drawable-xxxhdpi/ic_delivery_status_read.png b/res/drawable-xxxhdpi/ic_delivery_status_read.png
new file mode 100644
index 00000000000..c138886aa3c
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_delivery_status_read.png differ
diff --git a/res/drawable-xxxhdpi/ic_delivery_status_sending.png b/res/drawable-xxxhdpi/ic_delivery_status_sending.png
new file mode 100644
index 00000000000..461c2ea6361
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_delivery_status_sending.png differ
diff --git a/res/drawable-xxxhdpi/ic_delivery_status_sent.png b/res/drawable-xxxhdpi/ic_delivery_status_sent.png
new file mode 100644
index 00000000000..47bd9acd335
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_delivery_status_sent.png differ
diff --git a/res/drawable-xxxhdpi/ic_document_large_dark.png b/res/drawable-xxxhdpi/ic_document_large_dark.png
new file mode 100644
index 00000000000..911a1c2f49e
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_document_large_dark.png differ
diff --git a/res/drawable-xxxhdpi/ic_document_large_light.png b/res/drawable-xxxhdpi/ic_document_large_light.png
new file mode 100644
index 00000000000..fdcf64d6bbd
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_document_large_light.png differ
diff --git a/res/drawable-xxxhdpi/ic_document_small_dark.png b/res/drawable-xxxhdpi/ic_document_small_dark.png
new file mode 100644
index 00000000000..182067089d5
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_document_small_dark.png differ
diff --git a/res/drawable-xxxhdpi/ic_document_small_light.png b/res/drawable-xxxhdpi/ic_document_small_light.png
new file mode 100644
index 00000000000..e3aaf73f686
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_document_small_light.png differ
diff --git a/res/drawable-xxxhdpi/ic_error.png b/res/drawable-xxxhdpi/ic_error.png
new file mode 100644
index 00000000000..9016eb7b98f
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_error.png differ
diff --git a/res/drawable-xxxhdpi/ic_timer.png b/res/drawable-xxxhdpi/ic_timer.png
new file mode 100644
index 00000000000..4853eb2d9db
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_timer.png differ
diff --git a/res/drawable-xxxhdpi/ic_timer_disabled.png b/res/drawable-xxxhdpi/ic_timer_disabled.png
new file mode 100644
index 00000000000..6301f7badae
Binary files /dev/null and b/res/drawable-xxxhdpi/ic_timer_disabled.png differ
diff --git a/res/drawable-xxxhdpi/timer00.png b/res/drawable-xxxhdpi/timer00.png
new file mode 100644
index 00000000000..a724af4d9cd
Binary files /dev/null and b/res/drawable-xxxhdpi/timer00.png differ
diff --git a/res/drawable-xxxhdpi/timer05.png b/res/drawable-xxxhdpi/timer05.png
new file mode 100644
index 00000000000..10987c9de6f
Binary files /dev/null and b/res/drawable-xxxhdpi/timer05.png differ
diff --git a/res/drawable-xxxhdpi/timer10.png b/res/drawable-xxxhdpi/timer10.png
new file mode 100644
index 00000000000..959a8dde470
Binary files /dev/null and b/res/drawable-xxxhdpi/timer10.png differ
diff --git a/res/drawable-xxxhdpi/timer15.png b/res/drawable-xxxhdpi/timer15.png
new file mode 100644
index 00000000000..e0fe28c8943
Binary files /dev/null and b/res/drawable-xxxhdpi/timer15.png differ
diff --git a/res/drawable-xxxhdpi/timer20.png b/res/drawable-xxxhdpi/timer20.png
new file mode 100644
index 00000000000..a81cc471a42
Binary files /dev/null and b/res/drawable-xxxhdpi/timer20.png differ
diff --git a/res/drawable-xxxhdpi/timer25.png b/res/drawable-xxxhdpi/timer25.png
new file mode 100644
index 00000000000..fe06795b786
Binary files /dev/null and b/res/drawable-xxxhdpi/timer25.png differ
diff --git a/res/drawable-xxxhdpi/timer30.png b/res/drawable-xxxhdpi/timer30.png
new file mode 100644
index 00000000000..0815499c68f
Binary files /dev/null and b/res/drawable-xxxhdpi/timer30.png differ
diff --git a/res/drawable-xxxhdpi/timer35.png b/res/drawable-xxxhdpi/timer35.png
new file mode 100644
index 00000000000..91a863fd7e9
Binary files /dev/null and b/res/drawable-xxxhdpi/timer35.png differ
diff --git a/res/drawable-xxxhdpi/timer40.png b/res/drawable-xxxhdpi/timer40.png
new file mode 100644
index 00000000000..2ad5ff358b1
Binary files /dev/null and b/res/drawable-xxxhdpi/timer40.png differ
diff --git a/res/drawable-xxxhdpi/timer45.png b/res/drawable-xxxhdpi/timer45.png
new file mode 100644
index 00000000000..8cc51a2d44e
Binary files /dev/null and b/res/drawable-xxxhdpi/timer45.png differ
diff --git a/res/drawable-xxxhdpi/timer50.png b/res/drawable-xxxhdpi/timer50.png
new file mode 100644
index 00000000000..89cdd98299d
Binary files /dev/null and b/res/drawable-xxxhdpi/timer50.png differ
diff --git a/res/drawable-xxxhdpi/timer55.png b/res/drawable-xxxhdpi/timer55.png
new file mode 100644
index 00000000000..eacdf73a070
Binary files /dev/null and b/res/drawable-xxxhdpi/timer55.png differ
diff --git a/res/drawable-xxxhdpi/timer60.png b/res/drawable-xxxhdpi/timer60.png
new file mode 100644
index 00000000000..d66cf127be7
Binary files /dev/null and b/res/drawable-xxxhdpi/timer60.png differ
diff --git a/res/drawable/archived_indicator_background.xml b/res/drawable/archived_indicator_background.xml
new file mode 100644
index 00000000000..4fa695590bb
--- /dev/null
+++ b/res/drawable/archived_indicator_background.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
+    <solid android:color="@color/core_light_35"/>
+    <corners android:radius="10dp"/>
+</shape>
\ No newline at end of file
diff --git a/res/drawable/compose_background.xml b/res/drawable/compose_background.xml
new file mode 100644
index 00000000000..18b651b7f8c
--- /dev/null
+++ b/res/drawable/compose_background.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <stroke
+        android:width="1dp"
+        android:color="?attr/conversation_input_outline_color" />
+
+    <solid
+        android:color="?attr/conversation_input_background_color" />
+
+    <corners
+        android:radius="20dp" />
+
+</shape>
\ No newline at end of file
diff --git a/res/drawable/image_shade.xml b/res/drawable/image_shade.xml
new file mode 100644
index 00000000000..e7616a18c68
--- /dev/null
+++ b/res/drawable/image_shade.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <gradient
+        android:angle="90"
+        android:startColor="#aa000000"
+        android:centerColor="#88000000"
+        android:endColor="#00000000"/>
+
+</shape>
\ No newline at end of file
diff --git a/res/drawable/message_bubble_background.xml b/res/drawable/message_bubble_background.xml
new file mode 100644
index 00000000000..cda641b1dab
--- /dev/null
+++ b/res/drawable/message_bubble_background.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:top="2px"
+        android:bottom="2px">
+
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/message_corner_radius"/>
+            <solid android:color="@color/white" />
+        </shape>
+    </item>
+</layer-list>
diff --git a/res/drawable/quote_background.xml b/res/drawable/quote_background.xml
deleted file mode 100644
index c12ab15ddef..00000000000
--- a/res/drawable/quote_background.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/gray5"/>
-    <stroke android:color="@color/grey_400_transparent" android:width="@dimen/quote_outline_width"/>
-    <corners android:radius="@dimen/quote_corner_radius" />
-</shape>
\ No newline at end of file
diff --git a/res/drawable/rounded_rectangle.xml b/res/drawable/rounded_rectangle.xml
deleted file mode 100644
index 4af7432fd43..00000000000
--- a/res/drawable/rounded_rectangle.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
-    <solid android:color="@color/transparent"/>
-    <stroke android:width="1dp" android:color="#ffbbbbbb"/>
-    <corners android:radius="5dp"/>
-    <padding android:bottom="5dp" android:left="5dp" android:right="5dp" android:top="5dp"/>
-</shape>
\ No newline at end of file
diff --git a/res/drawable/shared_contact_view_background.xml b/res/drawable/shared_contact_view_background.xml
deleted file mode 100644
index 36348d9547e..00000000000
--- a/res/drawable/shared_contact_view_background.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/transparent_white_dd"/>
-    <stroke android:color="@color/grey_400_transparent" android:width="@dimen/quote_outline_width"/>
-    <corners android:radius="@dimen/quote_corner_radius" />
-</shape>
diff --git a/res/drawable/sticky_date_header_background.xml b/res/drawable/sticky_date_header_background.xml
new file mode 100644
index 00000000000..e4fa232676f
--- /dev/null
+++ b/res/drawable/sticky_date_header_background.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="4dp" />
+    <solid android:color="?attr/conversation_item_sticky_date_background_color" />
+</shape>
\ No newline at end of file
diff --git a/res/drawable/triangle_right.xml b/res/drawable/triangle_right.xml
new file mode 100644
index 00000000000..d6f003ef826
--- /dev/null
+++ b/res/drawable/triangle_right.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+
+    <path
+        android:pathData="M0,12l0,12 11.5,-5.7c6.3,-3.2 11.5,-6 11.5,-6.3 0,-0.3 -5.2,-3.1 -11.5,-6.3l-11.5,-5.7 0,12z"
+        android:strokeColor="#00000000"
+        android:fillColor="#ffffff"/>
+
+</vector>
diff --git a/res/layout/alert_view.xml b/res/layout/alert_view.xml
index 80c2daa6e6e..ee4f9364a5c 100644
--- a/res/layout/alert_view.xml
+++ b/res/layout/alert_view.xml
@@ -6,8 +6,9 @@
         android:id="@+id/sms_failed_indicator"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:src="@drawable/ic_error_red_24dp"
+        android:src="@drawable/ic_error"
         android:visibility="gone"
+        android:tint="@color/core_red"
         tools:visibility="visible"
         android:contentDescription="@string/conversation_item_sent__send_failed_indicator_description" />
 
@@ -15,7 +16,8 @@
         android:id="@+id/pending_approval_indicator"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:src="@drawable/ic_info_outline_grey600_24dp"
+        android:src="@drawable/ic_error"
+        android:tint="@color/core_light_60"
         android:visibility="gone"
         tools:visibility="visible"
         android:layout_gravity="center_vertical"
diff --git a/res/layout/conversation_activity_attachment_editor_stub.xml b/res/layout/conversation_activity_attachment_editor_stub.xml
index a47de48b99f..5d6821b831d 100644
--- a/res/layout/conversation_activity_attachment_editor_stub.xml
+++ b/res/layout/conversation_activity_attachment_editor_stub.xml
@@ -27,7 +27,6 @@
                 android:layout_gravity="center_horizontal"
                 android:visibility="gone"
                 android:contentDescription="@string/conversation_activity__attachment_thumbnail"
-                app:backgroundColorHint="?conversation_background"
                 app:minWidth="100dp"
                 app:maxWidth="300dp"
                 app:minHeight="100dp"
@@ -44,17 +43,25 @@
                 app:foregroundTintColor="@color/grey_500"
                 app:backgroundTintColor="?conversation_item_bubble_background"/>
 
-        <org.thoughtcrime.securesms.components.DocumentView
+        <org.thoughtcrime.securesms.components.CornerMaskingView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:cmv_radius="@dimen/message_corner_radius">
+
+            <org.thoughtcrime.securesms.components.DocumentView
                 android:id="@+id/attachment_document"
                 android:layout_width="210dp"
                 android:layout_height="wrap_content"
                 android:visibility="gone"
-                android:paddingTop="15dp"
-                android:paddingBottom="15dp"
-                app:documentWidgetBackground="?conversation_item_bubble_background"
-                app:documentForegroundTintColor="@color/grey_500"
-                app:documentBackgroundTintColor="?conversation_item_bubble_background"/>
+                android:paddingTop="8dp"
+                android:paddingBottom="8dp"
+                android:paddingLeft="@dimen/message_bubble_horizontal_padding"
+                android:paddingRight="@dimen/message_bubble_horizontal_padding"
+                android:background="?attr/conversation_item_bubble_background"
+                app:doc_titleColor="?attr/conversation_item_sent_text_primary_color"
+                app:doc_captionColor="?attr/conversation_item_sent_text_secondary_color"/>
 
+        </org.thoughtcrime.securesms.components.CornerMaskingView>
 
     </org.thoughtcrime.securesms.components.RemovableEditableMediaView>
 
diff --git a/res/layout/conversation_fragment.xml b/res/layout/conversation_fragment.xml
index c8c50ac88b8..41eac4b7027 100644
--- a/res/layout/conversation_fragment.xml
+++ b/res/layout/conversation_fragment.xml
@@ -9,22 +9,27 @@
             android:id="@android:id/list"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
+            android:paddingBottom="24dp"
             android:scrollbars="vertical"
-            android:cacheColorHint="?conversation_background" />
+            android:cacheColorHint="?conversation_background"
+            android:clipChildren="false"
+            android:clipToPadding="false"/>
 
     <TextView android:id="@+id/scroll_date_header"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
               android:gravity="center"
               android:layout_gravity="center_horizontal|top"
-              android:paddingLeft="6dp"
-              android:paddingRight="6dp"
-              android:paddingTop="3dp"
-              android:paddingBottom="3dp"
-              android:layout_marginTop="3dp"
-              android:textColor="@color/white"
-              android:background="?conversation_item_header_background"
-              android:textSize="14sp"
+              android:paddingLeft="12dp"
+              android:paddingRight="12dp"
+              android:paddingTop="4dp"
+              android:paddingBottom="4dp"
+              android:layout_marginTop="8dp"
+              style="@style/Signal.Text.Caption"
+              android:textColor="?attr/conversation_item_sticky_date_text_color"
+              android:textAllCaps="true"
+              android:background="@drawable/sticky_date_header_background"
+              android:elevation="9dp"
               android:visibility="gone"
               tools:text="March 1, 2015" />
 
diff --git a/res/layout/conversation_input_panel.xml b/res/layout/conversation_input_panel.xml
index ca6674e7c2c..70e43f22070 100644
--- a/res/layout/conversation_input_panel.xml
+++ b/res/layout/conversation_input_panel.xml
@@ -9,33 +9,41 @@
         android:gravity="center_vertical"
         android:orientation="horizontal"
         android:clickable="true"
-        android:padding="5dp"
+        android:paddingLeft="16dp"
+        android:paddingRight="16dp"
+        android:paddingTop="6dp"
+        android:paddingBottom="6dp"
         android:clipChildren="false"
         android:clipToPadding="false">
 
-    <FrameLayout android:layout_width="0dp"
-                 android:layout_height="wrap_content"
-                 android:layout_weight="1"
-                 android:clipChildren="false"
-                 android:clipToPadding="false">
-
-        <LinearLayout android:id="@+id/compose_bubble"
-                      android:layout_width="match_parent"
-                      android:layout_height="wrap_content"
-                      android:paddingTop="8dp"
-                      android:paddingBottom="8dp"
-                      android:background="@drawable/sent_bubble"
-                      android:clipChildren="false"
-                      android:clipToPadding="false"
-                      android:orientation="vertical">
+    <FrameLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:clipChildren="false"
+        android:clipToPadding="false">
+
+        <LinearLayout
+            android:id="@+id/compose_bubble"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/compose_background"
+            android:clipChildren="false"
+            android:clipToPadding="false"
+            android:orientation="vertical">
 
             <org.thoughtcrime.securesms.components.QuoteView
-                    android:id="@+id/quote_view"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:visibility="gone"
-                    app:message_type="preview"
-                    tools:visibility="visible"/>
+                android:id="@+id/quote_view"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="6dp"
+                android:layout_marginRight="6dp"
+                android:layout_marginTop="6dp"
+                android:visibility="gone"
+                app:message_type="preview"
+                app:quote_colorPrimary="?attr/conversation_item_sent_text_primary_color"
+                app:quote_colorSecondary="?attr/conversation_item_sent_text_primary_color"
+                tools:visibility="visible"/>
 
             <FrameLayout
                 android:layout_width="match_parent"
@@ -43,16 +51,19 @@
                 android:clipChildren="false"
                 android:clipToPadding="false">
 
-                <LinearLayout android:layout_width="match_parent"
+                <LinearLayout
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:clipChildren="false"
                     android:clipToPadding="false">
 
                     <org.thoughtcrime.securesms.components.emoji.EmojiToggle
                         android:id="@+id/emoji_toggle"
-                        android:layout_width="37dp"
-                        android:layout_height="37dp"
-                        android:layout_gravity="bottom"
+                        android:layout_width="wrap_content"
+                        android:layout_height="match_parent"
+                        android:layout_gravity="center_vertical"
+                        android:layout_marginLeft="14dp"
+                        android:layout_marginStart="14dp"
                         android:background="@drawable/touch_highlight_background"
                         android:contentDescription="@string/conversation_activity__emoji_toggle_description" />
 
@@ -61,7 +72,12 @@
                         android:id="@+id/embedded_text_editor"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
-                        android:minHeight="37dp"
+                        android:layout_marginLeft="6dp"
+                        android:layout_marginStart="6dp"
+                        android:layout_marginRight="6dp"
+                        android:layout_marginEnd="6dp"
+                        android:layout_marginTop="9dp"
+                        android:layout_marginBottom="9dp"
                         android:layout_gravity="center_vertical"
                         android:layout_weight="1"
                         android:nextFocusForward="@+id/send_button"
@@ -74,43 +90,48 @@
                     <org.thoughtcrime.securesms.components.HidingLinearLayout
                         android:id="@+id/quick_attachment_toggle"
                         android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
+                        android:layout_height="match_parent"
                         android:clipChildren="false"
                         android:clipToPadding="false">
 
                         <ImageButton
                             android:id="@+id/quick_camera_toggle"
-                            android:layout_width="37dp"
-                            android:layout_height="37dp"
-                            android:layout_gravity="bottom"
+                            android:layout_width="wrap_content"
+                            android:layout_height="match_parent"
+                            android:layout_gravity="center_vertical"
                             android:src="?quick_camera_icon"
+                            android:paddingLeft="6dp"
+                            android:paddingRight="6dp"
                             android:background="@drawable/touch_highlight_background"
-                            android:contentDescription="@string/conversation_activity__quick_attachment_drawer_toggle_camera_description"
-                            android:padding="10dp"/>
+                            android:contentDescription="@string/conversation_activity__quick_attachment_drawer_toggle_camera_description" />
 
                         <org.thoughtcrime.securesms.components.MicrophoneRecorderView
                             android:id="@+id/recorder_view"
-                            android:layout_width="37dp"
-                            android:layout_height="37dp"
+                            android:layout_height="match_parent"
+                            android:layout_width="wrap_content"
+                            android:layout_gravity="center_vertical"
                             android:clipChildren="false"
                             android:clipToPadding="false">
 
                             <ImageButton
                                 android:id="@+id/quick_audio_toggle"
-                                android:layout_width="37dp"
-                                android:layout_height="37dp"
-                                android:layout_gravity="bottom"
+                                android:layout_width="wrap_content"
+                                android:layout_height="match_parent"
+                                android:layout_gravity="center_vertical"
+                                android:layout_marginRight="2dp"
+                                android:layout_marginEnd="2dp"
+                                android:padding="6dp"
                                 android:src="?quick_mic_icon"
                                 android:background="@null"
-                                android:contentDescription="@string/conversation_activity__quick_attachment_drawer_record_and_send_audio_description"
-                                android:padding="10dp"/>
+                                android:contentDescription="@string/conversation_activity__quick_attachment_drawer_record_and_send_audio_description" />
 
-                            <ImageView android:id="@+id/quick_audio_fab"
+                            <ImageView
+                                android:id="@+id/quick_audio_fab"
                                 android:layout_width="74dp"
                                 android:layout_height="74dp"
                                 android:src="@drawable/ic_mic_white_48dp"
                                 android:background="@drawable/circle_tintable"
-                                android:backgroundTint="@color/red_400"
+                                android:backgroundTint="@color/core_red"
                                 android:visibility="gone"
                                 android:scaleType="center"/>
 
@@ -120,45 +141,49 @@
 
                 </LinearLayout>
 
-                <LinearLayout android:id="@+id/recording_container"
+                <LinearLayout
+                    android:id="@+id/recording_container"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:layout_gravity="center_vertical"
+                    android:gravity="center_vertical"
                     android:orientation="horizontal"
                     tools:visibility="gone">
 
-                    <TextView android:id="@+id/record_time"
+                    <TextView
+                        android:id="@+id/record_time"
                         android:layout_width="wrap_content"
                         android:layout_height="wrap_content"
                         android:ellipsize="none"
                         android:layout_marginLeft="20dp"
                         android:layout_marginStart="20dp"
+                        style="@style/Signal.Text.Body"
                         android:text="00:00"
-                        android:textColor="#61737b"
-                        android:textSize="20dp"
+                        android:textColor="@color/core_light_60"
                         android:singleLine="true"
                         android:visibility="gone"
                         tools:visibility="visible"/>
 
-                    <FrameLayout android:layout_width="match_parent"
-                        android:layout_height="match_parent"
+                    <FrameLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
                         android:clipChildren="true">
 
-                        <TextView android:id="@+id/slide_to_cancel"
+                        <TextView
+                            android:id="@+id/slide_to_cancel"
                             android:layout_width="wrap_content"
-                            android:layout_height="match_parent"
-                            android:gravity="center"
+                            android:layout_height="wrap_content"
+                            android:gravity="left|start|center_vertical"
                             android:drawableLeft="@drawable/ic_keyboard_arrow_left_grey600_24dp"
                             android:drawableStart="@drawable/ic_keyboard_arrow_left_grey600_24dp"
+                            style="@style/Signal.Text.Caption"
                             android:text="@string/conversation_input_panel__slide_to_cancel"
                             android:textAllCaps="true"
-                            android:textColor="#61737b"
-                            android:textSize="10sp"
+                            android:textColor="@color/core_light_60"
                             android:ellipsize="none"
-                            android:singleLine="true"
-                            android:paddingLeft="20dp"
-                            android:paddingStart="20dp"
                             android:visibility="gone"
+                            android:paddingRight="50dp"
+                            android:paddingEnd="50dp"
                             tools:visibility="visible"/>
 
                     </FrameLayout>
@@ -172,30 +197,32 @@
     </FrameLayout>
 
     <org.thoughtcrime.securesms.components.AnimatingToggle
-            android:id="@+id/button_toggle"
-            android:layout_width="50dp"
-            android:layout_height="50dp"
-            android:layout_marginBottom="1dp"
-            android:background="@drawable/circle_tintable"
-            android:layout_gravity="bottom">
-
-        <ImageButton android:id="@+id/attach_button"
-                     android:layout_width="match_parent"
-                     android:layout_height="match_parent"
-                     android:layout_gravity="center"
-                     android:background="@drawable/circle_touch_highlight_background"
-                     android:src="@drawable/ic_attach_white_24dp"
-                     android:contentDescription="@string/ConversationActivity_add_attachment"
-                     android:nextFocusLeft="@+id/embedded_text_editor" />
+        android:id="@+id/button_toggle"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_marginLeft="12dp"
+        android:layout_marginStart="12dp"
+        android:background="@drawable/circle_tintable"
+        android:layout_gravity="bottom">
+
+        <ImageButton
+            android:id="@+id/attach_button"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_gravity="center"
+            android:background="@drawable/circle_touch_highlight_background"
+            android:src="@drawable/ic_add_white_24dp"
+            android:contentDescription="@string/ConversationActivity_add_attachment"
+            android:nextFocusLeft="@+id/embedded_text_editor" />
 
         <org.thoughtcrime.securesms.components.SendButton
-                android:id="@+id/send_button"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:contentDescription="@string/conversation_activity__send"
-                android:nextFocusLeft="@+id/embedded_text_editor"
-                android:src="?conversation_transport_sms_indicator"
-                android:background="@drawable/circle_touch_highlight_background" />
+            android:id="@+id/send_button"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:contentDescription="@string/conversation_activity__send"
+            android:nextFocusLeft="@+id/embedded_text_editor"
+            android:src="?conversation_transport_sms_indicator"
+            android:background="@drawable/circle_touch_highlight_background" />
 
     </org.thoughtcrime.securesms.components.AnimatingToggle>
 </org.thoughtcrime.securesms.components.InputPanel>
diff --git a/res/layout/conversation_item_footer.xml b/res/layout/conversation_item_footer.xml
new file mode 100644
index 00000000000..6d32daff5e1
--- /dev/null
+++ b/res/layout/conversation_item_footer.xml
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    tools:parentTag="org.thoughtcrime.securesms.components.ConversationItemFooter">
+
+    <TextView
+        android:id="@+id/footer_date"
+        android:autoLink="none"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:layout_marginRight="6dp"
+        android:layout_marginEnd="6dp"
+        android:linksClickable="false"
+        style="@style/Signal.Text.Caption.MessageSent"
+        android:textColor="?conversation_item_sent_text_secondary_color"
+        android:textAllCaps="true"
+        tools:text="30 mins"/>
+
+    <TextView
+        android:id="@+id/footer_sim_info"
+        android:autoLink="none"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:minWidth="15sp"
+        android:linksClickable="false"
+        style="@style/Signal.Text.Caption.MessageSent"
+        android:layout_gravity="right|end|bottom"
+        android:fontFamily="sans-serif-light"
+        android:paddingLeft="4dp"
+        android:paddingStart="4dp"
+        android:visibility="gone"
+        tools:visibility="visible"
+        tools:text="to SIM1" />
+
+    <org.thoughtcrime.securesms.components.ExpirationTimerView
+        android:id="@+id/footer_expiration_timer"
+        android:layout_gravity="center_vertical|end"
+        android:layout_marginLeft="3dp"
+        android:layout_marginStart="3dp"
+        android:layout_marginRight="3dp"
+        android:layout_marginEnd="3dp"
+        android:layout_width="12dp"
+        android:layout_height="12dp"
+        android:visibility="gone"
+        tools:visibility="visible"/>
+
+    <ImageView
+        android:id="@+id/footer_insecure_indicator"
+        android:layout_width="12dp"
+        android:layout_height="11dp"
+        android:src="@drawable/ic_unlocked_white_18dp"
+        android:visibility="gone"
+        android:layout_gravity="center_vertical|end"
+        android:alpha=".6"
+        android:contentDescription="@string/conversation_item__secure_message_description"
+        tools:visibility="visible"/>
+
+    <org.thoughtcrime.securesms.components.DeliveryStatusView
+        android:id="@+id/footer_delivery_status"
+        android:layout_width="20dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        app:iconColor="?attr/conversation_item_delivery_icon_color"/>
+
+</merge>
diff --git a/res/layout/conversation_item_header.xml b/res/layout/conversation_item_header.xml
index ef6fb13203f..7cccc8995b6 100644
--- a/res/layout/conversation_item_header.xml
+++ b/res/layout/conversation_item_header.xml
@@ -1,21 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             xmlns:tools="http://schemas.android.com/tools"
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
-             android:paddingTop="3dp"
-             android:paddingBottom="3dp">
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:paddingTop="20dp"
+    android:paddingBottom="21dp"
+    android:paddingLeft="28dp"
+    android:paddingRight="28dp">
 
-    <TextView android:id="@+id/text"
-              android:layout_width="wrap_content"
-              android:layout_height="wrap_content"
-              android:layout_gravity="center"
-              android:paddingLeft="6dp"
-              android:paddingRight="6dp"
-              android:paddingTop="3dp"
-              android:paddingBottom="3dp"
-              android:textColor="@color/white"
-              android:background="?conversation_item_header_background"
-              android:textSize="14sp"
-              tools:text="March 1, 2015" />
-</FrameLayout>
\ No newline at end of file
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:background="?attr/conversation_item_date_line_color"
+        android:layout_marginBottom="3dp"/>
+
+    <TextView
+        android:id="@+id/text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        style="@style/Signal.Text.Caption"
+        android:textColor="?conversation_item_update_text_color"
+        android:textAllCaps="true"
+        tools:text="March 1, 2015" />
+
+</LinearLayout>
diff --git a/res/layout/conversation_item_last_seen.xml b/res/layout/conversation_item_last_seen.xml
index 327d104ffae..e36d452d7d6 100644
--- a/res/layout/conversation_item_last_seen.xml
+++ b/res/layout/conversation_item_last_seen.xml
@@ -1,20 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             xmlns:tools="http://schemas.android.com/tools"
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
-             android:paddingTop="5dp"
-             android:paddingBottom="5dp"
-             android:layout_marginBottom="5dp"
-             android:background="?conversation_item_last_seen_background">
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:paddingTop="24dp"
+    android:paddingBottom="20dp">
 
-        <TextView android:id="@+id/text"
-                  android:layout_width="wrap_content"
-                  android:layout_height="wrap_content"
-                  android:layout_gravity="center"
-                  android:textSize="12sp"
-                  android:textAllCaps="true"
-                  android:textStyle="bold"
-                  android:background="?conversation_item_last_seen_text_background"
-                  tools:text="3 unread messages" />
-</FrameLayout>
\ No newline at end of file
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="4dp"
+        android:layout_marginLeft="28dp"
+        android:layout_marginRight="28dp"
+        android:layout_marginBottom="3dp"
+        android:background="?attr/conversation_item_last_seen_line_color" />
+
+    <TextView
+        android:id="@+id/text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        style="@style/Signal.Text.Caption"
+        android:textAllCaps="true"
+        android:fontFamily="sans-serif-medium"
+        android:textColor="?attr/conversation_item_last_seen_text_color"
+        tools:text="3 unread messages" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/res/layout/conversation_item_received.xml b/res/layout/conversation_item_received.xml
index 6b49d68aa4b..91870ed9aac 100644
--- a/res/layout/conversation_item_received.xml
+++ b/res/layout/conversation_item_received.xml
@@ -1,227 +1,185 @@
 <?xml version="1.0" encoding="utf-8"?>
 <org.thoughtcrime.securesms.ConversationItem
-        android:id="@+id/conversation_item"
-        android:layout_width="fill_parent"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/conversation_item"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:background="@drawable/conversation_item_background"
+    android:focusable="true"
+    android:nextFocusLeft="@+id/container"
+    android:nextFocusRight="@+id/embedded_text_editor"
+    android:clipToPadding="false"
+    android:clipChildren="false">
+
+    <RelativeLayout
+        android:id="@+id/container"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:paddingRight="10dip"
-        android:orientation="vertical"
-        android:background="@drawable/conversation_item_background"
-        android:focusable="true"
-        android:nextFocusLeft="@+id/container"
-        android:nextFocusRight="@+id/embedded_text_editor"
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
-        xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <RelativeLayout android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="2dp"
-                    android:layout_marginLeft="9dp"
-                    android:layout_marginBottom="6dp"
-                    android:layout_marginRight="0dp">
+        android:layout_marginRight="@dimen/conversation_individual_right_gutter"
+        android:layout_marginEnd="@dimen/conversation_individual_right_gutter"
+        android:clipToPadding="false"
+        android:clipChildren="false">
 
         <org.thoughtcrime.securesms.components.AvatarImageView
             android:id="@+id/contact_photo"
             android:foreground="@drawable/contact_photo_background"
-            android:layout_width="40dp"
-            android:layout_height="40dp"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_marginLeft="8dp"
+            android:layout_marginRight="8dp"
+            android:layout_marginBottom="6dp"
             android:layout_alignParentLeft="true"
             android:layout_alignParentBottom="true"
             android:cropToPadding="true"
             android:contentDescription="@string/conversation_item_received__contact_photo_description" />
 
-        <LinearLayout android:id="@+id/body_bubble"
-                      android:layout_width="wrap_content"
-                      android:layout_height="wrap_content"
-                      android:layout_toRightOf="@id/contact_photo"
-                      android:layout_marginRight="35dp"
-                      android:background="@drawable/received_bubble"
-                      android:orientation="vertical"
-                      tools:backgroundTint="@color/blue_900">
-
-            <LinearLayout android:id="@+id/group_sender_holder"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:orientation="horizontal"
-                          android:visibility="gone"
-                          android:paddingRight="4dp"
-                          android:paddingLeft="4dp"
-                          android:layout_marginBottom="10dp"
-                          tools:visibility="visible">
-
-                <TextView android:id="@+id/group_message_sender"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:paddingRight="4sp"
-                          android:paddingEnd="4sp"
-                          android:textSize="13sp"
-                          android:textColor="?conversation_item_received_text_primary_color"
-                          android:maxLines="1"
-                          android:ellipsize="end"
-                          tools:visibility="visible"
-                          tools:text="+14152222222"/>
-
-                <TextView android:id="@+id/group_message_sender_profile"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:paddingRight="4sp"
-                          android:paddingLeft="4sp"
-                          android:fontFamily="sans-serif-light"
-                          android:textColor="?conversation_item_received_text_secondary_color"
-                          android:textSize="13sp"
-                          android:maxLines="1"
-                          android:ellipsize="end"
-                          tools:text="~Clement Duval"/>
+        <org.thoughtcrime.securesms.components.CornerMaskingView
+            android:id="@+id/body_bubble"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="@dimen/message_bubble_edge_margin"
+            android:layout_marginEnd="@dimen/message_bubble_edge_margin"
+            android:background="@color/white"
+            android:clipToPadding="false"
+            android:clipChildren="false"
+            tools:backgroundTint="@color/conversation_blue">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:clipToPadding="false"
+            android:clipChildren="false">
+
+            <LinearLayout
+                android:id="@+id/group_sender_holder"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:layout_marginBottom="2dp"
+                android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+                android:orientation="horizontal"
+                android:visibility="gone"
+                tools:visibility="visible">
+
+                <TextView
+                    android:id="@+id/group_message_sender"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginRight="4sp"
+                    android:layout_marginEnd="4sp"
+                    style="@style/Signal.Text.Preview"
+                    android:fontFamily="sans-serif-medium"
+                    android:textColor="?conversation_item_received_text_primary_color"
+                    android:maxLines="1"
+                    android:ellipsize="end"
+                    tools:visibility="visible"
+                    tools:text="+14152222222"/>
+
+                <TextView
+                    android:id="@+id/group_message_sender_profile"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:paddingRight="4sp"
+                    android:paddingLeft="4sp"
+                    style="@style/Signal.Text.Preview"
+                    android:fontFamily="sans-serif-regular"
+                    android:textColor="?conversation_item_received_text_primary_color"
+                    android:textStyle="italic"
+                    android:maxLines="1"
+                    android:ellipsize="end"
+                    tools:text="~Clement Duval"/>
 
             </LinearLayout>
 
             <org.thoughtcrime.securesms.components.QuoteView
-                    android:id="@+id/quote_view"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginBottom="3dp"
-                    android:visibility="gone"
-                    app:message_type="incoming"
-                    tools:visibility="visible"/>
+                android:id="@+id/quote_view"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:layout_marginLeft="6dp"
+                android:layout_marginRight="6dp"
+                android:visibility="gone"
+                app:message_type="incoming"
+                app:quote_colorPrimary="?attr/conversation_item_quote_text_color"
+                app:quote_colorSecondary="?attr/conversation_item_quote_text_color"
+                tools:visibility="visible"/>
 
             <ViewStub
-                    android:id="@+id/shared_contact_view_stub"
-                    android:layout="@layout/conversation_item_shared_contact"
-                    android:layout_width="@dimen/media_bubble_max_width"
-                    android:layout_height="wrap_content"
-                    android:visibility="gone"/>
+                android:id="@+id/shared_contact_view_stub"
+                android:layout="@layout/conversation_item_received_shared_contact"
+                android:layout_width="@dimen/media_bubble_default_dimens"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:visibility="gone"/>
 
             <ViewStub
-                    android:id="@+id/image_view_stub"
-                    android:layout="@layout/conversation_item_received_thumbnail"
-                    android:layout_width="@dimen/media_bubble_default_dimens"
-                    android:layout_height="@dimen/media_bubble_default_dimens"/>
+                android:id="@+id/image_view_stub"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout="@layout/conversation_item_received_thumbnail" />
 
             <ViewStub
-                    android:id="@+id/audio_view_stub"
-                    android:layout="@layout/conversation_item_received_audio"
-                    android:layout_width="210dp"
-                    android:layout_height="wrap_content"/>
+                android:id="@+id/audio_view_stub"
+                android:layout="@layout/conversation_item_received_audio"
+                android:layout_width="210dp"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginRight="@dimen/message_bubble_horizontal_padding" />
 
-            <ViewStub android:id="@+id/document_view_stub"
-                      android:layout="@layout/conversation_item_received_document"
-                      android:layout_width="210dp"
-                      android:layout_height="wrap_content"/>
+            <ViewStub
+                android:id="@+id/document_view_stub"
+                android:layout="@layout/conversation_item_received_document"
+                android:layout_width="210dp"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginRight="@dimen/message_bubble_horizontal_padding" />
 
             <org.thoughtcrime.securesms.components.emoji.EmojiTextView
-                    android:id="@+id/conversation_item_body"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingLeft="4dp"
-                    android:paddingRight="4dp"
-                    android:textAppearance="?android:attr/textAppearanceSmall"
-                    android:textColor="?conversation_item_received_text_primary_color"
-                    android:textColorLink="?conversation_item_received_text_primary_color"
-                    android:textSize="@dimen/conversation_item_body_text_size"
-                    app:scaleEmojis="true"
-                    tools:text="boop"/>
-
-            <LinearLayout android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:paddingTop="2dip"
-                          android:paddingLeft="4dp"
-                          android:paddingRight="4dp"
-                          android:orientation="horizontal"
-                          android:gravity="left">
-
-                <ImageView android:id="@+id/insecure_indicator"
-                           android:layout_width="12dp"
-                           android:layout_height="11dp"
-                           android:layout_gravity="center_vertical"
-                           android:layout_marginRight="3dp"
-                           android:layout_marginEnd="3dp"
-                           android:src="@drawable/ic_unlocked_white_18dp"
-                           android:contentDescription="@string/conversation_item__secure_message_description"
-                           android:visibility="gone"
-                           android:alpha=".65"
-                           android:tint="?conversation_item_received_text_secondary_color"
-                           android:tintMode="multiply"
-                           tools:visibility="visible"/>
-
-                <org.thoughtcrime.securesms.components.ExpirationTimerView
-                        android:id="@+id/expiration_indicator"
-                        app:empty="@drawable/ic_hourglass_empty_white_18dp"
-                        app:full="@drawable/ic_hourglass_full_white_18dp"
-                        app:tint="?conversation_item_received_text_secondary_color"
-                        app:percentage="0"
-                        app:offset="0"
-                        android:layout_gravity="center_vertical|end"
-                        android:alpha=".65"
-                        android:layout_width="8dp"
-                        android:layout_height="11dp"
-                        android:layout_marginRight="3dp"
-                        android:layout_marginEnd="3dp"
-                        android:visibility="gone"
-                        tools:visibility="visible"/>
-
-                <org.thoughtcrime.securesms.components.DeliveryStatusView
-                        android:id="@+id/delivery_status"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:visibility="gone"/>
-
-                <TextView android:id="@+id/conversation_item_date"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:layout_gravity="left"
-                          android:paddingTop="1dip"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:textColor="?conversation_item_received_text_secondary_color"
-                          android:textSize="@dimen/conversation_item_date_text_size"
-                          android:fontFamily="sans-serif-light"
-                          android:autoLink="none"
-                          android:linksClickable="false"
-                          tools:text="Now"
-                          tools:visibility="visible"/>
-
-                <TextView android:id="@+id/sim_info"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:layout_gravity="left"
-                          android:paddingTop="1dip"
-                          android:paddingLeft="4dp"
-                          android:paddingStart="4dp"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:textColor="?conversation_item_received_text_secondary_color"
-                          android:textSize="@dimen/conversation_item_date_text_size"
-                          android:fontFamily="sans-serif-light"
-                          android:autoLink="none"
-                          android:linksClickable="false"
-                          android:visibility="gone"
-                          tools:visibility="visible"
-                          tools:text="from SIM1"/>
+                android:id="@+id/conversation_item_body"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/message_bubble_top_padding"
+                android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+                style="@style/Signal.Text.Body"
+                android:textColor="?conversation_item_received_text_primary_color"
+                android:textColorLink="?conversation_item_received_text_primary_color"
+                app:scaleEmojis="true"
+                tools:text="Mango pickle lorem ipsum"/>
+
+            <org.thoughtcrime.securesms.components.ConversationItemFooter
+                android:id="@+id/conversation_item_footer"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="-4dp"
+                android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+                android:layout_marginBottom="@dimen/message_bubble_bottom_padding"
+                android:clipChildren="false"
+                android:clipToPadding="false"
+                app:footer_color="?conversation_item_received_text_secondary_color"/>
+
             </LinearLayout>
-        </LinearLayout>
+
+        </org.thoughtcrime.securesms.components.CornerMaskingView>
 
         <org.thoughtcrime.securesms.components.AlertView
-                android:id="@+id/indicators_parent"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_alignParentRight="true"
-                android:orientation="vertical"
-                android:gravity="center_vertical"/>
-
-        <TextView android:id="@+id/indicator_text"
-                  android:layout_width="wrap_content"
-                  android:layout_height="wrap_content"
-                  android:layout_below="@id/body_bubble"
-                  android:layout_alignParentRight="true"
-                  android:paddingRight="5dip"
-                  android:paddingLeft="5dip"
-                  android:paddingTop="3dp"
-                  android:paddingBottom="3dp"
-                  android:layout_marginLeft="50dp"
-                  android:layout_marginRight="22dp"
-                  android:layout_marginTop="-2dp"
-                  android:textSize="12sp"
-                  android:textColor="?conversation_item_sent_text_indicator_tab_color"
-                  android:background="?conversation_item_sent_indicator_text_background"
-                  android:visibility="gone" />
+            android:id="@+id/indicators_parent"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentRight="true"
+            android:orientation="vertical"
+            android:gravity="center_vertical"/>
 
     </RelativeLayout>
 </org.thoughtcrime.securesms.ConversationItem>
diff --git a/res/layout/conversation_item_received_document.xml b/res/layout/conversation_item_received_document.xml
index e449ea4748c..5153484a856 100644
--- a/res/layout/conversation_item_received_document.xml
+++ b/res/layout/conversation_item_received_document.xml
@@ -7,6 +7,6 @@
         android:layout_width="210dp"
         android:layout_height="wrap_content"
         android:visibility="gone"
-        app:documentForegroundTintColor="@color/white"
-        app:documentBackgroundTintColor="@color/blue_500"
+        app:doc_titleColor="?conversation_item_received_text_primary_color"
+        app:doc_captionColor="?conversation_item_received_text_secondary_color"
         tools:visibility="visible"/>
diff --git a/res/layout/conversation_item_received_shared_contact.xml b/res/layout/conversation_item_received_shared_contact.xml
new file mode 100644
index 00000000000..f22d28d7670
--- /dev/null
+++ b/res/layout/conversation_item_received_shared_contact.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<org.thoughtcrime.securesms.components.SharedContactView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/shared_contact_view"
+    android:layout_width="@dimen/media_bubble_default_dimens"
+    android:layout_height="wrap_content"
+    app:contact_titleColor="?conversation_item_received_text_primary_color"
+    app:contact_captionColor="?conversation_item_received_text_secondary_color" />
diff --git a/res/layout/conversation_item_received_thumbnail.xml b/res/layout/conversation_item_received_thumbnail.xml
index 43f600677a9..3d93f459afc 100644
--- a/res/layout/conversation_item_received_thumbnail.xml
+++ b/res/layout/conversation_item_received_thumbnail.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<org.thoughtcrime.securesms.components.ThumbnailView
+<org.thoughtcrime.securesms.components.ConversationItemThumbnail
         xmlns:android="http://schemas.android.com/apk/res/android"
         xmlns:tools="http://schemas.android.com/tools"
         xmlns:app="http://schemas.android.com/apk/res-auto"
@@ -10,9 +10,10 @@
         android:adjustViewBounds="true"
         android:contentDescription="@string/conversation_item__mms_image_description"
         android:visibility="gone"
-        app:minWidth="@dimen/media_bubble_min_width"
-        app:maxWidth="@dimen/media_bubble_max_width"
-        app:minHeight="@dimen/media_bubble_min_height"
-        app:maxHeight="@dimen/media_bubble_max_height"
+        android:elevation="8dp"
+        app:conversationThumbnail_minWidth="@dimen/media_bubble_min_width"
+        app:conversationThumbnail_maxWidth="@dimen/media_bubble_max_width"
+        app:conversationThumbnail_minHeight="@dimen/media_bubble_min_height"
+        app:conversationThumbnail_maxHeight="@dimen/media_bubble_max_height"
         tools:src="@drawable/ic_video_light"
         tools:visibility="gone" />
diff --git a/res/layout/conversation_item_sent.xml b/res/layout/conversation_item_sent.xml
index 072876586ee..ba74c587e86 100644
--- a/res/layout/conversation_item_sent.xml
+++ b/res/layout/conversation_item_sent.xml
@@ -1,214 +1,156 @@
 <?xml version="1.0" encoding="utf-8"?>
 <org.thoughtcrime.securesms.ConversationItem
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
-        xmlns:app="http://schemas.android.com/apk/res-auto"
-        android:id="@+id/conversation_item"
-        android:layout_width="fill_parent"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/conversation_item"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    android:focusable="true"
+    android:nextFocusLeft="@id/container"
+    android:nextFocusRight="@id/embedded_text_editor"
+    android:background="@drawable/conversation_item_background"
+    android:clipToPadding="false"
+    android:clipChildren="false">
+
+    <RelativeLayout
+        android:id="@+id/container"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:focusable="true"
-        android:nextFocusLeft="@id/container"
-        android:nextFocusRight="@id/embedded_text_editor"
-        android:background="@drawable/conversation_item_background">
+        android:layout_marginRight="@dimen/conversation_individual_right_gutter"
+        android:layout_marginEnd="@dimen/conversation_individual_right_gutter"
+        android:clipToPadding="false"
+        android:clipChildren="false">
 
-    <RelativeLayout android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="6dp"
-                    android:layout_marginLeft="6dp"
-                    android:layout_marginBottom="6dp"
-                    android:layout_marginRight="0dp">
-
-        <org.thoughtcrime.securesms.components.AlertView
-                android:id="@+id/indicators_parent"
+        <org.thoughtcrime.securesms.components.CornerMaskingView
+            android:id="@+id/body_bubble"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toLeftOf="@+id/indicators_parent"
+            android:layout_toStartOf="@+id/indicators_parent"
+            android:layout_alignWithParentIfMissing="true"
+            android:layout_marginLeft="@dimen/message_bubble_edge_margin"
+            android:layout_marginStart="@dimen/message_bubble_edge_margin"
+            android:background="@color/white"
+            android:clipToPadding="false"
+            android:clipChildren="false"
+            tools:backgroundTint="@color/core_light_10">
+
+            <LinearLayout
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:orientation="vertical"
-                android:gravity="left|center_vertical"
-                android:layout_marginLeft="6dp"
-                android:layout_alignParentLeft="true"
-                android:layout_centerVertical="true"/>
-
-        <LinearLayout android:id="@+id/body_bubble"
-                      android:layout_width="wrap_content"
-                      android:layout_height="wrap_content"
-                      android:layout_alignParentRight="true"
-                      android:layout_marginLeft="50dp"
-                      android:layout_marginRight="5dp"
-                      android:background="@drawable/sent_bubble"
-                      android:orientation="vertical">
-
-            <org.thoughtcrime.securesms.components.QuoteView
+                android:clipToPadding="false"
+                android:clipChildren="false">
+
+                <org.thoughtcrime.securesms.components.QuoteView
                     android:id="@+id/quote_view"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginBottom="3dp"
+                    android:layout_marginTop="@dimen/message_bubble_top_padding"
+                    android:layout_marginLeft="6dp"
+                    android:layout_marginRight="6dp"
                     android:visibility="gone"
                     app:message_type="outgoing"
+                    app:quote_colorPrimary="?attr/conversation_item_quote_text_color"
+                    app:quote_colorSecondary="?attr/conversation_item_quote_text_color"
                     tools:visibility="visible"/>
 
-            <ViewStub
+                <ViewStub
                     android:id="@+id/shared_contact_view_stub"
-                    android:layout="@layout/conversation_item_shared_contact"
-                    android:layout_width="@dimen/media_bubble_max_width"
+                    android:layout="@layout/conversation_item_sent_shared_contact"
+                    android:layout_width="@dimen/media_bubble_default_dimens"
                     android:layout_height="wrap_content"
+                    android:layout_marginTop="@dimen/message_bubble_top_padding"
                     android:visibility="gone"/>
 
-            <ViewStub
+                <ViewStub
                     android:id="@+id/image_view_stub"
-                    android:layout_width="@dimen/media_bubble_default_dimens"
-                    android:layout_height="@dimen/media_bubble_default_dimens"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
                     android:layout="@layout/conversation_item_sent_thumbnail" />
 
-            <ViewStub
+                <ViewStub
                     android:id="@+id/audio_view_stub"
                     android:layout="@layout/conversation_item_sent_audio"
                     android:layout_width="210dp"
-                    android:layout_height="wrap_content"/>
-
-            <ViewStub android:id="@+id/document_view_stub"
-                      android:layout="@layout/conversation_item_sent_document"
-                      android:layout_width="210dp"
-                      android:layout_height="wrap_content"/>
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="@dimen/message_bubble_top_padding"
+                    android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                    android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginRight="@dimen/message_bubble_horizontal_padding" />
+
+                <ViewStub
+                    android:id="@+id/document_view_stub"
+                    android:layout="@layout/conversation_item_sent_document"
+                    android:layout_width="210dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="@dimen/message_bubble_top_padding"
+                    android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                    android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginRight="@dimen/message_bubble_horizontal_padding" />
 
-            <org.thoughtcrime.securesms.components.emoji.EmojiTextView
+                <org.thoughtcrime.securesms.components.emoji.EmojiTextView
                     android:id="@+id/conversation_item_body"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:paddingLeft="4dp"
-                    android:paddingRight="4dp"
-                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:layout_marginTop="@dimen/message_bubble_top_padding"
+                    android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginBottom="@dimen/message_bubble_collapsed_footer_padding"
+                    style="@style/Signal.Text.Body"
                     android:textColor="?conversation_item_sent_text_primary_color"
                     android:textColorLink="?conversation_item_sent_text_primary_color"
-                    android:textSize="@dimen/conversation_item_body_text_size"
                     app:scaleEmojis="true"
                     tools:text="Mango pickle lorem ipsum"/>
 
-            <LinearLayout android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:orientation="horizontal"
-                          android:paddingLeft="4dp"
-                          android:paddingRight="4dp"
-                          android:layout_gravity="right">
-
-                <View android:id="@+id/group_sender_holder"
-                      android:layout_width="wrap_content"
-                      android:layout_height="wrap_content"
-                      android:visibility="gone"/>
-
-                <TextView android:id="@+id/group_message_sender"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:linksClickable="false"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:layout_gravity="right"
-                          android:textColor="?conversation_item_sent_text_secondary_color"
-                          android:visibility="gone"
-                          android:layout_marginRight="8dip"
-                          android:paddingTop="1dip"/>
-
-                <TextView android:id="@+id/group_message_sender_profile"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:linksClickable="false"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:layout_gravity="right"
-                          android:textColor="?conversation_item_sent_text_secondary_color"
-                          android:visibility="gone"
-                          android:layout_marginRight="8dip"
-                          android:paddingTop="1dip"/>
-
-
-                <TextView android:id="@+id/conversation_item_date"
-                          android:autoLink="none"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:minWidth="15sp"
-                          android:linksClickable="false"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:layout_gravity="right|bottom"
-                          android:fontFamily="sans-serif-light"
-                          android:textColor="?conversation_item_sent_text_secondary_color"
-                          android:textSize="@dimen/conversation_item_date_text_size"
-                          android:paddingTop="1dip"
-                          android:paddingBottom="2dp"
-                          tools:text="30 mins"/>
-
-                <TextView android:id="@+id/sim_info"
-                          android:autoLink="none"
-                          android:layout_width="wrap_content"
-                          android:layout_height="wrap_content"
-                          android:minWidth="15sp"
-                          android:linksClickable="false"
-                          android:textAppearance="?android:attr/textAppearanceSmall"
-                          android:layout_gravity="right|bottom"
-                          android:fontFamily="sans-serif-light"
-                          android:textColor="?conversation_item_sent_text_secondary_color"
-                          android:textSize="@dimen/conversation_item_date_text_size"
-                          android:paddingTop="1dip"
-                          android:paddingBottom="2dp"
-                          android:paddingLeft="4dp"
-                          android:paddingStart="4dp"
-                          android:visibility="gone"
-                          tools:visibility="visible"
-                          tools:text="to SIM1"/>
-
-                <org.thoughtcrime.securesms.components.DeliveryStatusView
-                        android:id="@+id/delivery_status"
-                        android:layout_width="20dp"
-                        android:layout_height="wrap_content"
-                        android:alpha=".7"
-                        app:iconColor="?conversation_item_sent_text_secondary_color"/>
-
-                <org.thoughtcrime.securesms.components.ExpirationTimerView
-                        android:id="@+id/expiration_indicator"
-                        app:empty="@drawable/ic_hourglass_empty_white_18dp"
-                        app:full="@drawable/ic_hourglass_full_white_18dp"
-                        app:tint="?conversation_item_sent_text_secondary_color"
-                        app:percentage="0"
-                        app:offset="0"
-                        android:layout_gravity="center_vertical|end"
-                        android:alpha=".6"
-                        android:layout_marginLeft="3dp"
-                        android:layout_marginStart="3dp"
-                        android:layout_width="7dp"
-                        android:layout_height="11dp"
-                        android:visibility="gone"
-                        tools:visibility="visible"/>
-
-                <ImageView android:id="@+id/insecure_indicator"
-                           android:layout_width="12dp"
-                           android:layout_height="11dp"
-                           android:src="@drawable/ic_unlocked_white_18dp"
-                           android:visibility="gone"
-                           android:layout_gravity="center_vertical|end"
-                           android:alpha=".6"
-                           android:tint="?attr/conversation_item_sent_text_secondary_color"
-                           android:layout_marginLeft="3dp"
-                           android:layout_marginStart="3dp"
-                           android:tintMode="multiply"
-                           android:contentDescription="@string/conversation_item__secure_message_description"
-                           tools:visibility="visible"/>
+                <View
+                    android:id="@+id/group_sender_holder"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:visibility="gone"/>
+
+                <TextView
+                    android:id="@+id/group_message_sender"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:visibility="gone" />
+
+                <TextView
+                    android:id="@+id/group_message_sender_profile"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:visibility="gone" />
+
+                <org.thoughtcrime.securesms.components.ConversationItemFooter
+                    android:id="@+id/conversation_item_footer"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="-4dp"
+                    android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+                    android:layout_marginBottom="@dimen/message_bubble_bottom_padding"
+                    android:clipChildren="false"
+                    android:clipToPadding="false"
+                    app:footer_color="?conversation_item_sent_text_secondary_color"/>
 
             </LinearLayout>
-        </LinearLayout>
 
-        <TextView android:id="@+id/indicator_text"
+        </org.thoughtcrime.securesms.components.CornerMaskingView>
+
+        <org.thoughtcrime.securesms.components.AlertView
+            android:id="@+id/indicators_parent"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_below="@id/body_bubble"
+            android:orientation="vertical"
+            android:paddingBottom="4dp"
+            android:layout_marginLeft="8dp"
+            android:layout_marginStart="8dp"
             android:layout_alignParentRight="true"
-            android:paddingRight="5dip"
-            android:paddingLeft="5dip"
-            android:paddingTop="3dp"
-            android:paddingBottom="3dp"
-            android:layout_marginLeft="50dp"
-            android:layout_marginRight="22dp"
-            android:layout_marginTop="-3dp"
-            android:textSize="12sp"
-            android:textColor="?conversation_item_sent_text_indicator_tab_color"
-            android:background="?conversation_item_sent_indicator_text_background"
-            android:visibility="gone" />
+            android:layout_alignParentEnd="true"
+            android:layout_alignParentBottom="true" />
 
     </RelativeLayout>
+
 </org.thoughtcrime.securesms.ConversationItem>
diff --git a/res/layout/conversation_item_sent_document.xml b/res/layout/conversation_item_sent_document.xml
index 27e5dc52381..e176f063c35 100644
--- a/res/layout/conversation_item_sent_document.xml
+++ b/res/layout/conversation_item_sent_document.xml
@@ -6,7 +6,7 @@
         android:id="@+id/document_view"
         android:layout_width="210dp"
         android:layout_height="wrap_content"
-        app:documentForegroundTintColor="@color/grey_500"
-        app:documentBackgroundTintColor="@color/white"
         android:visibility="gone"
+        app:doc_titleColor="?conversation_item_sent_text_primary_color"
+        app:doc_captionColor="?conversation_item_sent_text_secondary_color"
         tools:visibility="visible"/>
diff --git a/res/layout/conversation_item_shared_contact.xml b/res/layout/conversation_item_sent_shared_contact.xml
similarity index 51%
rename from res/layout/conversation_item_shared_contact.xml
rename to res/layout/conversation_item_sent_shared_contact.xml
index 44490b08590..70b3430573b 100644
--- a/res/layout/conversation_item_shared_contact.xml
+++ b/res/layout/conversation_item_sent_shared_contact.xml
@@ -1,6 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <org.thoughtcrime.securesms.components.SharedContactView
     xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/shared_contact_view"
     android:layout_width="@dimen/media_bubble_default_dimens"
-    android:layout_height="wrap_content" />
+    android:layout_height="wrap_content"
+    app:contact_titleColor="?conversation_item_sent_text_primary_color"
+    app:contact_captionColor="?conversation_item_sent_text_secondary_color"/>
diff --git a/res/layout/conversation_item_sent_thumbnail.xml b/res/layout/conversation_item_sent_thumbnail.xml
index 4588dff88af..fc7af1b5179 100644
--- a/res/layout/conversation_item_sent_thumbnail.xml
+++ b/res/layout/conversation_item_sent_thumbnail.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<org.thoughtcrime.securesms.components.ThumbnailView
+<org.thoughtcrime.securesms.components.ConversationItemThumbnail
         xmlns:android="http://schemas.android.com/apk/res/android"
         xmlns:tools="http://schemas.android.com/tools"
         xmlns:app="http://schemas.android.com/apk/res-auto"
@@ -12,9 +12,10 @@
         android:adjustViewBounds="true"
         android:contentDescription="@string/conversation_item__mms_image_description"
         android:visibility="gone"
-        app:minWidth="@dimen/media_bubble_min_width"
-        app:maxWidth="@dimen/media_bubble_max_width"
-        app:minHeight="@dimen/media_bubble_min_height"
-        app:maxHeight="@dimen/media_bubble_max_height"
+        android:elevation="8dp"
+        app:conversationThumbnail_minWidth="@dimen/media_bubble_min_width"
+        app:conversationThumbnail_maxWidth="@dimen/media_bubble_max_width"
+        app:conversationThumbnail_minHeight="@dimen/media_bubble_min_height"
+        app:conversationThumbnail_maxHeight="@dimen/media_bubble_max_height"
         tools:src="@drawable/ic_video_light"
         tools:visibility="visible" />
diff --git a/res/layout/conversation_item_thumbnail.xml b/res/layout/conversation_item_thumbnail.xml
new file mode 100644
index 00000000000..e5fcb7f7062
--- /dev/null
+++ b/res/layout/conversation_item_thumbnail.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <org.thoughtcrime.securesms.components.ThumbnailView
+        android:id="@+id/conversation_thumbnail_image"
+        android:layout_width="@dimen/media_bubble_default_dimens"
+        android:layout_height="@dimen/media_bubble_default_dimens"
+        android:adjustViewBounds="true"
+        android:clickable="false"
+        android:longClickable="false"
+        android:scaleType="fitCenter"
+        android:contentDescription="@string/conversation_item__mms_image_description"
+        app:thumbnail_radius="1dp"/>
+
+    <ImageView
+        android:id="@+id/conversation_thumbnail_shade"
+        android:layout_width="match_parent"
+        android:layout_height="48dp"
+        android:layout_gravity="bottom"
+        android:visibility="gone"
+        android:src="@drawable/image_shade" />
+
+    <org.thoughtcrime.securesms.components.ConversationItemFooter
+        android:id="@+id/conversation_thumbnail_footer"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
+        android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+        android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+        android:layout_marginBottom="@dimen/message_bubble_bottom_padding"
+        app:footer_color="@color/core_white"/>
+
+</merge>
diff --git a/res/layout/conversation_item_update.xml b/res/layout/conversation_item_update.xml
index f22e7248cf9..3ba0863a04c 100644
--- a/res/layout/conversation_item_update.xml
+++ b/res/layout/conversation_item_update.xml
@@ -1,53 +1,80 @@
 <?xml version="1.0" encoding="utf-8"?>
 <org.thoughtcrime.securesms.ConversationUpdateItem
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
-        android:id="@+id/conversation_update_item"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/conversation_update_item"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@drawable/conversation_item_background"
+    android:focusable="true"
+    android:gravity="center"
+    android:orientation="vertical"
+    android:paddingBottom="6dp"
+    android:paddingLeft="28dp"
+    android:paddingRight="28dp"
+    android:paddingTop="8dp">
+
+    <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:focusable="true"
-        android:background="@drawable/conversation_item_background"
-        android:orientation="horizontal"
-        android:gravity="center"
-        android:padding="20dp">
-
-    <ImageView android:id="@+id/conversation_update_icon"
-               android:layout_marginRight="7dp"
-               android:layout_width="wrap_content"
-               android:layout_height="wrap_content"
-               android:layout_gravity="center_vertical"
-               android:src="@drawable/ic_call_received_grey600_24dp" />
-
-    <LinearLayout android:orientation="vertical"
-                  android:layout_width="wrap_content"
-                  android:layout_height="wrap_content">
-
-        <TextView android:id="@+id/conversation_update_body"
-                  android:autoLink="all"
-                  android:layout_width="wrap_content"
-                  android:layout_height="wrap_content"
-                  android:linksClickable="true"
-                  android:textAppearance="?android:attr/textAppearanceSmall"
-                  android:textStyle="italic"
-                  android:textColor="?attr/conversation_group_member_name"
-                  tools:text="Sasha called you"/>
-
-        <TextView android:id="@+id/conversation_update_date"
-                  android:autoLink="none"
-                  android:layout_width="wrap_content"
-                  android:layout_height="wrap_content"
-                  android:minWidth="15sp"
-                  android:linksClickable="false"
-                  android:textAppearance="?android:attr/textAppearanceSmall"
-                  android:layout_gravity="center"
-                  android:fontFamily="sans-serif-light"
-                  android:textColor="?conversation_item_sent_text_secondary_color"
-                  android:textSize="@dimen/conversation_item_date_text_size"
-                  android:paddingTop="1dip"
-                  android:paddingBottom="2dp"
-                  tools:text="30 min ago" />
+        android:layout_marginBottom="7dp"
+        android:layout_marginTop="12dp"
+        android:gravity="center">
+
+        <ImageView
+            android:id="@+id/conversation_update_icon"
+            android:layout_width="20dp"
+            android:layout_height="20dp"
+            android:layout_gravity="center_vertical"
+            android:layout_marginEnd="6dp"
+            android:layout_marginRight="6dp"
+            android:src="@drawable/ic_timer" />
+
+        <TextView
+            android:id="@+id/conversation_update_title"
+            style="@style/Signal.Text.Caption"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textAllCaps="true"
+            android:textColor="?conversation_item_update_text_color"
+            tools:text="1 hour" />
 
     </LinearLayout>
 
 
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="7dp"
+        android:gravity="center"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/conversation_update_body"
+            style="@style/Signal.Text.Preview"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:autoLink="all"
+            android:gravity="center"
+            android:linksClickable="true"
+            android:textColor="?attr/conversation_item_update_text_color"
+            tools:text="Gwen Stacy set the disappearing message timer to 1 hour" />
+
+        <TextView
+            android:id="@+id/conversation_update_date"
+            style="@style/Signal.Text.Caption"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginTop="6dp"
+            android:autoLink="none"
+            android:gravity="center"
+            android:linksClickable="false"
+            android:minWidth="15sp"
+            android:textAllCaps="true"
+            android:textColor="?conversation_item_update_text_color"
+            tools:text="30 min ago" />
+
+    </LinearLayout>
+
 </org.thoughtcrime.securesms.ConversationUpdateItem>
diff --git a/res/layout/conversation_list_item_view.xml b/res/layout/conversation_list_item_view.xml
index 39c98f42fbd..9875d09e198 100644
--- a/res/layout/conversation_list_item_view.xml
+++ b/res/layout/conversation_list_item_view.xml
@@ -8,32 +8,28 @@
         android:focusable="true"
         android:nextFocusRight="@+id/fab"
         android:nextFocusLeft="@+id/container"
-        android:layout_height="75dp">
+        android:layout_height="72dp"
+        android:paddingLeft="16dp"
+        android:paddingRight="16dp">
 
     <org.thoughtcrime.securesms.components.AvatarImageView
         android:id="@+id/contact_photo_image"
         android:foreground="@drawable/contact_photo_background"
-        android:layout_width="54dp"
-        android:layout_height="54dp"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_centerVertical="true"
-        android:layout_marginTop="3dp"
-        android:layout_marginBottom="3dp"
         android:cropToPadding="true"
         tools:src="@drawable/ic_contact_picture"
         android:contentDescription="@string/conversation_list_item_view__contact_photo_image"
         android:layout_marginRight="10dp"
-        android:layout_marginEnd="10dp"
-        android:layout_marginStart="14dp"
-        android:layout_marginLeft="14dp" />
+        android:layout_marginEnd="10dp" />
 
     <RelativeLayout android:layout_width="match_parent"
                   android:layout_height="wrap_content"
-                  android:layout_marginLeft="4dip"
-                  android:layout_marginStart="4dip"
-                  android:layout_marginRight="8dip"
-                  android:layout_marginEnd="8dip"
+                  android:layout_marginLeft="4dp"
+                  android:layout_marginStart="4dp"
                   android:layout_centerVertical="true"
                   android:layout_toRightOf="@id/contact_photo_image"
                   android:layout_toEndOf="@id/contact_photo_image"
@@ -49,7 +45,8 @@
                   android:layout_alignParentStart="true"
                   android:layout_toLeftOf="@+id/thumbnail"
                   android:layout_toStartOf="@+id/thumbnail"
-                  android:textAppearance="?android:attr/textAppearanceMedium"
+                  style="@style/Signal.Text.Body"
+                  android:fontFamily="sans-serif-medium"
                   android:textColor="?attr/conversation_list_item_contact_color"
                   android:maxLines="1"
                   tools:text="Jules Bonnot"
@@ -81,9 +78,8 @@
                 android:layout_toLeftOf="@+id/status"
                 android:layout_toStartOf="@+id/status"
                 android:paddingRight="1dp"
-                android:textAppearance="?android:attr/textAppearanceSmall"
+                style="@style/Signal.Text.Preview"
                 android:textColor="?attr/conversation_list_item_subject_color"
-                android:fontFamily="sans-serif-light"
                 android:maxLines="1"
                 tools:text="Wheels arrive at 3pm flat. This is a somewhat longer message."
                 android:ellipsize="end" />
@@ -93,30 +89,29 @@
                 android:layout_width="40dp"
                 android:layout_height="40dp"
                 android:layout_gravity="center_horizontal"
-                android:layout_marginRight="5dip"
-                android:layout_marginLeft="5dip"
+                android:layout_marginRight="5dp"
+                android:layout_marginLeft="5dp"
                 android:layout_toLeftOf="@+id/date"
                 android:layout_toStartOf="@+id/date"
                 android:layout_alignParentTop="true"
-                android:layout_marginTop="5dip"
+                android:layout_marginTop="5dp"
                 android:contentDescription="@string/conversation_activity__attachment_thumbnail"
-                app:backgroundColorHint="?conversation_background"
                 android:visibility="gone"
                 tools:src="@drawable/ic_video_light"
                 tools:visibility="visible" />
 
         <TextView android:id="@id/date"
-                  android:layout_marginLeft="3dip"
-                  android:layout_marginStart="3dip"
+                  android:layout_marginLeft="3dp"
+                  android:layout_marginStart="3dp"
                   android:layout_height="wrap_content"
                   android:layout_width="wrap_content"
                   android:layout_alignParentRight="true"
                   android:layout_alignParentEnd="true"
                   android:layout_alignParentTop="true"
                   android:layout_above="@id/subject"
-                  android:textAppearance="?android:attr/textAppearanceSmall"
+                  style="@style/Signal.Text.Caption"
                   android:textColor="?attr/conversation_list_item_date_color"
-                  android:fontFamily="sans-serif-light"
+                  android:textAllCaps="true"
                   tools:text="30 mins"
                   android:singleLine="true"/>
 
@@ -128,17 +123,22 @@
                   android:layout_alignParentEnd="true"
                   android:layout_alignBaseline="@id/subject"
                   android:layout_marginLeft="5dp"
-                  android:layout_marginRight="5dp"
+                  android:layout_marginStart="5dp"
+                  android:paddingLeft="6dp"
+                  android:paddingRight="6dp"
+                  android:paddingTop="2dp"
+                  android:paddingBottom="2dp"
+                  style="@style/Signal.Text.Caption"
                   android:text="@string/conversation_list_item_view__archived"
-                  android:textColor="#ffbbbbbb"
-                  android:background="@drawable/rounded_rectangle"
-                  android:textSize="12sp"
-                />
+                  android:textColor="@color/core_white"
+                  android:textAllCaps="true"
+                  android:background="@drawable/archived_indicator_background" />
 
 
         <FrameLayout android:id="@+id/status"
                      android:layout_width="wrap_content"
                      android:layout_height="wrap_content"
+                     android:layout_marginTop="4dp"
                      android:layout_below="@id/date"
                      android:layout_toLeftOf="@id/archived"
                      android:layout_toStartOf="@id/archived"
@@ -148,7 +148,8 @@
                     android:id="@+id/delivery_status"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    app:iconColor="?attr/conversation_list_item_subject_color"/>
+                    android:layout_gravity="center_vertical"
+                    app:iconColor="?attr/conversation_list_item_delivery_icon_color"/>
 
             <ImageView android:id="@+id/unread_indicator"
                        android:layout_width="24dp"
@@ -156,6 +157,6 @@
 
         </FrameLayout>
 
-
     </RelativeLayout>
+
 </org.thoughtcrime.securesms.ConversationListItem>
diff --git a/res/layout/delivery_status_view.xml b/res/layout/delivery_status_view.xml
index 4281be8828b..4a1433f19b5 100644
--- a/res/layout/delivery_status_view.xml
+++ b/res/layout/delivery_status_view.xml
@@ -2,19 +2,21 @@
 <merge xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools">
 
-    <FrameLayout android:id="@+id/pending_indicator_stub"
-                 android:layout_width="wrap_content"
-                 android:paddingRight="2dp"
-                 android:layout_height="wrap_content"
-                 tools:visibility="gone"/>
+    <ImageView
+        android:id="@+id/pending_indicator"
+        android:layout_width="12dp"
+        android:layout_height="12dp"
+        android:layout_marginRight="2dp"
+        android:layout_gravity="center_vertical|end"
+        android:src="@drawable/ic_delivery_status_sending"
+        android:visibility="gone" />
 
     <ImageView android:id="@+id/sent_indicator"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical|end"
-               android:src="@drawable/ic_done_white_18dp"
+               android:src="@drawable/ic_delivery_status_sent"
                android:paddingLeft="2dp"
-               android:paddingBottom="2dp"
                android:visibility="gone"
                android:contentDescription="@string/conversation_item_sent__delivered_description" />
 
@@ -22,9 +24,8 @@
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical|end"
-               android:src="@drawable/ic_done_all_white_18dp"
+               android:src="@drawable/ic_delivery_status_delivered"
                android:paddingLeft="2dp"
-               android:paddingBottom="2dp"
                android:visibility="gone"
                android:contentDescription="@string/conversation_item_sent__delivered_description"
                tools:visibility="gone"/>
@@ -33,12 +34,11 @@
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical|end"
-               android:src="@drawable/ic_done_all_white_18dp"
+               android:src="@drawable/ic_delivery_status_read"
                android:paddingLeft="2dp"
-               android:paddingBottom="2dp"
                android:visibility="gone"
                android:contentDescription="@string/conversation_item_sent__message_read"
-               android:tint="@color/blue_800"
+               android:tint="@color/core_blue"
                tools:visibility="visible"/>
 
 </merge>
\ No newline at end of file
diff --git a/res/layout/document_view.xml b/res/layout/document_view.xml
index 1eff4c0cb70..fda04118869 100644
--- a/res/layout/document_view.xml
+++ b/res/layout/document_view.xml
@@ -9,6 +9,7 @@
                       android:layout_height="wrap_content"
                       android:clickable="false"
                       android:focusable="false"
+                      android:gravity="center_vertical"
                       android:orientation="horizontal">
 
             <org.thoughtcrime.securesms.components.AnimatingToggle
@@ -32,16 +33,23 @@
                         app:matProg_spinSpeed="0.333"
                         tools:visibility="gone"/>
 
-                <FrameLayout android:id="@+id/document_background"
-                             android:layout_width="wrap_content"
-                             android:layout_height="wrap_content"
-                             android:layout_gravity="center_vertical"
-                             android:gravity="center_vertical"
-                             android:background="@drawable/ic_circle_fill_white_48dp"
-                             android:visibility="visible"
-                             android:clickable="false"
-                             android:focusable="false"
-                             tools:backgroundTint="@color/blue_400">
+                <FrameLayout
+                        android:id="@+id/icon_container"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center_vertical"
+                        android:layout_marginLeft="-4dp"
+                        android:layout_marginStart="-4dp"
+                        android:gravity="center"
+                        android:visibility="visible"
+                        android:clickable="false"
+                        android:focusable="false">
+
+                    <ImageView
+                        android:id="@+id/icon"
+                        android:layout_width="38dp"
+                        android:layout_height="50dp"
+                        android:src="?attachment_document_icon_large"/>
 
                     <TextView android:id="@+id/document"
                               android:layout_width="wrap_content"
@@ -50,16 +58,14 @@
                               android:gravity="center"
                               android:clickable="false"
                               android:visibility="visible"
-                              android:background="@drawable/ic_insert_drive_file_white_24dp"
                               android:textAlignment="center"
                               android:scaleType="centerInside"
+                              style="@style/Signal.Text.Caption"
                               android:textAllCaps="true"
-                              android:textSize="8sp"
-                              android:paddingTop="8dp"
-                              android:typeface="monospace"
+                              android:textSize="10sp"
+                              android:textColor="@color/core_black"
                               tools:visibility="visible"
-                              tools:text="PDF"
-                              tools:textColor="@color/blue_400"/>
+                              tools:text="PDF" />
 
                 </FrameLayout>
 
@@ -75,18 +81,18 @@
 
             </org.thoughtcrime.securesms.components.AnimatingToggle>
 
-            <LinearLayout android:orientation="vertical"
-                          android:layout_marginLeft="7dp"
-                          android:layout_gravity="center_vertical"
-                          android:layout_width="match_parent"
+            <LinearLayout android:layout_width="match_parent"
+                          android:layout_height="wrap_content"
+                          android:layout_marginLeft="2dp"
+                          android:layout_marginStart="2dp"
+                          android:orientation="vertical"
                           android:focusable="false"
-                          android:clickable="false"
-                          android:layout_height="wrap_content">
+                          android:clickable="false">
 
                 <TextView android:id="@+id/file_name"
                           android:layout_width="match_parent"
                           android:layout_height="wrap_content"
-                          android:textStyle="bold"
+                          style="@style/Signal.Text.Body"
                           android:singleLine="true"
                           android:maxLines="1"
                           android:clickable="false"
@@ -96,8 +102,7 @@
                 <TextView android:id="@+id/file_size"
                           android:layout_width="wrap_content"
                           android:layout_height="wrap_content"
-                          android:layout_marginTop="5dp"
-                          android:textSize="12sp"
+                          style="@style/Signal.Text.Caption"
                           android:clickable="false"
                           tools:text="24kb"/>
             </LinearLayout>
diff --git a/res/layout/expiration_timer_menu.xml b/res/layout/expiration_timer_menu.xml
index a4f9bd3fb06..f95b562bfbc 100644
--- a/res/layout/expiration_timer_menu.xml
+++ b/res/layout/expiration_timer_menu.xml
@@ -9,9 +9,11 @@
 
     <ImageView
             android:id="@+id/menu_badge_icon"
-            android:src="@drawable/ic_timer_white_24dp"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" />
+            android:layout_width="20dp"
+            android:layout_height="20dp"
+            android:layout_gravity="center"
+            android:src="@drawable/ic_timer"
+            android:scaleType="fitCenter"/>
 
     <TextView
             android:id="@+id/expiration_badge"
diff --git a/res/layout/invite_activity.xml b/res/layout/invite_activity.xml
index c45f5c3d9ca..c9f4b0c16c8 100644
--- a/res/layout/invite_activity.xml
+++ b/res/layout/invite_activity.xml
@@ -40,7 +40,7 @@
                       android:layout_height="wrap_content"
                       android:minLines="2"
                       tools:text="Let's switch to Signal: https://sgnl.link/asdfdfsa"
-                      android:background="@drawable/sent_bubble"
+                      android:background="@drawable/message_bubble_background"
                       android:paddingTop="10dp"
                       android:paddingBottom="10dp"
                       android:paddingLeft="10dp"
diff --git a/res/layout/media_overview_document_item.xml b/res/layout/media_overview_document_item.xml
index aaa04ca1aa3..28f6d49d88d 100644
--- a/res/layout/media_overview_document_item.xml
+++ b/res/layout/media_overview_document_item.xml
@@ -15,8 +15,6 @@
             android:layout_height="wrap_content"
             android:layout_gravity="center_vertical"
             android:layout_weight="1"
-            app:documentForegroundTintColor="?attr/media_overview_document_foreground"
-            app:documentBackgroundTintColor="?attr/media_overview_document_background"
             android:visibility="visible"
             tools:visibility="visible"/>
 
diff --git a/res/layout/message_recipient_list_item.xml b/res/layout/message_recipient_list_item.xml
index 6544c591d30..42e02a31b4c 100644
--- a/res/layout/message_recipient_list_item.xml
+++ b/res/layout/message_recipient_list_item.xml
@@ -29,6 +29,7 @@
                   android:layout_toRightOf="@id/contact_photo_image"
                   android:layout_toEndOf="@id/contact_photo_image"
                   android:layout_centerVertical="true"
+                  android:gravity="center_vertical"
                   android:orientation="horizontal">
 
         <LinearLayout android:layout_width="0dp"
@@ -97,6 +98,7 @@
                 android:id="@+id/delivery_status"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
+                app:iconColor="?attr/conversation_item_sent_text_secondary_color"
                 android:visibility="gone"/>
 
     </LinearLayout>
diff --git a/res/layout/quote_view.xml b/res/layout/quote_view.xml
index 0591a9de7f4..942922aa4e5 100644
--- a/res/layout/quote_view.xml
+++ b/res/layout/quote_view.xml
@@ -2,6 +2,7 @@
 <merge
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/quote_container"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
@@ -10,20 +11,20 @@
     android:layout_margin="3dp"
     tools:visibility="visible">
 
-    <FrameLayout
+    <org.thoughtcrime.securesms.components.CornerMaskingView
         android:id="@+id/quote_root"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:background="@drawable/quote_background">
+        android:layout_height="wrap_content">
 
         <LinearLayout
+            android:id="@+id/quote_background"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:orientation="horizontal">
 
             <ImageView
                 android:id="@+id/quote_bar"
-                android:layout_width="@dimen/quote_corner_radius"
+                android:layout_width="@dimen/quote_corner_radius_bottom"
                 android:layout_height="match_parent"
                 android:src="@color/white"
                 tools:tint="@color/purple_400" />
@@ -44,19 +45,52 @@
                     android:id="@+id/quote_author"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:fontFamily="sans-serif-medium"
+                    style="@style/Signal.Text.Caption"
+                    android:textColor="@color/core_black"
+                    android:textStyle="bold"
                     android:maxLines="1"
                     android:ellipsize="end"
-                    tools:text="Peter Parker"
-                    tools:textColor="@color/purple_400" />
+                    tools:text="Peter Parker" />
+
+                <LinearLayout
+                    android:id="@+id/quote_attachment_container"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="2dp"
+                    android:orientation="horizontal"
+                    android:gravity="center_vertical"
+                    android:visibility="gone"
+                    tools:visibility="visible">
+
+                    <ImageView
+                        android:layout_width="27dp"
+                        android:layout_height="35dp"
+                        android:layout_marginRight="4dp"
+                        android:layout_marginEnd="4dp"
+                        android:paddingLeft="-4dp"
+                        android:paddingStart="-4dp"
+                        android:src="?attr/attachment_document_icon_small" />
+
+                    <TextView
+                        android:id="@+id/quote_attachment_name"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        style="@style/Signal.Text.Body"
+                        android:textColor="@color/core_light_90"
+                        android:maxLines="1"
+                        android:ellipsize="end"
+                        tools:text="The-Amazing-Spider-Man.cba" />
+
+                </LinearLayout>
 
                 <TextView
-                    android:id="@+id/media_name"
+                    android:id="@+id/media_type"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_marginRight="8dp"
+                    style="@style/Signal.Text.Caption"
+                    android:textColor="@color/core_light_90"
                     android:paddingTop="4dp"
-                    android:textSize="12sp"
                     android:textStyle="italic"
                     android:visibility="gone"
                     tools:text="Photo"
@@ -66,8 +100,9 @@
                     android:id="@+id/quote_text"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
+                    style="@style/Signal.Text.Body"
                     android:ellipsize="end"
-                    android:maxLines="3"
+                    android:maxLines="2"
                     tools:text="With great power comes great responsibility."
                     tools:visibility="visible" />
 
@@ -76,50 +111,37 @@
 
             <FrameLayout
                 android:layout_width="wrap_content"
-                android:layout_height="wrap_content">
+                android:layout_height="match_parent">
                 
                 <ImageView
-                    android:id="@+id/quote_attachment"
+                    android:id="@+id/quote_thumbnail"
                     android:layout_width="60dp"
-                    android:layout_height="60dp"
+                    android:layout_height="match_parent"
                     android:scaleType="centerCrop"
                     android:visibility="gone"
                     tools:visibility="gone" />
-                
-                <ImageView
+
+                <FrameLayout
                     android:id="@+id/quote_video_overlay"
-                    android:layout_width="60dp"
-                    android:layout_height="60dp"
+                    android:layout_width="32dp"
+                    android:layout_height="32dp"
+                    android:background="@drawable/circle_white"
                     android:layout_gravity="center"
-                    android:padding="18dp"
-                    android:src="@drawable/ic_play_arrow_white_24dp"
-                    android:background="@color/transparent_black_30"
+                    android:longClickable="false"
                     android:visibility="gone"
-                    tools:visibility="gone"/>
-                
-            </FrameLayout>
-
-            <FrameLayout
-                android:id="@+id/quote_attachment_icon_container"
-                android:layout_width="60dp"
-                android:layout_height="60dp"
-                android:visibility="gone"
-                tools:visibility="visible">
+                    tools:visibility="visible">
 
-                <ImageView
-                    android:id="@+id/quote_attachment_icon_background"
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:padding="8dp"
-                    android:src="@drawable/circle_tintable" />
+                    <ImageView
+                        android:layout_width="13dp"
+                        android:layout_height="16dp"
+                        android:layout_marginLeft="11dp"
+                        android:layout_marginStart="11dp"
+                        android:layout_marginTop="8dp"
+                        android:tint="@color/core_blue"
+                        android:scaleType="fitXY"
+                        app:srcCompat="@drawable/triangle_right" />
 
-                <ImageView
-                    android:id="@+id/quote_attachment_icon"
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:padding="15dp"
-                    tools:src="@drawable/ic_insert_drive_file_white_24dp"
-                    tools:tint="@color/purple_400" />
+                </FrameLayout>
 
             </FrameLayout>
 
@@ -137,6 +159,6 @@
             android:src="@drawable/ic_close_white_18dp"
             android:tint="@color/gray70" />
 
-    </FrameLayout>
+    </org.thoughtcrime.securesms.components.CornerMaskingView>
 
 </merge>
\ No newline at end of file
diff --git a/res/layout/shared_contact_view.xml b/res/layout/shared_contact_view.xml
index 58bbf85f539..993adefa91c 100644
--- a/res/layout/shared_contact_view.xml
+++ b/res/layout/shared_contact_view.xml
@@ -1,25 +1,26 @@
 <?xml version="1.0" encoding="utf-8"?>
 <merge
     xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:background="@drawable/shared_contact_view_background">
+        android:orientation="vertical">
 
         <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
+            android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+            android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
             android:orientation="horizontal"
-            android:padding="6dp"
             android:gravity="center_vertical">
 
             <ImageView
                 android:id="@+id/contact_avatar"
-                android:layout_width="50dp"
-                android:layout_height="50dp"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
                 android:layout_marginEnd="8dp"
                 android:layout_marginRight="8dp"/>
 
@@ -34,10 +35,10 @@
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:layout_marginBottom="4dp"
+                    style="@style/Signal.Text.Body"
                     android:maxLines="1"
                     android:ellipsize="end"
                     android:fontFamily="sans-serif-medium"
-                    android:textColor="@color/signal_primary"
                     android:textSize="16sp"
                     tools:text="Peter Parker"/>
 
@@ -45,6 +46,7 @@
                     android:id="@+id/contact_number"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
+                    style="@style/Signal.Text.Caption"
                     android:maxLines="1"
                     android:ellipsize="end"
                     android:textColor="@color/grey_600"
@@ -54,31 +56,32 @@
 
         </LinearLayout>
 
-        <LinearLayout
-            android:id="@+id/contact_action_button_container"
-            android:layout_width="match_parent"
+        <org.thoughtcrime.securesms.components.ConversationItemFooter
+            android:id="@+id/contact_footer"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <FrameLayout
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:background="@color/grey_400_transparent"/>
-
-            <TextView
-                android:id="@+id/contact_action_button"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:padding="10dp"
-                android:background="?attr/selectableItemBackground"
-                android:fontFamily="sans-serif-medium"
-                android:textColor="@color/signal_primary"
-                tools:text="Add to Contacts"/>
+            android:layout_marginLeft="@dimen/message_bubble_horizontal_padding"
+            android:layout_marginRight="@dimen/message_bubble_horizontal_padding"
+            android:layout_marginTop="4dp"
+            android:elevation="9dp"
+            android:orientation="horizontal" />
 
-        </LinearLayout>
+        <TextView
+            android:id="@+id/contact_action_button"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/message_bubble_bottom_padding"
+            android:gravity="center"
+            android:padding="10dp"
+            style="@style/Signal.Text.Preview"
+            android:maxLines="1"
+            android:ellipsize="end"
+            android:fontFamily="sans-serif-medium"
+            android:textColor="@color/core_blue"
+            android:background="?attr/shared_contact_item_button_color"
+            android:foreground="?attr/selectableItemBackground"
+            tools:text="Add to Contacts"/>
 
     </LinearLayout>
-    
 
 </merge>
\ No newline at end of file
diff --git a/res/layout/thumbnail_view.xml b/res/layout/thumbnail_view.xml
index 24851538c32..9d0368437dc 100644
--- a/res/layout/thumbnail_view.xml
+++ b/res/layout/thumbnail_view.xml
@@ -1,31 +1,46 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merge xmlns:android="http://schemas.android.com/apk/res/android">
+<merge
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
 
-    <ImageView android:id="@+id/thumbnail_image"
-               android:layout_width="match_parent"
-               android:layout_height="match_parent"
-               android:adjustViewBounds="true"
-               android:clickable="false"
-               android:longClickable="false"
-               android:scaleType="fitCenter"
-               android:contentDescription="@string/conversation_item__mms_image_description" />
+    <ImageView
+        android:id="@+id/thumbnail_image"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:adjustViewBounds="true"
+        android:clickable="false"
+        android:longClickable="false"
+        android:scaleType="fitCenter"
+        android:contentDescription="@string/conversation_item__mms_image_description" />
 
-    <ImageView android:id="@+id/play_overlay"
-               android:layout_width="wrap_content"
-               android:layout_height="wrap_content"
-               android:layout_gravity="center"
-               android:gravity="center"
-               android:clickable="false"
-               android:longClickable="false"
-               android:src="@drawable/ic_play_circle_outline_white_48dp"
-               android:tint="#77ffffff"
-               android:tintMode="src_in"
-               android:visibility="gone"/>
+    <FrameLayout
+        android:id="@+id/play_overlay"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:background="@drawable/circle_white"
+        android:layout_gravity="center"
+        android:longClickable="false"
+        android:visibility="gone"
+        tools:visibility="visible">
 
-    <ViewStub android:id="@+id/transfer_controls_stub"
-              android:layout_width="70dp"
-              android:layout_height="70dp"
-              android:layout_gravity="center"
-              android:layout="@layout/transfer_controls_stub" />
+        <ImageView
+            android:layout_width="19dp"
+            android:layout_height="24dp"
+            android:layout_marginLeft="17dp"
+            android:layout_marginStart="17dp"
+            android:layout_marginTop="12dp"
+            android:tint="@color/core_blue"
+            android:scaleType="fitXY"
+            app:srcCompat="@drawable/triangle_right" />
+
+    </FrameLayout>
+
+    <ViewStub
+        android:id="@+id/transfer_controls_stub"
+        android:layout_width="70dp"
+        android:layout_height="70dp"
+        android:layout_gravity="center"
+        android:layout="@layout/transfer_controls_stub" />
 
 </merge>
diff --git a/res/values-sw320dp/dimens.xml b/res/values-sw320dp/dimens.xml
index a496aac9715..d6b105743f0 100644
--- a/res/values-sw320dp/dimens.xml
+++ b/res/values-sw320dp/dimens.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <dimen name="media_bubble_max_width">250dp</dimen>
+    <dimen name="media_bubble_max_width">240dp</dimen>
     <dimen name="media_bubble_max_height">300dp</dimen>
 </resources>
\ No newline at end of file
diff --git a/res/values/attrs.xml b/res/values/attrs.xml
index 7fa23f3217d..0b6db57e424 100644
--- a/res/values/attrs.xml
+++ b/res/values/attrs.xml
@@ -1,10 +1,15 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <attr name="theme_type" format="string"/>
+
     <attr name="attachment_type_selector_background" format="color"/>
+    <attr name="attachment_document_icon_small" format="reference" />
+    <attr name="attachment_document_icon_large" format="reference" />
+
     <attr name="conversation_list_item_background" format="reference"/>
     <attr name="conversation_list_item_contact_color" format="reference|color"/>
     <attr name="conversation_list_item_subject_color" format="reference|color"/>
+    <attr name="conversation_list_item_delivery_icon_color" format="reference|color"/>
     <attr name="conversation_list_item_date_color" format="reference|color"/>
     <attr name="conversation_list_item_divider" format="reference"/>
 
@@ -23,6 +28,8 @@
     <attr name="conversation_background" format="reference|color"/>
     <attr name="conversation_editor_background" format="reference|color"/>
     <attr name="conversation_editor_text_color" format="reference|color"/>
+    <attr name="conversation_input_background_color" format="color"/>
+    <attr name="conversation_input_outline_color" format="color"/>
     <attr name="conversation_transport_sms_indicator" format="reference"/>
     <attr name="conversation_transport_push_indicator" format="reference"/>
     <attr name="conversation_transport_popup_background" format="reference"/>
@@ -65,9 +72,14 @@
     <attr name="conversation_item_received_text_secondary_color" format="reference|color"/>
     <attr name="conversation_item_sent_text_indicator_tab_color" format="reference|color"/>
     <attr name="conversation_item_sent_indicator_text_background" format="reference" />
-    <attr name="conversation_item_header_background" format="reference"/>
-    <attr name="conversation_item_last_seen_background" format="reference|color"/>
-    <attr name="conversation_item_last_seen_text_background" format="reference"/>
+    <attr name="conversation_item_update_text_color" format="reference"/>
+    <attr name="conversation_item_last_seen_text_color" format="reference"/>
+    <attr name="conversation_item_last_seen_line_color" format="reference"/>
+    <attr name="conversation_item_date_line_color" format="reference"/>
+    <attr name="conversation_item_quote_text_color" format="reference"/>
+    <attr name="conversation_item_sticky_date_background_color" format="color" />
+    <attr name="conversation_item_sticky_date_text_color" format="color" />
+    <attr name="conversation_item_delivery_icon_color" format="color" />
 
     <attr name="dialog_info_icon" format="reference" />
     <attr name="dialog_alert_icon" format="reference" />
@@ -133,6 +145,7 @@
 
     <attr name="shared_contact_details_header_background" format="color"/>
     <attr name="shared_contact_details_titlebar" format="color"/>
+    <attr name="shared_contact_item_button_color" format="color"/>
 
     <attr name="search_toolbar_background" format="color"/>
     <attr name="search_background" format="color"/>
@@ -153,11 +166,11 @@
     </declare-styleable>
 
     <declare-styleable name="ThumbnailView">
-        <attr name="backgroundColorHint" format="color" />
         <attr name="minWidth" format="dimension" />
         <attr name="maxWidth" format="dimension" />
         <attr name="minHeight" format="dimension" />
         <attr name="maxHeight" format="dimension" />
+        <attr name="thumbnail_radius" format="dimension" />
     </declare-styleable>
 
     <declare-styleable name="DeliveryStatusView">
@@ -205,12 +218,6 @@
         <attr name="pickerColors" format="reference" />
     </declare-styleable>
 
-    <declare-styleable name="DocumentView">
-        <attr name="documentWidgetBackground" format="color"/>
-        <attr name="documentForegroundTintColor" format="color" />
-        <attr name="documentBackgroundTintColor" format="color" />
-    </declare-styleable>
-    
     <declare-styleable name="EmojiTextView">
         <attr name="scaleEmojis" format="boolean" />
     </declare-styleable>
@@ -252,7 +259,32 @@
             <enum name="outgoing" value="1" />
             <enum name="incoming" value="2" />
         </attr>
+        <attr name="quote_colorPrimary" format="color" />
+        <attr name="quote_colorSecondary" format="color" />
     </declare-styleable>
 
+    <declare-styleable name="SharedContactView">
+        <attr name="contact_titleColor" format="color" />
+        <attr name="contact_captionColor" format="color" />
+    </declare-styleable>
 
+    <declare-styleable name="DocumentView">
+        <attr name="doc_titleColor" format="color" />
+        <attr name="doc_captionColor" format="color" />
+    </declare-styleable>
+
+    <declare-styleable name="ConversationItemFooter">
+        <attr name="footer_color" format="color" />
+    </declare-styleable>
+
+    <declare-styleable name="ConversationItemThumbnail">
+        <attr name="conversationThumbnail_minWidth" format="dimension" />
+        <attr name="conversationThumbnail_maxWidth" format="dimension" />
+        <attr name="conversationThumbnail_minHeight" format="dimension" />
+        <attr name="conversationThumbnail_maxHeight" format="dimension" />
+    </declare-styleable>
+
+    <declare-styleable name="CornerMaskingView">
+        <attr name="cmv_radius" format="dimension" />
+    </declare-styleable>
 </resources>
diff --git a/res/values/colors.xml b/res/values/colors.xml
index 24301798670..7647b7de435 100644
--- a/res/values/colors.xml
+++ b/res/values/colors.xml
@@ -28,6 +28,7 @@
     <color name="transparent_black_20">#20000000</color>
     <color name="transparent_black_30">#30000000</color>
     <color name="transparent_black_40">#40000000</color>
+    <color name="transparent_black_70">#70000000</color>
 
     <color name="transparent_white_05">#05ffffff</color>
     <color name="transparent_white_10">#10ffffff</color>
@@ -59,6 +60,4 @@
 
     <color name="MediaOverview_Media_selected_overlay">#88000000</color>
 
-    <color name="core_red">#f44336</color>
-    <color name="core_red_highlight">#ef5350</color>
 </resources>
diff --git a/res/values/conversation_colors.xml b/res/values/conversation_colors.xml
new file mode 100644
index 00000000000..d44a2364647
--- /dev/null
+++ b/res/values/conversation_colors.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="conversation_red">#d32f2f</color>
+    <color name="conversation_red_shade">#9a0007</color>
+
+    <color name="conversation_pink">#d81b60</color>
+    <color name="conversation_pink_shade">#a00037</color>
+
+    <color name="conversation_purple">#8e24aa</color>
+    <color name="conversation_purple_shade">#5c007a</color>
+
+    <color name="conversation_indigo">#3949ab</color>
+    <color name="conversation_indigo_shade">#00227b</color>
+
+    <color name="conversation_blue">#1976d2</color>
+    <color name="conversation_blue_shade">#004ba0</color>
+
+    <color name="conversation_cyan">#00838f</color>
+    <color name="conversation_cyan_shade">#005662</color>
+
+    <color name="conversation_teal">#00796b</color>
+    <color name="conversation_teal_shade">#004c40</color>
+
+    <color name="conversation_green">#2e7d32</color>
+    <color name="conversation_green_shade">#005005</color>
+
+    <color name="conversation_orange">#bf360c</color>
+    <color name="conversation_orange_shade">#870000</color>
+
+    <color name="conversation_grey">#757575</color>
+    <color name="conversation_grey_shade">#494949</color>
+</resources>
\ No newline at end of file
diff --git a/res/values/core_colors.xml b/res/values/core_colors.xml
new file mode 100644
index 00000000000..64baca6c0e4
--- /dev/null
+++ b/res/values/core_colors.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="core_blue">#2090ea</color>
+    <color name="core_green">#4caf50</color>
+    <color name="core_red">#f44336</color>
+    <color name="core_red_highlight">#ef5350</color>
+
+    <color name="core_white">#ffffff</color>
+    <color name="core_light_02">#F9FAFA</color>
+    <color name="core_light_10">#EEEFEF</color>
+    <color name="core_light_35">#A4A6A9</color>
+    <color name="core_light_45">#8B8E91</color>
+    <color name="core_light_60">#62656A</color>
+    <color name="core_light_90">#070C14</color>
+
+    <color name="core_black">#000000</color>
+    <color name="core_dark_05">#EFEFEF</color>
+    <color name="core_dark_30">#A8A9AA</color>
+    <color name="core_dark_55">#88898C</color>
+    <color name="core_dark_60">#797A7C</color>
+    <color name="core_dark_70">#414347</color>
+    <color name="core_dark_85">#1A1C20</color>
+    <color name="core_dark_95">#0A0C11</color>
+</resources>
\ No newline at end of file
diff --git a/res/values/dimens.xml b/res/values/dimens.xml
index 0c5eceb2684..114af1dd367 100644
--- a/res/values/dimens.xml
+++ b/res/values/dimens.xml
@@ -16,17 +16,35 @@
     <dimen name="contact_photo_target_size">64dp</dimen>
     <dimen name="contact_selection_photo_size">50dp</dimen>
 
-    <dimen name="message_bubble_corner_radius">4dp</dimen>
+    <!-- TODO: Consolidate these two message corner things -->
+    <dimen name="message_corner_radius">16dp</dimen>
+    <dimen name="message_corner_collapse_radius">4dp</dimen>
+    <dimen name="message_bubble_corner_radius">2dp</dimen>
     <dimen name="message_bubble_shadow_distance">1.5dp</dimen>
+    <dimen name="message_bubble_horizontal_padding">12dp</dimen>
+    <dimen name="message_bubble_top_padding">6dp</dimen>
+    <dimen name="message_bubble_collapsed_footer_padding">6dp</dimen>
+    <dimen name="message_bubble_edge_margin">32dp</dimen>
+    <dimen name="message_bubble_bottom_padding">8dp</dimen>
     <dimen name="media_bubble_remove_button_size">24dp</dimen>
     <dimen name="media_bubble_edit_button_size">24dp</dimen>
     <dimen name="media_bubble_default_dimens">210dp</dimen>
     <dimen name="media_bubble_min_width">150dp</dimen>
-    <dimen name="media_bubble_max_width">250dp</dimen>
+    <dimen name="media_bubble_max_width">240dp</dimen>
     <dimen name="media_bubble_min_height">100dp</dimen>
     <dimen name="media_bubble_max_height">320dp</dimen>
 
+    <dimen name="conversation_individual_right_gutter">16dp</dimen>
+    <dimen name="conversation_individual_left_gutter">16dp</dimen>
+    <dimen name="conversation_group_right_gutter">16dp</dimen>
+    <dimen name="conversation_group_left_gutter">52dp</dimen>
+    <dimen name="conversation_vertical_message_spacing_default">16dp</dimen>
+    <dimen name="conversation_vertical_message_spacing_collapse">2dp</dimen>
+
     <dimen name="quote_corner_radius">3dp</dimen>
+    <dimen name="quote_corner_radius_large">10dp</dimen>
+    <dimen name="quote_corner_radius_bottom">4dp</dimen>
+    <dimen name="quote_corner_radius_preview">18dp</dimen>
     <dimen name="quote_outline_width">1dp</dimen>
 
     <integer name="media_overview_cols">3</integer>
@@ -62,4 +80,11 @@
 
     <dimen name="floating_action_button_margin">16dp</dimen>
 
+    <dimen name="text_headline_lineSpacingExtra">6sp</dimen>
+    <dimen name="text_body_lineSpacingExtra">8sp</dimen>
+    <dimen name="text_preview_lineSpacingExtra">6sp</dimen>
+    <dimen name="text_caption_lineSpacingExtra">4sp</dimen>
+
+    <dimen name="alertview_small_icon_size">14dp</dimen>
+
 </resources>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index a9e4adff11c..e5d00d8808e 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -110,11 +110,10 @@
     <string name="ContactShareEditActivity_invalid_contact">Selected contact was invalid</string>
 
     <!-- ConversationItem -->
-    <string name="ConversationItem_error_not_delivered">Not delivered</string>
+    <string name="ConversationItem_error_not_delivered">Send failed, tap for details</string>
     <string name="ConversationItem_received_key_exchange_message_tap_to_process">Received key exchange message, tap to process.</string>
     <string name="ConversationItem_group_action_left">%1$s has left the group.</string>
-    <string name="ConversationItem_click_for_details">Tap for details</string>
-    <string name="ConversationItem_click_to_approve_unencrypted">Tap for unsecured fallback</string>
+    <string name="ConversationItem_click_to_approve_unencrypted">Send failed, tap for unsecured fallback</string>
     <string name="ConversationItem_click_to_approve_unencrypted_sms_dialog_title">Fallback to unencrypted SMS?</string>
     <string name="ConversationItem_click_to_approve_unencrypted_mms_dialog_title">Fallback to unencrypted MMS?</string>
     <string name="ConversationItem_click_to_approve_unencrypted_dialog_message">This message will <b>not</b> be encrypted because the recipient is no longer a Signal user.\n\nSend unsecured message?</string>
@@ -251,11 +250,17 @@
     <string name="CustomDefaultPreference_none">None</string>
 
     <!-- DateUtils -->
-    <string name="DateUtils_just_now">Just now</string>
+    <string name="DateUtils_just_now">Now</string>
     <string name="DateUtils_minutes_ago">%d min</string>
     <string name="DateUtils_today">Today</string>
     <string name="DateUtils_yesterday">Yesterday</string>
 
+    <!-- DeliveryStatus -->
+    <string name="DeliveryStatus_sending">Sending</string>
+    <string name="DeliveryStatus_sent">Sent</string>
+    <string name="DeliveryStatus_delivered">Delivered</string>
+    <string name="DeliveryStatus_read">Read</string>
+
     <!-- DeviceListActivity -->
     <string name="DeviceListActivity_unlink_s">Unlink \'%s\'?</string>
     <string name="DeviceListActivity_by_unlinking_this_device_it_will_no_longer_be_able_to_send_or_receive">By unlinking this device, it will no longer be able to send or receive messages.</string>
@@ -400,13 +405,16 @@
     <string name="MessageRecord_message_encrypted_with_a_legacy_protocol_version_that_is_no_longer_supported">Received a message encrypted using an old version of Signal that is no longer supported. Please ask the sender to update to the most recent version and resend the message.</string>
     <string name="MessageRecord_left_group">You have left the group.</string>
     <string name="MessageRecord_you_updated_group">You updated the group.</string>
+    <string name="MessageRecord_you_called">You called</string>
+    <string name="MessageRecord_called_you">Contact called</string>
+    <string name="MessageRecord_missed_call">Missed call</string>
     <string name="MessageRecord_s_updated_group">%s updated the group.</string>
     <string name="MessageRecord_s_called_you">%s called you</string>
     <string name="MessageRecord_called_s">Called %s</string>
     <string name="MessageRecord_missed_call_from">Missed call from %s</string>
     <string name="MessageRecord_s_joined_signal">%s is on Signal!</string>
-    <string name="MessageRecord_you_set_disappearing_message_time_to_s">You set disappearing message time to %1$s.</string>
-    <string name="MessageRecord_s_set_disappearing_message_time_to_s">%1$s set disappearing message time to %2$s.</string>
+    <string name="MessageRecord_you_set_disappearing_message_time_to_s">You set the disappearing message timer to %1$s.</string>
+    <string name="MessageRecord_s_set_disappearing_message_time_to_s">%1$s set the disappearing message timer to %2$s.</string>
     <string name="MessageRecord_your_safety_number_with_s_has_changed">Your safety number with %s has changed.</string>
     <string name="MessageRecord_you_marked_your_safety_number_with_s_verified">You marked your safety number with %s verified</string>
     <string name="MessageRecord_you_marked_your_safety_number_with_s_verified_from_another_device">You marked your safety number with %s verified from another device</string>
diff --git a/res/values/styles.xml b/res/values/styles.xml
index c9bc2e6d46c..d7d834e57e4 100644
--- a/res/values/styles.xml
+++ b/res/values/styles.xml
@@ -175,7 +175,7 @@
         <item name="android:background">@drawable/error_round</item>
     </style>
 
-    <style name="ComposeEditText" parent="@style/Widget.AppCompat.EditText">
+    <style name="ComposeEditText" parent="@style/Signal.Text.Body">
         <item name="android:padding">2dp</item>
         <item name="android:background">@null</item>
         <item name="android:maxLines">4</item>
diff --git a/res/values/text_styles.xml b/res/values/text_styles.xml
new file mode 100644
index 00000000000..be8bb8bdf13
--- /dev/null
+++ b/res/values/text_styles.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <style name="Signal.Text.Headline" parent="Base.TextAppearance.AppCompat.Headline">
+        <item name="android:textSize">28sp</item>
+        <item name="android:lineSpacingExtra">3sp</item>
+        <item name="android:fontFamily">sans-serif</item>
+        <item name="android:letterSpacing">0</item>
+        <!-- TODO: Get proper letterSpacing -->
+    </style>
+
+    <style name="Signal.Text.Body" parent="Base.TextAppearance.AppCompat.Body1">
+        <item name="android:textSize">16sp</item>
+        <item name="android:lineSpacingExtra">4sp</item>
+        <item name="android:fontFamily">sans-serif</item>
+        <item name="android:letterSpacing">0.01</item>
+    </style>
+
+    <style name="Signal.Text.Preview" parent="Base.TextAppearance.AppCompat.Body2">
+        <item name="android:textSize">14sp</item>
+        <item name="android:lineSpacingExtra">3sp</item>
+        <item name="android:fontFamily">sans-serif</item>
+        <item name="android:letterSpacing">0.02</item>
+    </style>
+
+    <style name="Signal.Text.Caption" parent="Base.TextAppearance.AppCompat.Caption">
+        <item name="android:textSize">12sp</item>
+        <item name="android:lineSpacingExtra">2sp</item>
+        <item name="android:fontFamily">sans-serif</item>
+        <item name="android:letterSpacing">0.03</item>
+    </style>
+
+
+    <style name="Signal.Text.Caption.MessageSent">
+        <item name="android:textColor">?conversation_item_sent_text_secondary_color</item>
+        <item name="android:shadowRadius">0</item>
+    </style>
+
+    <style name="Signal.Text.Caption.MessageReceived">
+        <item name="android:textColor">?conversation_item_received_text_secondary_color</item>
+        <item name="android:shadowRadius">0</item>
+        <item name="android:alpha">0.7</item>
+    </style>
+
+    <style name="Signal.Text.Caption.MessageImageOverlay">
+        <item name="android:textColor">@color/core_white</item>
+    </style>
+
+</resources>
\ No newline at end of file
diff --git a/res/values/themes.xml b/res/values/themes.xml
index 45a58f1f8b0..95936da31d4 100644
--- a/res/values/themes.xml
+++ b/res/values/themes.xml
@@ -23,9 +23,6 @@
         <item name="media_overview_header_foreground">@color/gray50</item>
         <item name="media_overview_document_foreground">@color/gray70</item>
         <item name="media_overview_document_background">@color/white</item>
-
-        <item name="shared_contact_details_header_background">@color/grey_100</item>
-        <item name="shared_contact_details_titlebar">@color/grey_400</item>
     </style>
 
     <style name="TextSecure.DarkNoActionBar" parent="@style/TextSecure.DarkTheme">
@@ -50,9 +47,6 @@
         <item name="media_overview_header_foreground">@color/gray10</item>
         <item name="media_overview_document_foreground">@color/white</item>
         <item name="media_overview_document_background">@color/black</item>
-
-        <item name="shared_contact_details_header_background">@color/grey_800</item>
-        <item name="shared_contact_details_titlebar">@color/grey_900</item>
     </style>
 
     <style name="TextSecure.HighlightTheme" parent="@style/TextSecure.LightTheme">
@@ -132,11 +126,16 @@
         <item name="alertDialogTheme">@style/AppCompatAlertDialogStyleLight</item>
         <item name="android:alertDialogTheme">@style/AppCompatDialogStyleLight</item>
         <!--<item name="android:windowContentOverlay">@drawable/compat_actionbar_shadow_background</item>-->
+
         <item name="attachment_type_selector_background">@color/white</item>
+        <item name="attachment_document_icon_small">@drawable/ic_document_small_light</item>
+        <item name="attachment_document_icon_large">@drawable/ic_document_large_light</item>
+
         <item name="conversation_list_item_background">@drawable/conversation_list_item_background</item>
-        <item name="conversation_list_item_contact_color">#FF333333</item>
-        <item name="conversation_list_item_subject_color">#FF444444</item>
-        <item name="conversation_list_item_date_color">#ff999999</item>
+        <item name="conversation_list_item_contact_color">@color/core_light_90</item>
+        <item name="conversation_list_item_subject_color">@color/core_light_60</item>
+        <item name="conversation_list_item_delivery_icon_color">@color/core_light_35</item>
+        <item name="conversation_list_item_date_color">@color/core_light_60</item>
         <item name="conversation_list_item_divider">@drawable/conversation_list_divider_shape</item>
 
         <item name="fab_color">@color/textsecure_primary</item>
@@ -144,9 +143,11 @@
 
         <item name="conversation_group_member_name">#99000000</item>
 
-        <item name="conversation_background">@color/gray5</item>
+        <item name="conversation_background">@color/core_white</item>
         <item name="conversation_editor_background">#22000000</item>
         <item name="conversation_editor_text_color">#ff111111</item>
+        <item name="conversation_input_background_color">@color/core_light_02</item>
+        <item name="conversation_input_outline_color">@color/core_light_10</item>
         <item name="conversation_transport_sms_indicator">@drawable/ic_send_sms_insecure</item>
         <item name="conversation_transport_push_indicator">@drawable/ic_send_push</item>
         <item name="conversation_transport_popup_background">@color/white</item>
@@ -183,15 +184,20 @@
         <item name="emoji_category_emoticons">@drawable/emoji_category_emoticons_light</item>
 
 
-        <item name="conversation_item_bubble_background">@color/white</item>
-        <item name="conversation_item_sent_text_primary_color">@color/grey_800</item>
-        <item name="conversation_item_sent_text_secondary_color">@color/grey_900</item>
+        <item name="conversation_item_bubble_background">@color/core_light_10</item>
+        <item name="conversation_item_sent_text_primary_color">@color/core_light_90</item>
+        <item name="conversation_item_sent_text_secondary_color">@color/core_light_60</item>
         <item name="conversation_item_sent_text_indicator_tab_color">#99000000</item>
         <item name="conversation_item_received_text_primary_color">@color/white</item>
-        <item name="conversation_item_received_text_secondary_color">#BFffffff</item>
-        <item name="conversation_item_header_background">@drawable/conversation_item_header_background</item>
-        <item name="conversation_item_last_seen_background">@drawable/last_seen_background</item>
-        <item name="conversation_item_last_seen_text_background">@drawable/last_seen_divider_text_background_light</item>
+        <item name="conversation_item_received_text_secondary_color">#b3ffffff</item>
+        <item name="conversation_item_update_text_color">@color/core_light_60</item>
+        <item name="conversation_item_last_seen_text_color">@color/core_light_90</item>
+        <item name="conversation_item_last_seen_line_color">@color/core_light_60</item>
+        <item name="conversation_item_date_line_color">@color/core_light_45</item>
+        <item name="conversation_item_quote_text_color">@color/core_light_90</item>
+        <item name="conversation_item_sticky_date_background_color">@color/core_light_02</item>
+        <item name="conversation_item_sticky_date_text_color">@color/core_light_60</item>
+        <item name="conversation_item_delivery_icon_color">@color/core_light_45</item>
 
         <item name="quick_camera_icon">@drawable/quick_camera_light</item>
         <item name="quick_mic_icon">@drawable/ic_mic_grey600_24dp</item>
@@ -242,11 +248,14 @@
         <item name="search_toolbar_background">@color/white</item>
         <item name="search_background">@color/white</item>
         <item name="invite_background">@color/signal_primary</item>
+
+        <item name="shared_contact_details_header_background">@color/grey_100</item>
+        <item name="shared_contact_details_titlebar">@color/grey_400</item>
+        <item name="shared_contact_item_button_color">@color/core_light_02</item>
     </style>
 
     <style name="TextSecure.DarkTheme" parent="@style/Theme.AppCompat">
         <item name="theme_type">dark</item>
-        <item name="attachment_type_selector_background">@color/gray95</item>
         <item name="actionBarStyle">@style/TextSecure.DarkActionBar</item>
         <item name="actionBarTabBarStyle">@style/TextSecure.DarkActionBar.TabBar</item>
         <item name="actionBarPopupTheme">@style/ThemeOverlay.AppCompat.Dark</item>
@@ -260,24 +269,35 @@
         <item name="android:windowBackground">@color/black</item>
         <item name="alertDialogTheme">@style/AppCompatAlertDialogStyleDark</item>
         <item name="android:alertDialogTheme">@style/AppCompatDialogStyleDark</item>
+
+        <item name="attachment_type_selector_background">@color/gray95</item>
+        <item name="attachment_document_icon_small">@drawable/ic_document_small_dark</item>
+        <item name="attachment_document_icon_large">@drawable/ic_document_large_dark</item>
+
         <item name="conversation_list_item_background">@drawable/conversation_list_item_background_dark</item>
         <item name="conversation_list_item_contact_color">#ffdddddd</item>
         <item name="conversation_list_item_subject_color">#ffdddddd</item>
+        <item name="conversation_list_item_delivery_icon_color">@color/core_dark_55</item>
         <item name="conversation_list_item_date_color">#ffdddddd</item>
         <item name="conversation_list_item_divider">@drawable/conversation_list_divider_shape_dark</item>
 
         <item name="conversation_group_member_name">#99ffffff</item>
 
-        <item name="conversation_item_bubble_background">#ff333333</item>
-        <item name="conversation_item_sent_text_primary_color">#ffffffff</item>
-        <item name="conversation_item_sent_text_secondary_color">#aaeeeeee</item>
+        <item name="conversation_item_bubble_background">@color/core_dark_70</item>
+        <item name="conversation_item_sent_text_primary_color">@color/core_dark_05</item>
+        <item name="conversation_item_sent_text_secondary_color">@color/core_dark_30</item>
         <item name="conversation_item_sent_text_indicator_tab_color">#99ffffff</item>
-        <item name="conversation_item_received_text_primary_color">@color/white</item>
-        <item name="conversation_item_received_text_secondary_color">#BFffffff</item>
+        <item name="conversation_item_received_text_primary_color">@color/core_dark_05</item>
+        <item name="conversation_item_received_text_secondary_color">#b3efefef</item>
         <item name="conversation_item_sent_indicator_text_background">@drawable/conversation_item_sent_indicator_text_shape_dark</item>
-        <item name="conversation_item_header_background">@drawable/conversation_item_header_background_dark</item>
-        <item name="conversation_item_last_seen_background">#66333333</item>
-        <item name="conversation_item_last_seen_text_background">@drawable/last_seen_divider_text_background_dark</item>
+        <item name="conversation_item_update_text_color">@color/core_light_35</item>
+        <item name="conversation_item_last_seen_text_color">@color/core_dark_30</item>
+        <item name="conversation_item_last_seen_line_color">@color/core_dark_30</item>
+        <item name="conversation_item_date_line_color">@color/core_dark_55</item>
+        <item name="conversation_item_quote_text_color">@color/core_dark_05</item>
+        <item name="conversation_item_sticky_date_background_color">@color/core_dark_85</item>
+        <item name="conversation_item_sticky_date_text_color">@color/core_dark_30</item>
+        <item name="conversation_item_delivery_icon_color">@color/core_dark_60</item>
 
         <item name="contact_list_divider">@drawable/contact_list_divider_dark</item>
 
@@ -299,6 +319,8 @@
         <item name="conversation_background">@color/black</item>
         <item name="conversation_editor_background">#22ffffff</item>
         <item name="conversation_editor_text_color">#ffeeeeee</item>
+        <item name="conversation_input_background_color">@color/core_dark_85</item>
+        <item name="conversation_input_outline_color">@color/core_dark_70</item>
         <item name="conversation_transport_sms_indicator">@drawable/ic_send_sms_insecure_dark</item>
         <item name="conversation_transport_push_indicator">@drawable/ic_send_push</item>
         <item name="conversation_transport_popup_background">@color/black</item>
@@ -367,6 +389,10 @@
         <item name="search_toolbar_background">@color/black</item>
         <item name="search_background">@color/black</item>
         <item name="invite_background">@color/black</item>
+
+        <item name="shared_contact_details_header_background">@color/grey_800</item>
+        <item name="shared_contact_details_titlebar">@color/grey_900</item>
+        <item name="shared_contact_item_button_color">@color/core_dark_85</item>
     </style>
     
     <style name="RationaleDialog" parent="Theme.AppCompat.Light.Dialog.Alert">
diff --git a/src/org/thoughtcrime/securesms/BindableConversationItem.java b/src/org/thoughtcrime/securesms/BindableConversationItem.java
index 8ca98c5b2c4..4f853989e9c 100644
--- a/src/org/thoughtcrime/securesms/BindableConversationItem.java
+++ b/src/org/thoughtcrime/securesms/BindableConversationItem.java
@@ -9,18 +9,21 @@
 import org.thoughtcrime.securesms.database.model.MmsMessageRecord;
 import org.thoughtcrime.securesms.mms.GlideRequests;
 import org.thoughtcrime.securesms.recipients.Recipient;
+import org.whispersystems.libsignal.util.guava.Optional;
 
 import java.util.List;
 import java.util.Locale;
 import java.util.Set;
 
 public interface BindableConversationItem extends Unbindable {
-  void bind(@NonNull MessageRecord      messageRecord,
-            @NonNull GlideRequests      glideRequests,
-            @NonNull Locale             locale,
-            @NonNull Set<MessageRecord> batchSelected,
-            @NonNull Recipient          recipients,
-                     boolean            pulseHighlight);
+  void bind(@NonNull MessageRecord           messageRecord,
+            @NonNull Optional<MessageRecord> previousMessageRecord,
+            @NonNull Optional<MessageRecord> nextMessageRecord,
+            @NonNull GlideRequests           glideRequests,
+            @NonNull Locale                  locale,
+            @NonNull Set<MessageRecord>      batchSelected,
+            @NonNull Recipient               recipients,
+                     boolean                 pulseHighlight);
 
   MessageRecord getMessageRecord();
 
diff --git a/src/org/thoughtcrime/securesms/ConversationActivity.java b/src/org/thoughtcrime/securesms/ConversationActivity.java
index cd4eea23a86..97b6d3fa361 100644
--- a/src/org/thoughtcrime/securesms/ConversationActivity.java
+++ b/src/org/thoughtcrime/securesms/ConversationActivity.java
@@ -1240,18 +1240,11 @@ private void initializeViews() {
     inputPanel            = ViewUtil.findById(this, R.id.bottom_panel);
 
     ImageButton quickCameraToggle = ViewUtil.findById(this, R.id.quick_camera_toggle);
-    View        composeBubble     = ViewUtil.findById(this, R.id.compose_bubble);
 
     container.addOnKeyboardShownListener(this);
     inputPanel.setListener(this);
     inputPanel.setMediaListener(this);
 
-    int[]      attributes   = new int[]{R.attr.conversation_item_bubble_background};
-    TypedArray colors       = obtainStyledAttributes(attributes);
-    int        defaultColor = colors.getColor(0, Color.WHITE);
-    composeBubble.getBackground().setColorFilter(defaultColor, PorterDuff.Mode.MULTIPLY);
-    colors.recycle();
-
     attachmentTypeSelector = null;
     attachmentManager      = new AttachmentManager(this, this);
     audioRecorder          = new AudioRecorder(this);
diff --git a/src/org/thoughtcrime/securesms/ConversationAdapter.java b/src/org/thoughtcrime/securesms/ConversationAdapter.java
index 23317552aa3..73ab9dbe144 100644
--- a/src/org/thoughtcrime/securesms/ConversationAdapter.java
+++ b/src/org/thoughtcrime/securesms/ConversationAdapter.java
@@ -48,6 +48,7 @@
 import org.thoughtcrime.securesms.util.StickyHeaderDecoration;
 import org.thoughtcrime.securesms.util.Util;
 import org.thoughtcrime.securesms.util.ViewUtil;
+import org.whispersystems.libsignal.util.guava.Optional;
 
 import java.lang.ref.SoftReference;
 import java.security.MessageDigest;
@@ -189,12 +190,24 @@ public void changeCursor(Cursor cursor) {
   }
 
   @Override
-  protected void onBindItemViewHolder(ViewHolder viewHolder, @NonNull MessageRecord messageRecord) {
-    long start = System.currentTimeMillis();
-    viewHolder.getView().bind(messageRecord, glideRequests, locale, batchSelected, recipient, messageRecord == recordToPulseHighlight);
+  protected void onBindItemViewHolder(ViewHolder viewHolder, @NonNull MessageRecord messageRecord, int position) {
+    long          start          = System.currentTimeMillis();
+    MessageRecord previousRecord = position < getItemCount() - 1 ? getRecordForPositionOrThrow(position + 1) : null;
+    MessageRecord nextRecord     = position > 0 ? getRecordForPositionOrThrow(position - 1) : null;
+
+    viewHolder.getView().bind(messageRecord,
+                              Optional.fromNullable(previousRecord),
+                              Optional.fromNullable(nextRecord),
+                              glideRequests,
+                              locale,
+                              batchSelected,
+                              recipient,
+                              messageRecord == recordToPulseHighlight);
+
     if (messageRecord == recordToPulseHighlight) {
       recordToPulseHighlight = null;
     }
+
     Log.w(TAG, "Bind time: " + (System.currentTimeMillis() - start));
   }
 
@@ -240,11 +253,7 @@ public void onItemViewRecycled(ViewHolder holder) {
 
   @Override
   public int getItemViewType(@NonNull MessageRecord messageRecord) {
-    if (messageRecord.isGroupAction() || messageRecord.isCallLog() || messageRecord.isJoined() ||
-        messageRecord.isExpirationTimerUpdate() || messageRecord.isEndSession()                ||
-        messageRecord.isIdentityUpdate() || messageRecord.isIdentityVerified()                 ||
-        messageRecord.isIdentityDefault())
-    {
+    if (messageRecord.isUpdate()) {
       return MESSAGE_TYPE_UPDATE;
     } else if (hasAudio(messageRecord)) {
       if (messageRecord.isOutgoing()) return MESSAGE_TYPE_AUDIO_OUTGOING;
@@ -365,7 +374,6 @@ private boolean hasThumbnail(MessageRecord messageRecord) {
     return messageRecord.isMms() && ((MmsMessageRecord)messageRecord).getSlideDeck().getThumbnailSlide() != null;
   }
 
-
   @Override
   public long getHeaderId(int position) {
     if (!isActiveCursor())          return -1;
diff --git a/src/org/thoughtcrime/securesms/ConversationItem.java b/src/org/thoughtcrime/securesms/ConversationItem.java
index aafa627dba5..5cad022cfa1 100644
--- a/src/org/thoughtcrime/securesms/ConversationItem.java
+++ b/src/org/thoughtcrime/securesms/ConversationItem.java
@@ -16,7 +16,6 @@
  */
 package org.thoughtcrime.securesms;
 
-import android.Manifest;
 import android.annotation.SuppressLint;
 import android.content.ActivityNotFoundException;
 import android.content.Context;
@@ -25,10 +24,9 @@
 import android.graphics.Color;
 import android.graphics.PorterDuff;
 import android.net.Uri;
-import android.os.AsyncTask;
+import android.support.annotation.DimenRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.support.v4.view.ViewCompat;
 import android.support.v7.app.AlertDialog;
 import android.text.SpannableString;
 import android.text.Spanned;
@@ -40,7 +38,6 @@
 import android.util.TypedValue;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -50,12 +47,12 @@
 import org.thoughtcrime.securesms.components.AlertView;
 import org.thoughtcrime.securesms.components.AudioView;
 import org.thoughtcrime.securesms.components.AvatarImageView;
-import org.thoughtcrime.securesms.components.DeliveryStatusView;
+import org.thoughtcrime.securesms.components.ConversationItemFooter;
+import org.thoughtcrime.securesms.components.ConversationItemThumbnail;
+import org.thoughtcrime.securesms.components.CornerMaskingView;
 import org.thoughtcrime.securesms.components.DocumentView;
-import org.thoughtcrime.securesms.components.ExpirationTimerView;
 import org.thoughtcrime.securesms.components.QuoteView;
 import org.thoughtcrime.securesms.components.SharedContactView;
-import org.thoughtcrime.securesms.components.ThumbnailView;
 import org.thoughtcrime.securesms.contactshare.Contact;
 import org.thoughtcrime.securesms.database.AttachmentDatabase;
 import org.thoughtcrime.securesms.database.DatabaseFactory;
@@ -75,18 +72,15 @@
 import org.thoughtcrime.securesms.mms.PartAuthority;
 import org.thoughtcrime.securesms.mms.Slide;
 import org.thoughtcrime.securesms.mms.SlideClickListener;
-import org.thoughtcrime.securesms.permissions.Permissions;
 import org.thoughtcrime.securesms.recipients.Recipient;
 import org.thoughtcrime.securesms.recipients.RecipientModifiedListener;
-import org.thoughtcrime.securesms.service.ExpiringMessageManager;
 import org.thoughtcrime.securesms.util.DateUtils;
 import org.thoughtcrime.securesms.util.DynamicTheme;
 import org.thoughtcrime.securesms.util.LongClickCopySpan;
 import org.thoughtcrime.securesms.util.LongClickMovementMethod;
 import org.thoughtcrime.securesms.util.TextSecurePreferences;
 import org.thoughtcrime.securesms.util.Util;
-import org.thoughtcrime.securesms.util.dualsim.SubscriptionInfoCompat;
-import org.thoughtcrime.securesms.util.dualsim.SubscriptionManagerCompat;
+import org.thoughtcrime.securesms.util.ViewUtil;
 import org.thoughtcrime.securesms.util.views.Stub;
 import org.whispersystems.libsignal.util.guava.Optional;
 
@@ -106,7 +100,9 @@
 public class ConversationItem extends LinearLayout
     implements RecipientModifiedListener, BindableConversationItem
 {
-  private final static String TAG = ConversationItem.class.getSimpleName();
+  private static final String TAG = ConversationItem.class.getSimpleName();
+
+  private static final int MAX_MEASURE_CALLS = 3;
 
   private MessageRecord messageRecord;
   private Locale        locale;
@@ -114,30 +110,27 @@ public class ConversationItem extends LinearLayout
   private Recipient     recipient;
   private GlideRequests glideRequests;
 
-  protected View             bodyBubble;
-  private QuoteView          quoteView;
-  private TextView           bodyText;
-  private TextView           dateText;
-  private TextView           simInfoText;
-  private TextView           indicatorText;
-  private TextView           groupSender;
-  private TextView           groupSenderProfileName;
-  private View               groupSenderHolder;
-  private ImageView          insecureImage;
-  private AvatarImageView    contactPhoto;
-  private DeliveryStatusView deliveryStatusIndicator;
-  private AlertView          alertView;
-
-  private @NonNull  Set<MessageRecord>      batchSelected = new HashSet<>();
-  private @NonNull  Recipient               conversationRecipient;
-  private @NonNull  Stub<ThumbnailView>     mediaThumbnailStub;
-  private @NonNull  Stub<AudioView>         audioViewStub;
-  private @NonNull  Stub<DocumentView>      documentViewStub;
-  private @NonNull  Stub<SharedContactView> sharedContactStub;
-  private @NonNull  ExpirationTimerView     expirationTimer;
-  private @Nullable EventListener           eventListener;
+  protected CornerMaskingView    bodyBubble;
+  private QuoteView              quoteView;
+  private TextView               bodyText;
+  private ConversationItemFooter footer;
+  private TextView               groupSender;
+  private TextView               groupSenderProfileName;
+  private View                   groupSenderHolder;
+  private AvatarImageView        contactPhoto;
+  private AlertView              alertView;
+  private ViewGroup              container;
+
+  private @NonNull  Set<MessageRecord>              batchSelected = new HashSet<>();
+  private @NonNull  Recipient                       conversationRecipient;
+  private @NonNull  Stub<ConversationItemThumbnail> mediaThumbnailStub;
+  private @NonNull  Stub<AudioView>                 audioViewStub;
+  private @NonNull  Stub<DocumentView>              documentViewStub;
+  private @NonNull  Stub<SharedContactView>         sharedContactStub;
+  private @Nullable EventListener                   eventListener;
 
   private int defaultBubbleColor;
+  private int measureCalls;
 
   private final PassthroughClickListener        passthroughClickListener   = new PassthroughClickListener();
   private final AttachmentDownloadClickListener downloadClickListener      = new AttachmentDownloadClickListener();
@@ -167,13 +160,9 @@ protected void onFinishInflate() {
     initializeAttributes();
 
     this.bodyText                =            findViewById(R.id.conversation_item_body);
-    this.dateText                =            findViewById(R.id.conversation_item_date);
-    this.simInfoText             =            findViewById(R.id.sim_info);
-    this.indicatorText           =            findViewById(R.id.indicator_text);
+    this.footer                  =            findViewById(R.id.conversation_item_footer);
     this.groupSender             =            findViewById(R.id.group_message_sender);
     this.groupSenderProfileName  =            findViewById(R.id.group_message_sender_profile);
-    this.insecureImage           =            findViewById(R.id.insecure_indicator);
-    this.deliveryStatusIndicator =            findViewById(R.id.delivery_status);
     this.alertView               =            findViewById(R.id.indicators_parent);
     this.contactPhoto            =            findViewById(R.id.contact_photo);
     this.bodyBubble              =            findViewById(R.id.body_bubble);
@@ -181,9 +170,9 @@ protected void onFinishInflate() {
     this.audioViewStub           = new Stub<>(findViewById(R.id.audio_view_stub));
     this.documentViewStub        = new Stub<>(findViewById(R.id.document_view_stub));
     this.sharedContactStub       = new Stub<>(findViewById(R.id.shared_contact_view_stub));
-    this.expirationTimer         =            findViewById(R.id.expiration_indicator);
     this.groupSenderHolder       =            findViewById(R.id.group_sender_holder);
     this.quoteView               =            findViewById(R.id.quote_view);
+    this.container               =            findViewById(R.id.container);
 
     setOnClickListener(new ClickListener(null));
 
@@ -194,12 +183,14 @@ protected void onFinishInflate() {
   }
 
   @Override
-  public void bind(@NonNull MessageRecord      messageRecord,
-                   @NonNull GlideRequests      glideRequests,
-                   @NonNull Locale             locale,
-                   @NonNull Set<MessageRecord> batchSelected,
-                   @NonNull Recipient          conversationRecipient,
-                            boolean            pulseHighlight)
+  public void bind(@NonNull MessageRecord           messageRecord,
+                   @NonNull Optional<MessageRecord> previousMessageRecord,
+                   @NonNull Optional<MessageRecord> nextMessageRecord,
+                   @NonNull GlideRequests           glideRequests,
+                   @NonNull Locale                  locale,
+                   @NonNull Set<MessageRecord>      batchSelected,
+                   @NonNull Recipient               conversationRecipient,
+                            boolean                 pulseHighlight)
   {
     this.messageRecord          = messageRecord;
     this.locale                 = locale;
@@ -212,17 +203,19 @@ public void bind(@NonNull MessageRecord      messageRecord,
     this.recipient.addListener(this);
     this.conversationRecipient.addListener(this);
 
-    setMediaAttributes(messageRecord, conversationRecipient);
+    setMediaAttributes(messageRecord, nextMessageRecord, previousMessageRecord, conversationRecipient, groupThread);
     setInteractionState(messageRecord, pulseHighlight);
     setBodyText(messageRecord);
-    setBubbleState(messageRecord, recipient);
+    setBubbleState(messageRecord);
     setStatusIcons(messageRecord);
     setContactPhoto(recipient);
     setGroupMessageStatus(messageRecord, recipient);
-    setMinimumWidth();
-    setSimInfo(messageRecord);
-    setExpiration(messageRecord);
-    setQuote(messageRecord);
+    setAuthor(messageRecord, previousMessageRecord, nextMessageRecord, groupThread);
+    setQuote(messageRecord, previousMessageRecord, nextMessageRecord, groupThread);
+    setMessageSpacing(context, messageRecord, nextMessageRecord);
+    setGutterSizes(messageRecord, groupThread);
+    setFooter(messageRecord, nextMessageRecord, locale, groupThread);
+    setMessageShape(messageRecord, previousMessageRecord, nextMessageRecord, groupThread);
   }
 
   @Override
@@ -231,52 +224,58 @@ public void setEventListener(@Nullable EventListener eventListener) {
   }
 
   @Override
-  public void onLayout(boolean changed, int left, int top, int right, int bottom) {
-    super.onLayout(changed, left, top, right, bottom);
+  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
 
-    if (groupSenderHolder != null && groupSenderHolder.getVisibility() == View.VISIBLE) {
-      View content = (View) groupSenderHolder.getParent();
+    if (isInEditMode()) {
+      return;
+    }
 
-      groupSenderHolder.layout(content.getPaddingLeft(), content.getPaddingTop(),
-                               content.getWidth() - content.getPaddingRight(),
-                               content.getPaddingTop() + groupSenderHolder.getMeasuredHeight());
+    boolean needsMeasure = false;
 
+    if (hasQuote(messageRecord)) {
+      int quoteWidth     = quoteView.getMeasuredWidth();
+      int availableWidth = getAvailableMessageBubbleWidth(quoteView);
 
-      if (ViewCompat.getLayoutDirection(groupSenderProfileName) == ViewCompat.LAYOUT_DIRECTION_RTL) {
-        groupSenderProfileName.layout(groupSenderHolder.getPaddingLeft(),
-                                      groupSenderHolder.getPaddingTop(),
-                                      groupSenderHolder.getPaddingLeft() + groupSenderProfileName.getWidth(),
-                                      groupSenderHolder.getPaddingTop() + groupSenderProfileName.getHeight());
-      } else {
-        groupSenderProfileName.layout(groupSenderHolder.getWidth() - groupSenderHolder.getPaddingRight() - groupSenderProfileName.getWidth(),
-                                      groupSenderHolder.getPaddingTop(),
-                                      groupSenderHolder.getWidth() - groupSenderProfileName.getPaddingRight(),
-                                      groupSenderHolder.getPaddingTop() + groupSenderProfileName.getHeight());
+      if (quoteWidth != availableWidth) {
+        quoteView.getLayoutParams().width = availableWidth;
+        needsMeasure = true;
       }
     }
-  }
 
-  @Override
-  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+    ConversationItemFooter activeFooter   = getActiveFooter(messageRecord);
+    int                    availableWidth = getAvailableMessageBubbleWidth(footer);
 
-    if (hasQuote(messageRecord)) {
-      int quoteWidth = quoteView.getMeasuredWidth();
+    if (activeFooter.getVisibility() != GONE && activeFooter.getMeasuredWidth() != availableWidth) {
+      activeFooter.getLayoutParams().width = availableWidth;
+      needsMeasure = true;
+    }
 
-      int availableWidth;
-      if (hasAudio(messageRecord)) {
-        availableWidth = audioViewStub.get().getMeasuredWidth();
-      } else if (hasThumbnail(messageRecord)) {
-        availableWidth = mediaThumbnailStub.get().getMeasuredWidth();
+    if (needsMeasure) {
+      if (measureCalls < MAX_MEASURE_CALLS) {
+        measure(widthMeasureSpec, heightMeasureSpec);
+        measureCalls++;
       } else {
-        availableWidth = bodyBubble.getMeasuredWidth() - bodyBubble.getPaddingLeft() - bodyBubble.getPaddingRight();
+        Log.w(TAG, "Hit measure() cap of " + MAX_MEASURE_CALLS);
       }
+    } else {
+      measureCalls = 0;
+    }
+  }
 
-      if (quoteWidth != availableWidth) {
-        quoteView.getLayoutParams().width = availableWidth;
-        measure(widthMeasureSpec, heightMeasureSpec);
-      }
+  private int getAvailableMessageBubbleWidth(@NonNull View forView) {
+    int availableWidth;
+    if (hasAudio(messageRecord)) {
+      availableWidth = audioViewStub.get().getMeasuredWidth() + ViewUtil.getLeftMargin(audioViewStub.get()) + ViewUtil.getRightMargin(audioViewStub.get());
+    } else if (hasThumbnail(messageRecord)) {
+      availableWidth = mediaThumbnailStub.get().getMeasuredWidth();
+    } else {
+      availableWidth = bodyBubble.getMeasuredWidth() - bodyBubble.getPaddingLeft() - bodyBubble.getPaddingRight();
     }
+
+    availableWidth -= ViewUtil.getLeftMargin(forView) + ViewUtil.getRightMargin(forView);
+
+    return availableWidth;
   }
 
   private void initializeAttributes() {
@@ -292,8 +291,6 @@ public void unbind() {
     if (recipient != null) {
       recipient.removeListener(this);
     }
-
-    this.expirationTimer.stopAnimation();
   }
 
   public MessageRecord getMessageRecord() {
@@ -302,29 +299,23 @@ public MessageRecord getMessageRecord() {
 
   /// MessageRecord Attribute Parsers
 
-  private void setBubbleState(MessageRecord messageRecord, Recipient recipient) {
+  private void setBubbleState(MessageRecord messageRecord) {
     if (messageRecord.isOutgoing()) {
       bodyBubble.getBackground().setColorFilter(defaultBubbleColor, PorterDuff.Mode.MULTIPLY);
-      if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().setBackgroundColorHint(defaultBubbleColor);
     } else {
-      int color = recipient.getColor().toConversationColor(context);
-      bodyBubble.getBackground().setColorFilter(color, PorterDuff.Mode.MULTIPLY);
-      if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().setBackgroundColorHint(color);
+      bodyBubble.getBackground().setColorFilter(defaultBubbleColor, PorterDuff.Mode.MULTIPLY);
+      bodyBubble.getBackground().setColorFilter(messageRecord.getRecipient().getColor().toConversationColor(context), PorterDuff.Mode.MULTIPLY);
     }
 
     if (audioViewStub.resolved()) {
-      setAudioViewTint(messageRecord, conversationRecipient);
-    }
-
-    if (documentViewStub.resolved()) {
-      setDocumentViewTint(messageRecord, conversationRecipient);
+      setAudioViewTint(messageRecord, this.conversationRecipient);
     }
   }
 
   private void setAudioViewTint(MessageRecord messageRecord, Recipient recipient) {
     if (messageRecord.isOutgoing()) {
       if (DynamicTheme.LIGHT.equals(TextSecurePreferences.getTheme(context))) {
-        audioViewStub.get().setTint(recipient.getColor().toConversationColor(context), defaultBubbleColor);
+        audioViewStub.get().setTint(getContext().getResources().getColor(R.color.core_light_60), defaultBubbleColor);
       } else {
         audioViewStub.get().setTint(Color.WHITE, defaultBubbleColor);
       }
@@ -333,18 +324,6 @@ private void setAudioViewTint(MessageRecord messageRecord, Recipient recipient)
     }
   }
 
-  private void setDocumentViewTint(MessageRecord messageRecord, Recipient recipient) {
-    if (messageRecord.isOutgoing()) {
-      if (DynamicTheme.LIGHT.equals(TextSecurePreferences.getTheme(context))) {
-        documentViewStub.get().setTint(recipient.getColor().toConversationColor(context), defaultBubbleColor);
-      } else {
-        documentViewStub.get().setTint(Color.WHITE, defaultBubbleColor);
-      }
-    } else {
-      documentViewStub.get().setTint(Color.WHITE, recipient.getColor().toConversationColor(context));
-    }
-  }
-
   private void setInteractionState(MessageRecord messageRecord, boolean pulseHighlight) {
     if (batchSelected.contains(messageRecord)) {
       setBackgroundResource(R.drawable.conversation_item_background);
@@ -387,6 +366,10 @@ private boolean hasThumbnail(MessageRecord messageRecord) {
     return messageRecord.isMms() && ((MmsMessageRecord)messageRecord).getSlideDeck().getThumbnailSlide() != null;
   }
 
+  private boolean hasOnlyThumbnail(MessageRecord messageRecord) {
+    return hasThumbnail(messageRecord) && !hasAudio(messageRecord) && !hasDocument(messageRecord) && !hasSharedContact(messageRecord);
+  }
+
   private boolean hasDocument(MessageRecord messageRecord) {
     return messageRecord.isMms() && ((MmsMessageRecord)messageRecord).getSlideDeck().getDocumentSlide() != null;
   }
@@ -412,7 +395,12 @@ private void setBodyText(MessageRecord messageRecord) {
     }
   }
 
-  private void setMediaAttributes(MessageRecord messageRecord, Recipient conversationRecipient) {
+  private void setMediaAttributes(@NonNull MessageRecord           messageRecord,
+                                  @NonNull Optional<MessageRecord> previousRecord,
+                                  @NonNull Optional<MessageRecord> nextRecord,
+                                  @NonNull Recipient               conversationRecipient,
+                                           boolean                 isGroupThread)
+  {
     boolean showControls = !messageRecord.isFailed() && !Util.isOwnNumber(context, conversationRecipient.getAddress());
 
     if (hasSharedContact(messageRecord)) {
@@ -426,7 +414,8 @@ private void setMediaAttributes(MessageRecord messageRecord, Recipient conversat
       sharedContactStub.get().setOnClickListener(sharedContactClickListener);
       sharedContactStub.get().setOnLongClickListener(passthroughClickListener);
 
-      bodyText.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+      ViewUtil.updateLayoutParams(bodyText, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+      footer.setVisibility(GONE);
     } else if (hasAudio(messageRecord)) {
       audioViewStub.get().setVisibility(View.VISIBLE);
       if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().setVisibility(View.GONE);
@@ -438,7 +427,8 @@ private void setMediaAttributes(MessageRecord messageRecord, Recipient conversat
       audioViewStub.get().setDownloadClickListener(downloadClickListener);
       audioViewStub.get().setOnLongClickListener(passthroughClickListener);
 
-      bodyText.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+      ViewUtil.updateLayoutParams(bodyText, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+      footer.setVisibility(VISIBLE);
     } else if (hasDocument(messageRecord)) {
       documentViewStub.get().setVisibility(View.VISIBLE);
       if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().setVisibility(View.GONE);
@@ -451,7 +441,8 @@ private void setMediaAttributes(MessageRecord messageRecord, Recipient conversat
       documentViewStub.get().setDownloadClickListener(downloadClickListener);
       documentViewStub.get().setOnLongClickListener(passthroughClickListener);
 
-      bodyText.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+      ViewUtil.updateLayoutParams(bodyText, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+      footer.setVisibility(VISIBLE);
     } else if (hasThumbnail(messageRecord)) {
       mediaThumbnailStub.get().setVisibility(View.VISIBLE);
       if (audioViewStub.resolved())    audioViewStub.get().setVisibility(View.GONE);
@@ -471,15 +462,79 @@ private void setMediaAttributes(MessageRecord messageRecord, Recipient conversat
       mediaThumbnailStub.get().setDownloadClickListener(downloadClickListener);
       mediaThumbnailStub.get().setOnLongClickListener(passthroughClickListener);
       mediaThumbnailStub.get().setOnClickListener(passthroughClickListener);
+      mediaThumbnailStub.get().showShade(TextUtils.isEmpty(messageRecord.getDisplayBody()));
 
-      bodyText.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+      setThumbnailOutlineCorners(messageRecord, nextRecord, previousRecord, isGroupThread);
+
+      ViewUtil.updateLayoutParams(bodyText, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+      footer.setVisibility(VISIBLE);
     } else {
       if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().setVisibility(View.GONE);
       if (audioViewStub.resolved())      audioViewStub.get().setVisibility(View.GONE);
       if (documentViewStub.resolved())   documentViewStub.get().setVisibility(View.GONE);
       if (sharedContactStub.resolved())  sharedContactStub.get().setVisibility(GONE);
-      bodyText.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
+
+      ViewUtil.updateLayoutParams(bodyText, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+      footer.setVisibility(VISIBLE);
+    }
+  }
+
+  private void setThumbnailOutlineCorners(@NonNull MessageRecord           current,
+                                          @NonNull Optional<MessageRecord> previous,
+                                          @NonNull Optional<MessageRecord> next,
+                                                   boolean                 isGroupThread)
+  {
+    int defaultRadius  = readDimen(R.dimen.message_corner_radius);
+    int collapseRadius = readDimen(R.dimen.message_corner_collapse_radius);
+
+    int topLeft     = defaultRadius;
+    int topRight    = defaultRadius;
+    int bottomLeft  = defaultRadius;
+    int bottomRight = defaultRadius;
+
+    if (isSingularMessage(current, previous, next, isGroupThread)) {
+      topLeft     = defaultRadius;
+      topRight    = defaultRadius;
+      bottomLeft  = defaultRadius;
+      bottomRight = defaultRadius;
+    } else if (isStartOfMessageCluster(current, previous, isGroupThread)) {
+      if (current.isOutgoing()) {
+        bottomRight = collapseRadius;
+      } else {
+        bottomLeft = collapseRadius;
+      }
+    } else if (isEndOfMessageCluster(current, next, isGroupThread)) {
+      if (current.isOutgoing()) {
+        topRight = collapseRadius;
+      } else {
+        topLeft = collapseRadius;
+      }
+    } else {
+      if (current.isOutgoing()) {
+        topRight    = collapseRadius;
+        bottomRight = collapseRadius;
+      } else {
+        topLeft    = collapseRadius;
+        bottomLeft = collapseRadius;
+      }
+    }
+
+    if (!TextUtils.isEmpty(current.getDisplayBody())) {
+      bottomLeft  = 0;
+      bottomRight = 0;
+    }
+
+    if (isStartOfMessageCluster(current, previous, isGroupThread) && !current.isOutgoing() && isGroupThread) {
+      topLeft  = 0;
+      topRight = 0;
+    }
+
+    if (hasQuote(messageRecord)) {
+      topLeft  = 0;
+      topRight = 0;
     }
+
+    mediaThumbnailStub.get().setOutlineCorners(topLeft, topRight, bottomRight, bottomLeft);
   }
 
   private void setContactPhoto(@NonNull Recipient recipient) {
@@ -508,85 +563,20 @@ private SpannableString linkifyMessageBody(SpannableString messageBody, boolean
   }
 
   private void setStatusIcons(MessageRecord messageRecord) {
-    indicatorText.setVisibility(View.GONE);
-
-    insecureImage.setVisibility(messageRecord.isSecure() ? View.GONE : View.VISIBLE);
     bodyText.setCompoundDrawablesWithIntrinsicBounds(0, 0, messageRecord.isKeyExchange() ? R.drawable.ic_menu_login : 0, 0);
-    dateText.setText(DateUtils.getExtendedRelativeTimeSpanString(getContext(), locale, messageRecord.getTimestamp()));
 
     if (messageRecord.isFailed()) {
-      setFailedStatusIcons();
+      alertView.setFailed();
     } else if (messageRecord.isPendingInsecureSmsFallback()) {
-      setFallbackStatusIcons();
+      alertView.setPendingApproval();
     } else {
       alertView.setNone();
-
-      if      (!messageRecord.isOutgoing())  deliveryStatusIndicator.setNone();
-      else if (messageRecord.isPending())    deliveryStatusIndicator.setPending();
-      else if (messageRecord.isRemoteRead()) deliveryStatusIndicator.setRead();
-      else if (messageRecord.isDelivered())  deliveryStatusIndicator.setDelivered();
-      else                                   deliveryStatusIndicator.setSent();
     }
   }
 
-  private void setSimInfo(MessageRecord messageRecord) {
-    SubscriptionManagerCompat subscriptionManager = new SubscriptionManagerCompat(context);
-
-    if (messageRecord.getSubscriptionId() == -1 || !Permissions.hasAll(context, Manifest.permission.READ_PHONE_STATE) || subscriptionManager.getActiveSubscriptionInfoList().size() < 2) {
-      simInfoText.setVisibility(View.GONE);
-    } else {
-      Optional<SubscriptionInfoCompat> subscriptionInfo = subscriptionManager.getActiveSubscriptionInfo(messageRecord.getSubscriptionId());
-
-      if (subscriptionInfo.isPresent() && messageRecord.isOutgoing()) {
-        simInfoText.setText(getContext().getString(R.string.ConversationItem_from_s, subscriptionInfo.get().getDisplayName()));
-        simInfoText.setVisibility(View.VISIBLE);
-      } else if (subscriptionInfo.isPresent()) {
-        simInfoText.setText(getContext().getString(R.string.ConversationItem_to_s,  subscriptionInfo.get().getDisplayName()));
-        simInfoText.setVisibility(View.VISIBLE);
-      } else {
-        simInfoText.setVisibility(View.GONE);
-      }
-    }
-  }
-
-  @SuppressLint("StaticFieldLeak")
-  private void setExpiration(final MessageRecord messageRecord) {
-    if (messageRecord.getExpiresIn() > 0) {
-      this.expirationTimer.setVisibility(View.VISIBLE);
-      this.expirationTimer.setPercentage(0);
-
-      if (messageRecord.getExpireStarted() > 0) {
-        this.expirationTimer.setExpirationTime(messageRecord.getExpireStarted(),
-                                               messageRecord.getExpiresIn());
-        this.expirationTimer.startAnimation();
-
-        if (messageRecord.getExpireStarted() + messageRecord.getExpiresIn() <= System.currentTimeMillis()) {
-          ApplicationContext.getInstance(context).getExpiringMessageManager().checkSchedule();
-        }
-      } else if (!messageRecord.isOutgoing() && !messageRecord.isMediaPending()) {
-        new AsyncTask<Void, Void, Void>() {
-          @Override
-          protected Void doInBackground(Void... params) {
-            ExpiringMessageManager expirationManager = ApplicationContext.getInstance(context).getExpiringMessageManager();
-            long                   id                = messageRecord.getId();
-            boolean                mms               = messageRecord.isMms();
-
-            if (mms) DatabaseFactory.getMmsDatabase(context).markExpireStarted(id);
-            else     DatabaseFactory.getSmsDatabase(context).markExpireStarted(id);
-
-            expirationManager.scheduleDeletion(id, mms, messageRecord.getExpiresIn());
-            return null;
-          }
-        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
-      }
-    } else {
-      this.expirationTimer.setVisibility(View.GONE);
-    }
-  }
-
-  private void setQuote(@NonNull MessageRecord messageRecord) {
-    if (messageRecord.isMms() && !messageRecord.isMmsNotification() && ((MediaMmsMessageRecord)messageRecord).getQuote() != null) {
-      Quote quote = ((MediaMmsMessageRecord)messageRecord).getQuote();
+  private void setQuote(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> previous, @NonNull Optional<MessageRecord> next, boolean isGroupThread) {
+    if (current.isMms() && !current.isMmsNotification() && ((MediaMmsMessageRecord)current).getQuote() != null) {
+      Quote quote = ((MediaMmsMessageRecord)current).getQuote();
       assert quote != null;
       quoteView.setQuote(glideRequests, quote.getId(), Recipient.from(context, quote.getAuthor(), true), quote.getText(), quote.getAttachment());
       quoteView.setVisibility(View.VISIBLE);
@@ -594,44 +584,87 @@ private void setQuote(@NonNull MessageRecord messageRecord) {
 
       quoteView.setOnClickListener(view -> {
         if (eventListener != null && batchSelected.isEmpty()) {
-          eventListener.onQuoteClicked((MmsMessageRecord) messageRecord);
+          eventListener.onQuoteClicked((MmsMessageRecord) current);
         } else {
           passthroughClickListener.onClick(view);
         }
       });
+
       quoteView.setOnLongClickListener(passthroughClickListener);
+
+      if (isStartOfMessageCluster(current, previous, isGroupThread)) {
+        if (current.isOutgoing()) {
+          quoteView.setTopCornerSizes(true, true);
+        } else if (isGroupThread) {
+          quoteView.setTopCornerSizes(false, false);
+        } else {
+          quoteView.setTopCornerSizes(true, true);
+        }
+      } else if (!isSingularMessage(current, previous, next, isGroupThread)) {
+        if (current.isOutgoing()) {
+          quoteView.setTopCornerSizes(true, false);
+        } else {
+          quoteView.setTopCornerSizes(false, true);
+        }
+      }
+
+      if (mediaThumbnailStub.resolved()) {
+        ViewUtil.setTopMargin(mediaThumbnailStub.get(), readDimen(R.dimen.message_bubble_top_padding));
+      }
     } else {
       quoteView.dismiss();
+
+      if (mediaThumbnailStub.resolved()) {
+        ViewUtil.setTopMargin(mediaThumbnailStub.get(), 0);
+      }
     }
   }
 
-  private void setFailedStatusIcons() {
-    alertView.setFailed();
-    deliveryStatusIndicator.setNone();
-    dateText.setText(R.string.ConversationItem_error_not_delivered);
-
-    if (messageRecord.isOutgoing()) {
-      indicatorText.setText(R.string.ConversationItem_click_for_details);
-      indicatorText.setVisibility(View.VISIBLE);
+  private void setGutterSizes(@NonNull MessageRecord current, boolean isGroupThread) {
+    if (isGroupThread) {
+      if (current.isOutgoing()) {
+        ViewUtil.setLeftMargin(container, readDimen(R.dimen.conversation_group_left_gutter));
+      } else {
+        ViewUtil.setLeftMargin(bodyBubble, readDimen(R.dimen.conversation_group_left_gutter));
+      }
+    } else {
+      if (current.isOutgoing()) {
+        ViewUtil.setLeftMargin(container, readDimen(R.dimen.conversation_individual_left_gutter));
+      } else {
+        ViewUtil.setLeftMargin(bodyBubble, readDimen(R.dimen.conversation_individual_left_gutter));
+      }
     }
   }
 
-  private void setFallbackStatusIcons() {
-    alertView.setPendingApproval();
-    deliveryStatusIndicator.setNone();
-    indicatorText.setVisibility(View.VISIBLE);
-    indicatorText.setText(R.string.ConversationItem_click_to_approve_unencrypted);
+  private void setFooter(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> next, @NonNull Locale locale, boolean isGroupThread) {
+    ViewUtil.updateLayoutParams(footer, LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
+
+    footer.setVisibility(GONE);
+    if (sharedContactStub.resolved()) sharedContactStub.get().getFooter().setVisibility(GONE);
+    if (mediaThumbnailStub.resolved()) mediaThumbnailStub.get().getFooter().setVisibility(GONE);
+
+    boolean differentMinutes = next.isPresent() && !DateUtils.isSameBriefRelativeTimestamp(context, locale, next.get().getTimestamp(), current.getTimestamp());
+    if (current.isOutgoing() || current.getExpiresIn() > 0 || !current.isSecure() || differentMinutes || isEndOfMessageCluster(current, next, isGroupThread)) {
+      ConversationItemFooter activeFooter = getActiveFooter(current);
+      activeFooter.setVisibility(VISIBLE);
+      activeFooter.setMessageRecord(current, locale);
+    }
   }
 
-  private void setMinimumWidth() {
-    if (indicatorText.getVisibility() == View.VISIBLE && indicatorText.getText() != null) {
-      final float density = getResources().getDisplayMetrics().density;
-      bodyBubble.setMinimumWidth(indicatorText.getText().length() * (int) (6.5 * density) + (int) (22.0 * density));
+  private ConversationItemFooter getActiveFooter(@NonNull MessageRecord messageRecord) {
+    if (hasSharedContact(messageRecord)) {
+      return sharedContactStub.get().getFooter();
+    } else if (hasOnlyThumbnail(messageRecord) && TextUtils.isEmpty(messageRecord.getDisplayBody())) {
+      return mediaThumbnailStub.get().getFooter();
     } else {
-      bodyBubble.setMinimumWidth(0);
+      return footer;
     }
   }
 
+  private int readDimen(@DimenRes int dimenId) {
+    return context.getResources().getDimensionPixelOffset(dimenId);
+  }
+
   private boolean shouldInterceptClicks(MessageRecord messageRecord) {
     return batchSelected.isEmpty() &&
             ((messageRecord.isFailed() && !messageRecord.isMmsNotification()) ||
@@ -651,13 +684,116 @@ private void setGroupMessageStatus(MessageRecord messageRecord, Recipient recipi
         this.groupSenderProfileName.setText(null);
         this.groupSenderProfileName.setVisibility(View.GONE);
       }
+    }
+  }
 
-      this.groupSenderHolder.setVisibility(View.VISIBLE);
+  private void setAuthor(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> previous, @NonNull Optional<MessageRecord> next, boolean isGroupThread) {
+    if (isGroupThread && !current.isOutgoing()) {
+      if (!previous.isPresent() || previous.get().isUpdate() || !current.getRecipient().getAddress().equals(previous.get().getRecipient().getAddress())) {
+        groupSenderHolder.setVisibility(VISIBLE);
+      } else {
+        groupSenderHolder.setVisibility(GONE);
+      }
+
+      if (!next.isPresent() || next.get().isUpdate() || !current.getRecipient().getAddress().equals(next.get().getRecipient().getAddress())) {
+        contactPhoto.setVisibility(VISIBLE);
+      } else {
+        contactPhoto.setVisibility(GONE);
+      }
+    } else {
+      groupSenderHolder.setVisibility(GONE);
+
+      if (contactPhoto != null) {
+        contactPhoto.setVisibility(GONE);
+      }
+    }
+  }
+
+  private void setMessageShape(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> previous, @NonNull Optional<MessageRecord> next, boolean isGroupThread) {
+    if (isSingularMessage(current, previous, next, isGroupThread)) {
+      bodyBubble.setRadius(readDimen(R.dimen.message_corner_radius));
+    } else if (isStartOfMessageCluster(current, previous, isGroupThread)) {
+      if (current.isOutgoing()) {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_radius));
+      } else {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius));
+      }
+    } else if (isEndOfMessageCluster(current, next, isGroupThread)) {
+      if (current.isOutgoing()) {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius));
+      } else {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius));
+      }
     } else {
-      this.groupSenderHolder.setVisibility(View.GONE);
+      if (current.isOutgoing()) {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_radius));
+      } else {
+        bodyBubble.setRadii(readDimen(R.dimen.message_corner_collapse_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_radius),
+                            readDimen(R.dimen.message_corner_collapse_radius));
+      }
     }
   }
 
+  private boolean isStartOfMessageCluster(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> previous, boolean isGroupThread) {
+    if (isGroupThread) {
+      return !previous.isPresent() || previous.get().isUpdate() || !DateUtils.isSameDay(current.getTimestamp(), previous.get().getTimestamp()) ||
+             !current.getRecipient().getAddress().equals(previous.get().getRecipient().getAddress());
+    } else {
+      return !previous.isPresent() || previous.get().isUpdate() || !DateUtils.isSameDay(current.getTimestamp(), previous.get().getTimestamp()) ||
+             current.isOutgoing() != previous.get().isOutgoing();
+    }
+  }
+
+  private boolean isEndOfMessageCluster(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> next, boolean isGroupThread) {
+    if (isGroupThread) {
+      return !next.isPresent() || next.get().isUpdate() || !DateUtils.isSameDay(current.getTimestamp(), next.get().getTimestamp()) ||
+             !current.getRecipient().getAddress().equals(next.get().getRecipient().getAddress());
+    } else {
+      return !next.isPresent() || next.get().isUpdate() || !DateUtils.isSameDay(current.getTimestamp(), next.get().getTimestamp()) ||
+             current.isOutgoing() != next.get().isOutgoing();
+    }
+  }
+
+  private boolean isSingularMessage(@NonNull MessageRecord current, @NonNull Optional<MessageRecord> previous, @NonNull Optional<MessageRecord> next, boolean isGroupThread) {
+    return isStartOfMessageCluster(current, previous, isGroupThread) && isEndOfMessageCluster(current, next, isGroupThread);
+  }
+
+  private void setMessageSpacing(@NonNull Context context, @NonNull MessageRecord current, @NonNull Optional<MessageRecord> next) {
+    int spacing = readDimen(context, R.dimen.conversation_vertical_message_spacing_collapse);
+
+    if (next.isPresent()) {
+      boolean recipientsMatch = current.getRecipient().getAddress().equals(next.get().getRecipient().getAddress());
+      boolean outgoingMatch   = current.isOutgoing() == next.get().isOutgoing();
+
+      if (!recipientsMatch || !outgoingMatch) {
+        spacing = readDimen(context, R.dimen.conversation_vertical_message_spacing_default);
+      }
+    }
+
+    ViewUtil.setPaddingBottom(this, spacing);
+  }
+
+  private int readDimen(@NonNull Context context, @DimenRes int dimenId) {
+    return context.getResources().getDimensionPixelOffset(dimenId);
+  }
+
   /// Event handlers
 
   private void handleApproveIdentity() {
@@ -673,11 +809,10 @@ private void handleApproveIdentity() {
   @Override
   public void onModified(final Recipient modified) {
     Util.runOnMain(() -> {
-      setBubbleState(messageRecord, recipient);
+      setBubbleState(messageRecord);
       setContactPhoto(recipient);
       setGroupMessageStatus(messageRecord, recipient);
       setAudioViewTint(messageRecord, conversationRecipient);
-      setDocumentViewTint(messageRecord, conversationRecipient);
     });
   }
 
diff --git a/src/org/thoughtcrime/securesms/ConversationListFragment.java b/src/org/thoughtcrime/securesms/ConversationListFragment.java
index 35f93992b7e..c806a41e197 100644
--- a/src/org/thoughtcrime/securesms/ConversationListFragment.java
+++ b/src/org/thoughtcrime/securesms/ConversationListFragment.java
@@ -133,7 +133,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
     list.setHasFixedSize(true);
     list.setLayoutManager(new LinearLayoutManager(getActivity()));
     list.setItemAnimator(new DeleteItemAnimator());
-    list.addItemDecoration(new InsetDividerItemDecoration(getActivity()));
 
     new ItemTouchHelper(new ArchiveListenerCallback()).attachToRecyclerView(list);
 
@@ -574,63 +573,6 @@ public void onChildDraw(Canvas c, RecyclerView recyclerView,
       }
     }
   }
-
-  private static class InsetDividerItemDecoration extends RecyclerView.ItemDecoration {
-
-    private Drawable divider;
-    private final Rect bounds = new Rect();
-    
-    InsetDividerItemDecoration(Context context) {
-      TypedArray typedArray = context.obtainStyledAttributes(new int[]{R.attr.conversation_list_item_divider});
-      this.divider = typedArray.getDrawable(0);
-      typedArray.recycle();
-    }
-
-    @Override
-    public void onDraw(Canvas canvas, RecyclerView parent, RecyclerView.State state) {
-      if (parent.getLayoutManager() == null) {
-        return;
-      }
-
-      canvas.save();
-
-      final int left;
-      final int right;
-
-      if (parent.getClipToPadding()) {
-        left  = parent.getPaddingLeft();
-        right = parent.getWidth() - parent.getPaddingRight();
-        canvas.clipRect(left, parent.getPaddingTop(), right, parent.getHeight() - parent.getPaddingBottom());
-      } else {
-        left = 0;
-        right = parent.getWidth();
-      }
-
-      final int childCount = parent.getChildCount();
-
-      for (int i = 0; i < childCount-1; i++) {
-        final View child = parent.getChildAt(i);
-        parent.getDecoratedBoundsWithMargins(child, bounds);
-        final int bottom = bounds.bottom + Math.round(child.getTranslationY());
-        final int top = bottom - divider.getIntrinsicHeight();
-        divider.setBounds(left, top, right, bottom);
-        divider.draw(canvas);
-      }
-
-      canvas.restore();
-    }
-
-    @Override
-    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
-      if (divider == null) {
-        outRect.set(0, 0, 0, 0);
-        return;
-      }
-
-      outRect.set(0, 0, 0, divider.getIntrinsicHeight());
-    }
-  }
-
 }
 
 
diff --git a/src/org/thoughtcrime/securesms/ConversationListItem.java b/src/org/thoughtcrime/securesms/ConversationListItem.java
index 30962578343..fa32f599b94 100644
--- a/src/org/thoughtcrime/securesms/ConversationListItem.java
+++ b/src/org/thoughtcrime/securesms/ConversationListItem.java
@@ -67,8 +67,8 @@ public class ConversationListItem extends RelativeLayout
   @SuppressWarnings("unused")
   private final static String TAG = ConversationListItem.class.getSimpleName();
 
-  private final static Typeface  BOLD_TYPEFACE  = Typeface.create("sans-serif", Typeface.BOLD);
-  private final static Typeface  LIGHT_TYPEFACE = Typeface.create("sans-serif-light", Typeface.NORMAL);
+  private final static Typeface  BOLD_TYPEFACE  = Typeface.create("sans-serif-medium", Typeface.NORMAL);
+  private final static Typeface  LIGHT_TYPEFACE = Typeface.create("sans-serif", Typeface.NORMAL);
 
   private Set<Long>          selectedThreads;
   private Recipient          recipient;
diff --git a/src/org/thoughtcrime/securesms/ConversationUpdateItem.java b/src/org/thoughtcrime/securesms/ConversationUpdateItem.java
index c56edee3da6..9d6a3c21796 100644
--- a/src/org/thoughtcrime/securesms/ConversationUpdateItem.java
+++ b/src/org/thoughtcrime/securesms/ConversationUpdateItem.java
@@ -22,6 +22,7 @@
 import org.thoughtcrime.securesms.recipients.Recipient;
 import org.thoughtcrime.securesms.recipients.RecipientModifiedListener;
 import org.thoughtcrime.securesms.util.DateUtils;
+import org.thoughtcrime.securesms.util.ExpirationUtil;
 import org.thoughtcrime.securesms.util.GroupUtil;
 import org.thoughtcrime.securesms.util.IdentityUtil;
 import org.thoughtcrime.securesms.util.Util;
@@ -40,6 +41,7 @@ public class ConversationUpdateItem extends LinearLayout
   private Set<MessageRecord> batchSelected;
 
   private ImageView     icon;
+  private TextView      title;
   private TextView      body;
   private TextView      date;
   private Recipient     sender;
@@ -58,20 +60,23 @@ public ConversationUpdateItem(Context context, AttributeSet attrs) {
   public void onFinishInflate() {
     super.onFinishInflate();
 
-    this.icon = findViewById(R.id.conversation_update_icon);
-    this.body = findViewById(R.id.conversation_update_body);
-    this.date = findViewById(R.id.conversation_update_date);
+    this.icon  = findViewById(R.id.conversation_update_icon);
+    this.title = findViewById(R.id.conversation_update_title);
+    this.body  = findViewById(R.id.conversation_update_body);
+    this.date  = findViewById(R.id.conversation_update_date);
 
     this.setOnClickListener(new InternalClickListener(null));
   }
 
   @Override
-  public void bind(@NonNull MessageRecord      messageRecord,
-                   @NonNull GlideRequests      glideRequests,
-                   @NonNull Locale             locale,
-                   @NonNull Set<MessageRecord> batchSelected,
-                   @NonNull Recipient          conversationRecipient,
-                            boolean            pulseUpdate)
+  public void bind(@NonNull MessageRecord           messageRecord,
+                   @NonNull Optional<MessageRecord> previousMessageRecord,
+                   @NonNull Optional<MessageRecord> nextMessageRecord,
+                   @NonNull GlideRequests           glideRequests,
+                   @NonNull Locale                  locale,
+                   @NonNull Set<MessageRecord>      batchSelected,
+                   @NonNull Recipient               conversationRecipient,
+                            boolean                 pulseUpdate)
   {
     this.batchSelected = batchSelected;
 
@@ -116,27 +121,37 @@ private void setCallRecord(MessageRecord messageRecord) {
 
     body.setText(messageRecord.getDisplayBody());
     date.setText(DateUtils.getExtendedRelativeTimeSpanString(getContext(), locale, messageRecord.getDateReceived()));
+
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
     date.setVisibility(View.VISIBLE);
   }
 
   private void setTimerRecord(final MessageRecord messageRecord) {
     if (messageRecord.getExpiresIn() > 0) {
-      icon.setImageResource(R.drawable.ic_timer_white_24dp);
+      icon.setImageResource(R.drawable.ic_timer);
       icon.setColorFilter(new PorterDuffColorFilter(Color.parseColor("#757575"), PorterDuff.Mode.MULTIPLY));
     } else {
-      icon.setImageResource(R.drawable.ic_timer_off_white_24dp);
+      icon.setImageResource(R.drawable.ic_timer_disabled);
       icon.setColorFilter(new PorterDuffColorFilter(Color.parseColor("#757575"), PorterDuff.Mode.MULTIPLY));
     }
 
+    title.setText(ExpirationUtil.getExpirationDisplayValue(getContext(), (int)(messageRecord.getExpiresIn() / 1000)));
     body.setText(messageRecord.getDisplayBody());
-    date.setVisibility(View.GONE);
+
+    title.setVisibility(VISIBLE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
 
   private void setIdentityRecord(final MessageRecord messageRecord) {
     icon.setImageResource(R.drawable.ic_security_white_24dp);
     icon.setColorFilter(new PorterDuffColorFilter(Color.parseColor("#757575"), PorterDuff.Mode.MULTIPLY));
     body.setText(messageRecord.getDisplayBody());
-    date.setVisibility(View.GONE);
+
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
 
   private void setIdentityVerifyUpdate(final MessageRecord messageRecord) {
@@ -145,7 +160,10 @@ private void setIdentityVerifyUpdate(final MessageRecord messageRecord) {
 
     icon.setColorFilter(new PorterDuffColorFilter(Color.parseColor("#757575"), PorterDuff.Mode.MULTIPLY));
     body.setText(messageRecord.getDisplayBody());
-    date.setVisibility(View.GONE);
+
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
 
   private void setGroupRecord(MessageRecord messageRecord) {
@@ -155,21 +173,29 @@ private void setGroupRecord(MessageRecord messageRecord) {
     GroupUtil.getDescription(getContext(), messageRecord.getBody()).addListener(this);
     body.setText(messageRecord.getDisplayBody());
 
-    date.setVisibility(View.GONE);
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
 
   private void setJoinedRecord(MessageRecord messageRecord) {
     icon.setImageResource(R.drawable.ic_favorite_grey600_24dp);
     icon.clearColorFilter();
     body.setText(messageRecord.getDisplayBody());
-    date.setVisibility(View.GONE);
+
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
 
   private void setEndSessionRecord(MessageRecord messageRecord) {
     icon.setImageResource(R.drawable.ic_refresh_white_24dp);
     icon.setColorFilter(new PorterDuffColorFilter(Color.parseColor("#757575"), PorterDuff.Mode.MULTIPLY));
     body.setText(messageRecord.getDisplayBody());
-    date.setVisibility(View.GONE);
+
+    title.setVisibility(GONE);
+    body.setVisibility(VISIBLE);
+    date.setVisibility(GONE);
   }
   
   @Override
diff --git a/src/org/thoughtcrime/securesms/MessageDetailsActivity.java b/src/org/thoughtcrime/securesms/MessageDetailsActivity.java
index b2792542222..ca4815ec52a 100644
--- a/src/org/thoughtcrime/securesms/MessageDetailsActivity.java
+++ b/src/org/thoughtcrime/securesms/MessageDetailsActivity.java
@@ -55,6 +55,7 @@
 import org.thoughtcrime.securesms.util.DynamicTheme;
 import org.thoughtcrime.securesms.util.ExpirationUtil;
 import org.thoughtcrime.securesms.util.Util;
+import org.whispersystems.libsignal.util.guava.Optional;
 
 import java.lang.ref.WeakReference;
 import java.sql.Date;
@@ -252,7 +253,7 @@ private void updateRecipients(MessageRecord messageRecord, Recipient recipient,
       toFromRes = R.string.message_details_header__from;
     }
     toFrom.setText(toFromRes);
-    conversationItem.bind(messageRecord, glideRequests, dynamicLanguage.getCurrentLocale(), new HashSet<>(), recipient, false);
+    conversationItem.bind(messageRecord, Optional.absent(), Optional.absent(), glideRequests, dynamicLanguage.getCurrentLocale(), new HashSet<>(), recipient, false);
     recipientsList.setAdapter(new MessageDetailsRecipientAdapter(this, glideRequests, messageRecord, recipients, isPushGroup));
   }
 
diff --git a/src/org/thoughtcrime/securesms/color/MaterialColor.java b/src/org/thoughtcrime/securesms/color/MaterialColor.java
index dc01559f2bb..dccab1e04f6 100644
--- a/src/org/thoughtcrime/securesms/color/MaterialColor.java
+++ b/src/org/thoughtcrime/securesms/color/MaterialColor.java
@@ -6,32 +6,45 @@
 
 import org.thoughtcrime.securesms.R;
 
+import java.util.HashMap;
+import java.util.Map;
+
 import static org.thoughtcrime.securesms.util.ThemeUtil.isDarkTheme;
 
 public enum MaterialColor {
-  RED        (R.color.red_400,         R.color.red_700,         R.color.red_700,         R.color.red_900,         "red"),
-  PINK       (R.color.pink_400,        R.color.pink_700,        R.color.pink_700,        R.color.pink_900,        "pink"),
-  PURPLE     (R.color.purple_400,      R.color.purple_700,      R.color.purple_700,      R.color.purple_900,      "purple"),
-  DEEP_PURPLE(R.color.deep_purple_400, R.color.deep_purple_700, R.color.deep_purple_700, R.color.deep_purple_900, "deep_purple"),
-  INDIGO     (R.color.indigo_400,      R.color.indigo_700,      R.color.indigo_700,      R.color.indigo_900,      "indigo"),
-  BLUE       (R.color.blue_500,        R.color.blue_800,        R.color.blue_700,        R.color.blue_900,        "blue"),
-  LIGHT_BLUE (R.color.light_blue_500,  R.color.light_blue_800,  R.color.light_blue_700,  R.color.light_blue_900,  "light_blue"),
-  CYAN       (R.color.cyan_500,        R.color.cyan_700,        R.color.cyan_700,        R.color.cyan_900,        "cyan"),
-  TEAL       (R.color.teal_500,        R.color.teal_700,        R.color.teal_700,        R.color.teal_900,        "teal"),
-  GREEN      (R.color.green_500,       R.color.green_700,       R.color.green_700,       R.color.green_900,       "green"),
-  LIGHT_GREEN(R.color.light_green_600, R.color.light_green_700, R.color.light_green_700, R.color.light_green_900, "light_green"),
-  LIME       (R.color.lime_500,        R.color.lime_700,        R.color.lime_700,        R.color.lime_900,        "lime"),
-  YELLOW     (R.color.yellow_500,      R.color.yellow_700,      R.color.yellow_700,      R.color.yellow_900,      "yellow"),
-  AMBER      (R.color.amber_600,       R.color.amber_700,       R.color.amber_700,       R.color.amber_900,       "amber"),
-  ORANGE     (R.color.orange_500,      R.color.orange_700,      R.color.orange_700,      R.color.orange_900,      "orange"),
-  DEEP_ORANGE(R.color.deep_orange_500, R.color.deep_orange_700, R.color.deep_orange_700, R.color.deep_orange_900, "deep_orange"),
-  BROWN      (R.color.brown_500,       R.color.brown_700,       R.color.brown_700,       R.color.brown_900,       "brown"),
-  GREY       (R.color.grey_500,        R.color.grey_700,        R.color.grey_700,        R.color.grey_900,        "grey"),
-  BLUE_GREY  (R.color.blue_grey_500,   R.color.blue_grey_700,   R.color.blue_grey_700,   R.color.blue_grey_900,   "blue_grey"),
-
-  GROUP      (GREY.conversationColorLight, R.color.textsecure_primary, R.color.textsecure_primary_dark,
-              GREY.conversationColorDark, R.color.gray95, R.color.black,
-              "group_color");
+  RED        (R.color.conversation_red,    R.color.conversation_red_shade,    "red"),
+  PINK       (R.color.conversation_pink,   R.color.conversation_pink_shade,   "pink"),
+  PURPLE     (R.color.conversation_purple, R.color.conversation_purple_shade, "purple"),
+  INDIGO     (R.color.conversation_indigo, R.color.conversation_indigo_shade, "indigo"),
+  BLUE       (R.color.conversation_blue,   R.color.conversation_blue_shade,   "blue"),
+  CYAN       (R.color.conversation_cyan,   R.color.conversation_cyan_shade,   "cyan"),
+  TEAL       (R.color.conversation_teal,   R.color.conversation_teal_shade,   "teal"),
+  GREEN      (R.color.conversation_green,  R.color.conversation_green_shade,  "green"),
+  ORANGE     (R.color.conversation_orange, R.color.conversation_orange_shade, "orange"),
+  GREY       (R.color.conversation_grey,   R.color.conversation_grey_shade,   "grey");
+
+  private static final Map<String, MaterialColor> COLOR_MATCHES = new HashMap<String, MaterialColor>() {{
+    put("red", RED);
+    put("brown", RED);
+    put("pink", PINK);
+    put("purple", PURPLE);
+    put("deep_purple", PURPLE);
+    put("indigo", INDIGO);
+    put("blue", BLUE);
+    put("light_blue", BLUE);
+    put("cyan", CYAN);
+    put("blue_grey", CYAN);
+    put("teal", TEAL);
+    put("green", GREEN);
+    put("light_green", GREEN);
+    put("lime", GREEN);
+    put("orange", ORANGE);
+    put("amber", ORANGE);
+    put("deep_orange", ORANGE);
+    put("yellow", ORANGE);
+    put("grey", GREY);
+    put("group_color", BLUE);
+  }};
 
   private final int conversationColorLight;
   private final int actionBarColorLight;
@@ -55,11 +68,10 @@ public enum MaterialColor {
     this.serialized             = serialized;
   }
 
-  MaterialColor(int lightColor, int darkColor,
-                int lightStatusBarColor, int darkStatusBarColor, String serialized)
+  MaterialColor(int conversationColor, int statusBarColor, String serialized)
   {
-    this(lightColor, lightColor, lightStatusBarColor,
-         darkColor, darkColor, darkStatusBarColor, serialized);
+    this(conversationColor, conversationColor, statusBarColor,
+         conversationColor, conversationColor, statusBarColor, serialized);
   }
 
   public int toConversationColor(@NonNull Context context) {
@@ -77,10 +89,6 @@ public int toStatusBarColor(@NonNull Context context) {
                                                                 : statusBarColorLight);
   }
 
-  public int toQuoteTitleColor(@NonNull Context context) {
-    return context.getResources().getColor(conversationColorDark);
-  }
-
   public int toQuoteBarColorResource(@NonNull Context context, boolean outgoing) {
     if (outgoing) {
       return conversationColorDark;
@@ -90,34 +98,13 @@ public int toQuoteBarColorResource(@NonNull Context context, boolean outgoing) {
 
   public int toQuoteBackgroundColor(@NonNull Context context, boolean outgoing) {
     if (outgoing) {
-      if (isDarkTheme(context)) {
-        return context.getResources().getColor(R.color.transparent_white_60);
-      } else {
-        int color = toConversationColor(context);
-        return Color.argb(0x44, Color.red(color), Color.green(color), Color.blue(color));
-      }
-    }
-    return context.getResources().getColor(isDarkTheme(context) ? R.color.transparent_white_70
-                                                                : R.color.transparent_white_aa);
-  }
+      int color = toConversationColor(context);
+      int alpha = isDarkTheme(context) ? (int) (0.2 * 255) : (int) (0.4 * 255);
 
-  public int toQuoteOutlineColor(@NonNull Context context, boolean outgoing) {
-    if (!outgoing) {
-      return context.getResources().getColor(R.color.transparent_white_70);
+      return Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color));
     }
-    return context.getResources().getColor(isDarkTheme(context) ? R.color.transparent_white_40
-                                                                : R.color.grey_400_transparent);
-  }
-
-  public int toQuoteIconForegroundColor(@NonNull Context context, boolean outgoing) {
-    if (outgoing) {
-      return context.getResources().getColor(R.color.white);
-    }
-    return toConversationColor(context);
-  }
-
-  public int toQuoteIconBackgroundColor(@NonNull Context context, boolean outgoing) {
-    return context.getResources().getColor(toQuoteBarColorResource(context, outgoing));
+    return context.getResources().getColor(isDarkTheme(context) ? R.color.transparent_black_70
+                                                                : R.color.transparent_white_aa);
   }
 
   public boolean represents(Context context, int colorValue) {
@@ -134,8 +121,8 @@ public String serialize() {
   }
 
   public static MaterialColor fromSerialized(String serialized) throws UnknownColorException {
-    for (MaterialColor color : MaterialColor.values()) {
-      if (color.serialized.equals(serialized)) return color;
+    if (COLOR_MATCHES.containsKey(serialized)) {
+      return COLOR_MATCHES.get(serialized);
     }
 
     throw new UnknownColorException("Unknown color: " + serialized);
diff --git a/src/org/thoughtcrime/securesms/color/MaterialColors.java b/src/org/thoughtcrime/securesms/color/MaterialColors.java
index a02378cdbd8..dd6124e355e 100644
--- a/src/org/thoughtcrime/securesms/color/MaterialColors.java
+++ b/src/org/thoughtcrime/securesms/color/MaterialColors.java
@@ -11,28 +11,15 @@
 public class MaterialColors {
 
   public static final MaterialColorList CONVERSATION_PALETTE = new MaterialColorList(new ArrayList<>(Arrays.asList(
+    MaterialColor.ORANGE,
     MaterialColor.RED,
     MaterialColor.PINK,
     MaterialColor.PURPLE,
-
-    MaterialColor.DEEP_PURPLE,
     MaterialColor.INDIGO,
     MaterialColor.BLUE,
-
-    MaterialColor.LIGHT_BLUE,
-    MaterialColor.CYAN,
-    MaterialColor.TEAL,
     MaterialColor.GREEN,
-    MaterialColor.LIGHT_GREEN,
-    // Lime
-    // Yellow
-    // Amber
-    MaterialColor.ORANGE,
-    MaterialColor.DEEP_ORANGE,
-//    MaterialColor.BROWN,
-    MaterialColor.AMBER,
-    // Grey
-    MaterialColor.BLUE_GREY
+    MaterialColor.TEAL,
+    MaterialColor.CYAN
   )));
 
   public static class MaterialColorList {
diff --git a/src/org/thoughtcrime/securesms/components/AlertView.java b/src/org/thoughtcrime/securesms/components/AlertView.java
index 706f69ebe9b..64da4356533 100644
--- a/src/org/thoughtcrime/securesms/components/AlertView.java
+++ b/src/org/thoughtcrime/securesms/components/AlertView.java
@@ -37,8 +37,8 @@ public AlertView(final Context context, AttributeSet attrs, int defStyle) {
   private void initialize(AttributeSet attrs) {
     inflate(getContext(), R.layout.alert_view, this);
 
-    approvalIndicator = (ImageView) findViewById(R.id.pending_approval_indicator);
-    failedIndicator   = (ImageView) findViewById(R.id.sms_failed_indicator);
+    approvalIndicator = findViewById(R.id.pending_approval_indicator);
+    failedIndicator   = findViewById(R.id.sms_failed_indicator);
 
     if (attrs != null) {
       TypedArray typedArray = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.AlertView, 0, 0);
@@ -46,7 +46,10 @@ private void initialize(AttributeSet attrs) {
       typedArray.recycle();
 
       if (useSmallIcon) {
-        failedIndicator.setImageDrawable(ContextCompat.getDrawable(getContext(), R.drawable.ic_error_red_18dp));
+        int size = getResources().getDimensionPixelOffset(R.dimen.alertview_small_icon_size);
+        failedIndicator.getLayoutParams().width  = size;
+        failedIndicator.getLayoutParams().height = size;
+        requestLayout();
       }
     }
   }
diff --git a/src/org/thoughtcrime/securesms/components/ConversationItemFooter.java b/src/org/thoughtcrime/securesms/components/ConversationItemFooter.java
new file mode 100644
index 00000000000..790c8a9dc57
--- /dev/null
+++ b/src/org/thoughtcrime/securesms/components/ConversationItemFooter.java
@@ -0,0 +1,171 @@
+package org.thoughtcrime.securesms.components;
+
+import android.Manifest;
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.os.AsyncTask;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import org.thoughtcrime.securesms.ApplicationContext;
+import org.thoughtcrime.securesms.R;
+import org.thoughtcrime.securesms.database.DatabaseFactory;
+import org.thoughtcrime.securesms.database.model.MessageRecord;
+import org.thoughtcrime.securesms.permissions.Permissions;
+import org.thoughtcrime.securesms.service.ExpiringMessageManager;
+import org.thoughtcrime.securesms.util.DateUtils;
+import org.thoughtcrime.securesms.util.dualsim.SubscriptionInfoCompat;
+import org.thoughtcrime.securesms.util.dualsim.SubscriptionManagerCompat;
+import org.whispersystems.libsignal.util.guava.Optional;
+
+import java.util.Locale;
+
+public class ConversationItemFooter extends LinearLayout {
+
+  private TextView            dateView;
+  private TextView            simView;
+  private ExpirationTimerView timerView;
+  private ImageView           insecureIndicatorView;
+  private DeliveryStatusView  deliveryStatusView;
+
+  public ConversationItemFooter(Context context) {
+    super(context);
+    init(null);
+  }
+
+  public ConversationItemFooter(Context context, @Nullable AttributeSet attrs) {
+    super(context, attrs);
+    init(attrs);
+  }
+
+  public ConversationItemFooter(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+    super(context, attrs, defStyleAttr);
+    init(attrs);
+  }
+
+  private void init(@Nullable AttributeSet attrs) {
+    inflate(getContext(), R.layout.conversation_item_footer, this);
+
+    dateView              = findViewById(R.id.footer_date);
+    simView               = findViewById(R.id.footer_sim_info);
+    timerView             = findViewById(R.id.footer_expiration_timer);
+    insecureIndicatorView = findViewById(R.id.footer_insecure_indicator);
+    deliveryStatusView    = findViewById(R.id.footer_delivery_status);
+
+    if (attrs != null) {
+      TypedArray typedArray = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.ConversationItemFooter, 0, 0);
+      setColor(typedArray.getInt(R.styleable.ConversationItemFooter_footer_color, getResources().getColor(R.color.core_white)));
+      typedArray.recycle();
+    }
+  }
+
+  @Override
+  protected void onDetachedFromWindow() {
+    super.onDetachedFromWindow();
+    timerView.stopAnimation();
+  }
+
+  public void setMessageRecord(@NonNull MessageRecord messageRecord, @NonNull Locale locale) {
+    presentDate(messageRecord, locale);
+    presentSimInfo(messageRecord);
+    presentTimer(messageRecord);
+    presentInsecureIndicator(messageRecord);
+    presentDeliveryStatus(messageRecord);
+  }
+
+  public void setColor(int color) {
+    dateView.setTextColor(color);
+    simView.setTextColor(color);
+    timerView.setColorFilter(color);
+    insecureIndicatorView.setColorFilter(color);
+  }
+
+  private void presentDate(@NonNull MessageRecord messageRecord, @NonNull Locale locale) {
+    dateView.forceLayout();
+
+    if (messageRecord.isFailed()) {
+      dateView.setText(R.string.ConversationItem_error_not_delivered);
+    } else if (messageRecord.isPendingInsecureSmsFallback()) {
+      dateView.setText(R.string.ConversationItem_click_to_approve_unencrypted);
+    } else {
+      dateView.setText(DateUtils.getExtendedRelativeTimeSpanString(getContext(), locale, messageRecord.getTimestamp()));
+    }
+  }
+
+  private void presentSimInfo(@NonNull MessageRecord messageRecord) {
+    SubscriptionManagerCompat subscriptionManager = new SubscriptionManagerCompat(getContext());
+
+    if (messageRecord.getSubscriptionId() == -1 || !Permissions.hasAll(getContext(), Manifest.permission.READ_PHONE_STATE) || subscriptionManager.getActiveSubscriptionInfoList().size() < 2) {
+      simView.setVisibility(View.GONE);
+    } else {
+      Optional<SubscriptionInfoCompat> subscriptionInfo = subscriptionManager.getActiveSubscriptionInfo(messageRecord.getSubscriptionId());
+
+      if (subscriptionInfo.isPresent() && messageRecord.isOutgoing()) {
+        simView.setText(getContext().getString(R.string.ConversationItem_from_s, subscriptionInfo.get().getDisplayName()));
+        simView.setVisibility(View.VISIBLE);
+      } else if (subscriptionInfo.isPresent()) {
+        simView.setText(getContext().getString(R.string.ConversationItem_to_s,  subscriptionInfo.get().getDisplayName()));
+        simView.setVisibility(View.VISIBLE);
+      } else {
+        simView.setVisibility(View.GONE);
+      }
+    }
+  }
+
+  @SuppressLint("StaticFieldLeak")
+  private void presentTimer(@NonNull final MessageRecord messageRecord) {
+    if (messageRecord.getExpiresIn() > 0 && !messageRecord.isPending()) {
+      this.timerView.setVisibility(View.VISIBLE);
+      this.timerView.setPercentComplete(0);
+
+      if (messageRecord.getExpireStarted() > 0) {
+        this.timerView.setExpirationTime(messageRecord.getExpireStarted(),
+                                         messageRecord.getExpiresIn());
+        this.timerView.startAnimation();
+
+        if (messageRecord.getExpireStarted() + messageRecord.getExpiresIn() <= System.currentTimeMillis()) {
+          ApplicationContext.getInstance(getContext()).getExpiringMessageManager().checkSchedule();
+        }
+      } else if (!messageRecord.isOutgoing() && !messageRecord.isMediaPending()) {
+        new AsyncTask<Void, Void, Void>() {
+          @Override
+          protected Void doInBackground(Void... params) {
+            ExpiringMessageManager expirationManager = ApplicationContext.getInstance(getContext()).getExpiringMessageManager();
+            long                   id                = messageRecord.getId();
+            boolean                mms               = messageRecord.isMms();
+
+            if (mms) DatabaseFactory.getMmsDatabase(getContext()).markExpireStarted(id);
+            else     DatabaseFactory.getSmsDatabase(getContext()).markExpireStarted(id);
+
+            expirationManager.scheduleDeletion(id, mms, messageRecord.getExpiresIn());
+            return null;
+          }
+        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
+      }
+    } else {
+      this.timerView.setVisibility(View.GONE);
+    }
+  }
+
+  private void presentInsecureIndicator(@NonNull MessageRecord messageRecord) {
+    insecureIndicatorView.setVisibility(messageRecord.isSecure() ? View.GONE : View.VISIBLE);
+  }
+
+  private void presentDeliveryStatus(@NonNull MessageRecord messageRecord) {
+    if (!messageRecord.isFailed() && !messageRecord.isPendingInsecureSmsFallback()) {
+      if      (!messageRecord.isOutgoing())  deliveryStatusView.setNone();
+      else if (messageRecord.isPending())    deliveryStatusView.setPending();
+      else if (messageRecord.isRemoteRead()) deliveryStatusView.setRead();
+      else if (messageRecord.isDelivered())  deliveryStatusView.setDelivered();
+      else                                   deliveryStatusView.setSent();
+    } else {
+      deliveryStatusView.setNone();
+    }
+  }
+}
diff --git a/src/org/thoughtcrime/securesms/components/ConversationItemThumbnail.java b/src/org/thoughtcrime/securesms/components/ConversationItemThumbnail.java
new file mode 100644
index 00000000000..83148e460f7
--- /dev/null
+++ b/src/org/thoughtcrime/securesms/components/ConversationItemThumbnail.java
@@ -0,0 +1,180 @@
+package org.thoughtcrime.securesms.components;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.RectF;
+import android.net.Uri;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.annotation.UiThread;
+import android.util.AttributeSet;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+
+import org.thoughtcrime.securesms.R;
+import org.thoughtcrime.securesms.mms.GlideRequests;
+import org.thoughtcrime.securesms.mms.Slide;
+import org.thoughtcrime.securesms.mms.SlideClickListener;
+import org.thoughtcrime.securesms.util.ThemeUtil;
+
+public class ConversationItemThumbnail extends FrameLayout {
+
+  private static final String TAG = ConversationItemThumbnail.class.getSimpleName();
+
+  private static final Paint LIGHT_THEME_OUTLINE_PAINT = new Paint();
+  private static final Paint DARK_THEME_OUTLINE_PAINT = new Paint();
+
+  static {
+    LIGHT_THEME_OUTLINE_PAINT.setColor(Color.argb((int) (255 * 0.2), 0, 0, 0));
+    LIGHT_THEME_OUTLINE_PAINT.setStyle(Paint.Style.STROKE);
+    LIGHT_THEME_OUTLINE_PAINT.setStrokeWidth(1f);
+    LIGHT_THEME_OUTLINE_PAINT.setAntiAlias(true);
+
+    DARK_THEME_OUTLINE_PAINT.setColor(Color.argb((int) (255 * 0.2), 255, 255, 255));
+    DARK_THEME_OUTLINE_PAINT.setStyle(Paint.Style.STROKE);
+    DARK_THEME_OUTLINE_PAINT.setStrokeWidth(1f);
+    DARK_THEME_OUTLINE_PAINT.setAntiAlias(true);
+  }
+
+  private final float[] radii   = new float[8];
+  private final RectF   bounds  = new RectF();
+  private final Path    corners = new Path();
+
+  private ThumbnailView          thumbnail;
+  private ImageView              shade;
+  private ConversationItemFooter footer;
+  private Paint                  outlinePaint;
+
+  public ConversationItemThumbnail(Context context) {
+    super(context);
+    init(null);
+  }
+
+  public ConversationItemThumbnail(Context context, AttributeSet attrs) {
+    super(context, attrs);
+    init(attrs);
+  }
+
+  public ConversationItemThumbnail(final Context context, AttributeSet attrs, int defStyle) {
+    super(context, attrs, defStyle);
+    init(attrs);
+  }
+
+  private void init(@Nullable AttributeSet attrs) {
+    inflate(getContext(), R.layout.conversation_item_thumbnail, this);
+
+    this.thumbnail    = findViewById(R.id.conversation_thumbnail_image);
+    this.shade        = findViewById(R.id.conversation_thumbnail_shade);
+    this.footer       = findViewById(R.id.conversation_thumbnail_footer);
+    this.outlinePaint = ThemeUtil.isDarkTheme(getContext()) ? DARK_THEME_OUTLINE_PAINT : LIGHT_THEME_OUTLINE_PAINT;
+
+    setTouchDelegate(thumbnail.getTouchDelegate());
+
+    if (attrs != null) {
+      TypedArray typedArray = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.ConversationItemThumbnail, 0, 0);
+      thumbnail.setBounds(typedArray.getDimensionPixelSize(R.styleable.ConversationItemThumbnail_conversationThumbnail_minWidth, 0),
+                          typedArray.getDimensionPixelSize(R.styleable.ConversationItemThumbnail_conversationThumbnail_maxWidth, 0),
+                          typedArray.getDimensionPixelSize(R.styleable.ConversationItemThumbnail_conversationThumbnail_minHeight, 0),
+                          typedArray.getDimensionPixelSize(R.styleable.ConversationItemThumbnail_conversationThumbnail_maxHeight, 0));
+      typedArray.recycle();
+    }
+  }
+
+  @SuppressWarnings("SuspiciousNameCombination")
+  @Override
+  protected void dispatchDraw(Canvas canvas) {
+    super.dispatchDraw(canvas);
+
+    final float halfStrokeWidth = outlinePaint.getStrokeWidth() / 2;
+
+    bounds.left   = halfStrokeWidth;
+    bounds.top    = halfStrokeWidth;
+    bounds.right  = canvas.getWidth() - halfStrokeWidth;
+    bounds.bottom = canvas.getHeight() - halfStrokeWidth;
+
+    corners.reset();
+    corners.addRoundRect(bounds, radii, Path.Direction.CW);
+
+    canvas.drawPath(corners, outlinePaint);
+  }
+
+  @Override
+  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+
+    if (getMeasuredWidth() != thumbnail.getMeasuredWidth()) {
+      getLayoutParams().width = shade.getLayoutParams().width = thumbnail.getMeasuredWidth();
+      measure(widthMeasureSpec, heightMeasureSpec);
+    }
+  }
+
+  @Override
+  public void setFocusable(boolean focusable) {
+    thumbnail.setFocusable(focusable);
+  }
+
+  @Override
+  public void setClickable(boolean clickable) {
+    thumbnail.setClickable(clickable);
+  }
+
+  @Override
+  public void setOnLongClickListener(@Nullable OnLongClickListener l) {
+    thumbnail.setOnLongClickListener(l);
+  }
+
+  public void showShade(boolean show) {
+    shade.setVisibility(show ? VISIBLE : GONE);
+    forceLayout();
+  }
+
+  public void setOutlineCorners(int topLeft, int topRight, int bottomRight, int bottomLeft) {
+    radii[0] = radii[1] = topLeft;
+    radii[2] = radii[3] = topRight;
+    radii[4] = radii[5] = bottomRight;
+    radii[6] = radii[7] = bottomLeft;
+  }
+
+  public ConversationItemFooter getFooter() {
+    return footer;
+  }
+
+  @UiThread
+  public void setImageResource(@NonNull GlideRequests glideRequests, @NonNull Slide slide,
+                               boolean showControls, boolean isPreview)
+  {
+    thumbnail.setImageResource(glideRequests, slide, showControls, isPreview);
+  }
+
+  @UiThread
+  public void setImageResource(@NonNull GlideRequests glideRequests, @NonNull Slide slide,
+                               boolean showControls, boolean isPreview, int naturalWidth,
+                               int naturalHeight)
+  {
+    thumbnail.setImageResource(glideRequests, slide, showControls, isPreview, naturalWidth, naturalHeight);
+  }
+
+  public void setImageResource(@NonNull GlideRequests glideRequests, @NonNull Uri uri) {
+    thumbnail.setImageResource(glideRequests, uri);
+  }
+
+  public void setThumbnailClickListener(SlideClickListener listener) {
+    thumbnail.setThumbnailClickListener(listener);
+  }
+
+  public void setDownloadClickListener(SlideClickListener listener) {
+    thumbnail.setDownloadClickListener(listener);
+  }
+
+  public void clear(GlideRequests glideRequests) {
+    thumbnail.clear(glideRequests);
+  }
+
+  public void showProgressSpinner() {
+    thumbnail.showProgressSpinner();
+  }
+}
diff --git a/src/org/thoughtcrime/securesms/components/CornerMaskingView.java b/src/org/thoughtcrime/securesms/components/CornerMaskingView.java
new file mode 100644
index 00000000000..1e0a8f0a94c
--- /dev/null
+++ b/src/org/thoughtcrime/securesms/components/CornerMaskingView.java
@@ -0,0 +1,121 @@
+package org.thoughtcrime.securesms.components;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.RectF;
+import android.os.Build;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.util.AttributeSet;
+import android.widget.FrameLayout;
+
+import org.thoughtcrime.securesms.R;
+
+public class CornerMaskingView extends FrameLayout {
+
+  private final float[] radii      = new float[8];
+  private final Paint   dstPaint   = new Paint();
+  private final Paint   clearPaint = new Paint();
+  private final Path    outline    = new Path();
+  private final Path    corners    = new Path();
+  private final RectF   bounds     = new RectF();
+
+  public CornerMaskingView(@NonNull Context context) {
+    super(context);
+    init(null);
+  }
+
+  public CornerMaskingView(@NonNull Context context, @Nullable AttributeSet attrs) {
+    super(context, attrs);
+    init(attrs);
+  }
+
+  public CornerMaskingView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+    super(context, attrs, defStyleAttr);
+    init(attrs);
+  }
+
+  private void init(@Nullable AttributeSet attrs) {
+    setLayerType(LAYER_TYPE_HARDWARE, null);
+
+    dstPaint.setColor(Color.BLACK);
+    dstPaint.setStyle(Paint.Style.FILL);
+    dstPaint.setAntiAlias(true);
+    dstPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));
+
+    clearPaint.setColor(Color.BLACK);
+    clearPaint.setStyle(Paint.Style.FILL);
+    clearPaint.setAntiAlias(true);
+    clearPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
+
+    if (attrs != null) {
+      TypedArray typedArray = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.CornerMaskingView, 0, 0);
+      setRadius(typedArray.getDimensionPixelOffset(R.styleable.CornerMaskingView_cmv_radius, 0));
+      typedArray.recycle();
+    }
+  }
+
+  @Override
+  protected void dispatchDraw(Canvas canvas) {
+    super.dispatchDraw(canvas);
+
+    bounds.left   = 0;
+    bounds.top    = 0;
+    bounds.right  = canvas.getWidth();
+    bounds.bottom = canvas.getHeight();
+
+    corners.reset();
+    corners.addRoundRect(bounds, radii, Path.Direction.CW);
+
+    // Note: There's a bug in the P beta where most PorterDuff modes aren't working. But CLEAR does.
+    //       So we find and inverse path and use Mode.CLEAR for versions that support Path.op().
+    //       See issue https://issuetracker.google.com/issues/111394085.
+    if (Build.VERSION.SDK_INT >= 19) {
+      outline.reset();
+      outline.addRect(bounds, Path.Direction.CW);
+      outline.op(corners, Path.Op.DIFFERENCE);
+      canvas.drawPath(outline, clearPaint);
+    } else {
+      corners.addRoundRect(bounds, radii, Path.Direction.CW);
+      canvas.drawPath(corners, dstPaint);
+    }
+  }
+
+  public void setRadius(int radius) {
+    setRadii(radius, radius, radius, radius);
+  }
+
+  public void setRadii(int topLeft, int topRight, int bottomRight, int bottomLeft) {
+    radii[0] = radii[1] = topLeft;
+    radii[2] = radii[3] = topRight;
+    radii[4] = radii[5] = bottomRight;
+    radii[6] = radii[7] = bottomLeft;
+    invalidate();
+  }
+
+  public void setTopLeftRadius(int radius) {
+    radii[0] = radii[1] = radius;
+    invalidate();
+  }
+
+  public void setTopRightRadius(int radius) {
+    radii[2] = radii[3] = radius;
+    invalidate();
+  }
+
+  public void setBottomRightRadius(int radius) {
+    radii[4] = radii[5] = radius;
+    invalidate();
+  }
+
+  public void setBottomLeftRadius(int radius) {
+    radii[6] = radii[7] = radius;
+    invalidate();
+  }
+}
diff --git a/src/org/thoughtcrime/securesms/components/DeliveryStatusView.java b/src/org/thoughtcrime/securesms/components/DeliveryStatusView.java
index ffb53c6d788..a5b6ce70b5f 100644
--- a/src/org/thoughtcrime/securesms/components/DeliveryStatusView.java
+++ b/src/org/thoughtcrime/securesms/components/DeliveryStatusView.java
@@ -7,6 +7,9 @@
 import android.util.AttributeSet;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.view.animation.LinearInterpolator;
+import android.view.animation.RotateAnimation;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.TextView;
@@ -19,7 +22,16 @@ public class DeliveryStatusView extends FrameLayout {
 
   private static final String TAG = DeliveryStatusView.class.getSimpleName();
 
-  private final ViewGroup pendingIndicatorStub;
+  private static final RotateAnimation ROTATION_ANIMATION = new RotateAnimation(0, 360f,
+                                                                                Animation.RELATIVE_TO_SELF, 0.5f,
+                                                                                Animation.RELATIVE_TO_SELF, 0.5f);
+  static {
+    ROTATION_ANIMATION.setInterpolator(new LinearInterpolator());
+    ROTATION_ANIMATION.setDuration(1500);
+    ROTATION_ANIMATION.setRepeatCount(Animation.INFINITE);
+  }
+
+  private final ImageView pendingIndicator;
   private final ImageView sentIndicator;
   private final ImageView deliveredIndicator;
   private final ImageView readIndicator;
@@ -37,31 +49,16 @@ public DeliveryStatusView(final Context context, AttributeSet attrs, int defStyl
 
     inflate(context, R.layout.delivery_status_view, this);
 
-    this.deliveredIndicator   = (ImageView) findViewById(R.id.delivered_indicator);
-    this.sentIndicator        = (ImageView) findViewById(R.id.sent_indicator);
-    this.pendingIndicatorStub = (ViewGroup) findViewById(R.id.pending_indicator_stub);
-    this.readIndicator        = (ImageView) findViewById(R.id.read_indicator);
-
-    int iconColor = Color.GRAY;
+    this.deliveredIndicator   = findViewById(R.id.delivered_indicator);
+    this.sentIndicator        = findViewById(R.id.sent_indicator);
+    this.pendingIndicator     = findViewById(R.id.pending_indicator);
+    this.readIndicator        = findViewById(R.id.read_indicator);
 
     if (attrs != null) {
       TypedArray typedArray = context.getTheme().obtainStyledAttributes(attrs, R.styleable.DeliveryStatusView, 0, 0);
-      iconColor = typedArray.getColor(R.styleable.DeliveryStatusView_iconColor, iconColor);
+      setTint(typedArray.getColor(R.styleable.DeliveryStatusView_iconColor, getResources().getColor(R.color.core_white)));
       typedArray.recycle();
     }
-
-    deliveredIndicator.setColorFilter(iconColor, android.graphics.PorterDuff.Mode.MULTIPLY);
-    sentIndicator.setColorFilter(iconColor, android.graphics.PorterDuff.Mode.MULTIPLY);
-
-    if (Build.VERSION.SDK_INT >= 11) {
-      inflate(context, R.layout.conversation_item_pending_v11, pendingIndicatorStub);
-      DotsTextView pendingIndicator = (DotsTextView) findViewById(R.id.pending_indicator);
-      pendingIndicator.setDotsColor(iconColor);
-    } else {
-      inflate(context, R.layout.conversation_item_pending, pendingIndicatorStub);
-      TextView pendingIndicator = (TextView) findViewById(R.id.pending_indicator);
-      pendingIndicator.setTextColor(iconColor);
-    }
   }
 
   public void setNone() {
@@ -70,7 +67,8 @@ public void setNone() {
 
   public void setPending() {
     this.setVisibility(View.VISIBLE);
-    pendingIndicatorStub.setVisibility(View.VISIBLE);
+    pendingIndicator.setVisibility(View.VISIBLE);
+    pendingIndicator.startAnimation(ROTATION_ANIMATION);
     sentIndicator.setVisibility(View.GONE);
     deliveredIndicator.setVisibility(View.GONE);
     readIndicator.setVisibility(View.GONE);
@@ -78,7 +76,8 @@ public void setPending() {
 
   public void setSent() {
     this.setVisibility(View.VISIBLE);
-    pendingIndicatorStub.setVisibility(View.GONE);
+    pendingIndicator.setVisibility(View.GONE);
+    pendingIndicator.clearAnimation();
     sentIndicator.setVisibility(View.VISIBLE);
     deliveredIndicator.setVisibility(View.GONE);
     readIndicator.setVisibility(View.GONE);
@@ -86,7 +85,8 @@ public void setSent() {
 
   public void setDelivered() {
     this.setVisibility(View.VISIBLE);
-    pendingIndicatorStub.setVisibility(View.GONE);
+    pendingIndicator.setVisibility(View.GONE);
+    pendingIndicator.clearAnimation();
     sentIndicator.setVisibility(View.GONE);
     deliveredIndicator.setVisibility(View.VISIBLE);
     readIndicator.setVisibility(View.GONE);
@@ -94,9 +94,17 @@ public void setDelivered() {
 
   public void setRead() {
     this.setVisibility(View.VISIBLE);
-    pendingIndicatorStub.setVisibility(View.GONE);
+    pendingIndicator.setVisibility(View.GONE);
+    pendingIndicator.clearAnimation();
     sentIndicator.setVisibility(View.GONE);
     deliveredIndicator.setVisibility(View.GONE);
     readIndicator.setVisibility(View.VISIBLE);
   }
+
+  public void setTint(int color) {
+    pendingIndicator.setColorFilter(color);
+    deliveredIndicator.setColorFilter(color);
+    sentIndicator.setColorFilter(color);
+    readIndicator.setColorFilter(color);
+  }
 }
diff --git a/src/org/thoughtcrime/securesms/components/DocumentView.java b/src/org/thoughtcrime/securesms/components/DocumentView.java
index b79ac376a80..c83f74225c0 100644
--- a/src/org/thoughtcrime/securesms/components/DocumentView.java
+++ b/src/org/thoughtcrime/securesms/components/DocumentView.java
@@ -11,6 +11,7 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.util.AttributeSet;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.TextView;
@@ -34,8 +35,8 @@ public class DocumentView extends FrameLayout {
   private final @NonNull AnimatingToggle controlToggle;
   private final @NonNull ImageView       downloadButton;
   private final @NonNull ProgressWheel   downloadProgress;
-  private final @NonNull View            documentBackground;
   private final @NonNull View            container;
+  private final @NonNull ViewGroup       iconContainer;
   private final @NonNull TextView        fileName;
   private final @NonNull TextView        fileSize;
   private final @NonNull TextView        document;
@@ -56,24 +57,23 @@ public DocumentView(@NonNull Context context, @Nullable AttributeSet attrs, @Att
     super(context, attrs, defStyleAttr);
     inflate(context, R.layout.document_view, this);
 
-    this.container          =                   findViewById(R.id.document_container);
-    this.controlToggle      = (AnimatingToggle) findViewById(R.id.control_toggle);
-    this.downloadButton     = (ImageView)       findViewById(R.id.download);
-    this.downloadProgress   = (ProgressWheel)   findViewById(R.id.download_progress);
-    this.fileName           = (TextView)        findViewById(R.id.file_name);
-    this.fileSize           = (TextView)        findViewById(R.id.file_size);
-    this.documentBackground =                   findViewById(R.id.document_background);
-    this.document           = (TextView)        findViewById(R.id.document);
-
-    this.document.getBackground().mutate();
-    this.documentBackground.getBackground().mutate();
+    this.container        = findViewById(R.id.document_container);
+    this.iconContainer    = findViewById(R.id.icon_container);
+    this.controlToggle    = findViewById(R.id.control_toggle);
+    this.downloadButton   = findViewById(R.id.download);
+    this.downloadProgress = findViewById(R.id.download_progress);
+    this.fileName         = findViewById(R.id.file_name);
+    this.fileSize         = findViewById(R.id.file_size);
+    this.document         = findViewById(R.id.document);
 
     if (attrs != null) {
-      TypedArray typedArray = context.getTheme().obtainStyledAttributes(attrs, R.styleable.DocumentView, 0, 0);
-      setTint(typedArray.getColor(R.styleable.DocumentView_documentForegroundTintColor, Color.WHITE),
-              typedArray.getColor(R.styleable.DocumentView_documentBackgroundTintColor, Color.WHITE));
-      container.setBackgroundColor(typedArray.getColor(R.styleable.DocumentView_documentWidgetBackground, Color.TRANSPARENT));
+      TypedArray typedArray = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.DocumentView, 0, 0);
+      int        titleColor   = typedArray.getInt(R.styleable.DocumentView_doc_titleColor, Color.BLACK);
+      int        captionColor = typedArray.getInt(R.styleable.DocumentView_doc_captionColor, Color.BLACK);
       typedArray.recycle();
+
+      fileName.setTextColor(titleColor);
+      fileSize.setTextColor(captionColor);
     }
   }
 
@@ -96,7 +96,7 @@ public void setDocument(final @NonNull DocumentSlide documentSlide,
       controlToggle.displayQuick(downloadProgress);
       downloadProgress.spin();
     } else {
-      controlToggle.displayQuick(documentBackground);
+      controlToggle.displayQuick(iconContainer);
       if (downloadProgress.isSpinning()) downloadProgress.stopSpinning();
     }
 
@@ -108,18 +108,6 @@ public void setDocument(final @NonNull DocumentSlide documentSlide,
     this.setOnClickListener(new OpenClickedListener(documentSlide));
   }
 
-  public void setTint(int foregroundTint, int backgroundTint) {
-    DrawableCompat.setTint(this.document.getBackground(), backgroundTint);
-    DrawableCompat.setTint(this.documentBackground.getBackground(), foregroundTint);
-    this.document.setTextColor(foregroundTint);
-
-    this.fileName.setTextColor(foregroundTint);
-    this.fileSize.setTextColor(foregroundTint);
-
-    this.downloadButton.setColorFilter(foregroundTint);
-    this.downloadProgress.setBarColor(foregroundTint);
-  }
-
   @Override
   public void setFocusable(boolean focusable) {
     super.setFocusable(focusable);
diff --git a/src/org/thoughtcrime/securesms/components/ExpirationTimerView.java b/src/org/thoughtcrime/securesms/components/ExpirationTimerView.java
index 4bd0d6ca998..33c7a858603 100644
--- a/src/org/thoughtcrime/securesms/components/ExpirationTimerView.java
+++ b/src/org/thoughtcrime/securesms/components/ExpirationTimerView.java
@@ -5,12 +5,13 @@
 import android.support.annotation.Nullable;
 import android.util.AttributeSet;
 
+import org.thoughtcrime.securesms.R;
 import org.thoughtcrime.securesms.util.Util;
 
 import java.lang.ref.WeakReference;
 import java.util.concurrent.TimeUnit;
 
-public class ExpirationTimerView extends HourglassView {
+public class ExpirationTimerView extends android.support.v7.widget.AppCompatImageView {
 
   private long startedAt;
   private long expiresIn;
@@ -18,6 +19,20 @@ public class ExpirationTimerView extends HourglassView {
   private boolean visible = false;
   private boolean stopped = true;
 
+  private final int[] frames = new int[]{ R.drawable.timer00,
+                                          R.drawable.timer05,
+                                          R.drawable.timer10,
+                                          R.drawable.timer15,
+                                          R.drawable.timer20,
+                                          R.drawable.timer25,
+                                          R.drawable.timer30,
+                                          R.drawable.timer35,
+                                          R.drawable.timer40,
+                                          R.drawable.timer45,
+                                          R.drawable.timer50,
+                                          R.drawable.timer55,
+                                          R.drawable.timer60 };
+
   public ExpirationTimerView(Context context) {
     super(context);
   }
@@ -33,8 +48,13 @@ public ExpirationTimerView(Context context, @Nullable AttributeSet attrs, int de
   public void setExpirationTime(long startedAt, long expiresIn) {
     this.startedAt = startedAt;
     this.expiresIn = expiresIn;
+    setPercentComplete(calculateProgress(this.startedAt, this.expiresIn));
+  }
 
-    setPercentage(calculateProgress(this.startedAt, this.expiresIn));
+  public void setPercentComplete(float percentage) {
+    float percentFull = 1 - percentage;
+    int frame = (int) Math.ceil(percentFull * (frames.length - 1));
+    setImageResource(frames[frame]);
   }
 
   public void startAnimation() {
@@ -57,7 +77,7 @@ private float calculateProgress(long startedAt, long expiresIn) {
     long  progressed      = System.currentTimeMillis() - startedAt;
     float percentComplete = (float)progressed / (float)expiresIn;
 
-    return percentComplete * 100;
+    return Math.min(percentComplete, 1);
   }
 
   private long calculateAnimationDelay(long startedAt, long expiresIn) {
diff --git a/src/org/thoughtcrime/securesms/components/HourglassView.java b/src/org/thoughtcrime/securesms/components/HourglassView.java
index 7ca4d950e9b..e10d61384bf 100644
--- a/src/org/thoughtcrime/securesms/components/HourglassView.java
+++ b/src/org/thoughtcrime/securesms/components/HourglassView.java
@@ -24,7 +24,6 @@ public class HourglassView extends View {
 
   private Bitmap empty;
   private Bitmap full;
-  private int    tint;
 
   private float percentage;
   private int   offset;
@@ -40,13 +39,15 @@ public HourglassView(Context context, AttributeSet attrs) {
   public HourglassView(Context context, AttributeSet attrs, int defStyleAttr) {
     super(context, attrs, defStyleAttr);
 
+    int tint = 0;
+
     if (attrs != null) {
       TypedArray typedArray = context.getTheme().obtainStyledAttributes(attrs, R.styleable.HourglassView, 0, 0);
       this.empty = BitmapFactory.decodeResource(getResources(), typedArray.getResourceId(R.styleable.HourglassView_empty, 0));
       this.full  = BitmapFactory.decodeResource(getResources(), typedArray.getResourceId(R.styleable.HourglassView_full, 0));
-      this.tint  = typedArray.getColor(R.styleable.HourglassView_tint, 0);
       this.percentage = typedArray.getInt(R.styleable.HourglassView_percentage, 50);
       this.offset = typedArray.getInt(R.styleable.HourglassView_offset, 0);
+      tint = typedArray.getColor(R.styleable.HourglassView_tint, 0);
       typedArray.recycle();
     }
 
@@ -80,6 +81,8 @@ public void setPercentage(float percentage) {
     invalidate();
   }
 
-
-
+  public void setTint(int tint) {
+    this.backgroundPaint.setColorFilter(new PorterDuffColorFilter(tint, PorterDuff.Mode.MULTIPLY));
+    this.foregroundPaint.setColorFilter(new PorterDuffColorFilter(tint, PorterDuff.Mode.MULTIPLY));
+  }
 }
diff --git a/src/org/thoughtcrime/securesms/components/MicrophoneRecorderView.java b/src/org/thoughtcrime/securesms/components/MicrophoneRecorderView.java
index 1ae7691e8f0..4b1138c4733 100644
--- a/src/org/thoughtcrime/securesms/components/MicrophoneRecorderView.java
+++ b/src/org/thoughtcrime/securesms/components/MicrophoneRecorderView.java
@@ -125,8 +125,8 @@ public void display(float x) {
           ViewCompat.LAYOUT_DIRECTION_LTR ? -.25f : .25f;
 
       AnimationSet animation = new AnimationSet(true);
-      animation.addAnimation(new TranslateAnimation(Animation.RELATIVE_TO_SELF, translation,
-                                                    Animation.RELATIVE_TO_SELF, translation,
+      animation.addAnimation(new TranslateAnimation(Animation.RELATIVE_TO_SELF, 0,
+                                                    Animation.RELATIVE_TO_SELF, 0,
                                                     Animation.RELATIVE_TO_SELF, -.25f,
                                                     Animation.RELATIVE_TO_SELF, -.25f));
 
@@ -145,11 +145,10 @@ public void display(float x) {
     public void moveTo(float x) {
       this.lastPositionX = x;
 
-      float offset          = getOffset(x);
-      int   widthAdjustment = getWidthAdjustment();
+      float offset = getOffset(x);
 
-      Animation translateAnimation = new TranslateAnimation(Animation.ABSOLUTE, widthAdjustment + offset,
-                                                            Animation.ABSOLUTE, widthAdjustment + offset,
+      Animation translateAnimation = new TranslateAnimation(Animation.ABSOLUTE, offset,
+                                                            Animation.ABSOLUTE, offset,
                                                             Animation.RELATIVE_TO_SELF, -.25f,
                                                             Animation.RELATIVE_TO_SELF, -.25f);
 
@@ -163,16 +162,15 @@ public void moveTo(float x) {
     public void hide(float x) {
       this.lastPositionX = x;
 
-      float offset          = getOffset(x);
-      int   widthAdjustment = getWidthAdjustment();
+      float offset = getOffset(x);
 
       AnimationSet animation = new AnimationSet(false);
       Animation scaleAnimation = new ScaleAnimation(1, 0.5f, 1, 0.5f,
                                                     Animation.RELATIVE_TO_SELF, 0.5f,
                                                     Animation.RELATIVE_TO_SELF, 0.5f);
 
-      Animation translateAnimation = new TranslateAnimation(Animation.ABSOLUTE, offset + widthAdjustment,
-                                                            Animation.ABSOLUTE, widthAdjustment,
+      Animation translateAnimation = new TranslateAnimation(Animation.ABSOLUTE, offset,
+                                                            Animation.ABSOLUTE, 0,
                                                             Animation.RELATIVE_TO_SELF, -.25f,
                                                             Animation.RELATIVE_TO_SELF, -.25f);
 
diff --git a/src/org/thoughtcrime/securesms/components/QuoteView.java b/src/org/thoughtcrime/securesms/components/QuoteView.java
index 3f675060c77..c2dbcbc9952 100644
--- a/src/org/thoughtcrime/securesms/components/QuoteView.java
+++ b/src/org/thoughtcrime/securesms/components/QuoteView.java
@@ -3,12 +3,7 @@
 
 import android.content.Context;
 import android.content.res.TypedArray;
-import android.graphics.Canvas;
-import android.graphics.Path;
-import android.graphics.PorterDuff;
-import android.graphics.RectF;
-import android.graphics.Typeface;
-import android.graphics.drawable.GradientDrawable;
+import android.graphics.Color;
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -26,14 +21,10 @@
 
 import org.thoughtcrime.securesms.R;
 import org.thoughtcrime.securesms.attachments.Attachment;
-import org.thoughtcrime.securesms.mms.AudioSlide;
 import org.thoughtcrime.securesms.mms.DecryptableStreamUriLoader.DecryptableUri;
-import org.thoughtcrime.securesms.mms.DocumentSlide;
 import org.thoughtcrime.securesms.mms.GlideRequests;
-import org.thoughtcrime.securesms.mms.ImageSlide;
 import org.thoughtcrime.securesms.mms.Slide;
 import org.thoughtcrime.securesms.mms.SlideDeck;
-import org.thoughtcrime.securesms.mms.VideoSlide;
 import org.thoughtcrime.securesms.recipients.Recipient;
 import org.thoughtcrime.securesms.recipients.RecipientModifiedListener;
 import org.thoughtcrime.securesms.util.ThemeUtil;
@@ -49,16 +40,16 @@ public class QuoteView extends LinearLayout implements RecipientModifiedListener
   private static final int MESSAGE_TYPE_OUTGOING = 1;
   private static final int MESSAGE_TYPE_INCOMING = 2;
 
-  private View      rootView;
-  private TextView  authorView;
-  private TextView  bodyView;
-  private ImageView quoteBarView;
-  private ImageView attachmentView;
-  private ImageView attachmentVideoOverlayView;
-  private ViewGroup attachmentIconContainerView;
-  private ImageView attachmentIconView;
-  private ImageView attachmentIconBackgroundView;
-  private ImageView dismissView;
+  private CornerMaskingView rootView;
+  private View              backgroundView;
+  private TextView          authorView;
+  private TextView          bodyView;
+  private ImageView         quoteBarView;
+  private ImageView         thumbnailView;
+  private View              attachmentVideoOverlayView;
+  private ViewGroup         attachmentContainerView;
+  private TextView          attachmentNameView;
+  private ImageView         dismissView;
 
   private long      id;
   private Recipient author;
@@ -66,10 +57,9 @@ public class QuoteView extends LinearLayout implements RecipientModifiedListener
   private TextView  mediaDescriptionText;
   private SlideDeck attachments;
   private int       messageType;
-  private int       roundedCornerRadiusPx;
+  private int       largeCornerRadius;
+  private int       smallCornerRadius;
 
-  private final Path  clipPath = new Path();
-  private final RectF drawRect = new RectF();
 
   public QuoteView(Context context) {
     super(context);
@@ -96,24 +86,40 @@ private void initialize(@Nullable AttributeSet attrs) {
     inflate(getContext(), R.layout.quote_view, this);
 
     this.rootView                     = findViewById(R.id.quote_root);
+    this.backgroundView               = findViewById(R.id.quote_background);
     this.authorView                   = findViewById(R.id.quote_author);
     this.bodyView                     = findViewById(R.id.quote_text);
     this.quoteBarView                 = findViewById(R.id.quote_bar);
-    this.attachmentView               = findViewById(R.id.quote_attachment);
+    this.thumbnailView                = findViewById(R.id.quote_thumbnail);
     this.attachmentVideoOverlayView   = findViewById(R.id.quote_video_overlay);
-    this.attachmentIconContainerView  = findViewById(R.id.quote_attachment_icon_container);
-    this.attachmentIconView           = findViewById(R.id.quote_attachment_icon);
-    this.attachmentIconBackgroundView = findViewById(R.id.quote_attachment_icon_background);
+    this.attachmentContainerView      = findViewById(R.id.quote_attachment_container);
+    this.attachmentNameView           = findViewById(R.id.quote_attachment_name);
     this.dismissView                  = findViewById(R.id.quote_dismiss);
-    this.mediaDescriptionText         = findViewById(R.id.media_name);
-    this.roundedCornerRadiusPx        = getResources().getDimensionPixelSize(R.dimen.quote_corner_radius);
+    this.mediaDescriptionText         = findViewById(R.id.media_type);
+    this.largeCornerRadius            = getResources().getDimensionPixelSize(R.dimen.quote_corner_radius_large);
+    this.smallCornerRadius            = getResources().getDimensionPixelSize(R.dimen.quote_corner_radius_bottom);
+
+    rootView.setRadii(largeCornerRadius, largeCornerRadius, smallCornerRadius, smallCornerRadius);
 
     if (attrs != null) {
-      TypedArray typedArray  = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.QuoteView, 0, 0);
-                 messageType = typedArray.getInt(R.styleable.QuoteView_message_type, 0);
+      TypedArray typedArray     = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.QuoteView, 0, 0);
+      int        primaryColor   = typedArray.getColor(R.styleable.QuoteView_quote_colorPrimary, Color.BLACK);
+      int        secondaryColor = typedArray.getColor(R.styleable.QuoteView_quote_colorSecondary, Color.BLACK);
+      messageType = typedArray.getInt(R.styleable.QuoteView_message_type, 0);
       typedArray.recycle();
 
       dismissView.setVisibility(messageType == MESSAGE_TYPE_PREVIEW ? VISIBLE : GONE);
+
+      authorView.setTextColor(primaryColor);
+      bodyView.setTextColor(primaryColor);
+      attachmentNameView.setTextColor(primaryColor);
+      mediaDescriptionText.setTextColor(secondaryColor);
+
+      if (messageType == MESSAGE_TYPE_PREVIEW) {
+        int radius = getResources().getDimensionPixelOffset(R.dimen.quote_corner_radius_preview);
+        rootView.setTopLeftRadius(radius);
+        rootView.setTopRightRadius(radius);
+      }
     }
 
     dismissView.setOnClickListener(view -> setVisibility(GONE));
@@ -124,20 +130,6 @@ private void initialize(@Nullable AttributeSet attrs) {
     }
   }
 
-  @Override
-  protected void onDraw(Canvas canvas) {
-    super.onDraw(canvas);
-
-    drawRect.left = 0;
-    drawRect.top = 0;
-    drawRect.right = getWidth();
-    drawRect.bottom = getHeight();
-
-    clipPath.reset();
-    clipPath.addRoundRect(drawRect, roundedCornerRadiusPx, roundedCornerRadiusPx, Path.Direction.CW);
-    canvas.clipPath(clipPath);
-  }
-
   public void setQuote(GlideRequests glideRequests, long id, @NonNull Recipient author, @Nullable String body, @NonNull SlideDeck attachments) {
     if (this.author != null) this.author.removeListener(this);
 
@@ -149,7 +141,12 @@ public void setQuote(GlideRequests glideRequests, long id, @NonNull Recipient au
     author.addListener(this);
     setQuoteAuthor(author);
     setQuoteText(body, attachments);
-    setQuoteAttachment(glideRequests, attachments, author);
+    setQuoteAttachment(glideRequests, attachments);
+  }
+
+  public void setTopCornerSizes(boolean topLeftLarge, boolean topRightLarge) {
+    rootView.setTopLeftRadius(topLeftLarge ? largeCornerRadius : smallCornerRadius);
+    rootView.setTopRightRadius(topRightLarge ? largeCornerRadius : smallCornerRadius);
   }
 
   public void dismiss() {
@@ -177,14 +174,10 @@ private void setQuoteAuthor(@NonNull Recipient author) {
 
     authorView.setText(isOwnNumber ? getContext().getString(R.string.QuoteView_you)
                                    : author.toShortString());
-    authorView.setTextColor(author.getColor().toQuoteTitleColor(getContext()));
+
     // We use the raw color resource because Android 4.x was struggling with tints here
     quoteBarView.setImageResource(author.getColor().toQuoteBarColorResource(getContext(), outgoing));
-
-    GradientDrawable background = (GradientDrawable) rootView.getBackground();
-    background.setColor(author.getColor().toQuoteBackgroundColor(getContext(), outgoing));
-    background.setStroke(getResources().getDimensionPixelSize(R.dimen.quote_outline_width),
-                         author.getColor().toQuoteOutlineColor(getContext(), outgoing));
+    backgroundView.setBackgroundColor(author.getColor().toQuoteBackgroundColor(getContext(), outgoing));
   }
 
   private void setQuoteText(@Nullable String body, @NonNull SlideDeck attachments) {
@@ -197,7 +190,6 @@ private void setQuoteText(@Nullable String body, @NonNull SlideDeck attachments)
 
     bodyView.setVisibility(GONE);
     mediaDescriptionText.setVisibility(VISIBLE);
-    mediaDescriptionText.setTypeface(null, Typeface.ITALIC);
 
     List<Slide> audioSlides    = Stream.of(attachments.getSlides()).filter(Slide::hasAudio).limit(1).toList();
     List<Slide> documentSlides = Stream.of(attachments.getSlides()).filter(Slide::hasDocument).limit(1).toList();
@@ -208,13 +200,7 @@ private void setQuoteText(@Nullable String body, @NonNull SlideDeck attachments)
     if (!audioSlides.isEmpty()) {
       mediaDescriptionText.setText(R.string.QuoteView_audio);
     } else if (!documentSlides.isEmpty()) {
-      String filename = documentSlides.get(0).getFileName().orNull();
-      if (!TextUtils.isEmpty(filename)) {
-        mediaDescriptionText.setTypeface(null, Typeface.NORMAL);
-        mediaDescriptionText.setText(filename);
-      } else {
-        mediaDescriptionText.setText(R.string.QuoteView_document);
-      }
+      mediaDescriptionText.setVisibility(GONE);
     } else if (!videoSlides.isEmpty()) {
       mediaDescriptionText.setText(R.string.QuoteView_video);
     } else if (!imageSlides.isEmpty()) {
@@ -222,19 +208,15 @@ private void setQuoteText(@Nullable String body, @NonNull SlideDeck attachments)
     }
   }
 
-  private void setQuoteAttachment(@NonNull GlideRequests glideRequests,
-                                  @NonNull SlideDeck slideDeck,
-                                  @NonNull Recipient author)
-  {
+  private void setQuoteAttachment(@NonNull GlideRequests glideRequests, @NonNull SlideDeck slideDeck) {
     List<Slide> imageVideoSlides = Stream.of(slideDeck.getSlides()).filter(s -> s.hasImage() || s.hasVideo()).limit(1).toList();
-    List<Slide> audioSlides = Stream.of(attachments.getSlides()).filter(Slide::hasAudio).limit(1).toList();
-    List<Slide> documentSlides = Stream.of(attachments.getSlides()).filter(Slide::hasDocument).limit(1).toList();
+    List<Slide> documentSlides   = Stream.of(attachments.getSlides()).filter(Slide::hasDocument).limit(1).toList();
 
     attachmentVideoOverlayView.setVisibility(GONE);
 
     if (!imageVideoSlides.isEmpty() && imageVideoSlides.get(0).getThumbnailUri() != null) {
-      attachmentView.setVisibility(VISIBLE);
-      attachmentIconContainerView.setVisibility(GONE);
+      thumbnailView.setVisibility(VISIBLE);
+      attachmentContainerView.setVisibility(GONE);
       dismissView.setBackgroundResource(R.drawable.dismiss_background);
       if (imageVideoSlides.get(0).hasVideo()) {
         attachmentVideoOverlayView.setVisibility(VISIBLE);
@@ -242,26 +224,14 @@ private void setQuoteAttachment(@NonNull GlideRequests glideRequests,
       glideRequests.load(new DecryptableUri(imageVideoSlides.get(0).getThumbnailUri()))
                    .centerCrop()
                    .diskCacheStrategy(DiskCacheStrategy.RESOURCE)
-                   .into(attachmentView);
-    } else if (!audioSlides.isEmpty() || !documentSlides.isEmpty()){
-      boolean outgoing = messageType != MESSAGE_TYPE_INCOMING;
-
-      dismissView.setBackgroundResource(R.drawable.circle_alpha);
-      attachmentView.setVisibility(GONE);
-      attachmentIconContainerView.setVisibility(VISIBLE);
-
-      if (!audioSlides.isEmpty()) {
-        attachmentIconView.setImageResource(R.drawable.ic_mic_white_48dp);
-      } else {
-        attachmentIconView.setImageResource(R.drawable.ic_insert_drive_file_white_24dp);
-      }
-
-      attachmentIconView.setColorFilter(author.getColor().toQuoteIconForegroundColor(getContext(), outgoing), PorterDuff.Mode.SRC_IN);
-      attachmentIconBackgroundView.setColorFilter(author.getColor().toQuoteIconBackgroundColor(getContext(), outgoing), PorterDuff.Mode.SRC_IN);
-
+                   .into(thumbnailView);
+    } else if (!documentSlides.isEmpty()){
+      thumbnailView.setVisibility(GONE);
+      attachmentContainerView.setVisibility(VISIBLE);
+      attachmentNameView.setText(documentSlides.get(0).getFileName().or(""));
     } else {
-      attachmentView.setVisibility(GONE);
-      attachmentIconContainerView.setVisibility(GONE);
+      thumbnailView.setVisibility(GONE);
+      attachmentContainerView.setVisibility(GONE);
       dismissView.setBackgroundDrawable(null);
     }
 
diff --git a/src/org/thoughtcrime/securesms/components/RemovableEditableMediaView.java b/src/org/thoughtcrime/securesms/components/RemovableEditableMediaView.java
index edf3022360b..b31828ce048 100644
--- a/src/org/thoughtcrime/securesms/components/RemovableEditableMediaView.java
+++ b/src/org/thoughtcrime/securesms/components/RemovableEditableMediaView.java
@@ -56,7 +56,7 @@ public void display(@Nullable View view, boolean editable) {
     if (current != null) current.setVisibility(View.GONE);
 
     if (view != null) {
-      view.setPadding(0, removeSize / 2, removeSize / 2, 0);
+      view.setPadding(view.getPaddingLeft(), removeSize / 2, removeSize / 2, view.getPaddingRight());
       edit.setPadding(0, 0, removeSize / 2, 0);
 
       view.setVisibility(View.VISIBLE);
diff --git a/src/org/thoughtcrime/securesms/components/SharedContactView.java b/src/org/thoughtcrime/securesms/components/SharedContactView.java
index 0dee22680b9..30af4c725cf 100644
--- a/src/org/thoughtcrime/securesms/components/SharedContactView.java
+++ b/src/org/thoughtcrime/securesms/components/SharedContactView.java
@@ -1,6 +1,8 @@
 package org.thoughtcrime.securesms.components;
 
 import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Color;
 import android.net.Uri;
 import android.os.Build;
 import android.support.annotation.NonNull;
@@ -34,10 +36,11 @@
 
 public class SharedContactView extends LinearLayout implements RecipientModifiedListener {
 
-  private ImageView avatarView;
-  private TextView  nameView;
-  private TextView  numberView;
-  private TextView  actionButtonView;
+  private ImageView              avatarView;
+  private TextView               nameView;
+  private TextView               numberView;
+  private TextView               actionButtonView;
+  private ConversationItemFooter footer;
 
   private Contact       contact;
   private Locale        locale;
@@ -48,32 +51,44 @@ public class SharedContactView extends LinearLayout implements RecipientModified
 
   public SharedContactView(Context context) {
     super(context);
-    initialize();
+    initialize(null);
   }
 
   public SharedContactView(Context context, @Nullable AttributeSet attrs) {
     super(context, attrs);
-    initialize();
+    initialize(attrs);
   }
 
   public SharedContactView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
     super(context, attrs, defStyleAttr);
-    initialize();
+    initialize(attrs);
   }
 
   @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
   public SharedContactView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
     super(context, attrs, defStyleAttr, defStyleRes);
-    initialize();
+    initialize(attrs);
   }
 
-  private void initialize() {
+  private void initialize(@Nullable AttributeSet attrs) {
     inflate(getContext(), R.layout.shared_contact_view, this);
 
     avatarView       = findViewById(R.id.contact_avatar);
     nameView         = findViewById(R.id.contact_name);
     numberView       = findViewById(R.id.contact_number);
     actionButtonView = findViewById(R.id.contact_action_button);
+    footer           = findViewById(R.id.contact_footer);
+
+    if (attrs != null) {
+      TypedArray typedArray   = getContext().getTheme().obtainStyledAttributes(attrs, R.styleable.SharedContactView, 0, 0);
+      int        titleColor   = typedArray.getInt(R.styleable.SharedContactView_contact_titleColor, Color.BLACK);
+      int        captionColor = typedArray.getInt(R.styleable.SharedContactView_contact_captionColor, Color.BLACK);
+      typedArray.recycle();
+
+      nameView.setTextColor(titleColor);
+      numberView.setTextColor(captionColor);
+      footer.setColor(captionColor);
+    }
   }
 
   public void setContact(@NonNull Contact contact, @NonNull GlideRequests glideRequests, @NonNull Locale locale) {
@@ -97,6 +112,10 @@ public void setEventListener(@NonNull EventListener eventListener) {
     return avatarView;
   }
 
+  public ConversationItemFooter getFooter() {
+    return footer;
+  }
+
   @Override
   public void onModified(Recipient recipient) {
     Util.runOnMain(() -> presentActionButtons(Collections.singletonList(recipient)));
diff --git a/src/org/thoughtcrime/securesms/components/ThumbnailView.java b/src/org/thoughtcrime/securesms/components/ThumbnailView.java
index 26b95e209a4..6c8de12cb6e 100644
--- a/src/org/thoughtcrime/securesms/components/ThumbnailView.java
+++ b/src/org/thoughtcrime/securesms/components/ThumbnailView.java
@@ -2,13 +2,12 @@
 
 import android.content.Context;
 import android.content.res.TypedArray;
-import android.graphics.Color;
 import android.net.Uri;
+import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.UiThread;
 import android.util.AttributeSet;
 import android.util.Log;
-import android.util.Pair;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
@@ -39,7 +38,7 @@
 
 public class ThumbnailView extends FrameLayout {
 
-  private static final String TAG = ThumbnailView.class.getSimpleName();
+  private static final String TAG        = ThumbnailView.class.getSimpleName();
   private static final int    WIDTH      = 0;
   private static final int    HEIGHT     = 1;
   private static final int    MIN_WIDTH  = 0;
@@ -48,9 +47,7 @@ public class ThumbnailView extends FrameLayout {
   private static final int    MAX_HEIGHT = 3;
 
   private ImageView       image;
-  private ImageView       playOverlay;
-  private int             backgroundColorHint;
-  private int             radius;
+  private View            playOverlay;
   private OnClickListener parentClickListener;
 
   private final int[] dimens        = new int[2];
@@ -62,6 +59,8 @@ public class ThumbnailView extends FrameLayout {
   private SlideClickListener            downloadClickListener  = null;
   private Slide                         slide                  = null;
 
+  private int radius;
+
   public ThumbnailView(Context context) {
     this(context, null);
   }
@@ -75,20 +74,22 @@ public ThumbnailView(final Context context, AttributeSet attrs, int defStyle) {
 
     inflate(context, R.layout.thumbnail_view, this);
 
-    this.radius      = getResources().getDimensionPixelSize(R.dimen.message_bubble_corner_radius);
     this.image       = findViewById(R.id.thumbnail_image);
     this.playOverlay = findViewById(R.id.play_overlay);
     super.setOnClickListener(new ThumbnailClickDispatcher());
 
     if (attrs != null) {
       TypedArray typedArray = context.getTheme().obtainStyledAttributes(attrs, R.styleable.ThumbnailView, 0, 0);
-      backgroundColorHint   = typedArray.getColor(R.styleable.ThumbnailView_backgroundColorHint, Color.BLACK);
-      bounds[MIN_WIDTH]     = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_minWidth, 0);
-      bounds[MAX_WIDTH]     = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_maxWidth, 0);
-      bounds[MIN_HEIGHT]    = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_minHeight, 0);
-      bounds[MAX_HEIGHT]    = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_maxHeight, 0);
+      bounds[MIN_WIDTH]  = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_minWidth, 0);
+      bounds[MAX_WIDTH]  = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_maxWidth, 0);
+      bounds[MIN_HEIGHT] = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_minHeight, 0);
+      bounds[MAX_HEIGHT] = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_maxHeight, 0);
+      radius             = typedArray.getDimensionPixelSize(R.styleable.ThumbnailView_thumbnail_radius, getResources().getDimensionPixelSize(R.dimen.message_corner_collapse_radius));
       typedArray.recycle();
+    } else {
+      radius = getResources().getDimensionPixelSize(R.dimen.message_corner_collapse_radius);
     }
+
   }
 
   @Override
@@ -210,8 +211,13 @@ private TransferControlView getTransferControls() {
     return transferControls.get();
   }
 
-  public void setBackgroundColorHint(int color) {
-    this.backgroundColorHint = color;
+  public void setBounds(int minWidth, int maxWidth, int minHeight, int maxHeight) {
+    bounds[MIN_WIDTH]  = minWidth;
+    bounds[MAX_WIDTH]  = maxWidth;
+    bounds[MIN_HEIGHT] = minHeight;
+    bounds[MAX_HEIGHT] = maxHeight;
+
+    forceLayout();
   }
 
   @UiThread
@@ -273,10 +279,9 @@ public void setImageResource(@NonNull GlideRequests glideRequests, @NonNull Slid
   public void setImageResource(@NonNull GlideRequests glideRequests, @NonNull Uri uri) {
     if (transferControls.isPresent()) getTransferControls().setVisibility(View.GONE);
     glideRequests.load(new DecryptableUri(uri))
-                 .diskCacheStrategy(DiskCacheStrategy.RESOURCE)
-                 .transform(new RoundedCorners(radius))
+                 .diskCacheStrategy(DiskCacheStrategy.NONE)
+                 .transforms(new CenterCrop(), new RoundedCorners(radius))
                  .transition(withCrossFade())
-                 .centerCrop()
                  .into(image);
   }
 
diff --git a/src/org/thoughtcrime/securesms/database/FastCursorRecyclerViewAdapter.java b/src/org/thoughtcrime/securesms/database/FastCursorRecyclerViewAdapter.java
index 973ec8f8db6..902b66a0e12 100644
--- a/src/org/thoughtcrime/securesms/database/FastCursorRecyclerViewAdapter.java
+++ b/src/org/thoughtcrime/securesms/database/FastCursorRecyclerViewAdapter.java
@@ -55,7 +55,7 @@ protected void cleanFastRecords() {
   }
 
   protected abstract T getRecordFromCursor(@NonNull Cursor cursor);
-  protected abstract void onBindItemViewHolder(VH viewHolder, @NonNull T record);
+  protected abstract void onBindItemViewHolder(VH viewHolder, @NonNull T record, int position);
   protected abstract long getItemId(@NonNull T record);
   protected abstract int getItemViewType(@NonNull T record);
   protected abstract boolean isRecordForId(@NonNull T record, long id);
@@ -69,12 +69,13 @@ public int getItemViewType(@NonNull Cursor cursor) {
   @Override
   public void onBindItemViewHolder(VH viewHolder, @NonNull Cursor cursor) {
     T record = getRecordFromCursor(cursor);
-    onBindItemViewHolder(viewHolder, record);
+    onBindItemViewHolder(viewHolder, record, cursor.getPosition());
   }
 
   @Override
   public void onBindFastAccessItemViewHolder(VH viewHolder, int position) {
-    onBindItemViewHolder(viewHolder, fastRecords.get(getCalculatedPosition(position)));
+    int calculatedPosition = getCalculatedPosition(position);
+    onBindItemViewHolder(viewHolder, fastRecords.get(calculatedPosition), calculatedPosition);
   }
 
   @Override
diff --git a/src/org/thoughtcrime/securesms/database/model/MessageRecord.java b/src/org/thoughtcrime/securesms/database/model/MessageRecord.java
index 3992c5c7b8f..989f6f00727 100644
--- a/src/org/thoughtcrime/securesms/database/model/MessageRecord.java
+++ b/src/org/thoughtcrime/securesms/database/model/MessageRecord.java
@@ -89,33 +89,33 @@ public boolean isLegacyMessage() {
   @Override
   public SpannableString getDisplayBody() {
     if (isGroupUpdate() && isOutgoing()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_you_updated_group));
+      return new SpannableString(context.getString(R.string.MessageRecord_you_updated_group));
     } else if (isGroupUpdate()) {
-      return emphasisAdded(GroupUtil.getDescription(context, getBody()).toString(getIndividualRecipient()));
+      return new SpannableString(GroupUtil.getDescription(context, getBody()).toString(getIndividualRecipient()));
     } else if (isGroupQuit() && isOutgoing()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_left_group));
+      return new SpannableString(context.getString(R.string.MessageRecord_left_group));
     } else if (isGroupQuit()) {
-      return emphasisAdded(context.getString(R.string.ConversationItem_group_action_left, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.ConversationItem_group_action_left, getIndividualRecipient().toShortString()));
     } else if (isIncomingCall()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_s_called_you, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.MessageRecord_called_you));
     } else if (isOutgoingCall()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_called_s, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.MessageRecord_you_called));
     } else if (isMissedCall()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_missed_call_from, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.MessageRecord_missed_call));
     } else if (isJoined()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_s_joined_signal, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.MessageRecord_s_joined_signal, getIndividualRecipient().toShortString()));
     } else if (isExpirationTimerUpdate()) {
       String time = ExpirationUtil.getExpirationDisplayValue(context, (int)(getExpiresIn() / 1000));
-      return isOutgoing() ? emphasisAdded(context.getString(R.string.MessageRecord_you_set_disappearing_message_time_to_s, time))
-                          : emphasisAdded(context.getString(R.string.MessageRecord_s_set_disappearing_message_time_to_s, getIndividualRecipient().toShortString(), time));
+      return isOutgoing() ? new SpannableString(context.getString(R.string.MessageRecord_you_set_disappearing_message_time_to_s, time))
+                          : new SpannableString(context.getString(R.string.MessageRecord_s_set_disappearing_message_time_to_s, getIndividualRecipient().toShortString(), time));
     } else if (isIdentityUpdate()) {
-      return emphasisAdded(context.getString(R.string.MessageRecord_your_safety_number_with_s_has_changed, getIndividualRecipient().toShortString()));
+      return new SpannableString(context.getString(R.string.MessageRecord_your_safety_number_with_s_has_changed, getIndividualRecipient().toShortString()));
     } else if (isIdentityVerified()) {
-      if (isOutgoing()) return emphasisAdded(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_verified, getIndividualRecipient().toShortString()));
-      else              return emphasisAdded(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_verified_from_another_device, getIndividualRecipient().toShortString()));
+      if (isOutgoing()) return new SpannableString(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_verified, getIndividualRecipient().toShortString()));
+      else              return new SpannableString(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_verified_from_another_device, getIndividualRecipient().toShortString()));
     } else if (isIdentityDefault()) {
-      if (isOutgoing()) return emphasisAdded(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_unverified, getIndividualRecipient().toShortString()));
-      else              return emphasisAdded(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_unverified_from_another_device, getIndividualRecipient().toShortString()));
+      if (isOutgoing()) return new SpannableString(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_unverified, getIndividualRecipient().toShortString()));
+      else              return new SpannableString(context.getString(R.string.MessageRecord_you_marked_your_safety_number_with_s_unverified_from_another_device, getIndividualRecipient().toShortString()));
     } else if (getBody().length() > MAX_DISPLAY_LENGTH) {
       return new SpannableString(getBody().substring(0, MAX_DISPLAY_LENGTH));
     }
@@ -174,6 +174,11 @@ public boolean isInvalidVersionKeyExchange() {
     return SmsDatabase.Types.isInvalidVersionKeyExchange(type);
   }
 
+  public boolean isUpdate() {
+    return isGroupAction() || isJoined() || isExpirationTimerUpdate() || isCallLog() ||
+           isEndSession()  || isIdentityUpdate() || isIdentityVerified() || isIdentityDefault();
+  }
+
   public boolean isMediaPending() {
     return false;
   }
diff --git a/src/org/thoughtcrime/securesms/preferences/widgets/ColorPickerPreference.java b/src/org/thoughtcrime/securesms/preferences/widgets/ColorPickerPreference.java
index e201535c256..de95dcd514e 100644
--- a/src/org/thoughtcrime/securesms/preferences/widgets/ColorPickerPreference.java
+++ b/src/org/thoughtcrime/securesms/preferences/widgets/ColorPickerPreference.java
@@ -46,7 +46,7 @@ public ColorPickerPreference(Context context, AttributeSet attrs, int defStyleAt
 
     colorDescriptions = a.getTextArray(R.styleable.ColorPickerPreference_colorDescriptions);
     color = a.getColor(R.styleable.ColorPickerPreference_currentColor, 0);
-    columns = a.getInt(R.styleable.ColorPickerPreference_columns, 4);
+    columns = a.getInt(R.styleable.ColorPickerPreference_columns, 3);
     size = a.getInt(R.styleable.ColorPickerPreference_colorSize, 2);
     sortColors = a.getBoolean(R.styleable.ColorPickerPreference_sortColors, false);
 
diff --git a/src/org/thoughtcrime/securesms/recipients/Recipient.java b/src/org/thoughtcrime/securesms/recipients/Recipient.java
index bf8cf5b3d75..f56221b725a 100644
--- a/src/org/thoughtcrime/securesms/recipients/Recipient.java
+++ b/src/org/thoughtcrime/securesms/recipients/Recipient.java
@@ -286,7 +286,7 @@ public void setName(@Nullable String name) {
   }
 
   public synchronized @NonNull MaterialColor getColor() {
-    if      (isGroupRecipient()) return MaterialColor.GROUP;
+    if      (isGroupRecipient()) return MaterialColor.BLUE;
     else if (color != null)      return color;
     else if (name != null)       return ContactColors.generateFor(name);
     else                         return ContactColors.UNKNOWN_COLOR;
diff --git a/src/org/thoughtcrime/securesms/util/DateUtils.java b/src/org/thoughtcrime/securesms/util/DateUtils.java
index 1168364a50a..0b9f66e6d0d 100644
--- a/src/org/thoughtcrime/securesms/util/DateUtils.java
+++ b/src/org/thoughtcrime/securesms/util/DateUtils.java
@@ -34,7 +34,8 @@
 public class DateUtils extends android.text.format.DateUtils {
 
   @SuppressWarnings("unused")
-  private static final String TAG = DateUtils.class.getSimpleName();
+  private static final String           TAG         = DateUtils.class.getSimpleName();
+  private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyyMMdd");
 
   private static boolean isWithin(final long millis, final long span, final TimeUnit unit) {
     return System.currentTimeMillis() - millis <= unit.toMillis(span);
@@ -131,6 +132,14 @@ public static String getRelativeDate(@NonNull Context context,
     }
   }
 
+  public static boolean isSameDay(long t1, long t2) {
+    return DATE_FORMAT.format(new Date(t1)).equals(DATE_FORMAT.format(new Date(t2)));
+  }
+
+  public static boolean isSameBriefRelativeTimestamp(@NonNull Context context, @NonNull Locale locale, long t1, long t2) {
+    return getBriefRelativeTimeSpanString(context, locale, t1).equals(getBriefRelativeTimeSpanString(context, locale, t2));
+  }
+
   private static String getLocalizedPattern(String template, Locale locale) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
       return DateFormat.getBestDateTimePattern(locale, template);
diff --git a/src/org/thoughtcrime/securesms/util/ThemeUtil.java b/src/org/thoughtcrime/securesms/util/ThemeUtil.java
index 6aa9dbda739..83f77198f6f 100644
--- a/src/org/thoughtcrime/securesms/util/ThemeUtil.java
+++ b/src/org/thoughtcrime/securesms/util/ThemeUtil.java
@@ -1,6 +1,9 @@
 package org.thoughtcrime.securesms.util;
 
 import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Color;
+import android.support.annotation.AttrRes;
 import android.support.annotation.NonNull;
 import android.util.TypedValue;
 
@@ -12,6 +15,16 @@ public static boolean isDarkTheme(@NonNull Context context) {
     return getAttribute(context, R.attr.theme_type, "light").equals("dark");
   }
 
+  public static int getThemedColor(@NonNull Context context, @AttrRes int attr) {
+    TypedValue typedValue = new TypedValue();
+    Resources.Theme theme = context.getTheme();
+
+    if (theme.resolveAttribute(attr, typedValue, true)) {
+      return typedValue.data;
+    }
+    return Color.RED;
+  }
+
   private static String getAttribute(Context context, int attribute, String defaultValue) {
     TypedValue outValue = new TypedValue();
 
@@ -21,5 +34,4 @@ private static String getAttribute(Context context, int attribute, String defaul
       return defaultValue;
     }
   }
-
 }
diff --git a/src/org/thoughtcrime/securesms/util/ViewUtil.java b/src/org/thoughtcrime/securesms/util/ViewUtil.java
index fc58cf582b0..b52cd6b192b 100644
--- a/src/org/thoughtcrime/securesms/util/ViewUtil.java
+++ b/src/org/thoughtcrime/securesms/util/ViewUtil.java
@@ -197,4 +197,42 @@ public static void mirrorIfRtl(View view, Context context) {
   public static int dpToPx(Context context, int dp) {
     return (int)((dp * context.getResources().getDisplayMetrics().density) + 0.5);
   }
+
+  public static void updateLayoutParams(@NonNull View view, int width, int height) {
+    view.getLayoutParams().width  = width;
+    view.getLayoutParams().height = height;
+    view.requestLayout();
+  }
+
+  public static int getLeftMargin(@NonNull View view) {
+    if (ViewCompat.getLayoutDirection(view) == ViewCompat.LAYOUT_DIRECTION_LTR) {
+      return ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).leftMargin;
+    }
+    return ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).rightMargin;
+  }
+
+  public static int getRightMargin(@NonNull View view) {
+    if (ViewCompat.getLayoutDirection(view) == ViewCompat.LAYOUT_DIRECTION_LTR) {
+      return ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).rightMargin;
+    }
+    return ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).leftMargin;
+  }
+
+  public static void setLeftMargin(@NonNull View view, int margin) {
+    if (ViewCompat.getLayoutDirection(view) == ViewCompat.LAYOUT_DIRECTION_LTR) {
+      ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).leftMargin = margin;
+    } else {
+      ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).rightMargin = margin;
+    }
+    view.requestLayout();
+  }
+
+  public static void setTopMargin(@NonNull View view, int margin) {
+    ((ViewGroup.MarginLayoutParams) view.getLayoutParams()).topMargin = margin;
+    view.requestLayout();
+  }
+
+  public static void setPaddingBottom(@NonNull View view, int padding) {
+    view.setPadding(view.getPaddingLeft(), view.getPaddingTop(), view.getPaddingRight(), padding);
+  }
 }
