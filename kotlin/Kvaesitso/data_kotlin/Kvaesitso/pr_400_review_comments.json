[
    {
        "title": "initial fastlane structure"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "As discussed in #227 \r\n\r\n* my [Fastlane Cheat Sheet](https://gitlab.com/-/snippets/1895688) if you need it to build upon this\r\n* some hints on formatting [Fastlane `full_description.txt`](https://gitlab.com/IzzyOnDroid/repo/-/wikis/Fastlane) (hint: I use \"compressed\" HTML, i.e. all in one line, to keep F-Droid from inserting `<br>` for each `\\n` by having no `\\n` it can convert :wink:)\r\n\r\nIf you have any questions, simply ask :smiley:"
    },
    {
        "author": {
            "login": "MM2-0"
        },
        "body": "Thank you!"
    },
    {
        "author": {
            "login": "IzzySoft"
        },
        "body": "Gladly done!"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Inclusion to F-Droid?",
                    "body": "As I understand, the app relies on a number of proprietary libraries for search providers. Would it be possible to remove them during the build, or the app would require extensive rewrite rather than simply patching out gradle modules? If that so, is it possible to create a FOSS build flavor to include the app to mainline F-Droid repos in the future? (Assuming you'd still want this app to be published in F-Droid with reduced functionality).",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "MM2-0"
                                },
                                "body": "There aren't any proprietary libraries included, all included libraries are using a FOSS license. You can simply checkout the code and build it and you'll get an APK that is 100% FOSS.\r\n\r\nHowever, certain API keys are required for certain external services (for example, you must set up a project in the Google Cloud console to enable the Google Drive search feature). If you do not set up these keys, the corresponding feature will be disabled in the final APK. This would be the case for F-Droid builds.\r\n\r\nThe exact steps how to setup the external services are described here: https://kvaesitso.mm20.de/docs/developer-guide/external-apis/"
                            },
                            {
                                "author": {
                                    "login": "Diniboy1123"
                                },
                                "body": "Sorry to hop into the conversation, but can't you just create a settings page where the user can supply their API keys for those services in the fdroid version? That way if they want, they can still generate one on their own, but the app is free from those keys during the build time. Or is that also not welcomed by fdroid?\r\n\r\nDon't get me wrong, I am totally fine with the way how things are now, just thinking about certain possibilities."
                            },
                            {
                                "author": {
                                    "login": "MM2-0"
                                },
                                "body": "> Sorry to hop into the conversation, but can't you just create a settings page where the user can supply their API keys for those services in the fdroid version? That way if they want, they can still generate one on their own, but the app is free from those keys during the build time.\r\n\r\nI think that might be against the TOS of the API services. Because the number of free API calls is usually limited and you'd circumvent that if you promped users to provide their own API keys.\r\n\r\nAlso you can't use the same package name / signature combination in multiple Google cloud projects so that one can't be configured by users.\r\n\r\nI think the intended way is to use [reproducible builds](https://f-droid.org/docs/Reproducible_Builds/) but I haven't really looked into this yet.\r\n\r\nEdit: I have looked into it and it still requires API keys to be present in the source code. It's probably not a big deal, you can retrieve them from the APK file anyway, but I don't want people to use my API keys if someone decides to fork my app. And also, having them in a public repository means that they'll get scraped by web crawlers / indexed by search engines eventually, and I don't know if that is a problem."
                            },
                            {
                                "author": {
                                    "login": "Diniboy1123"
                                },
                                "body": "Oh I see. Good point. Didn't think about the package name limitation. I usually use their apis in cli applications where package name isn't necessary.\r\n\r\nAnd I understand that you don't want others to use your API keys. All I could think of is a static file served by some webserver (could also be a free one, like a private repo with github pages [iirc this requires a github pro account though] or cloudflare pages/workers) that the clients would request and cache upon the first launch. Not sure if that's a decent idea though or tolerated by fdroid."
                            },
                            {
                                "author": {
                                    "login": "MM2-0"
                                },
                                "body": "One thing I was thinking about is to introduce some kind of plugin API and move all parts that depend on external APIs to plugins. Another advantage of this would be, that it would be easier for 3rd party developers to add support for other cloud services. The disadvantage is, that users would need to install a dozen of different APKs to enable the full functionality of the launcher."
                            },
                            {
                                "author": {
                                    "login": "ClockGen"
                                },
                                "body": "> There aren't any proprietary libraries included, all included libraries are using a FOSS license. You can simply checkout the code and build it and you'll get an APK that is 100% FOSS.\r\n> \r\n> However, certain API keys are required for certain external services (for example, you must set up a project in the Google Cloud console to enable the Google Drive search feature). If you do not set up these keys, the corresponding feature will be disabled in the final APK. This would be the case for F-Droid builds.\r\n> \r\n> The exact steps how to setup the external services are described here: https://kvaesitso.mm20.de/docs/developer-guide/external-apis/\r\n\r\nYes, but the included maven repos (especially google()) can contain proprietary libs, while the entirety of code in this repo would be 100% FOSS, the project would still use proprietary libs.  Just making sure that all libraries included in all modules are also FOSS, considering, how much onedrive and gdrive functionality there is.\r\n\r\nRegarding disabled functionality in the resulting APK: I can't talk for the entirety of the F-Droid userbase, but many switch to F-Droid specifically to avoid google and proprietary services/apps, so lack of such probably wouldn't be big issue.\r\n\r\nOne concerning thing though, is the custom microsoft azure maven repo. F-Droid doesn't permit custom maven repos."
                            },
                            {
                                "author": {
                                    "login": "MM2-0"
                                },
                                "body": "> Yes, but the included maven repos (especially google()) can contain proprietary libs, while the entirety of code in this repo would be 100% FOSS, the project would still use proprietary libs. Just making sure that all libraries included in all modules are also FOSS, considering, how much onedrive and gdrive functionality there is.\r\n\r\nIt can happen (if dependencies I use have other, non-free transitive dependencies) but it shouldn't. If a library is licensed under a FOSS license, it shouldn't have unfree dependencies as that would make the library as a whole unfree. All libraries the launcher depends on directly are licensed under an open source license (Apache 2.0, MIT, Simplified BSD or Modified BSD).\r\n\r\nIt's totally normal for Android projects to include the `google()` repository because this is the only repository that serves Google's AndroidX libraries.\r\n\r\nI don't know why the Microsoft Auth library depends on the Surface Duo SDK but it's MIT licensed so that's all that matters.\r\n\r\nHere is a complete list of all dependencies including transitive and compile time only dependencies:\r\n<details>\r\n\r\n```\r\ncom.google.accompanist:accompanist-drawablepainter:0.25.1\r\ncom.google.accompanist:accompanist-flowlayout:0.27.0\r\ncom.google.accompanist:accompanist-insets:0.27.0\r\ncom.google.accompanist:accompanist-navigation-animation:0.27.0\r\ncom.google.accompanist:accompanist-pager-indicators:0.27.0\r\ncom.google.accompanist:accompanist-pager:0.27.0\r\ncom.google.accompanist:accompanist-systemuicontroller:0.27.0\r\nandroidx.activity:activity-compose:1.6.0-rc02\r\nandroidx.activity:activity-ktx:1.4.0\r\nandroidx.activity:activity:1.6.0-rc02\r\norg.ahocorasick:ahocorasick:0.3.0\r\ncom.caverock:androidsvg-aar:1.4\r\nandroidx.compose.animation:animation-core:1.4.0-alpha02\r\nandroidx.compose.animation:animation-graphics:1.4.0-alpha02\r\nandroidx.compose.animation:animation:1.4.0-alpha02\r\nandroidx.annotation:annotation-experimental:1.3.0\r\nandroidx.annotation:annotation:1.3.0\r\norg.jetbrains:annotations:13.0\r\nandroidx.appcompat:appcompat-resources:1.6.0-rc01\r\nandroidx.appcompat:appcompat:1.6.0-rc01\r\norg.ow2.asm:asm-analysis:9.1\r\norg.ow2.asm:asm-commons:9.1\r\norg.ow2.asm:asm-tree:9.1\r\norg.ow2.asm:asm:9.1\r\norg.jetbrains.kotlinx:atomicfu:0.17.3\r\ncom.google.auto.value:auto-value-annotations:1.9\r\nandroidx.autofill:autofill:1.0.0\r\ncom.azure:azure-core:1.28.0\r\nandroidx.browser:browser:1.4.0\r\nandroidx.cardview:cardview:1.0.0\r\norg.checkerframework:checker-qual:3.12.0\r\nio.coil-kt:coil-base:2.2.1\r\nio.coil-kt:coil-compose-base:2.2.1\r\nio.coil-kt:coil-compose:2.2.1\r\nio.coil-kt:coil-svg:2.2.1\r\nio.coil-kt:coil:2.2.1\r\nandroidx.collection:collection-ktx:1.1.0\r\nandroidx.collection:collection:1.1.0\r\ncom.github.ajalt.colormath:colormath-jvm:3.2.0\r\ncom.github.ajalt.colormath:colormath:3.2.0\r\ncom.microsoft.identity:common4j:3.0.1\r\ncom.microsoft.identity:common:6.0.1\r\norg.apache.commons:commons-lang3:3.11\r\norg.shredzone.commons:commons-suncalc:3.5\r\norg.apache.commons:commons-text:1.9\r\ncom.godaddy.android.colorpicker:compose-color-picker-android:0.5.0\r\ncom.godaddy.android.colorpicker:compose-color-picker:0.5.0\r\nandroidx.concurrent:concurrent-futures:1.0.0\r\nandroidx.constraintlayout:constraintlayout-core:1.0.3\r\nandroidx.constraintlayout:constraintlayout:2.1.3\r\ncom.squareup.retrofit2:converter-gson:2.9.0\r\nandroidx.coordinatorlayout:coordinatorlayout:1.1.0\r\nandroidx.arch.core:core-common:2.1.0\r\nandroidx.core:core-ktx:1.9.0\r\nandroidx.arch.core:core-runtime:2.1.0\r\nandroidx.core:core:1.9.0\r\nandroidx.cursoradapter:cursoradapter:1.0.0\r\nandroidx.customview:customview-poolingcontainer:1.0.0\r\nandroidx.customview:customview:1.1.0\r\nandroidx.datastore:datastore-core:1.0.0\r\nandroidx.datastore:datastore:1.0.0\r\ncom.microsoft.device.display:display-mask:0.3.0\r\nandroidx.documentfile:documentfile:1.0.0\r\nandroidx.drawerlayout:drawerlayout:1.1.1\r\nandroidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03\r\nandroidx.dynamicanimation:dynamicanimation:1.0.0\r\nandroidx.emoji2:emoji2-views-helper:1.2.0-rc01\r\nandroidx.emoji2:emoji2:1.2.0-rc01\r\ncom.google.errorprone:error_prone_annotations:2.15.0\r\nandroidx.exifinterface:exifinterface:1.3.3\r\ncom.google.guava:failureaccess:1.0.1\r\nandroidx.compose.foundation:foundation-layout:1.4.0-alpha02\r\norg.jetbrains.compose.foundation:foundation:1.1.0\r\nandroidx.compose.foundation:foundation:1.4.0-alpha02\r\nandroidx.fragment:fragment-ktx:1.4.1\r\nandroidx.fragment:fragment:1.3.6\r\ncom.google.api-client:google-api-client-android:2.0.0\r\ncom.google.api-client:google-api-client:1.25.0\r\ncom.google.apis:google-api-services-drive:v3-rev197-1.25.0\r\ncom.google.apis:google-api-services-oauth2:v2-rev157-1.25.0\r\ncom.google.auth:google-auth-library-credentials:1.11.0\r\ncom.google.auth:google-auth-library-oauth2-http:1.11.0\r\ncom.google.http-client:google-http-client-gson:1.42.2\r\ncom.google.http-client:google-http-client-jackson2:1.25.0\r\ncom.google.http-client:google-http-client:1.42.2\r\ncom.google.oauth-client:google-oauth-client:1.25.0\r\nio.grpc:grpc-context:1.27.2\r\ncom.google.code.gson:gson:2.9.1\r\ncom.google.guava:guava:31.1-jre\r\ncz.msebera.android:httpclient:4.5.8\r\norg.apache.httpcomponents:httpcore:4.4.15\r\nandroidx.interpolator:interpolator:1.0.0\r\ncom.google.j2objc:j2objc-annotations:1.3\r\ncom.fasterxml.jackson.core:jackson-annotations:2.13.2\r\ncom.fasterxml.jackson:jackson-bom:2.13.2\r\ncom.fasterxml.jackson.core:jackson-core:2.13.2\r\ncom.fasterxml.jackson.core:jackson-databind:2.13.2.2\r\ncom.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.2\r\ncom.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2\r\ncom.github.stephenc.jcip:jcip-annotations:1.0-1\r\nnet.java.dev.jna:jna:5.6.0\r\norg.jsoup:jsoup:1.15.3\r\ncom.google.code.findbugs:jsr305:3.0.2\r\nio.insert-koin:koin-android:3.2.0\r\nio.insert-koin:koin-androidx-compose:3.2.0\r\nio.insert-koin:koin-core-jvm:3.2.0\r\nio.insert-koin:koin-core:3.2.0\r\norg.jetbrains.kotlin:kotlin-compiler-embeddable:1.7.21\r\norg.jetbrains.kotlin:kotlin-daemon-embeddable:1.7.21\r\norg.jetbrains.kotlin:kotlin-klib-commonizer-embeddable:1.7.21\r\norg.jetbrains.kotlin:kotlin-reflect:1.7.21\r\norg.jetbrains.kotlin:kotlin-script-runtime:1.7.21\r\norg.jetbrains.kotlin:kotlin-stdlib-common:1.7.21\r\norg.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10\r\norg.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10\r\norg.jetbrains.kotlin:kotlin-stdlib:1.7.21\r\norg.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.5\r\norg.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5\r\norg.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4\r\norg.jetbrains.kotlinx:kotlinx-coroutines-bom:1.6.4\r\norg.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4\r\norg.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4\r\nandroidx.legacy:legacy-support-core-utils:1.0.0\r\nandroidx.lifecycle:lifecycle-common-java8:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-common:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-extensions:2.2.0\r\nandroidx.lifecycle:lifecycle-livedata-core-ktx:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-livedata-core:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-livedata-ktx:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-livedata:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-process:2.4.1\r\nandroidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-runtime:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-service:2.1.0\r\nandroidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha02\r\nandroidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.1\r\nandroidx.lifecycle:lifecycle-viewmodel:2.6.0-alpha02\r\nandroidx.loader:loader:1.0.0\r\nandroidx.localbroadcastmanager:localbroadcastmanager:1.0.0\r\ncom.airbnb.android:lottie-compose:5.2.0\r\ncom.airbnb.android:lottie:5.2.0\r\nandroidx.compose.material:material-icons-core:1.4.0-alpha02\r\nandroidx.compose.material:material-icons-extended:1.4.0-alpha02\r\nandroidx.compose.material:material-ripple:1.4.0-alpha02\r\nandroidx.compose.material3:material3:1.1.0-alpha02\r\norg.jetbrains.compose.material:material:1.1.0\r\nandroidx.compose.material:material:1.4.0-alpha02\r\ncom.google.android.material:material:1.8.0-alpha01\r\norg.mariuszgromada.math:MathParser.org-mXparser:4.4.2\r\ncom.microsoft.graph:microsoft-graph-core:2.0.13\r\ncom.microsoft.graph:microsoft-graph:5.34.0\r\ncom.microsoft.identity.client:msal:4.0.1\r\nio.github.aakira:napier-android-debug:1.4.1\r\nio.github.aakira:napier-android:1.4.1\r\nio.github.aakira:napier:1.4.1\r\nandroidx.navigation:navigation-common-ktx:2.6.0-alpha01\r\nandroidx.navigation:navigation-common:2.6.0-alpha01\r\nandroidx.navigation:navigation-compose:2.6.0-alpha01\r\nandroidx.navigation:navigation-runtime-ktx:2.6.0-alpha01\r\nandroidx.navigation:navigation-runtime:2.6.0-alpha01\r\ncom.nimbusds:nimbus-jose-jwt:9.9\r\ncom.squareup.okhttp3:okhttp:4.10.0\r\ncom.squareup.okio:okio-jvm:3.2.0\r\ncom.squareup.okio:okio:3.2.0\r\nio.opencensus:opencensus-api:0.31.1\r\nio.opencensus:opencensus-contrib-http-util:0.31.1\r\norg.jacoco:org.jacoco.agent:0.8.7\r\norg.jacoco:org.jacoco.ant:0.8.7\r\norg.jacoco:org.jacoco.core:0.8.7\r\norg.jacoco:org.jacoco.report:0.8.7\r\nandroidx.palette:palette:1.0.0\r\nandroidx.print:print:1.0.0\r\nandroidx.profileinstaller:profileinstaller:1.2.0\r\ncom.google.protobuf:protobuf-javalite:3.14.0\r\norg.reactivestreams:reactive-streams:1.0.3\r\nio.projectreactor:reactor-core:3.4.17\r\nandroidx.recyclerview:recyclerview:1.1.0\r\nandroidx.resourceinspection:resourceinspection-annotation:1.0.1\r\ncom.squareup.retrofit2:retrofit:2.9.0\r\nandroidx.room:room-common:2.5.0-alpha03\r\nandroidx.room:room-ktx:2.5.0-alpha03\r\nandroidx.room:room-runtime:2.5.0-alpha03\r\nandroidx.compose.runtime:runtime-livedata:1.4.0-alpha02\r\nandroidx.compose.runtime:runtime-saveable:1.3.0-rc01\r\norg.jetbrains.compose.runtime:runtime:1.1.0\r\nandroidx.compose.runtime:runtime:1.4.0-alpha02\r\nandroidx.savedstate:savedstate-ktx:1.1.0\r\nandroidx.savedstate:savedstate:1.2.0\r\nandroidx.security:security-crypto:1.1.0-alpha03\r\norg.slf4j:slf4j-api:1.7.36\r\ndev.chrisbanes.snapper:snapper:0.2.2\r\nandroidx.sqlite:sqlite-framework:2.3.0-alpha05\r\nandroidx.sqlite:sqlite:2.3.0-alpha05\r\nandroidx.startup:startup-runtime:1.0.0\r\nco.touchlab:stately-common:1.2.0\r\nco.touchlab:stately-concurrency:1.2.0\r\norg.codehaus.woodstox:stax2-api:4.2.1\r\ncom.google.crypto.tink:tink-android:1.5.0\r\ncom.github.promeg:tinypinyin:2.0.2\r\nandroidx.tracing:tracing:1.0.0\r\nandroidx.transition:transition:1.2.0\r\norg.jetbrains.intellij.deps:trove4j:1.0.20200330\r\nandroidx.compose.ui:ui-geometry:1.4.0-alpha02\r\nandroidx.compose.ui:ui-graphics:1.4.0-alpha02\r\nandroidx.compose.ui:ui-text:1.4.0-alpha02\r\nandroidx.compose.ui:ui-tooling-data:1.4.0-alpha02\r\nandroidx.compose.ui:ui-tooling-preview:1.4.0-alpha02\r\nandroidx.compose.ui:ui-tooling:1.4.0-alpha02\r\nandroidx.compose.ui:ui-unit:1.4.0-alpha02\r\nandroidx.compose.ui:ui-util:1.4.0-alpha02\r\nandroidx.compose.ui:ui:1.4.0-alpha02\r\nandroidx.vectordrawable:vectordrawable-animated:1.1.0\r\nandroidx.vectordrawable:vectordrawable:1.1.0\r\nandroidx.versionedparcelable:versionedparcelable:1.1.1\r\nandroidx.databinding:viewbinding:7.3.1\r\nandroidx.viewpager2:viewpager2:1.0.0\r\nandroidx.viewpager:viewpager:1.0.0\r\ncom.fasterxml.woodstox:woodstox-core:6.2.7\r\nandroidx.work:work-runtime-ktx:2.8.0-alpha04\r\nandroidx.work:work-runtime:2.8.0-alpha04\r\n```\r\n\r\n</details>\r\n\r\n> Regarding disabled functionality in the resulting APK: I can't talk for the entirety of the F-Droid userbase, but many switch to F-Droid specifically to avoid google and proprietary services/apps, so lack of such probably wouldn't be big issue.\r\n\r\nYou're probably right, the main thing that'll stop working is the weather widget. The only weather provider that works out of the box is the Deutscher Wetterdienst provider but I don't know how well they support locations outside Germany.\r\n\r\n"
                            },
                            {
                                "author": {
                                    "login": "ClockGen"
                                },
                                "body": "> I don't know why the Microsoft Auth library depends on the Surface Duo SDK but it's MIT licensed so that's all that matters.\r\n\r\nWell, even if it's MIT licensed, that maven repo isn't allowed in F-Droid.\r\nThe list of allowed repos can be found here:\r\nhttps://gitlab.com/fdroid/fdroidserver/-/blob/master/fdroidserver/scanner.py#L439\r\nIt appears right now this repo is the only hard blocker for f-droid inclusion."
                            },
                            {
                                "author": {
                                    "login": "ClockGen"
                                },
                                "body": "I opened a draft merge request: https://gitlab.com/fdroid/fdroiddata/-/merge_requests/12443\r\nSo far it builds but without google drive, onedrive and weather providers."
                            },
                            {
                                "author": {
                                    "login": "MM2-0"
                                },
                                "body": "Great! How would these patches affect the future development? Do I need to make sure that I don't break anything?"
                            }
                        ]
                    }
                }
            }
        }
    }
]