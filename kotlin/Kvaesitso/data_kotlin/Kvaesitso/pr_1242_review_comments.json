[
    {
        "title": "Fix crash after tapping \"Configure widget\" in Settings"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Description\r\n\r\nGreetings! I was able to reproduce the original bug report in #1221. My stack trace is attached here:\r\n\r\n<details>\r\n<summary>java.lang.IllegalArgumentException: pendingIntentCreatorBackgroundActivityStartMode must not be set when sending a PendingIntent</summary>\r\n\r\n```\r\nFATAL EXCEPTION: main\r\nProcess: de.mm20.launcher2.debug, PID: 12890\r\njava.lang.IllegalArgumentException: pendingIntentCreatorBackgroundActivityStartMode must not be set when sending a PendingIntent\r\n\tat android.os.Parcel.createExceptionOrNull(Parcel.java:3246)\r\n\tat android.os.Parcel.createException(Parcel.java:3226)\r\n\tat android.os.Parcel.readException(Parcel.java:3209)\r\n\tat android.os.Parcel.readException(Parcel.java:3151)\r\n\tat android.app.IActivityTaskManager$Stub$Proxy.startActivityIntentSender(IActivityTaskManager.java:2171)\r\n\tat android.app.Activity.startIntentSenderForResultInner(Activity.java:6254)\r\n\tat android.app.Activity.startIntentSenderForResult(Activity.java:6225)\r\n\tat androidx.activity.ComponentActivity.startIntentSenderForResult(ComponentActivity.kt:764)\r\n\tat android.appwidget.AppWidgetHost.startAppWidgetConfigureActivityForResult(AppWidgetHost.java:336)\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2.invoke$lambda$8$lambda$7(WatchFaceSelector.kt:213)\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2.$r8$lambda$CHKc5RQzubjg-daGRTHINCq2JOM(Unknown Source:0)\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2$$ExternalSyntheticLambda3.invoke(Unknown Source:6)\r\n\tat androidx.compose.foundation.ClickableNode$clickPointerInput$3.invoke-k-4lQ0M(Clickable.kt:677)\r\n\tat androidx.compose.foundation.ClickableNode$clickPointerInput$3.invoke(Clickable.kt:671)\r\n\tat androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2$1.invokeSuspend(TapGestureDetector.kt:296)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTaskKt.resume(DispatchedTask.kt:175)\r\n\tat kotlinx.coroutines.DispatchedTaskKt.dispatch(DispatchedTask.kt:164)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.dispatchResume(CancellableContinuationImpl.kt:466)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeImpl(CancellableContinuationImpl.kt:500)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeImpl$default(CancellableContinuationImpl.kt:489)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeWith(CancellableContinuationImpl.kt:364)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine.offerPointerEvent(SuspendingPointerInputFilter.kt:825)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.dispatchPointerEvent(SuspendingPointerInputFilter.kt:693)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onPointerEvent-H0pRuoY(SuspendingPointerInputFilter.kt:719)\r\n\tat androidx.compose.foundation.AbstractClickableNode.onPointerEvent-H0pRuoY(Clickable.kt:1137)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:391)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.NodeParent.dispatchMainEventPass(HitPathTracker.kt:230)\r\n\tat androidx.compose.ui.input.pointer.HitPathTracker.dispatchChanges(HitPathTracker.kt:154)\r\n\tat androidx.compose.ui.input.pointer.PointerInputEventProcessor.process-BIzXfog(PointerInputEventProcessor.kt:117)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.sendMotionEvent-8iAsVTc(AndroidComposeView.android.kt:2115)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.handleMotionEvent-8iAsVTc(AndroidComposeView.android.kt:2065)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.dispatchTouchEvent(AndroidComposeView.android.kt:1936)\r\n\tat android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:3122)\r\n\tat android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2803)\r\n\tat android.view.View.dispatchPointerEvent(View.java:16729)\r\n\r\n```\r\n</details>\r\n\r\nI simply followed the message's suggestion and thus removed `pendingIntentCreatorBackgroundActivityStartMode()` from `ActivityOptions`, which seems to have fixed this issue.\r\n\r\nHowever, in uncertain circumstances, I also got this error:\r\n\r\n<details>\r\n<summary>java.lang.ClassCastException: android.view.ContextThemeWrapper cannot be cast to android.app.Activity</summary>\r\n\r\n```\r\njava.lang.ClassCastException: android.view.ContextThemeWrapper cannot be cast to android.app.Activity\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2.invoke$lambda$8$lambda$7(WatchFaceSelector.kt:213)\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2.$r8$lambda$CHKc5RQzubjg-daGRTHINCq2JOM(Unknown Source:0)\r\n\tat de.mm20.launcher2.ui.launcher.widgets.clock.WatchFaceSelectorKt$WatchFaceSelector$1$1$3$2$1$2$2$$ExternalSyntheticLambda3.invoke(Unknown Source:6)\r\n\tat androidx.compose.foundation.ClickableNode$clickPointerInput$3.invoke-k-4lQ0M(Clickable.kt:677)\r\n\tat androidx.compose.foundation.ClickableNode$clickPointerInput$3.invoke(Clickable.kt:671)\r\n\tat androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2$1.invokeSuspend(TapGestureDetector.kt:296)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTaskKt.resume(DispatchedTask.kt:175)\r\n\tat kotlinx.coroutines.DispatchedTaskKt.dispatch(DispatchedTask.kt:164)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.dispatchResume(CancellableContinuationImpl.kt:466)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeImpl(CancellableContinuationImpl.kt:500)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeImpl$default(CancellableContinuationImpl.kt:489)\r\n\tat kotlinx.coroutines.CancellableContinuationImpl.resumeWith(CancellableContinuationImpl.kt:364)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl$PointerEventHandlerCoroutine.offerPointerEvent(SuspendingPointerInputFilter.kt:825)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.dispatchPointerEvent(SuspendingPointerInputFilter.kt:693)\r\n\tat androidx.compose.ui.input.pointer.SuspendingPointerInputModifierNodeImpl.onPointerEvent-H0pRuoY(SuspendingPointerInputFilter.kt:719)\r\n\tat androidx.compose.foundation.AbstractClickableNode.onPointerEvent-H0pRuoY(Clickable.kt:1137)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:391)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.Node.dispatchMainEventPass(HitPathTracker.kt:377)\r\n\tat androidx.compose.ui.input.pointer.NodeParent.dispatchMainEventPass(HitPathTracker.kt:230)\r\n\tat androidx.compose.ui.input.pointer.HitPathTracker.dispatchChanges(HitPathTracker.kt:154)\r\n\tat androidx.compose.ui.input.pointer.PointerInputEventProcessor.process-BIzXfog(PointerInputEventProcessor.kt:117)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.sendMotionEvent-8iAsVTc(AndroidComposeView.android.kt:2115)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.handleMotionEvent-8iAsVTc(AndroidComposeView.android.kt:2065)\r\n\tat androidx.compose.ui.platform.AndroidComposeView.dispatchTouchEvent(AndroidComposeView.android.kt:1936)\r\n\tat android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:3122)\r\n\tat android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2803)\r\n\tat android.view.View.dispatchPointerEvent(View.java:16729)\r\n\tat android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:7947)\r\n\tat android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:7710)\r\n\tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:7106)\r\n\tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:7163)\r\n\tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:7129)\r\n\tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:7295)\r\n\tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:7137)\r\n\tat android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:7352)\r\n\tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:7110)\r\n```\r\n</details>\r\n\r\nTo fix it, I added a `getActivityFromContext()` function that traverses through base contexts, starting from the current context until it finds a Context cast-able to Activity. Now, if it can't \"cast\" `context` to an Activity, it will silently fail instead of crashing. I'm not sure if that's desirable; I could switch to a non-null assertion if it's better in your opinion.\r\n\r\nA strange issue I encountered, is that the widget on the home screen doesn't reflect any changes made after configuration until I force stop the application. I only tried it with the stock Clock app on Android Studio's emulator (Android 15); I don't know if it happens with other widgets.\r\nI'm not sure why that happens. I would appreciate some help regarding that, if it is a deal breaker. Perhaps another PR could take care of that issue?\r\n"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Crash after tapping \"Configure widget\"",
                    "body": "## Description\n\nWhen first adding a widget, I am able to configure the widgets settings without any issues. However, once the widget is added the following steps will cause a crash:\n\n1. Scroll to the bottom of the widget list\n2. Select \"Edit Widgets\"\n3. Select the settings button for the widget I want to reconfigure\n4. Select \"Configure widget\"\n\nI have been able to reproduce this with the Breezy Weather, YNAB, Google Contacts individual contact, and TickTick widgets. The crash occurs even on a clean install or after clearing app cache and data. \n\n\n## Stack trace\n\n```\njava.lang.IllegalArgumentException: pendingIntentCreatorBackgroundActivityStartMode must not be set when sending a PendingIntent\n\tat android.os.Parcel.createExceptionOrNull(Parcel.java:3234)\n\tat android.os.Parcel.createException(Parcel.java:3214)\n\tat android.os.Parcel.readException(Parcel.java:3197)\n\tat android.os.Parcel.readException(Parcel.java:3139)\n\tat android.app.IActivityTaskManager$Stub$Proxy.startActivityIntentSender(IActivityTaskManager.java:2221)\n\tat android.app.Activity.startIntentSenderForResultInner(Activity.java:6310)\n\tat android.app.Activity.startIntentSenderForResult(Activity.java:6281)\n\tat androidx.activity.ComponentActivity.startIntentSenderForResult(ComponentActivity.kt:2)\n\tat android.appwidget.AppWidgetHost.startAppWidgetConfigureActivityForResult(AppWidgetHost.java:367)\n\tat de.mm20.launcher2.ui.launcher.sheets.ConfigureWidgetSheetKt$$ExternalSyntheticLambda11.invoke(R8$$SyntheticClass:185)\n\tat androidx.compose.foundation.ClickableNode$clickPointerInput$3.invoke(Clickable.kt:13)\n\tat androidx.compose.foundation.gestures.TapGestureDetectorKt$detectTapAndPress$2$1.invokeSuspend(TapGestureDetector.kt:161)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:9)\n\tat kotlinx.coroutines.DispatchedTaskKt.resume(DispatchedTask.kt:81)\n[69 lines truncated]\n```\n\n## Device info\nAPP.VERSION : 1.34.1<br>APP.VERSIONCODE : 2024122400<br>APP.SIGNATURE : rx1fSnL7r5/OMoFC0e1KPqTndXQ=<br>LAUNCHER.APP : android<br>TIMEZONE : America/Chicago<br>VERSION.RELEASE : 15<br>VERSION.INCREMENTAL : 12873528<br>VERSION.SDK.NUMBER : 35<br>BOARD : cheetah<br>BOOTLOADER : cloudripper-15.2-12817297<br>BRAND : google<br>CPU_ABI : arm64-v8a<br>CPU_ABI2 : <br>DISPLAY : BP11.241121.013<br>FINGERPRINT : google/cheetah_beta/cheetah:15/BP11.241121.013/12873528:user/release-keys<br>HARDWARE : cheetah<br>HOST : r-eaf9838018e7e7ac-1kx4<br>ID : BP11.241121.013<br>MANUFACTURER : Google<br>MODEL : Pixel 7 Pro<br>PRODUCT : cheetah_beta<br>TAGS : release-keys<br>TIME : 1736186074000<br>TYPE : user\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": []
                    }
                }
            }
        }
    }
]