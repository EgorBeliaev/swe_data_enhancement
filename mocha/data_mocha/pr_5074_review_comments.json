[
    {
        "title": "fix: harden error handling in `lib/cli/run.js`"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Before this patch the errorhandling would fail with the error: \"ERROR: null\". Debug showed that the error \"caught error sometime before command handler: TypeError: Cannot convert object to primitive value\"\r\n\r\n<!-- \ud83d\udc4b Hi, thanks for sending a PR to mocha! \ud83d\udc96.\r\nPlease fill out all fields below and make sure each item is true and [x] checked.\r\nOtherwise we may not be able to review your PR. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] Addresses an existing open issue: fixes #5085\r\n- [x] That issue was marked as [`status: accepting prs`](https://github.com/mochajs/mocha/issues?q=is%3Aopen+is%3Aissue+label%3A%22status%3A+accepting+prs%22)\r\n- [x] Steps in [CONTRIBUTING.md](https://github.com/mochajs/mocha/blob/main/.github/CONTRIBUTING.md) were taken\r\n\r\n## Overview\r\nWhen the error in the runner is a typescript error the current script fails with the error: \"TypeError: Cannot convert object to primitive value\" - leaving the output as a null value.\r\nIt is very hard to see the actuall error. With this change the output will be something like this.\r\n\r\n`Error: undefined test/testdata.ts(59,14): error TS2739: Type '{ loginId: number; spidId: number; sid: string; amr: never[]; }' is missing the following properties from type 'Identity': sub, nbf, exp, iat`\r\n\r\nBefore the fix the output was\r\n`\u2716 ERROR: null`\r\nDebug output contailed this\r\n`  mocha:cli:cli caught error sometime before command handler: TypeError: Cannot convert object to primitive value\r\n  mocha:cli:cli     at exports.handler (/home/stalet/code/account/min-finn-frontend/node_modules/.pnpm/mocha@10.2.0/node_modules/mocha/lib/cli/run.js:372:65) +859ms\r\n`\r\n"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "barak007"
        },
        "body": ""
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "barak007"
        },
        "body": ""
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "Requesting changes to handle the `node:module` case of errors that don't have a `toString()` method. Please let me know if I've gone down the totally wrong track though! "
    },
    {
        "author": {
            "login": "stalet"
        },
        "body": ""
    },
    {
        "author": {
            "login": "barak007"
        },
        "body": "LGTM.\r\n\r\nnow we only need to support `AggregateError` and Error `cause` and it will be perfect reporting\r\nI think they have separated issues "
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Proposing to simply do this instead of doing our own error formatting: `console.error('\\n Mocha run failed:', err);`\r\n\r\nThoughts @JoshuaKGoldberg @stalet?\r\n\r\nAlso: Sorry for repeated change requests and delaying of time on this. I promise I'm not trying to be a pain in the ass even though I'm probably failing at that \ud83d\ude48 "
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": ""
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": ""
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": ""
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "\ud83d\ude80 "
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "I think just waiting on tests now?"
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "\ud83d\ude80 "
    },
    {
        "author": {
            "login": "linux-foundation-easycla"
        },
        "body": "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: stalet / name: St\u00e5le Tomten  (77934c135bb00fcfa2b4d834d3ff3633392e70a0, 25bda255192831971134122319729a0feb15b5e3, d5105f036c2c1a4f8d3a5e28278950b5612442cb, 8b7613c55f17a487f5abde6ef92c254c60c5f4ca, 8a07c4fe0b624011f578cfeb92d9597fda22b27b, d9e64ad992cf9da635dc2e1eb276621fd2208748, cc1c7ada2db7327b3cabc2b9f47bb69b68af1dd4, b70a40c9b14fd9137483d4863cf6e0fd5eef90a8, 3a11deff41d361c33e84901238569d06e1b45286, 8be4ad1238569342999ac3438b8c7c1b66a0fd23, 5b398f7dd48162d4617fe8907f381f45aec5b5a4)</li><li>:white_check_mark: login: voxpelli / name: Pelle Wessman  (9a651495dd58b20d91d8c85c45e5030146ca89ba, f66505f7aef569516ff6aec8ee79714c1dd66dc8, b264a5933f5ef01cd2ba6dada5f2c740382bd7ba)</li></ul>"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Can you provide a reproduction? Sounds odd that it would swallow all TypeScript errors currently\n\nOther PR:s related to error reporting are eg:\n\n- https://github.com/mochajs/mocha/pull/4829\n- https://github.com/mochajs/mocha/pull/5018"
    },
    {
        "author": {
            "login": "stalet"
        },
        "body": "I have created a small project that reproduces the error here: https://github.com/stalet/mocha-typescript-testproject"
    },
    {
        "author": {
            "login": "barak007"
        },
        "body": "It's a general thing with errors not related to Typescript\r\n```ts\r\nconsole.error('\\n' + (err.stack || `Error: ${err.message || err}`));\r\n```\r\nthe above line from mocha fail if I throw null as an error\r\n```ts\r\ntry {\r\n throw null;\r\n} catch (err) { \r\n  console.error('\\n' + (err.stack || `Error: ${err.message || err}`));\r\n}\r\n```\r\nthe error will be\r\n```\r\nUncaught TypeError: Cannot read properties of null (reading 'stack')\r\n```"
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "\ud83d\udc40\r\n\r\n> - [ ] Addresses an existing open issue: fixes #000\r\n\r\nSee [`.github/CONTRIBUTING.md`](https://github.com/mochajs/mocha/blob/53a4bafbdeb32576440b0a21787f2525585411c0/.github/CONTRIBUTING.md). We ask that PRs address an open accepted issue first. A few benefits:\r\n\r\n* Issues are much more discoverable for folks looking to discuss & report suggested changes.\r\n* The issue templates ask for the info needed to properly triage the suggestion. \r\n* We don't want unhappy situations where someone spends their time on a PR that can't be accepted (which would have been caught by an issue's discussion).\r\n\r\nClosing this PR so it doesn't show up on our review queue. But if it is determined in an issue that we can take this in, we'd be happy to re-open and review. Thanks for sending!\r\n\r\ntl;dr: please file an issue so we can discuss there \ud83d\ude42."
    },
    {
        "author": {
            "login": "coveralls"
        },
        "body": "\n[![Coverage Status](https://coveralls.io/builds/65776959/badge)](https://coveralls.io/builds/65776959)\n\ncoverage: 94.312% (-0.02%) from 94.335%\nwhen pulling **8be4ad1238569342999ac3438b8c7c1b66a0fd23 on stalet:bugfix-typescript-errors-not-outputted**\ninto **3345eff154d40802ba4470b73fd0040c15f6c4f9 on mochajs:master**.\n"
    },
    {
        "author": {
            "login": "stalet"
        },
        "body": "After these changes I have verified the in the testproject i get the following output instead of `\u2716 ERROR: null` \r\n\r\n```\r\nUndefined error: test/index.test.ts(9,44): error TS2322: Type 'string' is not assignable to type 'number'.\r\n``` \r\n\r\nWhich was the intention.\r\n"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Yep, and I think they are all waiting on me, I'll try to squeeze them all in this Monday:\r\n\r\n* https://github.com/mochajs/mocha/pull/5018\r\n* https://github.com/mochajs/mocha/pull/4829"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Changed title to work with our new PR compliance check, which helps changelog generation and automated releases, since that's entirely on us \ud83d\ude48 "
    },
    {
        "author": {
            "login": "stalet"
        },
        "body": "> Proposing to simply do this instead of doing our own error formatting: `console.error('\\n Mocha run failed:', err);`\r\n> \r\n> Thoughts @JoshuaKGoldberg @stalet?\r\n\r\nYeah i guess a simple error-handler is easier to maintain and understand - so I am all for it :+1: \r\n"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Seems like that broke some tests and I didn't have time to look into it \ud83d\ude1d"
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Included in [v10.4.0](https://github.com/mochajs/mocha/releases/tag/v10.4.0) :tada:  "
    }
]