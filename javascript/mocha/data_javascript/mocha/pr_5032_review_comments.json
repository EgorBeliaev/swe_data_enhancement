[
    {
        "title": "fix: better tracking of seen objects in error serialization"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "### Description of the Change\r\n\r\nBreaks circular references in before objects are serialized to prevent cryptic errors in parallel mode.\r\nE.g. (taken from the linked issue):\r\n```\r\n 1) Uncaught error outside test suite\r\n\r\n  0 passing (308ms)\r\n  1 failing\r\n\r\n  1) Uncaught error outside test suite:\r\n     Uncaught TypeError: Converting circular structure to JSON\r\n    --> starting at object with constructor 'Object'\r\n    |     property 'props' -> object with constructor 'Array'\r\n    --- index 0 closes the circle\r\n      at stringify (<anonymous>)\r\n      at writeChannelMessage (node:internal/child_process/serialization:120:20)\r\n      at process.target._send (node:internal/child_process:819:17)\r\n      at process.target.send (node:internal/child_process:719:19)\r\n      at processTicksAndRejections (node:internal/process/task_queues:93:5)\r\n```\r\n\r\nFor context we have seen this sort of error when using [nestjs](https://nestjs.com/) (e.g. when a module is missing a dependency, the error thrown contains a circular reference). It's likely something that would be good to fix in nestjs, but mocha would ideally handle it gracefully, regardless.\r\n\r\n### Alternate Designs\r\n\r\nWe could just strip all 'extra' props of the Error object and keep only the standard parts (e.g. `message`,`name` and `stack`). Would need to make sure those props are what we expectthem to be. This would be more performant but at the cost of losing useful information on the error object.\r\n\r\n### Why should this be in core?\r\n\r\nSaves people from having to turn parallel mode off to work out why their test failed.\r\n\r\n### Benefits\r\n\r\nErrors that contain circular references can be more easily debugged.\r\n\r\n### Possible Drawbacks\r\n\r\nThere is probably a performance penalty when inspecting the objects. The assumption is that it's not prohibitive.\r\n\r\n### Applicable issues\r\n\r\nThis will be a fix/patch release\r\n\r\nFixes #4552"
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "LGTM, nice and clean! \u2728 \r\n\r\n@voxpelli I know you were looking at errors too, so I'd want to defer to your review on this one too."
    },
    {
        "author": {
            "login": "linux-foundation-easycla"
        },
        "body": "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sam-super / name: Sam Adams  (171f77ec45d2bd82783c46bc0d4bee32195b95b9, e849e8de4f27d64544be20d083b8f32673ecf867, 695b17c73a24c33de57cfa30170c004c656a2e81, 79041d6f1dfba357955d85996ce4d02f9a655468, aee52d77670920e498eedb2500ac635b066593d3, fc8076bbefed83f5ff8d4a90b76d861147e61f83, 9a7d10917c5b3b666620bbc7ff39bc795c8409e8, 4013a93dda98a81258e75e190c457e0b40121920, e3b3413354fa6233b27c8beecdfc26f6e62d37f3, c3a112991650498245567330c74ac39e7a437b94)</li></ul><!-- Date Modified: 2024-06-26 08:18:47.594358 -->"
    },
    {
        "author": {
            "login": "coveralls"
        },
        "body": "\n[![Coverage Status](https://coveralls.io/builds/68319782/badge)](https://coveralls.io/builds/68319782)\n\ncoverage: 94.38% (+0.07%) from 94.314%\nwhen pulling **aee52d77670920e498eedb2500ac635b066593d3 on sam-super:issues/4552**\ninto **103c56b63542e36ba7a289ec25913d77bf2156b6 on mochajs:main**.\n"
    },
    {
        "author": {
            "login": "sam-super"
        },
        "body": "Worth a re-run of the failing test?"
    },
    {
        "author": {
            "login": "sam-super"
        },
        "body": "@Uzlopak looks like it might be a false positive. Windows tests ok for v14/v18 and i can't think of anything that might be low-level enough to affect just that set of versions."
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "FWIW @sam-super you don't need to keep merging in `main`, though I do appreciate the effort! \ud83d\ude42 \r\n\r\nI just wanted to wait a bit for a second review in case Pelle had time. That was time boxed till end of last week, so I'll go ahead and merge + release this now. Thanks again for the PR! \ud83d\ude4c "
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "Published in [`mocha@10.5.2`](https://github.com/mochajs/mocha/releases/tag/v10.5.2). \ud83d\ude80 "
    },
    {
        "author": {
            "login": "adrigzr"
        },
        "body": "Hello @sam-super @JoshuaKGoldberg, I have received the following exception randomly since this release. Do you know if it could be related to the change? \ud83e\udd14 \r\n\r\n```\r\n  1) Uncaught error outside test suite:\r\n     Uncaught TypeError: this.parent.titlePath is not a function\r\n      at Test.Runnable.titlePath (/node_modules/mocha/lib/runnable.js:217:22)\r\n      at Test.Runnable.fullTitle (/node_modules/mocha/lib/runnable.js:206:15)\r\n      at Test.serialize (/node_modules/mocha/lib/test.js:94:23)\r\n      at SerializableEvent.serialize (/node_modules/mocha/lib/nodejs/serializer.js:256:27)\r\n      at /node_modules/mocha/lib/nodejs/serializer.js:72:13\r\n      at Array.forEach (<anonymous>)\r\n      at SerializableWorkerResult.serialize (/node_modules/mocha/lib/nodejs/serializer.js:71:17)\r\n      at serialize (/node_modules/mocha/lib/nodejs/serializer.js:366:15)\r\n      at /node_modules/mocha/lib/nodejs/worker.js:127:28\r\n      at ParallelBuffered.done (/node_modules/mocha/lib/nodejs/reporters/parallel-buffered.js:151:5)\r\n```\r\n\r\nRegards,"
    },
    {
        "author": {
            "login": "JoshuaKGoldberg"
        },
        "body": "Ah looks like it was! #5170 cc @sam-super "
    },
    {
        "author": {
            "login": "voxpelli"
        },
        "body": "Seems to have caused a regression: https://github.com/mochajs/mocha/issues/5188"
    }
]