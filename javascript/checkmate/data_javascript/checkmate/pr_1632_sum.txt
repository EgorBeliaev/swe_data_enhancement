### Instructions for Repository Update

1. **Refactor 'Uptime' Home Page Components:**
   - Break down large components into smaller, reusable components stored in individual files.
   - Remove all ternary render expressions for clarity.
   - Extract monitor fetching logic into a custom hook and use its internal loading state to manage skeletons.

2. **Improve Debouncing Logic:**
   - Simplify search debouncing logic to improve performance.
   - Update `useDebounce` to ensure `delay` is non-negative to prevent errors.

3. **Consistent Loading States:**
   - Ensure uniform loading states across components.
   - For components with conditional rendering, use null or empty fragments as fallbacks.

4. **Code Optimization and Cleanup:**
   - Use `React.memo` for `MonitorDataTable` to prevent unnecessary re-renders.
   - Memoize `handleSort` function using `useCallback` to avoid recreations.
   - Consolidate console logs for cleaner production output.
   - Remove or clean up commented debug notes in server files.

5. **PropTypes and Styling Improvements:**
   - Adjust `percentage` prop type in `Host/index.jsx` from string to number.
   - Update inconsistent JSDoc and extract inline styles to styled components or themes for maintainability.

6. **Code Import Restructuring:**
   - Organize imports into groups (external dependencies, custom and local components, hooks) for better readability.

7. **Address Large PR Issues:**
   - Consider breaking down the PR into smaller, focused changes to improve manageability.

By following these instructions, the repository will benefit from improved code readability, maintainability, and performance.