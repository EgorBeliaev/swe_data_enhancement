### Instructions for Programmer:

1. **Frontend Fixes:**
    - Update the check counts calculation in `Client/src/Pages/Uptime/Details/index.jsx` to handle null or undefined values. Ensure `monitor.stats?.upChecks` is an array using `Array.isArray` before applying `reduce`.
    - Amend incident check count logic similarly to ensure accurate aggregation.

2. **Backend Refactoring:**
    - Move query pipeline logic into `monitorModuleQueries.js` and import them into `monitorModule.js` to improve modularity and readability.
    - Verify that `buildUptimeDetailsPipeline` and `buildHardwareDetailsPipeline` functions are correctly implemented and thoroughly tested.

3. **Documentation:**
    - Add comprehensive documentation for the new `monitorModuleQueries.js` module to clarify the purpose and usage of each function. Include inline comments for better understanding and maintenance.

4. **Performance and Optimization:**
    - Monitor the performance of `$project` and `$lookup` stages in `monitorModuleQueries.js` to prevent potential bloat and ensure scalability. Consider caching or narrower data slices if necessary.

5. **Testing and Risk Management:**
    - Ensure thorough unit tests and integration tests cover all changes, particularly edge cases with malformed or missing data.
    - Check existing error-handling mechanisms and extend them if needed to cover new cases introduced by refactoring.

By following these instructions, you will ensure accurate uptime check displays, improved code maintainability, and enhanced system reliability.