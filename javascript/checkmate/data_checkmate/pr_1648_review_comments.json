[
    {
        "title": "fix: fe/uptime details refactor"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This PR is part of a series of PRs to firm up the FE and try for more consistent UI, loading states, and error handling\r\n\r\nThis PR significantly simplifies and cleans up the Uptime Details components.\r\n\r\n- [x] Break UI up into components\r\n- [x] Extract network operations to hooks\r\n- [x] Implement consistent loading states and skeletons\r\n- [x] Simplify code structure\r\n- [x] Use reusable Table component instead of one off table\r\n\r\n```js\r\n<Stack gap={theme.spacing(10)}>\r\n\t<Breadcrumbs list={BREADCRUMBS} />\r\n\t<MonitorHeader\r\n\t\tisAdmin={isAdmin}\r\n\t\tshouldRender={!monitorIsLoading}\r\n\t\tmonitor={monitor}\r\n\t/>\r\n\t<StatusBoxes\r\n\t\tshouldRender={!monitorIsLoading}\r\n\t\tmonitor={monitor}\r\n\t\tcertificateExpiry={certificateExpiry}\r\n\t/>\r\n\t<TimeFramePicker\r\n\t\tshouldRender={!monitorIsLoading}\r\n\t\tdateRange={dateRange}\r\n\t\tsetDateRange={setDateRange}\r\n\t/>\r\n\t<ChartBoxes\r\n\t\tshouldRender={!monitorIsLoading}\r\n\t\tmonitor={monitor}\r\n\t\tuiTimezone={uiTimezone}\r\n\t\tdateRange={dateRange}\r\n\t\tdateFormat={dateFormat}\r\n\t\thoveredUptimeData={hoveredUptimeData}\r\n\t\tsetHoveredUptimeData={setHoveredUptimeData}\r\n\t\thoveredIncidentsData={hoveredIncidentsData}\r\n\t\tsetHoveredIncidentsData={setHoveredIncidentsData}\r\n\t/>\r\n\t<ResponseTimeChart\r\n\t\tshouldRender={!monitorIsLoading}\r\n\t\tmonitor={monitor}\r\n\t\tdateRange={dateRange}\r\n\t/>\r\n\t<ResponseTable\r\n\t\tshouldRender={!checksAreLoading}\r\n\t\tchecks={checks}\r\n\t\tuiTimezone={uiTimezone}\r\n\t\tpage={page}\r\n\t\tsetPage={handlePageChange}\r\n\t\trowsPerPage={rowsPerPage}\r\n\t\tsetRowsPerPage={handleChangeRowsPerPage}\r\n\t\tchecksCount={checksCount}\r\n\t/>\r\n</Stack>\r\n```\r\n\r\nvs\r\n\r\n```js\r\n<Box className=\"monitor-details\">\r\n\t{loading ? (\r\n\t\t<SkeletonLayout />\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<Breadcrumbs list={BREADCRUMBS} />\r\n\t\t\t<Stack\r\n\t\t\t\tgap={theme.spacing(10)}\r\n\t\t\t\tmt={theme.spacing(10)}\r\n\t\t\t>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tgap={theme.spacing(2)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tcomponent=\"h1\"\r\n\t\t\t\t\t\t\tvariant=\"h1\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{monitor.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\theight=\"fit-content\"\r\n\t\t\t\t\t\t\tgap={theme.spacing(2)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* TODO there is  a tooltip at BarChart component. Wrap the Tooltip on our own component */}\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\ttitle={statusMsg[determineState(monitor)]}\r\n\t\t\t\t\t\t\t\tdisableInteractive\r\n\t\t\t\t\t\t\t\tslotProps={{\r\n\t\t\t\t\t\t\t\t\tpopper: {\r\n\t\t\t\t\t\t\t\t\t\tmodifiers: [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"offset\",\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toffset: [0, -8],\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\"& .MuiTooltip-tooltip\": {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpx: theme.spacing(4),\r\n\t\t\t\t\t\t\t\t\t\t\t\tpy: theme.spacing(3),\r\n\t\t\t\t\t\t\t\t\t\t\t\tborder: 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: theme.palette.primary.lowContrast,\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: theme.shape.borderRadius,\r\n\t\t\t\t\t\t\t\t\t\t\t\tboxShadow: theme.shape.boxShadow,\r\n\t\t\t\t\t\t\t\t\t\t\t\t/* TODO Font size should point to theme */\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t<PulseDot color={statusColor[determineState(monitor)]} />\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcomponent=\"h2\"\r\n\t\t\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{monitor.url?.replace(/^https?:\\/\\//, \"\") || \"...\"}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\tmt={theme.spacing(1)}\r\n\t\t\t\t\t\t\t\tml={theme.spacing(6)}\r\n\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\"&:before\": {\r\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\t\t\t\tcontent: `\"\"`,\r\n\t\t\t\t\t\t\t\t\t\twidth: 4,\r\n\t\t\t\t\t\t\t\t\t\theight: 4,\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"50%\",\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: theme.palette.primary.contrastTextTertiary,\r\n\t\t\t\t\t\t\t\t\t\topacity: 0.8,\r\n\t\t\t\t\t\t\t\t\t\tleft: -9,\r\n\t\t\t\t\t\t\t\t\t\ttop: \"50%\",\r\n\t\t\t\t\t\t\t\t\t\ttransform: \"translateY(-50%)\",\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* Checking every {formatDurationRounded(monitor?.interval)}. */}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\theight={34}\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tml: \"auto\",\r\n\t\t\t\t\t\t\talignSelf: \"flex-end\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={() => navigate(`/uptime/configure/${monitorId}`)}\r\n\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\tpx: theme.spacing(5),\r\n\t\t\t\t\t\t\t\t\t\"& svg\": {\r\n\t\t\t\t\t\t\t\t\t\tmr: theme.spacing(3),\r\n\t\t\t\t\t\t\t\t\t\t\"& path\": {\r\n\t\t\t\t\t\t\t\t\t\t\t/* Should always be contrastText for the button color */\r\n\t\t\t\t\t\t\t\t\t\t\tstroke: theme.palette.secondary.contrastText,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SettingsIcon /> Configure\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tgap={theme.spacing(8)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<StatBox\r\n\t\t\t\t\t\t/* sx={getStatusStyles(determineState(monitor))} */\r\n\t\t\t\t\t\t/* statusStyles[determineState(monitor)] */\r\n\t\t\t\t\t\tgradient={true}\r\n\t\t\t\t\t\tstatus={determineState(monitor)}\r\n\t\t\t\t\t\theading={\"active for\"}\r\n\t\t\t\t\t\tsubHeading={splitDuration(monitor?.uptimeStreak)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StatBox\r\n\t\t\t\t\t\theading=\"last check\"\r\n\t\t\t\t\t\tsubHeading={splitDuration(monitor?.timeSinceLastCheck)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StatBox\r\n\t\t\t\t\t\theading=\"last response time\"\r\n\t\t\t\t\t\tsubHeading={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{monitor?.latestResponseTime}\r\n\t\t\t\t\t\t\t\t<Typography component=\"span\">{\"ms\"}</Typography>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StatBox\r\n\t\t\t\t\t\theading=\"certificate expiry\"\r\n\t\t\t\t\t\tsubHeading={\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\tfontSize={13}\r\n\t\t\t\t\t\t\t\tcolor={theme.palette.primary.contrastText}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{certificateExpiry}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t\talignItems=\"flex-end\"\r\n\t\t\t\t\t\tgap={theme.spacing(4)}\r\n\t\t\t\t\t\tmb={theme.spacing(8)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tShowing statistics for past{\" \"}\r\n\t\t\t\t\t\t\t{dateRange === \"day\"\r\n\t\t\t\t\t\t\t\t? \"24 hours\"\r\n\t\t\t\t\t\t\t\t: dateRange === \"week\"\r\n\t\t\t\t\t\t\t\t\t? \"7 days\"\r\n\t\t\t\t\t\t\t\t\t: \"30 days\"}\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<ButtonGroup sx={{ height: 32 }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"group\"\r\n\t\t\t\t\t\t\t\tfilled={(dateRange === \"day\").toString()}\r\n\t\t\t\t\t\t\t\tonClick={() => setDateRange(\"day\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDay\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"group\"\r\n\t\t\t\t\t\t\t\tfilled={(dateRange === \"week\").toString()}\r\n\t\t\t\t\t\t\t\tonClick={() => setDateRange(\"week\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tWeek\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"group\"\r\n\t\t\t\t\t\t\t\tfilled={(dateRange === \"month\").toString()}\r\n\t\t\t\t\t\t\t\tonClick={() => setDateRange(\"month\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\t\t\tgap={theme.spacing(8)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ChartBox>\r\n\t\t\t\t\t\t\t<Stack>\r\n\t\t\t\t\t\t\t\t<IconBox>\r\n\t\t\t\t\t\t\t\t\t<UptimeIcon />\r\n\t\t\t\t\t\t\t\t</IconBox>\r\n\t\t\t\t\t\t\t\t<Typography component=\"h2\">Uptime</Typography>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<Stack justifyContent=\"space-between\">\r\n\t\t\t\t\t\t\t\t<Box position=\"relative\">\r\n\t\t\t\t\t\t\t\t\t<Typography>Total Checks</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"span\">\r\n\t\t\t\t\t\t\t\t\t\t{hoveredUptimeData !== null\r\n\t\t\t\t\t\t\t\t\t\t\t? hoveredUptimeData.totalChecks\r\n\t\t\t\t\t\t\t\t\t\t\t: (monitor?.groupedUpChecks?.reduce((count, checkGroup) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn count + checkGroup.totalChecks;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}, 0) ?? 0)}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t{hoveredUptimeData !== null && hoveredUptimeData.time !== null && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h5\"\r\n\t\t\t\t\t\t\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\t\t\t\t\t\t\ttop=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize={11}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.palette.primary.contrastTextTertiary}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{formatDateWithTz(\r\n\t\t\t\t\t\t\t\t\t\t\t\thoveredUptimeData._id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdateFormat,\r\n\t\t\t\t\t\t\t\t\t\t\t\tuiTimezone\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t{hoveredUptimeData !== null\r\n\t\t\t\t\t\t\t\t\t\t\t? \"Avg Response Time\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"Uptime Percentage\"}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"span\">\r\n\t\t\t\t\t\t\t\t\t\t{hoveredUptimeData !== null\r\n\t\t\t\t\t\t\t\t\t\t\t? Math.floor(hoveredUptimeData?.avgResponseTime ?? 0)\r\n\t\t\t\t\t\t\t\t\t\t\t: Math.floor(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t((monitor?.upChecks?.totalChecks ?? 0) /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(monitor?.totalChecks ?? 1)) *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t100\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<Typography component=\"span\">\r\n\t\t\t\t\t\t\t\t\t\t\t{hoveredUptimeData !== null ? \" ms\" : \" %\"}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<UpBarChart\r\n\t\t\t\t\t\t\t\tmonitor={monitor}\r\n\t\t\t\t\t\t\t\ttype={dateRange}\r\n\t\t\t\t\t\t\t\tonBarHover={setHoveredUptimeData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ChartBox>\r\n\t\t\t\t\t\t<ChartBox>\r\n\t\t\t\t\t\t\t<Stack>\r\n\t\t\t\t\t\t\t\t<IconBox>\r\n\t\t\t\t\t\t\t\t\t<IncidentsIcon />\r\n\t\t\t\t\t\t\t\t</IconBox>\r\n\t\t\t\t\t\t\t\t<Typography component=\"h2\">Incidents</Typography>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<Box position=\"relative\">\r\n\t\t\t\t\t\t\t\t<Typography>Total Incidents</Typography>\r\n\t\t\t\t\t\t\t\t<Typography component=\"span\">\r\n\t\t\t\t\t\t\t\t\t{hoveredIncidentsData !== null\r\n\t\t\t\t\t\t\t\t\t\t? hoveredIncidentsData.totalChecks\r\n\t\t\t\t\t\t\t\t\t\t: (monitor?.groupedDownChecks?.reduce((count, checkGroup) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn count + checkGroup.totalChecks;\r\n\t\t\t\t\t\t\t\t\t\t\t}, 0) ?? 0)}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{hoveredIncidentsData !== null &&\r\n\t\t\t\t\t\t\t\t\thoveredIncidentsData.time !== null && (\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h5\"\r\n\t\t\t\t\t\t\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\t\t\t\t\t\t\ttop=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize={11}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.palette.primary.contrastTextTertiary}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{formatDateWithTz(\r\n\t\t\t\t\t\t\t\t\t\t\t\thoveredIncidentsData._id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdateFormat,\r\n\t\t\t\t\t\t\t\t\t\t\t\tuiTimezone\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<DownBarChart\r\n\t\t\t\t\t\t\t\tmonitor={monitor}\r\n\t\t\t\t\t\t\t\ttype={dateRange}\r\n\t\t\t\t\t\t\t\tonBarHover={setHoveredIncidentsData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ChartBox>\r\n\t\t\t\t\t\t<ChartBox justifyContent=\"space-between\">\r\n\t\t\t\t\t\t\t<Stack>\r\n\t\t\t\t\t\t\t\t<IconBox>\r\n\t\t\t\t\t\t\t\t\t<AverageResponseIcon />\r\n\t\t\t\t\t\t\t\t</IconBox>\r\n\t\t\t\t\t\t\t\t<Typography component=\"h2\">Average Response Time</Typography>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<ResponseGaugeChart avgResponseTime={monitor.avgResponseTime ?? 0} />\r\n\t\t\t\t\t\t</ChartBox>\r\n\t\t\t\t\t\t<ChartBox sx={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\t\tpt={theme.spacing(8)}\r\n\t\t\t\t\t\t\t\tpl={theme.spacing(8)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconBox>\r\n\t\t\t\t\t\t\t\t\t<ResponseTimeIcon />\r\n\t\t\t\t\t\t\t\t</IconBox>\r\n\t\t\t\t\t\t\t\t<Typography component=\"h2\">Response Times</Typography>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<MonitorDetailsAreaChart\r\n\t\t\t\t\t\t\t\tchecks={monitor.groupedChecks ?? []}\r\n\t\t\t\t\t\t\t\tdateRange={dateRange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ChartBox>\r\n\t\t\t\t\t\t<ChartBox\r\n\t\t\t\t\t\t\tgap={theme.spacing(8)}\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tflex: \"100%\",\r\n\t\t\t\t\t\t\t\theight: \"fit-content\",\r\n\t\t\t\t\t\t\t\t\"& nav\": { mt: theme.spacing(12) },\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Stack mb={theme.spacing(8)}>\r\n\t\t\t\t\t\t\t\t<IconBox>\r\n\t\t\t\t\t\t\t\t\t<HistoryIcon />\r\n\t\t\t\t\t\t\t\t</IconBox>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\r\n\t\t\t\t\t\t\t\t\tcolor={theme.palette.primary.contrastTextSecondary}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tHistory\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t<PaginationTable\r\n\t\t\t\t\t\t\t\tmonitorId={monitorId}\r\n\t\t\t\t\t\t\t\tdateRange={dateRange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ChartBox>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Box>\r\n\t\t\t</Stack>\r\n\t\t</>\r\n\t)}\r\n</Box>\r\n```   "
    },
    {
        "author": {
            "login": "llamapreview"
        },
        "body": "# Auto Pull Request Review from LlamaPReview\n\n## Large PR Notification\n\nDear contributor,\n\nThank you for your substantial contribution to this project. LlamaPReview has detected that this Pull Request contains a large volume of changes, which exceeds our current processing capacity.\n\n### Details:\n- PR and related contents total size: Approximately 117,202 characters\n- Current limit: 50,000 characters\n\n### Next steps:\n1. Consider breaking this PR into smaller, more focused changes if possible.\n2. For manual review, please reach out to your team members or maintainers.\n\nWe appreciate your understanding and commitment to improving this project. Your contributions are valuable, and we want to ensure they receive the attention they deserve.\n\nLlamaPReview is continuously evolving to better serve the community. Share your thoughts on handling large PRs in our [GitHub Discussions](https://github.com/JetXu-LLM/LlamaPReview-site/discussions) - your feedback helps us improve and expand our capabilities.\n\nIf you have any questions or need assistance, our community and support team are here to help.\n\nBest regards,\nLlamaPReview Team"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "**Actionable comments posted: 7**\n\n<details>\n<summary>\ud83d\udd2d Outside diff range comments (2)</summary><blockquote>\n\n<details>\n<summary>Client/src/Pages/Uptime/Home/Components/Host/index.jsx (1)</summary><blockquote>\n\nLine range hint `46-49`: **Hold up, something's not adding up with these PropTypes!**\n\nThe `percentage` prop is being used with a `%` suffix, suggesting it's a number, but it's typed as a string.\n\n```diff\n Host.propTypes = {\n   title: PropTypes.string,\n   percentageColor: PropTypes.string,\n-  percentage: PropTypes.string,\n+  percentage: PropTypes.number,\n   url: PropTypes.string,\n };\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/CustomLabels.jsx (1)</summary><blockquote>\n\nLine range hint `14-18`: **Yo, we need some safety nets here!**\n\nAccessing `firstDataPoint._id` without checking could make your app go boom if the data point is missing.\n\n```diff\n-\t\t\t\t{formatDateWithTz(firstDataPoint._id, dateFormat, uiTimezone)}\n+\t\t\t\t{firstDataPoint?._id ? formatDateWithTz(firstDataPoint._id, dateFormat, uiTimezone) : ''}\n```\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>\ud83e\uddf9 Nitpick comments (24)</summary><blockquote>\n\n<details>\n<summary>Client/src/Components/Dot/index.jsx (2)</summary><blockquote>\n\n`6-14`: **Yo dawg, let's make these styles more robust, eh?**\n\nThe styles need a bit of tweaking to be more reliable across different contexts:\n- The `content` property isn't doing anything here since we're using a `<span>`\n- Missing `display: inline-block` could cause layout inconsistencies\n\nHere's a better way to style it:\n\n```diff\n <span\n   style={{\n-    content: '\"\"',\n+    display: \"inline-block\",\n     width: size,\n     height: size,\n     borderRadius: \"50%\",\n     backgroundColor: color,\n     opacity: 0.8,\n   }}\n />\n```\n\n---\n\n`18-21`: **These PropTypes are looking a bit loose, buddy!**\n\nConsider adding `isRequired` for essential props and using more specific PropTypes like `oneOf` for color validation.\n\nHere's a more robust PropTypes definition:\n\n```diff\n Dot.propTypes = {\n-  color: PropTypes.string,\n-  size: PropTypes.string,\n+  color: PropTypes.oneOf([\n+    \"gray\",\n+    \"primary\",\n+    \"secondary\",\n+    \"error\",\n+    \"warning\",\n+    \"info\",\n+    \"success\"\n+  ]),\n+  size: PropTypes.string\n };\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Home/Components/Host/index.jsx (2)</summary><blockquote>\n\n`4-4`: **That import path's deeper than mom's spaghetti, eh?**\n\nConsider setting up path aliases to simplify these deep import paths. Instead of using relative paths, you could use something like:\n```diff\n- import Dot from \"../../../../../Components/Dot\";\n+ import Dot from \"@components/Dot\";\n```\n\nWould you like me to help set up path aliases in your webpack/babel config?\n\n---\n\n`30-30`: **The Dot's looking a bit plain, don't you think?**\n\nSince this Dot is being used to indicate status alongside a percentage, we could make it more semantic by passing a color prop that matches `percentageColor`.\n\n```diff\n- <Dot />\n+ <Dot color={percentageColor} />\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/index.jsx (1)</summary><blockquote>\n\n`31-78`: **Knees weak, arms heavy\u2014ensure we catch errors in custom hooks.**  \nWhile your custom hooks (`useMonitorFetch`, `useCertificateFetch`, `useChecksFetch`) neatly encapsulate data fetching, it might be beneficial to handle potential errors or warnings inside them. Real-time error handling can protect you from dropping that precious pasta.\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/ResponseTimeChart.jsx (1)</summary><blockquote>\n\n`25-29`: **Props validation needs more sauce, fam!**\n\nThe `monitor` prop type could be more specific to catch potential issues early.\n\n```diff\n ResponseTImeChart.propTypes = {\n \tshouldRender: PropTypes.bool,\n-\tmonitor: PropTypes.object,\n+\tmonitor: PropTypes.shape({\n+\t\tgroupedChecks: PropTypes.arrayOf(PropTypes.object)\n+\t}),\n \tdateRange: PropTypes.string,\n };\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/ConfigButton/index.jsx (1)</summary><blockquote>\n\n`17-17`: **Let's make this callback fresh like mom's spaghetti!**\n\nThe navigation callback should be memoized to prevent unnecessary re-renders.\n\n```diff\n+\tconst handleNavigate = useCallback(() => \n+\t\tnavigate(`/uptime/configure/${monitorId}`), \n+\t\t[navigate, monitorId]\n+\t);\n+\n \treturn (\n \t\t<Box alignSelf=\"flex-end\">\n \t\t\t<Button\n \t\t\t\tvariant=\"contained\"\n \t\t\t\tcolor=\"secondary\"\n-\t\t\t\tonClick={() => navigate(`/uptime/configure/${monitorId}`)}\n+\t\t\t\tonClick={handleNavigate}\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Hooks/useMonitorFetch.jsx (1)</summary><blockquote>\n\n`7-7`: **Yo, these state names are making me lose myself!**\n\nThe state setter name `setMonitorsIsLoading` (plural) doesn't match the state variable `monitorIsLoading` (singular).\n\n```diff\n-\tconst [monitorIsLoading, setMonitorsIsLoading] = useState(false);\n+\tconst [monitorIsLoading, setMonitorIsLoading] = useState(false);\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Hooks/useChecksFetch.jsx (2)</summary><blockquote>\n\n`6-12`: **Consider adopting TypeScript for better type safety.**\n\nThe hook accepts multiple parameters that would benefit from TypeScript interfaces, especially for complex objects like `dateRange`.\n\n---\n\n`40-40`: **Add debouncing for frequent parameter changes.**\n\nConsider using `useDebounce` hook from a utility library like `use-debounce` to prevent excessive API calls when parameters change frequently.\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Hooks/useCertificateFetch.jsx (1)</summary><blockquote>\n\n`16-42`: **Optimize certificate fetching with useMemo.**\n\nThe date formatting operation could be memoized to prevent unnecessary recalculations.\n\n\n```diff\n+ import { useMemo } from 'react';\n// ... inside the hook\n+ const formattedDate = useMemo(() => {\n+   if (!res?.data?.data?.certificateDate) return \"N/A\";\n+   return formatDateWithTz(res.data.data.certificateDate, certificateDateFormat, uiTimezone) ?? \"N/A\";\n+ }, [res?.data?.data?.certificateDate, certificateDateFormat, uiTimezone]);\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/TimeFramePicker/index.jsx (1)</summary><blockquote>\n\n`23-23`: **Extract time periods to constants.**\n\nConsider moving the time period mappings to constants to improve maintainability.\n\n\n```javascript\nconst TIME_PERIOD_LABELS = {\n  day: \"24 hours\",\n  week: \"7 days\",\n  month: \"30 days\"\n};\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/MonitorHeader/index.jsx (1)</summary><blockquote>\n\n`33-33`: **Use URL API for robust URL handling.**\n\nConsider using the URL API instead of regex for more robust URL parsing.\n\n\n```diff\n- {monitor?.url?.replace(/^https?:\\/\\//, \"\") || \"...\"}\n+ {monitor?.url ? new URL(monitor.url).host : \"...\"}\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/StatusBoxes/index.jsx (1)</summary><blockquote>\n\n`77-81`: **Yo dawg, let's make these prop types more specific!**\n\nThe `monitor` prop type is too loose. We should define the exact shape of the monitor object to catch potential issues early.\n\n```diff\n StatusBoxes.propTypes = {\n   shouldRender: PropTypes.bool,\n-  monitor: PropTypes.object,\n+  monitor: PropTypes.shape({\n+    uptimeStreak: PropTypes.number,\n+    timeSinceLastCheck: PropTypes.number,\n+    latestResponseTime: PropTypes.number\n+  }),\n   certificateExpiry: PropTypes.string,\n };\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/DownBarChart.jsx (1)</summary><blockquote>\n\nLine range hint `56-73`: **Cleanup needed: Remove that CAIO_REVIEW comment!**\n\nAlso, that nested ternary operation is making my knees weak. Let's make it more readable.\n\n```diff\n- fill={\n-   hoveredBarIndex === index\n-     ? theme.palette.error.main\n-     : chartHovered\n-       ? theme.palette.error.light\n-       : theme.palette.error.main\n- }\n+ fill={\n+   getBarFillColor({\n+     isHovered: hoveredBarIndex === index,\n+     isChartHovered: chartHovered,\n+     theme\n+   })\n+ }\n```\n\nAdd this helper function:\n```javascript\nconst getBarFillColor = ({ isHovered, isChartHovered, theme }) => {\n  if (isHovered) return theme.palette.error.main;\n  return isChartHovered ? theme.palette.error.light : theme.palette.error.main;\n};\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/ResponseTable/index.jsx (1)</summary><blockquote>\n\n`23-55`: **Performance optimization: Move headers array outside component!**\n\nThe headers array is being recreated on every render. Let's move it outside to prevent unnecessary recreations.\n\n```diff\n+ const TABLE_HEADERS = [\n+   {\n+     id: \"status\",\n+     content: \"Status\",\n+     render: (row) => {\n+       const status = row.status === true ? \"up\" : \"down\";\n+       return (\n+         <StatusLabel\n+           status={status}\n+           text={status}\n+           customStyles={{ textTransform: \"capitalize\" }}\n+         />\n+       );\n+     },\n+   },\n+   // ... rest of the headers\n+ ];\n\n const ResponseTable = ({\n   shouldRender = true,\n   checks,\n   // ... other props\n }) => {\n-  const headers = [ ... ];  // Remove this\n   // ... rest of the component\n   return (\n     <Table\n-      headers={headers}\n+      headers={TABLE_HEADERS}\n       // ... other props\n     />\n   );\n };\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/UpBarChart.jsx (1)</summary><blockquote>\n\nLine range hint `7-14`: **Optimize performance: Memoize getThemeColor function!**\n\nThis function is being recreated on every render. Let's memoize it using useMemo.\n\n```diff\n+ import { memo, useState, useMemo } from \"react\";\n\n- const getThemeColor = (responseTime) => {\n+ const useThemeColor = () => useMemo(() => (responseTime) => {\n   if (responseTime < 200) {\n     return \"success\";\n   } else if (responseTime < 300) {\n     return \"warning\";\n   } else {\n     return \"error\";\n   }\n- };\n+ }, []);\n\n const UpBarChart = memo(({ monitor, type, onBarHover }) => {\n+  const getThemeColor = useThemeColor();\n   // ... rest of the component\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Utils/timeUtils.js (1)</summary><blockquote>\n\n`80-95`: **Consider consolidating duration formatting functions.**\n\nThe new `getHumanReadableDuration` function has similar functionality to the existing `formatDurationSplit` function. Both return an object with time and units/format.\n\nConsider consolidating these functions to reduce code duplication:\n\n```diff\n-export const getHumanReadableDuration = (ms) => {\n-\tconst durationObj = dayjs.duration(ms);\n-\tif (durationObj.asDays() >= 1) {\n-\t\tconst days = Math.floor(durationObj.asDays());\n-\t\treturn { time: days, units: days === 1 ? \"day\" : \"days\" };\n-\t} else if (durationObj.asHours() >= 1) {\n-\t\tconst hours = Math.floor(durationObj.asHours());\n-\t\treturn { time: hours, units: hours === 1 ? \"hour\" : \"hours\" };\n-\t} else if (durationObj.asMinutes() >= 1) {\n-\t\tconst minutes = Math.floor(durationObj.asMinutes());\n-\t\treturn { time: minutes, units: minutes === 1 ? \"minute\" : \"minutes\" };\n-\t} else {\n-\t\tconst seconds = Math.floor(durationObj.asSeconds());\n-\t\treturn { time: seconds, units: seconds === 1 ? \"second\" : \"seconds\" };\n-\t}\n-};\n\n+export const formatDurationSplit = (ms) => {\n+\tconst durationObj = dayjs.duration(ms);\n+\tif (durationObj.asDays() >= 1) {\n+\t\tconst days = Math.floor(durationObj.asDays());\n+\t\treturn { time: days, format: days === 1 ? \"day\" : \"days\" };\n+\t} else if (durationObj.asHours() >= 1) {\n+\t\tconst hours = Math.floor(durationObj.asHours());\n+\t\treturn { time: hours, format: hours === 1 ? \"hour\" : \"hours\" };\n+\t} else if (durationObj.asMinutes() >= 1) {\n+\t\tconst minutes = Math.floor(durationObj.asMinutes());\n+\t\treturn { time: minutes, format: minutes === 1 ? \"minute\" : \"minutes\" };\n+\t} else {\n+\t\tconst seconds = Math.floor(durationObj.asSeconds());\n+\t\treturn { time: seconds, format: seconds === 1 ? \"second\" : \"seconds\" };\n+\t}\n+};\n\n+export const getHumanReadableDuration = formatDurationSplit;\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/ChartBoxes/index.jsx (3)</summary><blockquote>\n\n`16-26`: **Consider adding prop defaults and destructuring improvements.**\n\nThe component could benefit from default values for optional props and cleaner prop destructuring.\n\n```diff\n-const ChartBoxes = ({\n-\tshouldRender = true,\n-\tmonitor,\n-\tdateRange,\n-\tuiTimezone,\n-\tdateFormat,\n-\thoveredUptimeData,\n-\tsetHoveredUptimeData,\n-\thoveredIncidentsData,\n-\tsetHoveredIncidentsData,\n-}) => {\n+const ChartBoxes = ({\n+\tshouldRender = true,\n+\tmonitor,\n+\tdateRange,\n+\tuiTimezone,\n+\tdateFormat,\n+\thoveredUptimeData = null,\n+\tsetHoveredUptimeData = () => {},\n+\thoveredIncidentsData = null,\n+\tsetHoveredIncidentsData = () => {},\n+}) => {\n```\n\n---\n\n`49-51`: **Simplify complex calculations.**\n\nThe nested calculations with optional chaining could be simplified for better readability.\n\n```diff\n-monitor?.groupedUpChecks?.reduce((count, checkGroup) => {\n-\treturn count + checkGroup.totalChecks;\n-}, 0) ?? 0\n\n+const totalUpChecks = monitor?.groupedUpChecks?.reduce(\n+\t(count, { totalChecks }) => count + totalChecks,\n+\t0\n+) ?? 0;\n\n-((monitor?.upChecks?.totalChecks ?? 0) /\n-\t(monitor?.totalChecks ?? 1)) *\n-\t100\n\n+const uptimePercentage = (monitor?.upChecks?.totalChecks ?? 0) * 100 / (monitor?.totalChecks ?? 1);\n```\n\n\nAlso applies to: 73-75\n\n---\n\n`123-123`: **Add error boundary for chart components.**\n\nThe ResponseGaugeChart and other chart components could throw errors if the monitor data is malformed.\n\nConsider wrapping chart components in an error boundary:\n\n```jsx\nimport { ErrorBoundary } from 'react-error-boundary';\n\nconst ChartErrorFallback = () => (\n  <Typography color=\"error\">\n    Failed to load chart data\n  </Typography>\n);\n\n// Usage\n<ErrorBoundary FallbackComponent={ChartErrorFallback}>\n  <ResponseGaugeChart avgResponseTime={monitor.avgResponseTime ?? 0} />\n</ErrorBoundary>\n```\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/ChartBox.jsx (3)</summary><blockquote>\n\n`1-5`: **Yo dawg, consider moving IconBox closer to its usage!**\n\nThat deep import path `../../../../../Components/IconBox` is making me nervous like mom's spaghetti. Consider moving the `IconBox` component to a more accessible location, like a shared components directory at a higher level.\n\n---\n\n`9-52`: **These styles are longer than a rap battle, fam!**\n\nThe styling object is getting pretty hefty. Consider these improvements to keep it clean:\n\n1. Extract the styles into a separate styled component or styles object\n2. Replace magic numbers with theme values:\n\n```diff\n-\t\t\t\t\tfontSize: 15,\n+\t\t\t\t\tfontSize: theme.typography.fontSize.small,\n-\t\t\t\t\tfontSize: 13,\n+\t\t\t\t\tfontSize: theme.typography.fontSize.xs,\n-\t\t\t\t\tfontSize: 20,\n+\t\t\t\t\tfontSize: theme.typography.fontSize.large,\n```\n\n---\n\n`70-75`: **Prop validation's got the right flow, but let's make it tighter!**\n\nConsider adding more specific validation for the height prop to ensure it's a valid CSS value:\n\n```diff\n-\theight: PropTypes.string,\n+\theight: PropTypes.oneOfType([\n+\t\tPropTypes.string,\n+\t\tPropTypes.number\n+\t]),\n```\n\nAlso, consider adding default props for better documentation:\n```javascript\nChartBox.defaultProps = {\n  height: \"300px\",\n  children: null,\n};\n```\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>\ud83d\udcdc Review details</summary>\n\n**Configuration used: .coderabbit.yaml**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 66ba0efe7a080a2294f65f544ca71454a097a16b and b2095670ff59b5e9c6a3a4065b4c5145bd414de5.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (30)</summary>\n\n* `Client/src/Components/Dot/index.jsx` (1 hunks)\n* `Client/src/Components/Table/TablePagination/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/ChartBoxes/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/ChartBoxes/skeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/ChartBox.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/CustomLabels.jsx` (2 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/DownBarChart.jsx` (2 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/ResponseTimeChart.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/ResponseTimeChartSkeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/Charts/UpBarChart.jsx` (3 hunks)\n* `Client/src/Pages/Uptime/Details/Components/ConfigButton/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/MonitorHeader/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/MonitorHeader/skeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/ResponseTable/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/ResponseTable/skeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/StatusBoxes/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/StatusBoxes/skeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/TimeFramePicker/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Components/TimeFramePicker/skeleton.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Hooks/useCertificateFetch.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Hooks/useChecksFetch.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/Hooks/useMonitorFetch.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/PaginationTable/index.jsx` (0 hunks)\n* `Client/src/Pages/Uptime/Details/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Details/skeleton.jsx` (0 hunks)\n* `Client/src/Pages/Uptime/Details/styled.jsx` (0 hunks)\n* `Client/src/Pages/Uptime/Home/Components/Host/index.jsx` (2 hunks)\n* `Client/src/Pages/Uptime/Home/index.jsx` (3 hunks)\n* `Client/src/Routes/index.jsx` (3 hunks)\n* `Client/src/Utils/timeUtils.js` (2 hunks)\n\n</details>\n\n<details>\n<summary>\ud83d\udca4 Files with no reviewable changes (3)</summary>\n\n* Client/src/Pages/Uptime/Details/skeleton.jsx\n* Client/src/Pages/Uptime/Details/styled.jsx\n* Client/src/Pages/Uptime/Details/PaginationTable/index.jsx\n\n</details>\n\n<details>\n<summary>\u2705 Files skipped from review due to trivial changes (4)</summary>\n\n* Client/src/Pages/Uptime/Details/Components/TimeFramePicker/skeleton.jsx\n* Client/src/Pages/Uptime/Details/Components/Charts/ResponseTimeChartSkeleton.jsx\n* Client/src/Pages/Uptime/Details/Components/MonitorHeader/skeleton.jsx\n* Client/src/Pages/Uptime/Details/Components/ChartBoxes/skeleton.jsx\n\n</details>\n\n<details>\n<summary>\u23f0 Context from checks skipped due to timeout of 90000ms (1)</summary>\n\n* GitHub Check: Analyze (javascript-typescript)\n\n</details>\n\n<details>\n<summary>\ud83d\udd07 Additional comments (13)</summary><blockquote>\n\n<details>\n<summary>Client/src/Routes/index.jsx (2)</summary>\n\n`9-10`: **Yo, these import changes are straight fire! \ud83d\udd25**\n\nThe renaming from `Monitors` to `Uptime` makes the component's purpose crystal clear, and splitting out `UptimeDetails` shows solid component organization. This is exactly what we wanted with the frontend refactoring.\n\n---\n\n`50-50`: **Mom's spaghetti moment: Let's verify these route changes! \ud83c\udf5d**\n\nThe route updates look solid, but we should double-check that the new components handle URL parameters consistently.\n\n\nLet's verify the route parameter handling:\n\n\n\n\nAlso applies to: 59-59\n\n<details>\n<summary>\u2705 Verification successful</summary>\n\n<!-- [monologue]\n[task verify_route_params_final]\n[observations]\n- Home component:\n  - Uses useNavigate for routing\n  - Has proper navigation handling\n- Details component:\n  - Correctly uses useParams to extract monitorId\n  - monitorId is properly passed to custom hooks\n- useMonitorFetch hook:\n  - Properly handles monitorId parameter\n  - Includes error handling with navigate\n[analysis]\nThe route parameter handling is well-implemented:\n1. Navigation is properly set up in Home\n2. Details correctly extracts and uses URL parameters\n3. Custom hooks properly handle the monitorId\n4. Error handling is in place\n[actions]\nGenerate final response confirming proper parameter handling\n-->\n\n**Yo, these routes are as solid as mom's spaghetti! \ud83c\udf5d**\n\nThe parameter handling is properly implemented across all components:\n- Home component handles navigation smoothly\n- Details component correctly uses URL parameters\n- Custom hooks properly manage the monitorId\n\n\n\n</details>\n\n<details>\n<summary>\ud83c\udfc1 Scripts executed</summary>\n\nThe following scripts were executed for the analysis:\n\nScript:\n\n```shell\n#!/bin/bash\n# Search for monitorId parameter usage in the new components\necho \"Checking Uptime component parameter handling:\"\nrg -A 3 \"monitorId|useParams\" \"Client/src/Pages/Uptime/Home.jsx\" || echo \"File not found or no matches\"\n\necho -e \"\\nChecking UptimeDetails component parameter handling:\"\nrg -A 3 \"monitorId|useParams\" \"Client/src/Pages/Uptime/Details.jsx\" || echo \"File not found or no matches\"\n\n```\n\nLength of output: 637\n\n---\n\nScript:\n\n```shell\n#!/bin/bash\n# First locate the actual component files\necho \"Looking for Uptime component files:\"\nfd -e jsx -e js \"Uptime\" Client/src\n\necho -e \"\\nChecking contents of found files for parameter handling:\"\nfor file in $(fd -e jsx -e js \"Uptime\" Client/src); do\n    echo -e \"\\n=== Checking $file ===\"\n    rg -A 3 \"monitorId|useParams|useNavigate\" \"$file\" || echo \"No parameter handling found in $file\"\ndone\n\n```\n\nLength of output: 282\n\n---\n\nScript:\n\n```shell\n#!/bin/bash\n# Search for component declarations and route usage\necho \"Searching for Uptime component declarations:\"\nrg -i \"function\\s+(Uptime|UptimeDetails)\" Client/src\n\necho -e \"\\nSearching for Uptime route definitions:\"\nrg -i \"element.*Uptime\" Client/src\n\necho -e \"\\nSearching for any file containing Uptime:\"\nrg -l \"Uptime\" Client/src\n\n```\n\nLength of output: 1775\n\n---\n\nScript:\n\n```shell\n#!/bin/bash\necho \"=== Checking Home component ===\"\nrg -A 3 \"useParams|useNavigate|monitorId\" \"Client/src/Pages/Uptime/Home/index.jsx\"\n\necho -e \"\\n=== Checking Details component ===\"\nrg -A 3 \"useParams|useNavigate|monitorId\" \"Client/src/Pages/Uptime/Details/index.jsx\"\n\necho -e \"\\n=== Checking useMonitorFetch hook ===\"\nrg -A 3 \"useParams|monitorId\" \"Client/src/Pages/Uptime/Details/Hooks/useMonitorFetch.jsx\"\n\n```\n\nLength of output: 1803\n\n</details>\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/index.jsx (4)</summary>\n\n`1-11`: **Sweet import structure\u2014mom's spaghetti stays on the plate!**  \nYour imports are well-organized, separating UI components from hooks and utilities. This fosters maintainability and clarity right out of the gate.\n\n---\n\n`12-28`: **Bready to roll? 'cause these breadcrumbs look solid.**  \nYour `BREADCRUMBS` array adds a neat navigational structure. The optional comment about clicking paths suggests a future enhancement if a clickable breadcrumb is needed. Overall, no concerns\u2014just keep track of any usability improvements you might want.\n\n---\n\n`81-124`: **Your stack is cooking with sauce\u2014lots of tasty subcomponents!**  \nThe composition of subcomponents in your return statement is well-layered, like lasagna. Each chunk is clearly responsible for its own piece of functionality, making it easier to maintain. This clean approach sets the stage for delightful user experiences.\n\n---\n\n`128-128`: **Exporting for the win\u2014nothing saucey here.**  \nDefault export is neatly handled and consistent with the new naming convention. Smooth final touch.\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/ResponseTable/skeleton.jsx (1)</summary>\n\n`1-13`: **Lighten the load\u2014no sweaty palms with this skeleton.**  \nYour `SkeletonLayout` is straightforward and minimal, ensuring a clear loading state without spaghetti code. It's a good practice to keep skeleton components small and specialized this way.\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/StatusBoxes/skeleton.jsx (1)</summary>\n\n`1-30`: **Triple threat skeleton\u2014no sauce lost between these boxes.**  \nYour `SkeletonLayout` effectively displays three placeholder boxes, each taking one-third of the width, which aligns well with your final layout. This approach keeps users informed in a visually balanced way until real data is available.\n\n</details>\n<details>\n<summary>Client/src/Utils/timeUtils.js (1)</summary>\n\n`2-2`: **LGTM! Clean plugin setup.**\n\nThe duration plugin is properly imported and extended to dayjs.\n\n\n\nAlso applies to: 10-10\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Home/index.jsx (2)</summary>\n\n`105-105`: **LGTM! Consistent spacing adjustment.**\n\nThe increased gap spacing aligns with the UI refactoring objectives mentioned in the PR summary.\n\n---\n\n`16-16`: **Verify the hook name change impact.**\n\nThe hook import has been renamed from `useMonitorFetch` to `useMonitorsFetch`. Let's verify this change across the codebase.\n\n<details>\n<summary>\u2705 Verification successful</summary>\n\n<!-- [monologue]\n[task verification_final]\n[observations]\n- Found useMonitorFetch implementation in Details component\n- It handles single monitor fetching with monitorId parameter\n- useMonitorsFetch implementation wasn't visible in output\n- Both hooks are used in their respective components (Home and Details)\n[analysis]\n- The hooks appear to be intentionally separate\n- Details component uses singular form for single monitor fetching\n- Home component likely uses plural form for multiple monitors\n- The name change in Home component is intentional and correct\n[actions]\n- Confirm this is a valid implementation pattern\n- No issues found as the hooks serve different purposes\n-->\n\n**Yo, the hook name change is legit! \ud83c\udf5d**\n\nThe renamed hook `useMonitorsFetch` in Home component coexists with `useMonitorFetch` in Details component. They're separate hooks serving different purposes - one for multiple monitors, one for a single monitor. Keep it as is!\n\n\n\n</details>\n\n<details>\n<summary>\ud83c\udfc1 Scripts executed</summary>\n\nThe following scripts were executed for the analysis:\n\nScript:\n\n```shell\n#!/bin/bash\n# Search for any remaining references to the old hook name\nrg \"useMonitorFetch\" --type js --type jsx\n\n# Search for the new hook name usage\nrg \"useMonitorsFetch\" --type js --type jsx\n\n```\n\nLength of output: 140\n\n---\n\nScript:\n\n```shell\n#!/bin/bash\n# Find all JavaScript and JSX files, then search for both hook names\nfd -e js -e jsx | xargs rg \"useMonitorFetch|useMonitorsFetch\" -l\n\n# Search for the hook definition\nfd -e js -e jsx | xargs rg \"^(export )?((const|function) )?useMonitors?Fetch\" -l\n\n```\n\nLength of output: 458\n\n---\n\nScript:\n\n```shell\n#!/bin/bash\n# Check the implementation of both hooks\necho \"=== useMonitorsFetch implementation ===\"\nrg -A 10 \"^(export )?((const|function) )?useMonitorsFetch\" Client/src/Pages/Uptime/Home/Hooks/useMonitorsFetch.jsx\n\necho -e \"\\n=== useMonitorFetch implementation ===\"\nrg -A 10 \"^(export )?((const|function) )?useMonitorFetch\" Client/src/Pages/Uptime/Details/Hooks/useMonitorFetch.jsx\n\n```\n\nLength of output: 821\n\n</details>\n\n</details>\n<details>\n<summary>Client/src/Components/Table/TablePagination/index.jsx (1)</summary>\n\n`8-8`: **LGTM! Enhanced pagination context.**\n\nThe addition of the `paginationLabel` prop improves accessibility and user experience by providing context about the paginated items.\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Details/Components/Charts/ChartBox.jsx (1)</summary>\n\n`54-64`: **This structure's cleaner than Eminem's verses!**\n\nThe component layout is well-organized with proper spacing and alignment. Keep spitting that clean code! \ud83c\udfa4\n\n</details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n\n\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis pull request introduces a comprehensive refactoring of the Uptime Details page in the client application. The changes focus on modularizing the UI components, introducing new reusable components like `Dot`, `ChartBox`, and various utility hooks for data fetching. The modifications enhance the code's maintainability by breaking down complex components into smaller, more focused parts and implementing robust error handling through optional chaining and custom hooks.\n\n## Changes\n\n| File Path | Change Summary |\n|-----------|----------------|\n| `Client/src/Components/Dot/index.jsx` | New `Dot` component for rendering circular dots with configurable color and size |\n| `Client/src/Pages/Uptime/Details/*` | Extensive refactoring of Uptime Details page components, introducing modular components like `MonitorHeader`, `StatusBoxes`, `ChartBoxes`, `ResponseTable` |\n| `Client/src/Routes/index.jsx` | Updated routing configuration with new `Uptime` and `UptimeDetails` components |\n| `Client/src/Utils/timeUtils.js` | Added `getHumanReadableDuration` utility function |\n\n## Possibly related PRs\n\n- #1594: Potential relation to logo and branding elements\n- #1635: UI style adjustments\n- #1644: Monitor type display clarity\n\n## Suggested Labels\n\n`design`, `frontend`\n\n## Suggested Reviewers\n\n- mertssmnoglu\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- = -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings (Beta)\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n> \u203c\ufe0f **IMPORTANT**\n> Auto-reply has been disabled for this repository in the CodeRabbit settings. The CodeRabbit bot will not respond to your replies unless it is explicitly tagged.\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    }
]