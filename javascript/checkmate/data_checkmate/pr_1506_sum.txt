### Instruction for Programmer:

**Enhance Authentication in NetworkService.js**

1. **Updates to `getHardwareDetailsByMonitorId` and `getUptimeDetailsById` Methods:**
   - Add an `Authorization` header to include a `Bearer` token in the API requests.
   - Use a secure method, `getAuthToken`, to retrieve the authentication token.
   - Implement the `validateAuthTokenForAllRequests` to ensure the token is valid before making requests.
   - Handle errors by throwing an exception when the token is invalid or missing.

2. **Security Improvements:**
   - Ensure the token is not exposed directly in the code and is securely managed.
   - Consider scenarios for missing, expired, or invalid tokens and handle these gracefully across components.

3. **Code and Testing:**
   - Reorganize the code to maintain clarity and consistency.
   - Write unit tests to verify that the methods correctly handle both valid and invalid tokens.
   - Ensure integration tests verify that features relying on these methods function correctly with the new authentication checks.

4. **Documentation and Deployment:**
   - Update documentation to reflect changes in authentication logic.
   - Coordinate deployment to accommodate security changes across the application.

### Issue Being Addressed:

This PR addresses missing authentication headers in the `NetworkService.js`, specifically fixing a critical security concern. The absence of these headers previously allowed unsecured API calls compromising data retrieval processes.