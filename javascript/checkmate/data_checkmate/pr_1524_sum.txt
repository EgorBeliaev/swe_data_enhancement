1. **Remove Admin Checks**: Eliminate all checks for admin-specific notifications related to server errors. Display the error notifications to all users instead.

2. **Error Handling Simplification**: Modify the `handleError` function in `Client/src/Utils/NetworkService.js` to:
   - Handle known errors with `error.response`.
   - For network errors, show a toast to inform the user that the server didn't respond.
   - Include an `else` clause to handle unexpected errors with console logging for robustness.

3. **Toast Notification Consistency**: Use the toast configuration from `Client/src/Utils/toastUtils.jsx` to maintain consistency across the application for displaying notifications.

4. **Simplify If-Else Logic**: Ensure the error handling logic does not contain complex checks and unnecessary conditions. Focus on displaying notification for server errors and network issues as required.

5. **Debounce Management**: If debouncing is implemented, ensure it handles the closing of notifications and resets timestamps to avoid excessive notifications. However, consider handling such logic at a higher level to prevent multiple requests entirely.

6. **Message Clarity**: Update the messages used in toasts to be user-friendly and clear, avoiding technical jargon like "server is not running". Use phrases like "An error occurred on the server. Please try again later."

These changes will help streamline the handling of server notifications, ensure all users are informed, and maintain consistency in the UI.