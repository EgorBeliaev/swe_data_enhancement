[
    {
        "title": "feat: fe/reusable data table"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This PR replaces all individual Table implementations with a reusable Table component.\r\n\r\nThere were a variety of different table implementations scattered throughout the application with inconsistent styling.  This PR uses the most recent Infrastructure table as a basis to build a reusable Table component with a clear and simple API.\r\n\r\nThe `DataTable` component only requires two props: `headers` and `data`\r\n\r\nThe `headers` props supplies everything the table needs to know to render itself:\r\n\r\n```js\r\nconst headers = [\r\n\t{ id: \"host\", content: \"Host\", render: (row) => row.host },\r\n\t{ id: \"status\", content: \"Status\", render: (row) => row.status },\r\n\t{\r\n\t\tid: \"responseTime\",\r\n\t\tcontent: \"Response Time\",\r\n\t\trender: (row) => `${row.responseTime} ms`,\r\n\t},\r\n\t{ id: \"type\", content: \"Type\", render: (row) => row.type },\r\n\t{ id: \"action\", content: \"Action\", render: (row) => row.action },\r\n];\r\n```\r\n\r\nThe `render` field of the headers array instructs the table how to render items that fall under that column.\r\n\r\nRows are passed in as an array of objects:\r\n\r\n```js\r\nconst data = [\r\n\t{\r\n\t\tid: 1,\r\n\t\thost: \"www.google.com\",\r\n\t\tstatus: \"up\",\r\n\t\tresponseTime: 123,\r\n\t\ttype: \"distributed uptime\",\r\n\t\taction: \"Action\",\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\thost: \"www.google.com/404\",\r\n\t\tstatus: \"down\",\r\n\t\tresponseTime: 456,\r\n\t\ttype: \"distributed uptime\",\r\n\t\taction: \"Action\",\r\n\t},\r\n];\r\n```\r\n\r\nThis will render a table like this:\r\n\r\n![image](https://github.com/user-attachments/assets/d4eac678-6d24-466e-b931-015723c082b7)\r\n\r\n\r\nThe API allows for styling of rows by a `config` prop with a `rowSX` property. \r\n\r\nSimilarly, clicking on rows is handled by an `onRowClick` property on the `config` prop.\r\n\r\nThe API is documented in the usual JSdocs of the component.  We can extend the `config` prop to add whatever additional functionality we may need.\r\n\r\n- [x] Implement a reusable table \r\n- [x] Replace all individual table instances with the reusable component. \r\n- [x] Move pagination component to the reusable table directory "
    },
    {
        "author": {
            "login": "llamapreview"
        },
        "body": "# Auto Pull Request Review from LlamaPReview\n\n## Large PR Notification\n\nDear contributor,\n\nThank you for your substantial contribution to this project. LlamaPReview has detected that this Pull Request contains a large volume of changes, which exceeds our current processing capacity.\n\n### Details:\n- PR and related contents total size: Approximately 61,182 characters\n- Current limit: 50,000 characters\n\n### Next steps:\n1. Consider breaking this PR into smaller, more focused changes if possible.\n2. For manual review, please reach out to your team members or maintainers.\n\nWe appreciate your understanding and commitment to improving this project. Your contributions are valuable, and we want to ensure they receive the attention they deserve.\n\nLlamaPReview is continuously evolving to better serve the community. Share your thoughts on handling large PRs in our [GitHub Discussions](https://github.com/JetXu-LLM/LlamaPReview-site/discussions) - your feedback helps us improve and expand our capabilities.\n\nIf you have any questions or need assistance, our community and support team are here to help.\n\nBest regards,\nLlamaPReview Team"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "**Actionable comments posted: 1**\n\n<details>\n<summary>\ud83e\uddf9 Nitpick comments (5)</summary><blockquote>\n\n<details>\n<summary>Client/src/Pages/Uptime/Home/UptimeTable/Skeleton/index.jsx (1)</summary><blockquote>\n\n`8-8`: **Address the TODO regarding theming.**\n\nThe comment mentions that the Skeleton does not track light/dark theme. You might consider adopting theme-aware styling for skeleton backgrounds, in order to maintain visual consistency in different themes.\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Incidents/IncidentTable/index.jsx (1)</summary><blockquote>\n\n`197-201`: **Check for row interactions.**\n\nIf you need clickable incidents, pass an `onRowClick` function. Otherwise, the table usage here is solid.\n\n</blockquote></details>\n<details>\n<summary>Client/src/Components/TabPanels/Account/TeamPanel.jsx (1)</summary><blockquote>\n\n`82-87`: **ROLE_MAP helps keep roles user-friendly.**\n\nMapping roles to more descriptive text is a good move. Consider storing these role labels in a constants or a config file if reused across multiple components.\n\n</blockquote></details>\n<details>\n<summary>Client/src/Pages/Uptime/Home/UptimeTable/index.jsx (2)</summary><blockquote>\n\n`42-128`: **Headers structure: stylish as mom\u2019s spaghetti.**  \nDeclaring columns in a compact object array is a neat approach. Consider extracting the arrow icon logic into a small helper component to reduce repetition. Otherwise, these definitions look good and dynamic sorting handling is clear.\n\n---\n\n`293-303`: **Commented code in the way, knees weak?**  \nRemove or clarify these commented lines if no longer needed.\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>\ud83d\udcdc Review details</summary>\n\n**Configuration used: .coderabbit.yaml**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 67749585e040316ecd884a21a3270147f0876c21 and bd502a610a7e0da481794cf8d04b0d9da29bff25.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (8)</summary>\n\n* `Client/src/Components/TabPanels/Account/TeamPanel.jsx` (5 hunks)\n* `Client/src/Components/Table/TablePagination/Actions/index.jsx` (1 hunks)\n* `Client/src/Components/Table/TablePagination/index.jsx` (1 hunks)\n* `Client/src/Components/Table/index.jsx` (1 hunks)\n* `Client/src/Pages/Incidents/IncidentTable/index.jsx` (4 hunks)\n* `Client/src/Pages/Infrastructure/index.jsx` (3 hunks)\n* `Client/src/Pages/Uptime/Home/UptimeTable/Skeleton/index.jsx` (1 hunks)\n* `Client/src/Pages/Uptime/Home/UptimeTable/index.jsx` (4 hunks)\n\n</details>\n\n<details>\n<summary>\u2705 Files skipped from review due to trivial changes (2)</summary>\n\n* Client/src/Components/Table/TablePagination/Actions/index.jsx\n* Client/src/Components/Table/TablePagination/index.jsx\n\n</details>\n\n<details>\n<summary>\ud83d\udd07 Additional comments (24)</summary><blockquote>\n\n<details>\n<summary>Client/src/Pages/Uptime/Home/UptimeTable/Skeleton/index.jsx (4)</summary>\n\n`1-2`: **Consider verifying the usage of Skeleton.**\n\nIt\u2019s all good in the import lines. The `Skeleton` component is indeed used for rendering placeholders, so no issues with these statements.\n\n---\n\n`9-37`: **Keep the IDs consistent with actual data fields.**\n\nThe `headers` array uses IDs like \"name\" and \"status,\" but your actual dataset is just the `ROWS_ARRAY`. Ensure any real data passed later to this table lines up with these header IDs or consider adjusting them if they differ from the final data structure.\n\n---\n\n`40-43`: **Ensure row click events are not needed here.**\n\nYou may wish to provide a `config={{ onRowClick: () => {} }}` if the `DataTable` requires a click handler. Otherwise, your usage here is valid.\n\n---\n\n`47-47`: **Export statement is consistent with usage.**\n\nUsing a named export `{ TableSkeleton }` is fine. Validate that other components referencing this skeleton import it by the same name.\n\n</details>\n<details>\n<summary>Client/src/Components/Table/index.jsx (3)</summary>\n\n`70-90`: **Confirm row has a unique ID field.**\n\nYou use `key={row.id}`, but if `row.id` is undefined or not unique, it can cause React key conflicts. Consider a fallback to array index if guaranteed unique IDs are unavailable.\n\n---\n\n`97-111`: **Great prop-types coverage.**\n\nYour `PropTypes` definitions are thorough, guiding developers on the structure of headers and data. Just be sure your default config declarations align with these definitions.\n\n---\n\n`35-39`: _:hammer_and_wrench: Refactor suggestion_\n\n**Avoid forcing an empty onRowClick.**\n\nCurrently, `onRowClick` is marked as required in `propTypes` while the default config only sets `emptyView`. If callers do not provide an `onRowClick`, it may cause a validation warning or error. Suggest making `onRowClick` optional or providing a no-op default.\n\n```diff\n- onRowClick: PropTypes.func.isRequired,\n+ onRowClick: PropTypes.func,\n```\n\n\n\n\n> Likely invalid or redundant comment.\n\n</details>\n<details>\n<summary>Client/src/Pages/Incidents/IncidentTable/index.jsx (2)</summary>\n\n`18-18`: **Confirm optional config usage.**\n\nYou\u2019re importing `DataTable`, but the config prop may be missing. If `onRowClick` is required, pass it as a no-op or remove the `.isRequired` constraint. Consistency is key.\n\n---\n\n`97-115`: **Headers are well-defined for clarity.**\n\nThe mapping of \u201cstatus,\u201d \u201cdateTime,\u201d etc. is clearly separated, which aids readability. Keep it up!\n\n</details>\n<details>\n<summary>Client/src/Components/TabPanels/Account/TeamPanel.jsx (6)</summary>\n\n`13-13`: **New DataTable import is correct.**\n\nThe import from `../../Table/` is aligned with your new component structure. No concerns here.\n\n---\n\n`27-27`: **Nice destructuring for authToken.**\n\nThis is a neat approach that clarifies usage. No issues found.\n\n---\n\n`32-32`: **Renamed state to data for clarity.**\n\nThis change is straightforward and is more indicative of the final structure used by the table. Good improvement.\n\n---\n\n`39-62`: **Headers definition is consistent.**\n\nEach header has a distinct ID and a separate render function. The usage of `row.firstName + \" \" + row.lastName` is clear. No red flags here.\n\n---\n\n`97-102`: **Assigning `_id` to row.id for DataTable keys.**\n\nThis is standard practice, but ensure `_id` is always present. If any user objects lack `_id`, a fallback might be required.\n\n---\n\n`242-245`: **Custom empty view is a nice touch.**\n\nThis clarifies the user\u2019s context when the table has no data. If row click handling becomes necessary, pass config.onRowClick as well.\n\n</details>\n<details>\n<summary>Client/src/Pages/Uptime/Home/UptimeTable/index.jsx (6)</summary>\n\n`13-13`: **Solid import, no sweat.**  \nNo issues with this addition.\n\n---\n\n`17-17`: **Rock-steady skeleton import.**  \nThis is straightforward and consistent with the new table approach.\n\n---\n\n`23-24`: **Smart modular approach.**  \nImporting Pagination and DataTable like this reduces repetition. Nicely done.\n\n---\n\n`40-40`: **Separate data, calm mind.**  \nStoring the mapped data in a dedicated state is good for clarity.\n\n---\n\n`226-260`: **Mapping monitors carefully to data.**  \nThe layering of uptime percentage logic is well handled. Watch for potential performance impacts if the list grows large. Consider memoizing the mapped array if re-renders become heavy.\n\n---\n\n`305-323`: **DataTable usage is slick.**  \nThe styling config suits your design, and the onRowClick logic is consistent. No concerns here.\n\n</details>\n<details>\n<summary>Client/src/Pages/Infrastructure/index.jsx (3)</summary>\n\n`11-16`: **Cool imports, not sweaty.**  \nBringing in DataTable and Pagination is consistent with the new table approach across the app.\n\n---\n\n`107-170`: **Headers rhymes with \u201cgo getters.\u201d**  \nYour structured approach to each column is on point. This does a good job of capturing visuals, content, and actions in a single place.\n\n---\n\n`271-283`: **DataTable integration is clean as a fresh apron.**  \nConfiguring row styles and the click handler adds a nice interactive touch. This component effectively replaces the old table system.\n\n</details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->\n\n> [!WARNING]\n> ## Rate limit exceeded\n> \n> @ajhollid has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **7 minutes and 12 seconds** before requesting another review.\n> \n> <details>\n> <summary>\u231b How to resolve this issue?</summary>\n> \n> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.\n> \n> We recommend that you space out your commits to avoid hitting the rate limit.\n> \n> </details>\n> \n> \n> <details>\n> <summary>\ud83d\udea6 How do rate limits work?</summary>\n> \n> CodeRabbit enforces hourly rate limits for each developer per organization.\n> \n> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.\n> \n> Please see our [FAQ](https://docs.coderabbit.ai/faq) for further information.\n> \n> </details>\n> \n> <details>\n> <summary>\ud83d\udce5 Commits</summary>\n> \n> Reviewing files that changed from the base of the PR and between 8dd1dc8ccaa5d7b369d98eda40b7087c44d4d29e and 9e1f50bc8e023acbab6aa0cd18e3fafe348ff842.\n> \n> </details>\n> \n> <details>\n> <summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n> \n> * `Client/src/Pages/Infrastructure/index.jsx` (3 hunks)\n> \n> </details>\n\n<!-- end of auto-generated comment: rate limited by coderabbit.ai -->\n\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe pull request introduces a significant refactoring of table components across multiple files in the client-side application. The primary change is the introduction of a new `DataTable` component that replaces traditional Material-UI table implementations. This new component provides a more flexible and customizable approach to rendering tables, with enhanced capabilities for header configuration, data rendering, and interaction handling.\n\n## Changes\n\n| File | Change Summary |\n|------|----------------|\n| `Client/src/Components/TabPanels/Account/TeamPanel.jsx` | Replaced `BasicTable` with `DataTable`, modified state management, and updated data transformation logic. |\n| `Client/src/Components/Table/TablePagination/Actions/index.jsx` | Updated SVG icon import paths. |\n| `Client/src/Components/Table/TablePagination/index.jsx` | Modified `SelectorVertical` import path. |\n| `Client/src/Components/Table/index.jsx` | Created new `DataTable` component with customizable headers, data rendering, and configuration options. |\n| `Client/src/Pages/Incidents/IncidentTable/index.jsx` | Replaced MUI table with `DataTable`, maintained existing pagination logic. |\n| `Client/src/Pages/Infrastructure/index.jsx` | Refactored table rendering using `DataTable` with enhanced column rendering. |\n| `Client/src/Pages/Uptime/Home/UptimeTable/Skeleton/index.jsx` | Renamed `TableBodySkeleton` to `TableSkeleton`, integrated `DataTable`. |\n| `Client/src/Pages/Uptime/Home/UptimeTable/index.jsx` | Replaced MUI table components with `DataTable`, updated data transformation and sorting. |\n| `Client/src/Components/BasicTable/index.css` | Deleted CSS file for `BasicTable`, removing associated styles. |\n| `Client/src/Components/BasicTable/index.jsx` | Deleted `BasicTable` component, eliminating its functionality. |\n\n## Sequence Diagram\n\n```mermaid\nsequenceDiagram\n    participant Client as Client Component\n    participant DataTable as New DataTable Component\n    participant State as State Management\n    \n    Client->>State: Prepare table data\n    State-->>DataTable: Pass headers and data\n    DataTable->>DataTable: Render table structure\n    DataTable-->>Client: Display customized table\n```\n\nThe sequence diagram illustrates the new flow where client components prepare data, pass it to the `DataTable` component, which then renders a flexible and customizable table structure.\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n> \u203c\ufe0f **IMPORTANT**\n> Auto-reply has been disabled for this repository in the CodeRabbit settings. The CodeRabbit bot will not respond to your replies unless it is explicitly tagged.\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    }
]