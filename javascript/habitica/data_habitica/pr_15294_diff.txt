diff --git a/website/client/src/components/snackbars/notifications.vue b/website/client/src/components/snackbars/notifications.vue
index b189e71c4d8..2a90c80e231 100644
--- a/website/client/src/components/snackbars/notifications.vue
+++ b/website/client/src/components/snackbars/notifications.vue
@@ -1,7 +1,6 @@
 <template>
   <div
     class="notifications"
-    :class="notificationsTopPosClass"
     :style="{'--current-scrollY': notificationTopY}"
   >
     <transition-group
@@ -104,7 +103,6 @@ export default {
   computed: {
     ...mapState({
       notificationStore: 'notificationStore',
-      userSleeping: 'user.data.preferences.sleep',
       currentEventList: 'worldState.data.currentEventList',
     }),
     currentEvent () {
@@ -113,18 +111,6 @@ export default {
     isEventActive () {
       return Boolean(this.currentEvent?.event);
     },
-    notificationsTopPosClass () {
-      const base = 'notifications-top-pos-';
-      let modifier = '';
-
-      if (this.userSleeping) {
-        modifier = 'sleeping';
-      } else {
-        modifier = 'normal';
-      }
-
-      return `${base}${modifier} scroll-${this.scrollY}`;
-    },
     notificationBannerHeight () {
       let scrollPosToCheck = 56;
 
diff --git a/website/server/controllers/api-v3/tasks.js b/website/server/controllers/api-v3/tasks.js
index 3c903881501..651eb785362 100644
--- a/website/server/controllers/api-v3/tasks.js
+++ b/website/server/controllers/api-v3/tasks.js
@@ -751,7 +751,7 @@ api.updateTask = {
 api.scoreTask = {
   method: 'POST',
   url: '/tasks/:taskId/score/:direction',
-  middlewares: [authWithHeaders({ userFieldsToInclude: ['stats', 'guilds', 'items.equipped', 'items.eggs', 'items.food', 'items.hatchingPotions', 'items.lastDrop', 'items.quests', 'achievements', 'tasksOrder', 'webhooks', 'party'] })],
+  middlewares: [authWithHeaders({ userFieldsToInclude: ['stats', 'guilds', 'items.gear.equipped', 'items.eggs', 'items.food', 'items.hatchingPotions', 'items.lastDrop', 'items.quests', 'achievements', 'tasksOrder', 'webhooks', 'party'] })],
   async handler (req, res) {
     // Parameters are validated in scoreTasks
 
diff --git a/website/server/controllers/api-v3/user.js b/website/server/controllers/api-v3/user.js
index 1a0aa1d757f..f96247ff111 100644
--- a/website/server/controllers/api-v3/user.js
+++ b/website/server/controllers/api-v3/user.js
@@ -168,7 +168,7 @@ api.getBuyList = {
  */
 api.getInAppRewardsList = {
   method: 'GET',
-  middlewares: [authWithHeaders({ userFieldsToInclude: ['items', 'pinnedItems', 'unpinnedItems', 'pinnedItemsOrder', 'stats.class', 'achievements'] })],
+  middlewares: [authWithHeaders({ userFieldsToInclude: ['items', 'pinnedItems', 'unpinnedItems', 'pinnedItemsOrder', 'stats.class', 'achievements', 'purchased'] })],
   url: '/user/in-app-rewards',
   async handler (req, res) {
     const list = common.inAppRewards(res.locals.user);
