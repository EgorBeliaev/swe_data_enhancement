[
    {
        "title": "refactor: prefix built-in node module imports"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "\r\n\r\n<!--\r\nThank you for your pull request. Please provide a description and \r\nnote the Certificate of Origin below. \r\n\r\n-->\r\nSince v5 relies on node >= 18, this is now possible (since v16, v14.18.0 [^1][^2]).\r\n\r\nIt's functionally irrelevant:\r\n1. It's not required for CJS nor ESM (with a few exceptions [^3])\r\n2. It has no performance promises\r\n\r\nHowever, there are upsides to this approach:\r\n1. It brings clear boundaries to what's a built-in and what's an external dependency\r\n2. It reduces the risk of importing unwanted deps where a built-in is expected\r\n3. It's slightly more interoperable with other JS runtimes that provide node compatibility[^4], albeit only during development. Once imported from npm, built-ins are assumed.\r\n\r\n[^1]:https://nodejs.org/docs/latest-v22.x/api/modules.html#built-in-modules \r\n[^2]:https://github.com/nodejs/node/pull/37246\r\n[^3]:https://nodejs.org/api/modules.html#built-in-modules-with-mandatory-node-prefix \r\n[^4]:https://docs.deno.com/runtime/fundamentals/node/#using-node's-built-in-modules\r\n<!--\r\nDeveloper's Certificate of Origin 1.1\r\n\r\nBy making a contribution to this project, I certify that:\r\n\r\n(a) The contribution was created in whole or in part by me and I\r\n    have the right to submit it under the open source license\r\n    indicated in the file; or\r\n\r\n(b) The contribution is based upon previous work that, to the best\r\n    of my knowledge, is covered under an appropriate open source\r\n    license and I have the right under that license to submit that\r\n    work with modifications, whether created in whole or in part\r\n    by me, under the same open source license (unless I am\r\n    permitted to submit under a different license), as indicated\r\n    in the file; or\r\n\r\n(c) The contribution was provided directly to me by some other\r\n    person who certified (a), (b) or (c) and I have not modified\r\n    it.\r\n\r\n(d) I understand and agree that this project and the contribution\r\n    are public and that a record of the contribution (including all\r\n    personal information I submit with it, including my sign-off) is\r\n    maintained indefinitely and may be redistributed consistent with\r\n    this project or the open source license(s) involved.\r\n-->"
    },
    {
        "author": {
            "login": "UlisesGascon"
        },
        "body": "Great work @slagiewka! I like the idea, let's see what other @expressjs/express-tc members things about it :)"
    },
    {
        "author": {
            "login": "carpasse"
        },
        "body": "LGTM"
    },
    {
        "author": {
            "login": "IamLizu"
        },
        "body": "While I appreciate the effort, this isn't necessary. It's only required for newly added built-in modules that conflict with existing ones. \r\n\r\nNode.js already prioritizes built-in modules (like `http`, `path`, and `fs`) over user-land modules or files with the same name."
    },
    {
        "author": {
            "login": "bjohansebas"
        },
        "body": ""
    },
    {
        "author": {
            "login": "wesleytodd"
        },
        "body": "While @IamLizu is technically correct, IMO this is a good change. Being clear is usually better and I personally consider this way border-line best practice at this point. \ud83d\udc4d from me."
    }
]