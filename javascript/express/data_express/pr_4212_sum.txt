### Changes to be Made:

1. **Error Handling for Status Codes**:
   - Implement a `RangeError` for status codes less than 100 or greater than 999.
   - Implement a `TypeError` for non-integer status codes (including string representations of integers).

2. **Internal Usage**:
   - Use `res.status` internally for setting status codes to leverage validation logic.

3. **Test Adjustments**:
   - Revise tests to cover acceptable ranges and invalid status codes.
   - Remove unsupported `iojs` logic to reflect v5 changes.
   - Ensure tests fail gracefully on Node.js 0.10 due to lack of `Number.isInteger`.

4. **Documentation and Branch Switching**:
   - Update v5 documentation to reflect the new status code validation rules.
   - Ensure the branch targets the `5.x` branch instead of master.

5. **Code Standards**:
   - Restrict valid status codes to the range of 1xx to 5xx, which is more stringent than Node.js.
   - Accept floats that equal integers like `500.00`, but throw an error on floats like `500.5`.

6. **Monkey Patching Awareness**:
   - Acknowledge that monkey-patching `res.status` can affect behavior, consistent with the usage of similar methods like `res.type`.

7. **Closing Tasks**:
   - Complete the update of the PR description and confirm that tests and documentation reflect the changes accurately.
  
These changes aim to align the repository's behavior with robust error handling and consistent usage of internal methods, preparing it for future compatibility and documentation updates.