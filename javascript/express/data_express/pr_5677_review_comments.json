[
    {
        "title": "Use Array.flat instead of array-flatten"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Depends upon #5595, Adopt Node@18 as minimum supported version.\r\n\r\nWith this new version, we get Array.flat(depth), which can be used instead of a package. `Infinity` would have the same behavior as the package, recursively unwrapping nested arrays indefinitely. But, perhaps it might be worth selecting a more reasonable value, to avoid a RangeError, such as when an array contains a reference to itself.\r\n\r\n### Note\r\n\r\nMimimum Node.js version supported is 11 \r\n"
    },
    {
        "author": {
            "login": "UlisesGascon"
        },
        "body": "This now is unblocked as https://github.com/expressjs/express/pull/5490 was merged :+1: "
    },
    {
        "author": {
            "login": "sheplu"
        },
        "body": "LGTM but a rebase is needed first "
    },
    {
        "author": {
            "login": "jonchurch"
        },
        "body": "This is fine to merge, we know it breaks CI on the node versions v5 doesn't support"
    },
    {
        "author": {
            "login": "wesleytodd"
        },
        "body": "This is going to fail CI for now, but I figured it was better to approve the CI run for reference. I think this is a good change, but we have a bunch on our plate first so please be patient with us as we get the other things done first."
    },
    {
        "author": {
            "login": "admsev"
        },
        "body": "@gooroodev please take a look"
    },
    {
        "author": {
            "login": "gooroodev"
        },
        "body": "Thanks for the alert, @admsev!\n\n### 1. Summary of Changes\nThe pull request makes the following changes:\n- Replaces the use of the `array-flatten` library with the native JavaScript `Array.prototype.flat` method.\n- Removes the `array-flatten` dependency from `package.json`.\n- Updates the code in `lib/application.js` to use `Array.prototype.flat` instead of the `array-flatten` library.\n\n### 2. Issues, Bugs, and Typos\n\n#### Issue 1: Incorrect usage of `Array.prototype.flat`\n- **Current Code:**\n  ```javascript\n  var flatten = Array.prototype.flat;\n  var fns = flatten.call(slice.call(arguments, offset), Infinity);\n  ```\n  - **Problem:** The `Array.prototype.flat` method does not need to be called with `call`. Instead, it should be used directly on the array.\n  \n- **Proposed Improvement:**\n  ```javascript\n  var fns = slice.call(arguments, offset).flat(Infinity);\n  ```\n\n#### Issue 2: Redundant variable declaration\n- **Current Code:**\n  ```javascript\n  var flatten = Array.prototype.flat;\n  ```\n  - **Problem:** Declaring `flatten` is redundant since `Array.prototype.flat` can be used directly.\n  \n- **Proposed Improvement:**\n  Remove the line:\n  ```javascript\n  var flatten = Array.prototype.flat;\n  ```\n\n### 3. General Review of Code Quality and Style\n\n#### Code Quality:\n- The code change is straightforward and improves the maintainability by removing an unnecessary dependency.\n- The usage of native methods is generally preferred for better performance and reduced dependency overhead.\n\n#### Code Style:\n- The code style remains consistent with the rest of the codebase.\n- The changes are minimal and do not introduce any new stylistic issues.\n\n### Final Improved Code\nHere is the final improved version of the code after addressing the issues:\n\n```diff\ndiff --git a/lib/application.js b/lib/application.js\nindex 43c9f34b06..ecfe2186db 100644\n--- a/lib/application.js\n+++ b/lib/application.js\n@@ -21,7 +21,6 @@ var http = require('http');\n var compileETag = require('./utils').compileETag;\n var compileQueryParser = require('./utils').compileQueryParser;\n var compileTrust = require('./utils').compileTrust;\n-var flatten = require('array-flatten').flatten\n var merge = require('utils-merge');\n var resolve = require('path').resolve;\n var once = require('once')\n@@ -34,6 +33,5 @@ var setPrototypeOf = require('setprototypeof')\n  */\n \n var slice = Array.prototype.slice;\n-var flatten = Array.prototype.flat;\n \n /**\n  * Application prototype.\n@@ -209,7 +208,7 @@ app.use = function use(fn) {\n     }\n   }\n \n-  var fns = flatten.call(slice.call(arguments, offset), Infinity);\n+  var fns = slice.call(arguments, offset).flat(Infinity);\n \n   if (fns.length === 0) {\n     throw new TypeError('app.use() requires a middleware function')\ndiff --git a/package.json b/package.json\nindex d3e2f0a190..5ec37a8f77 100644\n--- a/package.json\n+++ b/package.json\n@@ -29,7 +29,6 @@\n   ],\n   \"dependencies\": {\n     \"accepts\": \"~1.3.8\",\n-    \"array-flatten\": \"3.0.0\",\n     \"body-parser\": \"2.0.0-beta.2\",\n     \"content-disposition\": \"0.5.4\",\n     \"content-type\": \"~1.0.4\",\n```\n\nThis version ensures that `Array.prototype.flat` is used correctly and removes any redundant variable declarations.\n\nYours, [Gooroo.dev](https://github.com/apps/gooroo-dev). I'd appreciate it if you could react or reply!\n\n"
    },
    {
        "author": {
            "login": "mmaazahmed"
        },
        "body": "why is this even a dependency to begin with?"
    },
    {
        "author": {
            "login": "krzysdz"
        },
        "body": "> why is this even a dependency to begin with?\n\n`Array.prototype.flat` does not exist in pre-ES2019 ECMAScript standards and Express currently supports old Node.js versions (starting with 0.10), which are way older than this feature.\n\nAs for why specifically `array-flatten` is used, see #2624 and comments in #4707. Basically the idea was to move the util code to separate packages and `array-flatten` is owned by [blakeembrey](https://github.com/blakeembrey) - an Express.js Technical Committee member."
    },
    {
        "author": {
            "login": "mmaazahmed"
        },
        "body": "Hi Krzysdz\r\nAppreciate  the response. I was actually referring to having it as a dependency, rather than integrating the functionality directly into the project as a helper function. What were the design considerations of having it as an external dependency whens its only a couple of lines of trivial code. Thanks"
    },
    {
        "author": {
            "login": "wesleytodd"
        },
        "body": "Hey @mmaazahmed, can we keep the discussion limited to the changes made in this PR going forward? I am going to hide all our comments here as off topic so that we don't distract the conversation."
    },
    {
        "author": {
            "login": "jonchurch"
        },
        "body": "clopened to rerun CI but forgot 5.0 hasn't dropped the old versions in CI"
    }
]