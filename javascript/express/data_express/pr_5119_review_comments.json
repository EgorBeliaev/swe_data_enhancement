[
    {
        "title": "Remove unused originalIndex from acceptParams"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Remove unused originalIndex from acceptParams in **express/lib/utils.js**\r\n"
    },
    {
        "author": {
            "login": "LinusU"
        },
        "body": ""
    },
    {
        "author": {
            "login": "LinusU"
        },
        "body": "From my analysis, the only way to observe `originalIndex` from outside of Express is if you are doing a deep require into the utils file, and are calling `normalizeType` directly. Even so, `originalIndex` is always `undefined`, so it's only observable if doing `'originalIndex' in result`.\r\n\r\nSince we don't support deep requires into internals, and since even if someone did this it's very unlikely to affect anyone, I think that we can merge this \ud83d\udc4d \r\n\r\n-----\r\n\r\n```js\r\nconst utils = require('express/lib/utils')\r\n\r\n'originalIndex' in utils.normalizeType('foo/bar')\r\n```\r\n\r\nThe code above previously evaluated to `true`, but will become `false` with this patch."
    },
    {
        "author": {
            "login": "dougwilson"
        },
        "body": "Hello, and thank you for your pull request. Unfortunately even though Express.js itself may not use this param, external code commonly uses the functils in our utils, so the API for them is frozen due to external usage. I hope that makes sense."
    },
    {
        "author": {
            "login": "dougwilson"
        },
        "body": "Apologies, `acceptParams` is not an exported function I think."
    },
    {
        "author": {
            "login": "raksbisht"
        },
        "body": "Thanks @dougwilson!"
    },
    {
        "author": {
            "login": "dougwilson"
        },
        "body": "> Since we don't support deep requires into internals\r\n\r\nAnnoyingly we do in 4.x, but it doesn't matter, as like you observed, the functionality doesn't actually \"produce\" anything -- a property that is defined on the object in a technical sense, but _extremely_ unlikely to actually break anything with it's removal \ud83d\udc4d "
    },
    {
        "author": {
            "login": "LinusU"
        },
        "body": "> Annoyingly we do in 4.x\r\n\r\nWhoops, my bad. Good to know \ud83d\udc4d "
    }
]