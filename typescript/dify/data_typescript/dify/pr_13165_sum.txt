**Issue Description:**
There is a circular dependency problem in the web code causing potential bugs. The `default.ts` files in `web/app/components/workflow/nodes/if-else` and similar directories import from `web/app/components/workflow/constants.ts`, which in turn imports values from these `default.ts` files to populate the `NODES_EXTRA_DATA` object. This dependency order can result in an error (`cannot read property of undefined`) if `constants.ts` is imported before `default.ts`, as `nodeDefault` won't be defined. The current import order resolves `default.ts` first, preventing issues, but additions, like importing `PromptEditor` in `Form.tsx` (related to PR #13166), could change this order and cause breakage.

**Instructions for Programmers:**
1. Resolve the circular dependency between `workflow/constants.ts` and `default.ts` to ensure `nodeDefault` is properly defined regardless of import order.
2. Ensure the `NODES_EXTRA_DATA` object in `constants.ts` can safely access `nodeDefault` or its replacement without causing undefined property errors.
3. Maintain current functionality and ensure import changes do not affect existing code execution.
4. Run necessary tests and update documentation accordingly.
5. Verify code format using `dev/reformat` and `npx lint-staged` for backend and frontend, respectively.