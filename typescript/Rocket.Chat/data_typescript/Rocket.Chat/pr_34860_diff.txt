diff --git a/.changeset/nasty-shirts-rule.md b/.changeset/nasty-shirts-rule.md
new file mode 100644
index 000000000000..6ec667d799f2
--- /dev/null
+++ b/.changeset/nasty-shirts-rule.md
@@ -0,0 +1,5 @@
+---
+'@rocket.chat/meteor': patch
+---
+
+Fixes an issue where room's file list would incorrectly display incoming messages as files.
diff --git a/apps/meteor/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts b/apps/meteor/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts
index 3cf4a5dd4869..fcf73835905e 100644
--- a/apps/meteor/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts
+++ b/apps/meteor/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts
@@ -1,14 +1,12 @@
 import { Base64 } from '@rocket.chat/base64';
-import { useUserRoom, useUserId, useEndpoint } from '@rocket.chat/ui-contexts';
+import { useUserRoom, useEndpoint } from '@rocket.chat/ui-contexts';
 import { useCallback, useEffect, useMemo, useState } from 'react';
 
 import { e2e } from '../../../../../../app/e2e/client/rocketchat.e2e';
 import { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';
-import { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';
 import { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';
 import type { FilesListOptions } from '../../../../../lib/lists/FilesList';
 import { FilesList } from '../../../../../lib/lists/FilesList';
-import type { MessageList } from '../../../../../lib/lists/MessageList';
 import { getConfig } from '../../../../../lib/utils/getConfig';
 
 export const useFilesList = (
@@ -22,7 +20,6 @@ export const useFilesList = (
 	const [filesList, setFilesList] = useState(() => new FilesList(options));
 	const reload = useCallback(() => setFilesList(new FilesList(options)), [options]);
 	const room = useUserRoom(options.rid);
-	const uid = useUserId();
 
 	useComponentDidUpdate(() => {
 		options && reload();
@@ -97,9 +94,6 @@ export const useFilesList = (
 		useMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),
 	);
 
-	// TODO: chapter day : frontend create useStreamUpdatesForUploadList
-	useStreamUpdatesForMessageList(filesList as unknown as MessageList, uid, options.rid || null);
-
 	return {
 		reload,
 		filesList,
