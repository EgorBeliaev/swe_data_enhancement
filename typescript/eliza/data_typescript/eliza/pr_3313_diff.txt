diff --git a/packages/core/src/environment.ts b/packages/core/src/environment.ts
index 9d51e0f4e68..dff7e50e8a1 100644
--- a/packages/core/src/environment.ts
+++ b/packages/core/src/environment.ts
@@ -106,6 +106,14 @@ export const CharacterSchema = z.object({
                 })
                 .optional(),
             model: z.string().optional(),
+            modelConfig: z.object({
+                maxInputTokens: z.number().optional(),
+                maxOutputTokens: z.number().optional(),
+                temperature: z.number().optional(),
+                frequency_penalty: z.number().optional(),
+                presence_penalty:z.number().optional()
+            })
+            .optional(),
             embeddingModel: z.string().optional(),
         })
         .optional(),
diff --git a/packages/core/src/generation.ts b/packages/core/src/generation.ts
index 6adaf9b7232..005b268686e 100644
--- a/packages/core/src/generation.ts
+++ b/packages/core/src/generation.ts
@@ -502,7 +502,7 @@ export async function generateText({
     const max_context_length =
         modelConfiguration?.maxInputTokens || modelSettings.maxInputTokens;
     const max_response_length =
-        modelConfiguration?.max_response_length ||
+        modelConfiguration?.maxOutputTokens ||
         modelSettings.maxOutputTokens;
     const experimental_telemetry =
         modelConfiguration?.experimental_telemetry ||
diff --git a/packages/core/src/types.ts b/packages/core/src/types.ts
index ee9687ee4c8..4b40244193f 100644
--- a/packages/core/src/types.ts
+++ b/packages/core/src/types.ts
@@ -696,7 +696,7 @@ export type TelemetrySettings = {
 
 export interface ModelConfiguration {
     temperature?: number;
-    max_response_length?: number;
+    maxOutputTokens?: number;
     frequency_penalty?: number;
     presence_penalty?: number;
     maxInputTokens?: number;
