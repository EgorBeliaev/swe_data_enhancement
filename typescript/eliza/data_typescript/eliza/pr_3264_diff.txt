diff --git a/packages/adapter-pglite/src/index.ts b/packages/adapter-pglite/src/index.ts
index 35de44c7ea1..71e821b2c6b 100644
--- a/packages/adapter-pglite/src/index.ts
+++ b/packages/adapter-pglite/src/index.ts
@@ -828,12 +828,12 @@ export class PGLiteDatabaseAdapter
                         SELECT
                             embedding,
                             COALESCE(
-                                content->$2->>$3,
+                                content->>$2,
                                 ''
                             ) as content_text
                         FROM memories
-                        WHERE type = $4
-                        AND content->$2->>$3 IS NOT NULL
+                        WHERE type = $3
+                        AND content->>$2 IS NOT NULL
                     )
                     SELECT
                         embedding,
@@ -845,9 +845,9 @@ export class PGLiteDatabaseAdapter
                     WHERE levenshtein(
                         $1,
                         content_text
-                    ) <= $6  -- Add threshold check
+                    ) <= $5  -- Add threshold check
                     ORDER BY levenshtein_score
-                    LIMIT $5
+                    LIMIT $4
                 `;
 
                 const { rows } = await this.query<{
@@ -855,7 +855,6 @@ export class PGLiteDatabaseAdapter
                     levenshtein_score: number;
                 }>(sql, [
                     opts.query_input,
-                    opts.query_field_name,
                     opts.query_field_sub_name,
                     opts.query_table_name,
                     opts.query_match_count,
diff --git a/packages/adapter-postgres/src/index.ts b/packages/adapter-postgres/src/index.ts
index 14b82400200..55511e6d025 100644
--- a/packages/adapter-postgres/src/index.ts
+++ b/packages/adapter-postgres/src/index.ts
@@ -1016,12 +1016,12 @@ export class PostgresDatabaseAdapter
                         SELECT
                             embedding,
                             COALESCE(
-                                content->$2->>$3,
+                                content->>$2,
                                 ''
                             ) as content_text
                         FROM memories
-                        WHERE type = $4
-                        AND content->$2->>$3 IS NOT NULL
+                        WHERE type = $3
+                        AND content->>$2 IS NOT NULL
                     )
                     SELECT
                         embedding,
@@ -1033,14 +1033,13 @@ export class PostgresDatabaseAdapter
                     WHERE levenshtein(
                         $1,
                         content_text
-                    ) <= $6  -- Add threshold check
+                    ) <= $5  -- Add threshold check
                     ORDER BY levenshtein_score
-                    LIMIT $5
+                    LIMIT $4
                 `;
 
                 const { rows } = await this.pool.query(sql, [
                     opts.query_input,
-                    opts.query_field_name,
                     opts.query_field_sub_name,
                     opts.query_table_name,
                     opts.query_match_count,
