diff --git a/packages/core/__tests__/parsing.test.ts b/packages/core/__tests__/parsing.test.ts
index b91e390a12a..1aeac9779e7 100644
--- a/packages/core/__tests__/parsing.test.ts
+++ b/packages/core/__tests__/parsing.test.ts
@@ -125,6 +125,13 @@ describe("Parsing Module", () => {
             });
         });
 
+        it("should parse JSON objects containing array values", () => {
+            const input = '{"key": ["item1", "item2", "item3"]}';
+            expect(parseJSONObjectFromText(input)).toEqual({
+                key: ["item1", "item2", "item3"],
+            });
+        });
+
         it("should handle empty objects", () => {
             expect(parseJSONObjectFromText("```json\n{}\n```")).toEqual({});
             expect(parseJSONObjectFromText("{}")).toEqual({});
diff --git a/packages/core/src/parsing.ts b/packages/core/src/parsing.ts
index fb9ca26914b..ebe4f614403 100644
--- a/packages/core/src/parsing.ts
+++ b/packages/core/src/parsing.ts
@@ -237,7 +237,7 @@ export const normalizeJsonString = (str: string) => {
 
     // "key": unquotedValue â†’ "key": "unquotedValue"
     str = str.replace(
-      /("[\w\d_-]+")\s*: \s*(?!")([\s\S]+?)(?=(,\s*"|\}$))/g,
+      /("[\w\d_-]+")\s*: \s*(?!"|\[)([\s\S]+?)(?=(,\s*"|\}$))/g,
       '$1: "$2"',
     );
 
