[
    {
        "title": "Added warpcast"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "- feat: farcaster\n- feat: spelling\n- feat: fix package json\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n## Release Notes\n\n- **New Features**\n  - Added Warpcast integration for social media posting\n  - Introduced Web3 support for social integrations\n  - Added Subreddit channel selection functionality\n\n- **Providers**\n  - New Web3 provider: Warpcast/Farcaster authentication\n  - Enhanced support for Web3-related social integrations\n\n- **Dependencies**\n  - Updated AWS, CoPilot, and added Neynar SDK packages\n  - Introduced `viem` library for Web3 interactions\n\n- **Improvements**\n  - Refined integration and storage upload processes\n  - Added Web3 provider interface and authentication mechanisms\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->"
    },
    {
        "author": {
            "login": "github-advanced-security"
        },
        "body": ""
    },
    {
        "author": {
            "login": "vercel"
        },
        "body": "[vc]: #q4kPHOO/fKBQ9E85q/sGNLcRnrMPnWNTKXsluXPyxlA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJnaXRyb29tIiwicm9vdERpcmVjdG9yeSI6bnVsbCwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6IiJ9LCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbGlzdGluYWkvZ2l0cm9vbS9COEVpS1lmSGpZTnFKbjFKRjNEQ0FyTW5LTXV1IiwibmV4dENvbW1pdFN0YXR1cyI6IklHTk9SRUQifSx7Im5hbWUiOiJwb3N0aXoiLCJyb290RGlyZWN0b3J5IjpudWxsLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoiIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9saXN0aW5haS9wb3N0aXovN1dhUzJMeDFwdWhGVW5aTHVwNXhjR3RGVEI0TiIsIm5leHRDb21taXRTdGF0dXMiOiJJR05PUkVEIn1dfQ==\n**The latest updates on your projects**. Learn more about [Vercel for Git \u2197\ufe0e](https://vercel.link/github-learn-more)\n\n\n<details><summary>2 Skipped Deployments</summary>\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **gitroom** | \u2b1c\ufe0f Ignored ([Inspect](https://vercel.com/listinai/gitroom/B8EiKYfHjYNqJn1JF3DCArMnKMuu)) |  |  | Jan 18, 2025 3:23pm |\n| **postiz** | \u2b1c\ufe0f Ignored ([Inspect](https://vercel.com/listinai/postiz/7WaS2Lx1puhFUnZLup5xcGtFTB4N)) |  |  | Jan 18, 2025 3:23pm |\n</details>\n\n\n"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe pull request introduces comprehensive support for Web3 integrations, specifically focusing on the Warpcast platform. It adds new components, interfaces, and providers to enable Web3-based social interactions. The changes span multiple files across frontend and backend repositories, introducing a new Web3 provider system, authentication mechanisms, and integration capabilities. The implementation includes subreddit selection, Neynar authentication, and enhanced provider management for Web3-related social interactions.\n\n## Changes\n\n| File | Change Summary |\n|------|----------------|\n| `apps/frontend/src/components/launches/add.provider.component.tsx` | Added `isWeb3` property to social integration, implemented `openWeb3` function for Web3 provider handling |\n| `apps/frontend/src/components/launches/providers/show.all.providers.tsx` | Added `WarpcastProvider` to the list of available providers |\n| `apps/frontend/src/components/launches/providers/warpcast/subreddit.tsx` | New component for subreddit channel selection with search functionality |\n| `apps/frontend/src/components/launches/providers/warpcast/warpcast.provider.tsx` | New provider component for managing subreddit inputs with dynamic field management |\n| `apps/frontend/src/components/launches/web3/providers/wrapcaster.provider.tsx` | New Web3 provider for Warpcast authentication using Neynar |\n| `libraries/nestjs-libraries/src/integrations/social/farcaster.provider.ts` | New social provider for Farcaster/Warpcast platform interactions |\n| `package.json` | Updated dependencies, added Neynar and Viem SDK packages |\n\n## Sequence Diagram\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant AddProviderComponent\n    participant Web3List\n    participant WrapcasterProvider\n    participant NeynarAuth\n\n    User->>AddProviderComponent: Select Web3 Provider\n    AddProviderComponent->>Web3List: Retrieve Web3 Provider\n    Web3List-->>AddProviderComponent: Return Wrapcaster Provider\n    AddProviderComponent->>WrapcasterProvider: Open Authentication Modal\n    WrapcasterProvider->>NeynarAuth: Initiate Authentication\n    NeynarAuth-->>WrapcasterProvider: Return Authenticated User\n    WrapcasterProvider->>AddProviderComponent: Complete Integration\n```\n\n## Poem\n\n> \ud83d\udc30 A Rabbit's Web3 Delight \ud83c\udf10\n> \n> Through subreddits and blockchain's might,\n> Our code now dances with Web3's light!\n> Warpcast whispers, providers gleam,\n> Integration becomes a seamless dream\n> Hop, hop, hooray for tech's new height! \ud83d\ude80\n\n<!-- walkthrough_end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 2b8e0bc2d85b56ce706eaf4e8e43ff370f10e571 and 4fb674a8147e47747ee99af29c5e64cb7d59009d.\n\n</details>\n\n<details>\n<summary>\u26d4 Files ignored due to path filters (2)</summary>\n\n* `apps/frontend/public/icons/platforms/wrapcast.png` is excluded by `!**/*.png`\n* `package-lock.json` is excluded by `!**/package-lock.json`\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (13)</summary>\n\n* `apps/frontend/src/components/launches/add.provider.component.tsx` (6 hunks)\n* `apps/frontend/src/components/launches/providers/show.all.providers.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/providers/warpcast/subreddit.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/providers/warpcast/warpcast.provider.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/web3/providers/wrapcaster.provider.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/web3/web3.list.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/web3/web3.provider.interface.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/integrations/integration.service.ts` (3 hunks)\n* `libraries/nestjs-libraries/src/integrations/integration.manager.ts` (3 hunks)\n* `libraries/nestjs-libraries/src/integrations/social/farcaster.provider.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/integrations/social/social.integrations.interface.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/upload/cloudflare.storage.ts` (1 hunks)\n* `package.json` (3 hunks)\n\n</details>\n\n</details>\n<!-- finishing_touch_checkbox_start -->\n\n## Finishing Touches\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings (Beta)\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    }
]