[
    {
        "title": "Option to tag posts"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features  \n  - Introduced comprehensive tag management so users can add, edit, and assign tags when creating or editing posts.  \n  - Enhanced the calendar view with dynamic tag indicators and hover details for quick context.  \n  - Enabled optional title display controls in key sections for a cleaner interface.  \n\n- Style  \n  - Updated visual styling for tag components to ensure consistent alignment, spacing, and overall design clarity.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->"
    },
    {
        "author": {
            "login": "vercel"
        },
        "body": "[vc]: #3zLw+ZiHYtipn+OvY1GZVcNL7BY7vSWtgFtEBCj5Fzg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJnaXRyb29tIiwicm9vdERpcmVjdG9yeSI6bnVsbCwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL2xpc3RpbmFpL2dpdHJvb20vMTMzN3E2V29LQXQxekgxUXVWa3lYWDQ0c2ljSiIsInByZXZpZXdVcmwiOiJnaXRyb29tLWdpdC1mZWF0LXRhZ3MtbGlzdGluYWkudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJQRU5ESU5HIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6ImdpdHJvb20tZ2l0LWZlYXQtdGFncy1saXN0aW5haS52ZXJjZWwuYXBwIn19LHsibmFtZSI6InBvc3RpeiIsInJvb3REaXJlY3RvcnkiOm51bGwsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiIifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL2xpc3RpbmFpL3Bvc3Rpei8yNWhnQmRKWFR1d0dHRXdxaEpjcEdyVlhIODZ4IiwibmV4dENvbW1pdFN0YXR1cyI6IklHTk9SRUQifV19\n**The latest updates on your projects**. Learn more about [Vercel for Git \u2197\ufe0e](https://vercel.link/github-learn-more)\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **gitroom** | \ud83d\udd04 Building ([Inspect](https://vercel.com/listinai/gitroom/1337q6WoKAt1zH1QuVkyXX44sicJ)) | [Visit Preview](https://gitroom-git-feat-tags-listinai.vercel.app) | \ud83d\udcac [**Add feedback**](https://vercel.live/open-feedback/gitroom-git-feat-tags-listinai.vercel.app?via=pr-comment-feedback-link) | Feb 9, 2025 4:04pm |\n\n<details><summary>1 Skipped Deployment</summary>\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **postiz** | \u2b1c\ufe0f Ignored ([Inspect](https://vercel.com/listinai/postiz/25hgBdJXTuwGGEwqhJcpGrVXH86x)) |  |  | Feb 9, 2025 4:04pm |\n</details>\n\n\n"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\nThis pull request implements comprehensive tag management across the backend and frontend. On the backend, new endpoints and service/repository methods (getTags, createTag, editTag) have been added along with new DTOs and schema models for tags. On the frontend, components have been updated and new ones introduced to manage tag state, display, and styling. Minor adjustments include formatting fixes and an update of the ColorPicker component\u2019s props to enhance external control.\n\n## Changes\n\n| File(s) | Change Summary |\n|---------|----------------|\n| apps/backend/src/api/routes/posts.controller.ts<br>libraries/nestjs-libraries/src/database/prisma/posts/posts.repository.ts<br>libraries/nestjs-libraries/src/database/prisma/posts/posts.service.ts<br>libraries/nestjs-libraries/src/dtos/posts/create.post.dto.ts<br>libraries/nestjs-libraries/src/dtos/posts/create.tag.dto.ts<br>libraries/nestjs-libraries/src/database/prisma/schema.prisma | Added new endpoints (getTags, createTag, editTag) and associated methods for tag management. Extended post creation/updating to include tags, introduced new DTOs and Prisma models for tags, and updated Organization and Post schemas. |\n| apps/frontend/src/app/global.scss<br>apps/frontend/src/components/launches/add.edit.model.tsx<br>apps/frontend/src/components/launches/calendar.context.tsx<br>apps/frontend/src/components/launches/calendar.tsx<br>apps/frontend/src/components/launches/helpers/top.title.component.tsx<br>apps/frontend/src/components/launches/tags.component.tsx | Integrated tag management into the UI. Introduced a new TagsComponent, added tag state to modals, updated calendar item rendering to show tag info, refined TopTitle rendering with a new prop, and applied style fixes (quote normalization & new .tags-top styles). |\n| apps/frontend/src/components/launches/providers/x/x.provider.tsx | Removed an unnecessary console.log statement, simplifying the provider\u2019s logic. |\n| libraries/react-shared-libraries/src/form/color.picker.tsx | Updated the ColorPicker component by adding optional onChange and value props to allow external control over the color state. |\n\n## Sequence Diagram(s)\n```mermaid\nsequenceDiagram\n    participant U as User\n    participant TC as TagsComponent (UI)\n    participant PC as PostsController\n    participant PS as PostsService\n    participant PR as PostsRepository\n    participant DB as Database\n\n    U->>TC: Initiates tag creation (enters tag details)\n    TC->>PC: Sends POST /tags with CreateTagDto data\n    PC->>PS: Invokes createTag(orgId, body)\n    PS->>PR: Calls repository createTag method\n    PR->>DB: Inserts new tag record\n    DB-->>PR: Returns inserted tag\n    PR-->>PS: Returns tag data\n    PS-->>PC: Returns tag result\n    PC-->>TC: Sends response with new tag\n```\n\n```mermaid\nsequenceDiagram\n    participant U as User\n    participant AE as AddEditModal (UI)\n    participant PC as PostsController\n    participant PS as PostsService\n    participant PR as PostsRepository\n    participant DB as Database\n\n    U->>AE: Fills in post details with tags\n    AE->>AE: Updates local tags state\n    AE->>PC: Calls schedule() with post data including tags\n    PC->>PS: Calls createPost(orgId, CreatePostDto with tags)\n    PS->>PR: Invokes createOrUpdatePost with tags\n    PR->>DB: Persists post and tag associations\n    DB-->>PR: Confirms update\n    PR-->>PS: Returns update result\n    PS-->>PC: Sends post creation response\n    PC-->>AE: Delivers final response\n```\n\n## Possibly related PRs\n- gitroomhq/postiz-app#500: Enhancements in the PostsController for tag management align strongly with these changes.\n- gitroomhq/postiz-app#478: Modifications in the CalendarItem component for displaying tag information relate to the new tag integration.\n- gitroomhq/postiz-app#591: Introduction of new methods for managing entities in controllers mirrors the tag management updates.\n\n## Poem\n> Hoppity-hop, I code away,  \n> New tags now dance in lines of play.  \n> Endpoints and components, all in sync,  \n> From backend to UI, no detail to shrink.  \n> With every commit, my heart does skip \u2013  \n> A rabbit\u2019s cheer for upgrades\u2014let\u2019s take a hop!  \n> \ud83d\udc07\ud83d\udcbb Happy coding, munching on digital carrots!\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- = -->\n\n<!-- internal state end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 092ea21f1c0717f9c6ccccf662780b46d1b0957d and 5b6522218f0d11a6c2b78e88b85871806443ca55.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (14)</summary>\n\n* `apps/backend/src/api/routes/posts.controller.ts` (2 hunks)\n* `apps/frontend/src/app/global.scss` (3 hunks)\n* `apps/frontend/src/components/launches/add.edit.model.tsx` (5 hunks)\n* `apps/frontend/src/components/launches/calendar.context.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/calendar.tsx` (7 hunks)\n* `apps/frontend/src/components/launches/helpers/top.title.component.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/providers/x/x.provider.tsx` (0 hunks)\n* `apps/frontend/src/components/launches/tags.component.tsx` (1 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/posts/posts.repository.ts` (8 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/posts/posts.service.ts` (4 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/schema.prisma` (2 hunks)\n* `libraries/nestjs-libraries/src/dtos/posts/create.post.dto.ts` (4 hunks)\n* `libraries/nestjs-libraries/src/dtos/posts/create.tag.dto.ts` (1 hunks)\n* `libraries/react-shared-libraries/src/form/color.picker.tsx` (2 hunks)\n\n</details>\n\n</details>\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings (Beta)\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    }
]