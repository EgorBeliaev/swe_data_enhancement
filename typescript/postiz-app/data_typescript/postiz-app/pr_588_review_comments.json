[
    {
        "title": "Updated Telegram Provider"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "- Updated the logic in 'authenticate' to handle public and private Telegram groups/channels.\r\n- Updated the logic in 'getBotId' to handle both public and private Telegram groups/channels.\r\n- Updated the logic in 'post' to allow sending local files, including contentType, media handling (captions/groups), link generation (to fix undefined links)\r\n\r\n# What kind of change does this PR introduce?\r\n\r\nfunctional and performance improvements to the Telegram integration, specifically: Improved Media Handling, Support for Local Storage, Compatibility with All Group Types, Optimized Link Generation, and Selective Update Fetching...\r\n\r\n# Why was this change needed?\r\n\r\nThis change was needed to address several functional and operational challenges in the original implementation and to improve the overall robustness, flexibility, and performance of the Telegram integration.\r\n\r\n# Other information:\r\n\r\nThis change was discussed with egelhaus and hopefully fixes all the issues. if issues arise in the future I'll take another look and attempt to fix those too. Onwards to creating updated docs now \ud83d\ude02 \r\n\r\n# Checklist:\r\n\r\nPut a \"X\" in the boxes below to indicate you have followed the checklist;\r\n\r\n- [X] I have read the [CONTRIBUTING](https://github.com/gitroomhq/postiz-app/blob/main/CONTRIBUTING.md) guide.\r\n- [X] I checked that there were not similar issues or PRs already open for this.\r\n- [X] This PR fixes just ONE issue (do not include multiple issues or types of change in the same PR) For example, don't try and fix a UI issue and include new dependencies in the same PR.\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced local storage posting support with configurable frontend URL.\n  - Enhanced identification during authentication to ensure accurate chat recognition.\n  - Improved media processing for Telegram messages, including refined MIME detection and automatic grouping of multiple media items for optimized delivery.\n  - Added a method to check if the bot has administrative privileges in a chat for better control flow.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "**Actionable comments posted: 1**\n\n<details>\n<summary>\ud83e\uddf9 Nitpick comments (6)</summary><blockquote>\n\n<details>\n<summary>libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts (6)</summary><blockquote>\n\n`10-11`: **Use proper type definitions instead of @ts-ignore.**\n\nConsider installing type definitions for the `mime` package to remove the `//@ts-ignore` comment. This prevents the suppression of potentially important TypeScript checks.\n\n---\n\n`16-18`: **Validate environment variables for consistency.**\n\nDeclaring `frontendURL` and `mediaStorage` from environment variables is good for flexibility, but you might want to validate or default to safer fallbacks if those environment variables are unset or empty strings. This ensures robust behavior in various deployment environments.\n\n---\n\n`55-55`: **Remove console logging from production code.**\n\nUsing `console.log` in production can clutter logs and potentially expose sensitive data. Consider replacing it with a proper logger at a debug or trace level, or removing it entirely.\n\n---\n\n`77-102`: **Evaluate potential performance impact when fetching updates.**\n\nThe method retrieves updates with `allowed_updates: ['message', 'channel_post']` and then iterates to find a match. If there are many updates, this could impact performance. Consider a more direct approach, such as using Telegram\u2019s webhooks or processing updates in smaller batches if performance becomes an issue.\n\n---\n\n`112-142`: **Handle audio or other MIME types if needed.**\n\nYou're detecting only `image/`, `video/`, or defaulting to `document`. Depending on user needs, you might want to account for audio MIME types (e.g., `audio/mpeg`) or other media categories. Additionally, ensure `media.url.split('/')` always has a valid file component to avoid potential undefined filenames.\n\n---\n\n`209-217`: **Validate chunk size to avoid potential edge cases.**\n\nThe `chunkMedia` method correctly splits arrays into groups of specified size (10). Consider verifying that `size` is never zero or negative and adding a fallback or an error if invalid input is supplied. This helps prevent unexpected slicing behavior.\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>\ud83d\udcdc Review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 13585a1472f838398827b8cf1cb90fa36381da11 and 57e3d4ddb793849172c677b009c5db8c879b4f00.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n\n* `libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts` (4 hunks)\n\n</details>\n\n<details>\n<summary>\ud83d\udd07 Additional comments (1)</summary><blockquote>\n\n<details>\n<summary>libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts (1)</summary>\n\n`64-66`: **Confirm unique identifiers when falling back to chat.id.**\n\nThis fallback uses `chat.username` if it exists, otherwise `chat.id`. Ensure that using a username here won't cause collisions if the username changes or is shared. In some edge cases, a numeric ID may be more reliable and consistent.\n\n</details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->"
    },
    {
        "author": {
            "login": "egelhaus"
        },
        "body": "LGTM, I'll still wait on @nevo-david before merging."
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "**Actionable comments posted: 3**\n\n<details>\n<summary>\ud83e\uddf9 Nitpick comments (3)</summary><blockquote>\n\n<details>\n<summary>libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts (3)</summary><blockquote>\n\n`16-18`: **Consider using environment validation.**\n\nThe environment variables are used directly without validation. Consider using a validation library to ensure these values are present and correctly formatted at startup.\n\nExample using class-validator:\n```typescript\nimport { IsString, IsUrl, IsIn } from 'class-validator';\n\nclass EnvironmentConfig {\n  @IsUrl()\n  FRONTEND_URL: string;\n\n  @IsIn(['local', 's3', 'gcs'])\n  STORAGE_PROVIDER: string;\n}\n```\n\n---\n\n`55-55`: **Remove debug logging.**\n\nProduction code should not contain console.log statements used for debugging.\n\n```diff\n-    console.log(JSON.stringify(chat));\n```\n\n---\n\n`64-67`: **Consider adding type guard for chat.username.**\n\nThe fallback logic is good, but could benefit from explicit type checking.\n\n```diff\n-      id: String(chat.username ? chat.username : chat.id),\n+      id: String(typeof chat.username === 'string' && chat.username.length > 0 ? chat.username : chat.id),\n```\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>\ud83d\udcdc Review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 57e3d4ddb793849172c677b009c5db8c879b4f00 and a1417a385855fa1cbc38e0f0f9543ef1ec4adb41.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n\n* `libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts` (4 hunks)\n\n</details>\n\n<details>\n<summary>\ud83d\udd07 Additional comments (4)</summary><blockquote>\n\n<details>\n<summary>libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts (4)</summary>\n\n`77-81`: **LGTM! Good optimization.**\n\nThe use of `allowed_updates` to filter updates is a good optimization that reduces unnecessary data fetching.\n\n---\n\n`176-206`: **Add error handling for media sending operations.**\n\nThe media sending operations could fail and should be wrapped in try-catch blocks.\n\n---\n\n`243-249`: **LGTM! Well-implemented utility method.**\n\nThe `chunkMedia` method is clean, efficient, and serves its purpose well.\n\n---\n\n`251-268`: **LGTM! Good error handling.**\n\nThe `botIsAdmin` method has proper error handling and clear permission checking logic.\n\n</details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->"
    },
    {
        "author": {
            "login": "vercel"
        },
        "body": "@TonyAntoun is attempting to deploy a commit to the **Listinai** Team on [Vercel](https://vercel.com).\n\nA member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=Listinai&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%2257e3d4ddb793849172c677b009c5db8c879b4f00%22%7D%2C%22id%22%3A%22QmV2kgM1J7YE5Hx6g2LmPLN4243PZAGnyKZfTRAjXcZMXB%22%2C%22org%22%3A%22gitroomhq%22%2C%22prId%22%3A588%2C%22repo%22%3A%22postiz-app%22%7D).\n\n"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n\n\n\n\n<!-- walkthrough_start -->\n\n## Walkthrough\nThe changes update the `TelegramProvider` class to support local storage posting. Two new constants, `frontendURL` and `mediaStorage`, are introduced. The `authenticate` method now falls back to `chat.id` if `chat.username` is unavailable, while the `getBotId` method is enhanced to correctly identify the chat based on group or channel properties. In the `post` method, media URLs are processed according to storage type, with MIME types detected and media sent either as a single message or a media group. A new `chunkMedia` method splits media arrays into groups of ten to comply with Telegram's API limitations.\n\n## Changes\n\n| File Path                                                 | Change Summary                                                                                                                                                                            |\n|-----------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| libraries/nestjs-libraries/src/integrations/social/telegram.provider.ts | - **Local Storage Support:** Introduces `frontendURL` and `mediaStorage` constants. <br>- **Authentication:** Updates the `authenticate` method to fallback from `chat.username` to `chat.id`. <br>- **Chat ID Retrieval:** Enhances `getBotId` method to support both group and channel types. <br>- **Media Handling:** Refactors `post` method to process media files (including MIME detection and grouping); adds a new private `chunkMedia` method for splitting media items. <br>- **Admin Check:** Adds `botIsAdmin` method to verify bot's admin status in a chat. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant TelegramProvider\n    participant TelegramAPI\n\n    Client->>TelegramProvider: post(message, mediaItems)\n    TelegramProvider->>TelegramProvider: Process mediaStorage & frontendURL\n    alt Multiple media items\n        TelegramProvider->>TelegramProvider: Call chunkMedia(mediaItems, 10)\n        TelegramProvider-->>TelegramProvider: Media groups prepared\n    else Single or no media\n        TelegramProvider-->>TelegramProvider: Process message directly\n    end\n    TelegramProvider->>TelegramAPI: Send message (or media group)\n    TelegramAPI-->>TelegramProvider: Acknowledge message receipt\n```\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant TelegramProvider\n\n    Client->>TelegramProvider: authenticate(chat)\n    TelegramProvider->>TelegramProvider: Check chat.username\n    alt Username exists\n        TelegramProvider-->>Client: Return chat.username as id\n    else\n        TelegramProvider-->>Client: Return chat.id as id\n    end\n```\n\n## Possibly related PRs\n- **gitroomhq/postiz-app#568:** Modifications to the `TelegramProvider`'s `getBotId` method are directly connected to its usage within the `IntegrationsController`'s `getUpdates` method, linking these changes at the code-level.\n\n## Poem\n> I'm a rabbit, hopping along the code lane,  \n> Tweaking Telegram with changes plain.  \n> Constants set, media split with care,  \n> Chat IDs adjusted, flowing like air.  \n> With every commit, I smile wider and clear \u2013 \ud83d\udc30\ud83d\udcbb  \n> Together we improve, year by year!  \n> Hooray for robust features, let's give a cheer!\n\n<!-- walkthrough_end -->\n<!-- announcements_start -->\n\n> [!TIP]\n> <details>\n> <summary>\ud83c\udf10 Web search-backed reviews and chat</summary>\n> \n> - We have enabled web search-based reviews and chat for all users. This feature allows CodeRabbit to access the latest documentation and information on the web.\n> - You can disable this feature by setting `web_search: false` in the `knowledge_base` settings.\n> - Please share any feedback in the [Discord discussion](https://discord.com/channels/1134356397673414807/1336198493232042004).\n> \n> </details>\n\n<!-- announcements_end -->\n<!-- internal state start -->\n\n\n<!-- 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 -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings (Beta)\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    },
    {
        "author": {
            "login": "Azadbangladeshi-com"
        },
        "body": "### visa needed"
    },
    {
        "author": {
            "login": "Azadbangladeshi-com"
        },
        "body": "\r\nUploading 1f28c6f885c928e2b86a8de72c17a23e.mp4\u2026\r\n\r\n"
    },
    {
        "author": {
            "login": "nevo-david"
        },
        "body": "Testing :)"
    },
    {
        "author": {
            "login": "nevo-david"
        },
        "body": "@TonyAntoun amazing, you even fixed the channels option.\r\nI have a small task for you if possible \u2764\ufe0f\r\nCan you immediately delete the message once the user posted it?"
    },
    {
        "author": {
            "login": "TonyAntoun"
        },
        "body": "> @TonyAntoun amazing, you even fixed the channels option. I have a small task for you if possible \u2764\ufe0f Can you immediately delete the message once the user posted it?\r\n\r\nUpdated the code. the deletion only works if the bot is admin."
    },
    {
        "author": {
            "login": "nevo-david"
        },
        "body": "Super valuable thank you @TonyAntoun!\r\nIt is now merged! :)"
    }
]