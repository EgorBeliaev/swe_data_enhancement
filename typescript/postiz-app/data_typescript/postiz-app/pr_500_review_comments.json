[
    {
        "title": "Internal plugs"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n## Release Notes\n\n- **New Features**\n\t- Added a new endpoint to retrieve internal plugs for integrations\n\t- Introduced `InternalChannels` component to manage and display internal plug configurations\n\t- Enhanced integration handling with new `allIntegrations` property across multiple components\n\n- **Improvements**\n\t- Added focus management for text editing components\n\t- Expanded integration context to support more comprehensive data retrieval\n\t- Improved error handling and data fetching for integration-related functionalities\n\n- **Backend Changes**\n\t- Implemented new methods for processing internal plugs\n\t- Added support for retrieving internal plug metadata for social providers\n\n- **Frontend Updates**\n\t- Updated modal components to support broader integration options\n\t- Introduced new methods for handling integration-specific actions\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->"
    },
    {
        "author": {
            "login": "vercel"
        },
        "body": "[vc]: #vCXu+oaKC/VwUaXOnmr36TiTjjVKrLivYmTzwpdrWKw=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJnaXRyb29tIiwicm9vdERpcmVjdG9yeSI6bnVsbCwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL2xpc3RpbmFpL2dpdHJvb20vREZuamRIVVVDbndiZlpYdGdiYzFmOTZpMUZiRyIsInByZXZpZXdVcmwiOiJnaXRyb29tLWdpdC1mZWF0LWludGVybmFsLXBsdWdzLWxpc3RpbmFpLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiUEVORElORyIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJnaXRyb29tLWdpdC1mZWF0LWludGVybmFsLXBsdWdzLWxpc3RpbmFpLnZlcmNlbC5hcHAifX0seyJuYW1lIjoicG9zdGl6Iiwicm9vdERpcmVjdG9yeSI6bnVsbCwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL2xpc3RpbmFpL3Bvc3Rpei83R1B0S2JDanJtcTFhWEw4WG9vTER0NU5BU1lXIiwicHJldmlld1VybCI6InBvc3Rpei1naXQtZmVhdC1pbnRlcm5hbC1wbHVncy1saXN0aW5haS52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IlBFTkRJTkciLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoicG9zdGl6LWdpdC1mZWF0LWludGVybmFsLXBsdWdzLWxpc3RpbmFpLnZlcmNlbC5hcHAifX1dfQ==\n**The latest updates on your projects**. Learn more about [Vercel for Git \u2197\ufe0e](https://vercel.link/github-learn-more)\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **gitroom** | \ud83d\udd04 Building ([Inspect](https://vercel.com/listinai/gitroom/DFnjdHUUCnwbfZXtgbc1f96i1FbG)) | [Visit Preview](https://gitroom-git-feat-internal-plugs-listinai.vercel.app) | \ud83d\udcac [**Add feedback**](https://vercel.live/open-feedback/gitroom-git-feat-internal-plugs-listinai.vercel.app?via=pr-comment-feedback-link) | Dec 28, 2024 4:56am |\n| **postiz** | \ud83d\udd04 Building ([Inspect](https://vercel.com/listinai/postiz/7GPtKbCjrmq1aXL8XooLDt5NASYW)) | [Visit Preview](https://postiz-git-feat-internal-plugs-listinai.vercel.app) | \ud83d\udcac [**Add feedback**](https://vercel.live/open-feedback/postiz-git-feat-internal-plugs-listinai.vercel.app?via=pr-comment-feedback-link) | Dec 28, 2024 4:56am |\n\n\n"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n\n<!-- internal state start -->\n\n\n<!-- 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= -->\n\n<!-- internal state end -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis pull request introduces a comprehensive enhancement to the application's integration and plug management system. The changes span multiple files across backend and frontend components, focusing on adding new methods for retrieving and processing internal plugs. A new `InternalChannels` component is introduced to render and manage these plugs, and several existing components are updated to support passing and handling of all available integrations.\n\n## Changes\n\n| File | Change Summary |\n|------|----------------|\n| `apps/backend/src/api/routes/integrations.controller.ts` | Added `getInternalPlugs` method to retrieve internal plugs for a given integration |\n| `apps/frontend/src/components/launches/*` | Updated multiple components to support `allIntegrations` prop, enhancing integration handling |\n| `apps/workers/src/app/plugs.controller.ts` | Added `internalPlug` method to handle internal plug processing |\n| `libraries/helpers/src/decorators/post.plug.ts` | Introduced new `PostPlug` decorator for metadata management |\n| `libraries/nestjs-libraries/src/integrations/*` | Added methods for retrieving and processing internal plugs across integration services |\n\n## Sequence Diagram\n\n```mermaid\nsequenceDiagram\n    participant Frontend as Frontend Components\n    participant Backend as Integration Controller\n    participant Worker as Plugs Worker\n    participant Service as Integration Service\n\n    Frontend->>Backend: Request internal plugs\n    Backend->>Service: Get internal plugs metadata\n    Service-->>Backend: Return internal plugs\n    Backend-->>Frontend: Provide internal plugs\n    Frontend->>Worker: Trigger internal plug processing\n    Worker->>Service: Process internal plug\n    Service->>Service: Validate integrations\n    Service-->>Worker: Complete processing\n```\n\n## Possibly related PRs\n\n- **#468**: Changes to `AddEditModal` component involving integration handling\n\n## Poem\n\n> \ud83d\udc30 Plugs and integrations dance,\n> A rabbit's code takes a new stance!\n> Metadata flows with grace and might,\n> Connecting platforms, pure delight! \n> Tech magic sprinkled, systems unite! \ud83d\ude80\n\n<!-- walkthrough_end -->\n<!-- announcements_start -->\n\n> [!TIP]\n> CodeRabbit's [docstrings feature](https://docs.coderabbit.ai/finishing-touches/docstrings) is now available as part of our [Early Access Program](https://docs.coderabbit.ai/early-access)! Simply use the command `@coderabbitai generate docstrings` to have CodeRabbit automatically generate docstrings for your pull request. We would love to hear your feedback on [Discord](https://discord.com/channels/1134356397673414807/1317286905557287022).\n\n<!-- announcements_end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 041b076df6026bf1adc5cab7b5797751455d5cae and 3b270559ba4101daf055b1674d63c2c2a7f180c7.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (18)</summary>\n\n* `apps/backend/src/api/routes/integrations.controller.ts` (3 hunks)\n* `apps/frontend/src/components/launches/add.edit.model.tsx` (3 hunks)\n* `apps/frontend/src/components/launches/bold.text.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/calendar.tsx` (3 hunks)\n* `apps/frontend/src/components/launches/generator/generator.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/helpers/pick.platform.component.tsx` (0 hunks)\n* `apps/frontend/src/components/launches/helpers/use.integration.ts` (1 hunks)\n* `apps/frontend/src/components/launches/internal.channels.tsx` (1 hunks)\n* `apps/frontend/src/components/launches/providers.options.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/providers/high.order.provider.tsx` (5 hunks)\n* `apps/frontend/src/components/launches/u.text.tsx` (2 hunks)\n* `apps/workers/src/app/plugs.controller.ts` (2 hunks)\n* `apps/workers/src/app/posts.controller.ts` (1 hunks)\n* `libraries/helpers/src/decorators/post.plug.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/integrations/integration.service.ts` (2 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/posts/posts.service.ts` (2 hunks)\n* `libraries/nestjs-libraries/src/integrations/integration.manager.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/integrations/social/x.provider.ts` (3 hunks)\n\n</details>\n\n</details>\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    }
]