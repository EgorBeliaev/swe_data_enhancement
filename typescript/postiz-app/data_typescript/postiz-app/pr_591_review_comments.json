[
    {
        "title": "Webhook"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Webhook feature\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced comprehensive webhook management, enabling users to add, update, view, and delete webhooks.\n  - Updated the settings interface with a popup design that offers streamlined access to features.\n\n- **Enhancements**\n  - Improved channel management with interactive confirmations and clearer feedback.\n  - Refined team management labels for better clarity.\n  - Expanded subscription permissions to enforce webhook limits.\n  - Applied minor UI adjustments for more consistent presentation across pages.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->"
    },
    {
        "author": {
            "login": "github-advanced-security"
        },
        "body": ""
    },
    {
        "author": {
            "login": "vercel"
        },
        "body": "[vc]: #0mjpcgZZKc3yFG1fjbZLNO8bBIJ/XC+AzxQ2AmV5SkA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJnaXRyb29tIiwicm9vdERpcmVjdG9yeSI6bnVsbCwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL2xpc3RpbmFpL2dpdHJvb20vOTg4YTN3emNtRTlpWEJxOXpHbjN2eHdOYW01SCIsInByZXZpZXdVcmwiOiJnaXRyb29tLWdpdC1mZWF0LXdlYmhvb2stbGlzdGluYWkudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJQRU5ESU5HIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6ImdpdHJvb20tZ2l0LWZlYXQtd2ViaG9vay1saXN0aW5haS52ZXJjZWwuYXBwIn19LHsibmFtZSI6InBvc3RpeiIsInJvb3REaXJlY3RvcnkiOm51bGwsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9saXN0aW5haS9wb3N0aXovNVN5MnFlaHE4Y2RZcDR4R3Z1UjkxUXZEVFpiaCIsInByZXZpZXdVcmwiOiJwb3N0aXotZ2l0LWZlYXQtd2ViaG9vay1saXN0aW5haS52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IlBFTkRJTkciLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoicG9zdGl6LWdpdC1mZWF0LXdlYmhvb2stbGlzdGluYWkudmVyY2VsLmFwcCJ9fV19\n**The latest updates on your projects**. Learn more about [Vercel for Git \u2197\ufe0e](https://vercel.link/github-learn-more)\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **gitroom** | \ud83d\udd04 Building ([Inspect](https://vercel.com/listinai/gitroom/988a3wzcmE9iXBq9zGn3vxwNam5H)) | [Visit Preview](https://gitroom-git-feat-webhook-listinai.vercel.app) | \ud83d\udcac [**Add feedback**](https://vercel.live/open-feedback/gitroom-git-feat-webhook-listinai.vercel.app?via=pr-comment-feedback-link) | Feb 6, 2025 2:16pm |\n| **postiz** | \ud83d\udd04 Building ([Inspect](https://vercel.com/listinai/postiz/5Sy2qehq8cdYp4xGvuR91QvDTZbh)) | [Visit Preview](https://postiz-git-feat-webhook-listinai.vercel.app) | \ud83d\udcac [**Add feedback**](https://vercel.live/open-feedback/postiz-git-feat-webhook-listinai.vercel.app?via=pr-comment-feedback-link) | Feb 6, 2025 2:16pm |\n\n\n"
    },
    {
        "author": {
            "login": "coderabbitai"
        },
        "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\nThis pull request introduces webhook functionality into the system. A new `WebhookController` is added to the backend API and registered with authentication. The changes extend permission checks to include a new `WEBHOOKS` section and adjust error messaging. On the frontend, settings and menu components are updated to integrate with webhook features, and new UI components are provided for managing webhooks. Additionally, workers and various libraries are enhanced to support webhook creation, notification (digest and fire), and database schema modifications to store webhook data.\n\n## Changes\n\n| File(s) | Change Summary |\n|---------|----------------|\n| `apps/backend/.../api.module.ts`<br>`apps/backend/.../webhooks.controller.ts` | Registered new `WebhookController` with GET, POST, PUT, DELETE methods for handling webhook HTTP requests. |\n| `apps/backend/.../permissions.service.ts`<br>`apps/backend/.../subscription.exception.ts` | Enhanced permission logic with new `WEBHOOKS` section and updated error handling (formatting and messaging) for webhook limits. |\n| `apps/frontend/.../settings/page.tsx`<br>`apps/frontend/.../layout/settings.component.tsx`<br>`apps/frontend/.../layout/top.menu.tsx` | Replaced `SettingsComponent` with `SettingsPopup`, updated settings navigation, and added a hidden \"Settings\" menu item. |\n| `apps/frontend/.../launches/menu.tsx`<br>`apps/frontend/.../layout/impersonate.tsx`<br>`apps/frontend/.../public-api/public.component.tsx`<br>`apps/frontend/.../settings/teams.component.tsx` | Refined UI components: updated channel functions with confirmation dialogs and error handling; adjusted heading levels and removed extraneous styling. |\n| `apps/frontend/.../webhooks/webhooks.tsx` | New React components for managing webhooks, including a form component for adding or editing a webhook. |\n| `apps/workers/.../posts.controller.ts` | Injected `WebhooksService` and added a new event handler method to process webhook events within the posts controller. |\n| `libraries/.../database.module.ts`<br>`libraries/.../posts/posts.repository.ts`<br>`libraries/.../posts/posts.service.ts`<br>`libraries/.../schema.prisma`<br>`libraries/.../subscriptions/pricing.ts` | Updated database module and posts logic: added providers, new repository method (`getPostsSince`), pricing model extension for webhook limits, and schema modifications to support webhook and integration models. |\n| `libraries/.../webhooks/webhooks.repository.ts`<br>`libraries/.../webhooks/webhooks.service.ts`<br>`libraries/.../webhooks/webhooks.dto.ts` | Introduced a new domain for webhooks: added repository and service classes for managing webhooks (creation, deletion, digesting, and firing notifications), plus DTO classes for validation and data transfer. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant C as Client\n    participant WC as WebhookController\n    participant WS as WebhooksService\n    participant WR as WebhooksRepository\n    participant DB as Database\n\n    C->>WC: POST /webhooks (payload)\n    WC->>WS: createAWebhook(org, body)\n    WS->>WR: createWebhook(org, body)\n    WR->>DB: Upsert webhook record\n    DB-->>WR: Confirmation\n    WR-->>WS: Return created webhook\n    WS-->>WC: Return success response\n    WC-->>C: HTTP 200 OK\n```\n\n```mermaid\nsequenceDiagram\n    participant P as PostsController\n    participant WS as WebhooksService\n    participant BQ as BullMqClient\n    participant WH as ExternalWebhook\n\n    P->>WS: webhooks(data: {org, since})\n    WS->>BQ: Schedule digest/webhook job\n    loop For each webhook\n       WS->>WH: POST notification with filtered posts\n       WH-->>WS: Acknowledgement (or error logged)\n    end\n```\n\n## Possibly related PRs\n- **gitroomhq/postiz-app#490**: Introduced changes in `WebhookController` similar to modifications in `PublicIntegrationsController`, both handling HTTP requests for webhook management.\n- **gitroomhq/postiz-app#500**: Added a new method in `IntegrationsController` for internal plug handling; closely related to the webhook management changes introduced here.\n\n## Poem\n> I'm hopping through lines of code so bright,  \n> Adding webhooks to guide our flight.  \n> With controllers and services, I bound with glee,  \n> Managing data like clover in a field, you see.  \n> From API to UI, I hop in delight,  \n> Coding magic in the moonlit night.  \n> \ud83d\udc07\u2728 Happy hops to changes done right!\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- announcements_start -->\n\n> [!TIP]\n> <details>\n> <summary>\ud83c\udf10 Web search-backed reviews and chat</summary>\n> \n> - We have enabled web search-based reviews and chat for all users. This feature allows CodeRabbit to access the latest documentation and information on the web.\n> - You can disable this feature by setting `web_search: false` in the `knowledge_base` settings.\n> - Please share any feedback in the [Discord discussion](https://discord.com/channels/1134356397673414807/1336198493232042004).\n> \n> </details>\n\n<!-- announcements_end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 16dd349eb7c53e52d0012e725b3b62a3c1de7c47 and fc11d8c14aa1dcc0e3807db3275604489b4176d1.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (21)</summary>\n\n* `apps/backend/src/api/api.module.ts` (2 hunks)\n* `apps/backend/src/api/routes/webhooks.controller.ts` (1 hunks)\n* `apps/backend/src/services/auth/permissions/permissions.service.ts` (4 hunks)\n* `apps/backend/src/services/auth/permissions/subscription.exception.ts` (3 hunks)\n* `apps/frontend/src/app/(site)/settings/page.tsx` (2 hunks)\n* `apps/frontend/src/components/launches/menu/menu.tsx` (0 hunks)\n* `apps/frontend/src/components/layout/impersonate.tsx` (1 hunks)\n* `apps/frontend/src/components/layout/settings.component.tsx` (5 hunks)\n* `apps/frontend/src/components/layout/top.menu.tsx` (3 hunks)\n* `apps/frontend/src/components/public-api/public.component.tsx` (1 hunks)\n* `apps/frontend/src/components/settings/teams.component.tsx` (2 hunks)\n* `apps/frontend/src/components/webhooks/webhooks.tsx` (1 hunks)\n* `apps/workers/src/app/posts.controller.ts` (2 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/database.module.ts` (2 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/posts/posts.repository.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/posts/posts.service.ts` (3 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/schema.prisma` (3 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/subscriptions/pricing.ts` (6 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/webhooks/webhooks.repository.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/database/prisma/webhooks/webhooks.service.ts` (1 hunks)\n* `libraries/nestjs-libraries/src/dtos/webhooks/webhooks.dto.ts` (1 hunks)\n\n</details>\n\n</details>\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings (Beta)\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR. ([Beta](https://docs.coderabbit.ai/early-access#beta))\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
    },
    {
        "author": {
            "login": "egelhaus"
        },
        "body": "Really nice work!"
    }
]