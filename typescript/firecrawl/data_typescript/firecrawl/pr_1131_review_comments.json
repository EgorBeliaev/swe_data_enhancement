[
    {
        "title": "Fix corepack and self hosting setup"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This is a set of changes that addressed the corepack issue and some additional issues with running the docker compose file in my self-hosted environment.\r\n\r\nSee issue: #1126 \r\n\r\nI fixed the corepack issue by following this approach:\r\n* [pnpm corepack fix suggestion](https://github.com/pnpm/pnpm/issues/9029#issuecomment-2631400936)\r\n\r\nAfter fixing the corepack issue, I was left with this error:\r\n* `ulimit: open files: cannot modify limit: Operation not permitted`\r\n* In my research, you cannot set the ulimit from the docker entrypoint script.\r\n* You need to set it as part of running the image like `docker run --ulimit nofile=65535:65535 your-image` or in the docker compose file as i have implemented"
    },
    {
        "author": {
            "login": "mogery"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mogery"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mogery"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mogery"
        },
        "body": ""
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": ""
    },
    {
        "author": {
            "login": "mogery"
        },
        "body": "LGTM"
    },
    {
        "author": {
            "login": "rothnic"
        },
        "body": "@mogery I updated the docker-entrypoint.sh file as requested and it worked fine on my server. However, I then tried to clone the branch fresh on my local macbook pro (intel) to test that and ran into a signature issue with one of the commands in the Dockerfile. So, I made a tweak to it to avoid that issue and it works now on my macbook pro as well without having to modify the docker compose or dockerfile.\r\n\r\nThis I think is now ready to go"
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "[Self-Host] Docker Build Fails with \"Cannot find matching keyid\" Error During PNPM Install",
                    "body": "When attempting to build a Docker image, the build process fails during the pnpm install --frozen-lockfile (or pnpm install --prod --frozen-lockfile) step with an error indicating a missing key ID. The error message is:\n\n```\nError: Cannot find matching keyid: {\"signatures\":[{\"sig\":\"MEQCIHGqHbvc2zImUPEPFpT4grh6rMYslel+lAjFArx8+RUdAiBfnJA+bgmUvO5Lctfkq+46KKDQdx/8RhLPge3pA+EdHA==\",\"keyid\":\"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U\"}],\"keys\":[{\"expires\":null,\"keyid\":\"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA\",\"keytype\":\"ecdsa-sha2-nistp256\",\"scheme\":\"ecdsa-sha2-nistp256\",\"key\":\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE1Olb3zMAFFxXKHiIkQO5cJ3Yhl5i6UPp+IhuteBJbuHcA5UogKo0EWtlWwW6KSaKoTNEYL7JlCQiVnkhBktUgg==\"}]}\n    at verifySignature (/usr/local/lib/node_modules/corepack/dist/lib/corepack.cjs:21535:47)\n    ...\nNode.js v20.18.2\n```\n\nThe error prevents the Docker build from completing successfully.\n\n**To Reproduce**\nClone the repository or obtain the Docker configuration files.\nRun docker compose build --no-cache (or a similar build command).\nObserve that the build halts with the \"Cannot find matching keyid\" error while installing packages with PNPM.\n\n**Expected Behavior**\nThe Docker image should build without throwing a key-matching error, completing the pnpm install step successfully.",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "ftonato"
                                },
                                "body": "Hi @piotrstarzynski,\n\nThank you for reaching out! I\u2019ll be assisting you with your questions or issues. I will take a look at it and provide you with an update once I have one \ud83d\ude09\n\n\n\n\n\n\n\n"
                            },
                            {
                                "author": {
                                    "login": "ftonato"
                                },
                                "body": "Hello @piotrstarzynski,\n\nAfter trying some things, I made this change and worked as expected for me, do you mind trying too?\n\n----\n\n<img width=\"1270\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b8c54793-cc3b-423d-a6a0-d8119a0f4547\" />\n\nThese are the first lines of the Dockerfile `firecrawl/apps/api/Dockerfile`.\n\n```Dockerfile\nFROM node:20-slim AS base\nENV PNPM_HOME=\"/pnpm\"\nENV PATH=\"$PNPM_HOME:$PATH\"\nLABEL fly_launch_runtime=\"Node.js\"\nRUN npm install -g pnpm@8.15.5\nCOPY . /app\nWORKDIR /app\n```\n\nAfter changing it, these were the steps:\n\n1. `cd apps/api/`\n2. `rm -rf node_modules && rm -rf pnpm-lock.yaml`\n3. `pnpm install`\n4. `docker compose build && docker compose up -d`"
                            },
                            {
                                "author": {
                                    "login": "piotrstarzynski"
                                },
                                "body": "Hello @ftonato,\n\nYeah, of course. I am not sure if I did it right.\n\nWhen trying:\n```\npnpm install\nCommand 'pnpm' not found, did you mean:\n  command 'npm' from deb npm (8.5.1~ds-1)\nTry: apt install <deb name>\n```\n\nTried this:\n```\n# Install Node.js if not already installed\ncurl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Install PNPM globally\nnpm install -g pnpm\n\n```\n\nWhen building after got this:\n```\n => [api build 3/4] RUN pnpm install                                       3.5s\n => ERROR [api build 4/4] RUN --mount=type=secret,id=SENTRY_AUTH_TOKEN    13.2s\n------\n > [api build 4/4] RUN --mount=type=secret,id=SENTRY_AUTH_TOKEN     bash -c 'export SENTRY_AUTH_TOKEN=\"$(cat /run/secrets/SENTRY_AUTH_TOKEN)\"; if [ -z $SENTRY_AUTH_TOKEN ]; then pnpm run build:nosentry; else pnpm run build; fi':\n0.278 cat: /run/secrets/SENTRY_AUTH_TOKEN: No such file or directory\n0.781 \n0.781 > firecrawl-scraper-js@1.0.0 build:nosentry /app\n0.781 > tsc\n0.781 \n12.97 src/lib/extract/reranker.ts(34,5): error TS2322: Type '(string | Record<string, string>)[]' is not assignable to type 'string[]'.\n12.97   Type 'string | Record<string, string>' is not assignable to type 'string'.\n12.97     Type 'Record<string, string>' is not assignable to type 'string'.\n12.97 src/lib/logger.ts(8,41): error TS18046: 'info.metadata' is of type 'unknown'.\n12.97 src/lib/logger.ts(8,71): error TS18046: 'info.metadata' is of type 'unknown'.\n12.97 src/scraper/scrapeURL/lib/removeUnwantedElements.ts(3,10): error TS2305: Module '\"cheerio/dist/commonjs\"' has no exported member 'AnyNode'.\n13.03 \u2009ELIFECYCLE\u2009 Command failed with exit code 2.\n------\nfailed to solve: process \"/bin/sh -c bash -c 'export SENTRY_AUTH_TOKEN=\\\"$(cat /run/secrets/SENTRY_AUTH_TOKEN)\\\"; if [ -z $SENTRY_AUTH_TOKEN ]; then pnpm run build:nosentry; else pnpm run build; fi'\" did not complete successfully: exit code: 1\n```\n\nAnd I gave up.\n\nBtw. it was working like a charm, but after docker compose down it stopped and threw errors.\n\nThanks for help."
                            },
                            {
                                "author": {
                                    "login": "daniel5gh"
                                },
                                "body": "Ran into the same, apparently this is because of signing keys embedded into corepack and those are no longer valid because of a rotation (https://github.com/nodejs/corepack/issues/616). The `node:20-slim` doesn't have updated keys. `node:23-slim` does have them.\n\nI updated https://github.com/mendableai/firecrawl/blob/5894076fda71ef320dcb0e7dcee34ce589059522/apps/api/Dockerfile#L1\n\nto use `node:23-slim` and the images do build. I have no idea if the project works with 23 instead of 20 though."
                            },
                            {
                                "author": {
                                    "login": "daniel5gh"
                                },
                                "body": "there is still the sentry auth token error during build mentioned by @piotrstarzynski \n\n```\n#34 [api build 4/4] RUN --mount=type=secret,id=SENTRY_AUTH_TOKEN     bash -c 'export SENTRY_AUTH_TOKEN=\"$(cat /run/secrets/SENTRY_AUTH_TOKEN)\"; if [ -z $SENTRY_AUTH_TOKEN ]; then pnpm run build:nosentry; else pnpm run build; fi'\n#34 0.357 cat: /run/secrets/SENTRY_AUTH_TOKEN: No such file or directory\n#34 0.599 \n#34 0.599 > firecrawl-scraper-js@1.0.0 build:nosentry /app\n#34 0.599 > tsc\n#34 0.599\n#34 DONE 6.4s\n```\n\nbut it does correctly run `build:nosentry` albeit a bit rough with that error. I guess we miss the equivalent of `--secret id=SENTRY_AUTH_TOKEN` and I don't know how that works with compose.\n\nAfter running the image, there was a sentry import error. I solved this by simply commenting out the contents of `services/firecrawl/apps/api/src/services/sentry.ts` - also very hacky, but good enough for me for now.\n\nThe service is listening on 3002 at least."
                            },
                            {
                                "author": {
                                    "login": "th1nkful"
                                },
                                "body": "I stumbled onto this while debugging the same error for an unrelated project, and came across this on the `pnpm` repo, thought it might help here:  https://github.com/pnpm/pnpm/issues/9029"
                            },
                            {
                                "author": {
                                    "login": "namhnz"
                                },
                                "body": "> I stumbled onto this while debugging the same error for an unrelated project, and came across this on the `pnpm` repo, thought it might help here:  https://github.com/pnpm/pnpm/issues/9029\n\nThis is simple and quickest way to fix"
                            },
                            {
                                "author": {
                                    "login": "piotrstarzynski"
                                },
                                "body": "I tried all the suggestions but ran into another issue:\n\n`ERR_PNPM_NO_LOCKFILE\u2009 Cannot install with \"frozen-lockfile\" because pnpm-lock.yaml is absent`\n\nDo you have like step by step what to do to fix it or should I wait for an update?"
                            },
                            {
                                "author": {
                                    "login": "namhnz"
                                },
                                "body": "I changed Dockerfile in apps/api/ like this, then build normally, don't delete pnpm-lock.yaml file. And no need to install or delete anything else.\n\n![Image](https://github.com/user-attachments/assets/fcb9f95f-3824-4df8-b972-94b83a2471e9)\n\nhttps://github.com/pnpm/pnpm/issues/9029#issuecomment-2632490767"
                            },
                            {
                                "author": {
                                    "login": "rothnic"
                                },
                                "body": "I submitted a pull request (#1131) that fixes this issue and fixes some other issues with the current repo in getting a self-hosted firecrawl \"stack\" running using portainer where I just point to the repo and modify env variables.\n\nI didn't receive the lockfile issue, but I did encounter an issue with the docker entryfile trying to set ulimit, which isn't supported in my environment. I moved this to the docker compose run configuration."
                            }
                        ]
                    }
                }
            }
        }
    }
]