diff --git a/CHANGELOG.md b/CHANGELOG.md
index 2dc04a353..4286d904c 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,6 @@
+# [2.11.5]
+- Improve Keyboard Controls.
+
 # [2.11.4]
 - Fix exception in `TiledWorldBuilder`.
 
diff --git a/README.md b/README.md
index 3892edbf2..a039dd605 100644
--- a/README.md
+++ b/README.md
@@ -2,7 +2,8 @@
 [![Flutter](https://img.shields.io/badge/Made%20with-Flutter-blue.svg)](https://flutter.dev/)
 [![MIT Licence](https://badges.frapsoft.com/os/mit/mit.svg?v=103)](https://opensource.org/licenses/mit-license.php)
 [![pub package](https://img.shields.io/pub/v/bonfire.svg)](https://pub.dev/packages/bonfire)
-[![pub points](https://badges.bar/bonfire/pub%20points)](https://pub.dev/packages/bonfire/score)
+![GitHub stars](https://img.shields.io/github/stars/RafaelBarbosatec/bonfire)
+[![pub points](https://img.shields.io/pub/points/bonfire?logo=dart)](https://pub.dev/packages/bonfire/score)
 
 [![bonfire](https://github.com/RafaelBarbosatec/bonfire/blob/master/media/bonfire.gif)](https://bonfire-engine.github.io/)
 
diff --git a/example/lib/main.dart b/example/lib/main.dart
index b49a567f6..0d6733f9d 100644
--- a/example/lib/main.dart
+++ b/example/lib/main.dart
@@ -47,7 +47,7 @@ class Menu extends StatelessWidget {
                   style: TextStyle(fontSize: 30, color: Colors.white),
                   children: [
                     TextSpan(
-                      text: '  v2.11.1',
+                      text: '  v2.11.5',
                       style: TextStyle(fontSize: 15, color: Colors.white),
                     )
                   ],
diff --git a/lib/joystick/joystick.dart b/lib/joystick/joystick.dart
index 98451f969..5932763bc 100644
--- a/lib/joystick/joystick.dart
+++ b/lib/joystick/joystick.dart
@@ -145,35 +145,33 @@ class Joystick extends JoystickController {
 
   @override
   bool onKeyboard(RawKeyEvent event, Set<LogicalKeyboardKey> keysPressed) {
+    /// If the keyboard is disabled, we do not process the event
     if (!keyboardConfig.enable) return false;
 
+    /// If the key is not accepted, we do not process the event
     if (keyboardConfig.acceptedKeys != null) {
-      final keyAccepted = keyboardConfig.acceptedKeys;
-      if (!keyAccepted!.contains(event.logicalKey)) {
+      final acceptedKeys = keyboardConfig.acceptedKeys!;
+      if (!acceptedKeys.contains(event.logicalKey)) {
         return false;
       }
     }
 
-    if (_isDirectional(event)) {
-      if (event is RawKeyDownEvent && _currentKeyboardKeys.length < 2) {
-        if (!_currentKeyboardKeys.contains(event.logicalKey)) {
-          _currentKeyboardKeys.add(event.logicalKey);
-        }
-      }
-
-      if (event is RawKeyUpEvent && _currentKeyboardKeys.isNotEmpty) {
-        _currentKeyboardKeys.remove(event.logicalKey);
-      }
+    /// No keyboard events, keep idle
+    if (keysPressed.isEmpty && !event.repeat) {
+      resetDirectionalKeys();
+      joystickChangeDirectional(
+        JoystickDirectionalEvent(
+          directional: JoystickMoveDirectional.IDLE,
+          intensity: 0.0,
+          radAngle: 0.0,
+        ),
+      );
+    } else {
+      /// Process directional events
+      if (_isDirectional(event.logicalKey) && !event.repeat) {
+        resetDirectionalKeys();
+        _currentKeyboardKeys.addAll(keysPressed.toList());
 
-      if (_currentKeyboardKeys.isEmpty) {
-        joystickChangeDirectional(
-          JoystickDirectionalEvent(
-            directional: JoystickMoveDirectional.IDLE,
-            intensity: 0.0,
-            radAngle: 0.0,
-          ),
-        );
-      } else {
         if (_currentKeyboardKeys.length == 1) {
           _sendOneDirection(_currentKeyboardKeys.first);
         } else {
@@ -182,18 +180,19 @@ class Joystick extends JoystickController {
             _currentKeyboardKeys[1],
           );
         }
-      }
-    } else {
-      if (event is RawKeyDownEvent) {
-        joystickAction(JoystickActionEvent(
-          id: event.logicalKey.keyId,
-          event: ActionEvent.DOWN,
-        ));
-      } else if (event is RawKeyUpEvent) {
-        joystickAction(JoystickActionEvent(
-          id: event.logicalKey.keyId,
-          event: ActionEvent.UP,
-        ));
+      } else {
+        /// Process action events
+        if (event is RawKeyDownEvent) {
+          joystickAction(JoystickActionEvent(
+            id: event.logicalKey.keyId,
+            event: ActionEvent.DOWN,
+          ));
+        } else if (event is RawKeyUpEvent) {
+          joystickAction(JoystickActionEvent(
+            id: event.logicalKey.keyId,
+            event: ActionEvent.UP,
+          ));
+        }
       }
     }
 
@@ -216,28 +215,29 @@ class Joystick extends JoystickController {
     );
   }
 
-  bool _isDirectional(RawKeyEvent event) {
+  /// Check if the key is for directional [arrows, wasd, or both]
+  bool _isDirectional(LogicalKeyboardKey key) {
     if (keyboardConfig.keyboardDirectionalType ==
         KeyboardDirectionalType.arrows) {
-      return event.logicalKey == LogicalKeyboardKey.arrowRight ||
-          event.logicalKey == LogicalKeyboardKey.arrowUp ||
-          event.logicalKey == LogicalKeyboardKey.arrowLeft ||
-          event.logicalKey == LogicalKeyboardKey.arrowDown;
+      return key == LogicalKeyboardKey.arrowRight ||
+          key == LogicalKeyboardKey.arrowUp ||
+          key == LogicalKeyboardKey.arrowLeft ||
+          key == LogicalKeyboardKey.arrowDown;
     } else if (keyboardConfig.keyboardDirectionalType ==
         KeyboardDirectionalType.wasd) {
-      return event.logicalKey == LogicalKeyboardKey.keyA ||
-          event.logicalKey == LogicalKeyboardKey.keyW ||
-          event.logicalKey == LogicalKeyboardKey.keyD ||
-          event.logicalKey == LogicalKeyboardKey.keyS;
+      return key == LogicalKeyboardKey.keyA ||
+          key == LogicalKeyboardKey.keyW ||
+          key == LogicalKeyboardKey.keyD ||
+          key == LogicalKeyboardKey.keyS;
     } else {
-      return event.logicalKey == LogicalKeyboardKey.keyA ||
-          event.logicalKey == LogicalKeyboardKey.keyW ||
-          event.logicalKey == LogicalKeyboardKey.keyD ||
-          event.logicalKey == LogicalKeyboardKey.keyS ||
-          event.logicalKey == LogicalKeyboardKey.arrowRight ||
-          event.logicalKey == LogicalKeyboardKey.arrowUp ||
-          event.logicalKey == LogicalKeyboardKey.arrowLeft ||
-          event.logicalKey == LogicalKeyboardKey.arrowDown;
+      return key == LogicalKeyboardKey.keyA ||
+          key == LogicalKeyboardKey.keyW ||
+          key == LogicalKeyboardKey.keyD ||
+          key == LogicalKeyboardKey.keyS ||
+          key == LogicalKeyboardKey.arrowRight ||
+          key == LogicalKeyboardKey.arrowUp ||
+          key == LogicalKeyboardKey.arrowLeft ||
+          key == LogicalKeyboardKey.arrowDown;
     }
   }
 
