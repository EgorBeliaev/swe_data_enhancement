This PR introduces the use of ANTLR4 for parsing BBCode into an AST (Abstract Syntax Tree) structure. However, the implementation appears to be inefficient and includes a significant amount of template code. The discussion suggests these changes for refinement:

1. **Refactoring and Code Cleanup:**
   - Consider splitting the current implementation into a separate package, as the current integration introduces excessive template code.
   - Remove unused code components such as `Visitor`, which were initially included without clear utility. Also, evaluate and potentially simplify the usage of `Listener`.
   - Ensure no unnecessary template code remains after refactoring; a thorough review and cleanup should be performed.

2. **Merge Strategy:**
   - Use squash merge to combine all commits related to this PR to avoid 'cherry-pick hell.'

3. **Code Utilization and Removal:**
   - Confirm and remove deprecated methods, specifically the `Utils.richTextParser`, unless still in use in specific components.
   - Verify that component '吐槽箱' is not using BBCode, and clarify any confusion regarding this if it still appears to be utilizing old parsing methods.

4. **Testing and Release:**
   - Conduct thorough testing post-CI completion before merging to ensure no breakage.
   - Plan and execute the release of a new version post-merge. Alignment with F-Droid requirements concerning update sources is already fulfilled.

These adjustments aim to enhance the efficiency, maintainability, and accuracy of the BBCode parsing implementation.