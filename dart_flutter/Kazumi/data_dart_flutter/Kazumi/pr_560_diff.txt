diff --git a/lib/pages/settings/decoder_settings.dart b/lib/pages/settings/decoder_settings.dart
index 7bba6706..dbad69cb 100644
--- a/lib/pages/settings/decoder_settings.dart
+++ b/lib/pages/settings/decoder_settings.dart
@@ -2,6 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:hive/hive.dart';
 import 'package:kazumi/utils/storage.dart';
 import 'package:kazumi/utils/constants.dart';
+import 'package:card_settings_ui/card_settings_ui.dart';
 
 class DecoderSettings extends StatefulWidget {
   const DecoderSettings({super.key});
@@ -22,38 +23,33 @@ class _DecoderSettingsState extends State<DecoderSettings> {
       appBar: AppBar(
         title: const Text('硬件解码器'),
       ),
-      body: Column(
-        crossAxisAlignment: CrossAxisAlignment.start, 
-        children: [
-          Padding(
-            padding: const EdgeInsets.only(left: 25, top: 10, bottom: 5),
-            child: Text(
-              '选择不受支持的解码器将回退到软件解码',
-              textAlign: TextAlign.left,
-              style: TextStyle(color: Theme.of(context).colorScheme.outline),
-            ),
+      body: Center(
+        child: SizedBox(
+          width: (MediaQuery.of(context).size.width > 1000) ? 1000 : null,
+          child: SettingsList(
+            sections: [
+              SettingsSection(
+                title: const Text('选择不受支持的解码器将回退到软件解码'),
+                tiles: hardwareDecodersList.entries
+                    .map((e) => SettingsTile<String>.radioTile(
+                          title: Text(e.key),
+                          description: Text(e.value),
+                          radioValue: e.key,
+                          groupValue: decoder.value,
+                          onChanged: (String? value) {
+                            if (value != null) {
+                              setting.put(SettingBoxKey.hardwareDecoder, value);
+                              setState(() {
+                                decoder.value = value;
+                              });
+                            }
+                          },
+                        ))
+                    .toList(),
+              ),
+            ],
           ),
-          Expanded(
-            child: ListView(
-              children: hardwareDecodersList.entries
-                  .map((e) => RadioListTile<String>(
-                        title: Text(e.key),
-                        subtitle: Text(e.value),
-                        value: e.key,
-                        groupValue: decoder.value,
-                        onChanged: (String? value) {
-                          if (value != null) {
-                            setting.put(SettingBoxKey.hardwareDecoder, value);
-                            setState(() {
-                              decoder.value = value;
-                            });
-                          }
-                        },
-                      ))
-                  .toList(),
-            ),
-          ),
-        ],
+        ),
       ),
     );
   }
diff --git a/lib/pages/settings/displaymode_settings.dart b/lib/pages/settings/displaymode_settings.dart
index f1ee20db..cf821c9b 100644
--- a/lib/pages/settings/displaymode_settings.dart
+++ b/lib/pages/settings/displaymode_settings.dart
@@ -4,6 +4,7 @@ import 'package:flutter/services.dart';
 import 'package:flutter_displaymode/flutter_displaymode.dart';
 import 'package:hive/hive.dart';
 import 'package:kazumi/utils/storage.dart';
+import 'package:card_settings_ui/card_settings_ui.dart';
 
 class SetDisplayMode extends StatefulWidget {
   const SetDisplayMode({super.key});
@@ -23,6 +24,7 @@ class _SetDisplayModeState extends State<SetDisplayMode> {
     ..addListener(() {
       page.value = controller.page!.round();
     });
+
   @override
   void initState() {
     super.initState();
@@ -62,50 +64,35 @@ class _SetDisplayModeState extends State<SetDisplayMode> {
   Widget build(BuildContext context) {
     return Scaffold(
       appBar: AppBar(title: const Text('屏幕帧率设置')),
-      body: SafeArea(
-        top: false,
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: <Widget>[
-            if (modes.isEmpty)
-              const Expanded(
-                child: Center(
-                  child: CircularProgressIndicator(),
-                ),
-              ),
-            if (modes.isNotEmpty) ...[
-              Padding(
-                padding: const EdgeInsets.only(left: 25, top: 10, bottom: 5),
-                child: Text(
-                  '没有生效? 重启app试试',
-                  style:
-                      TextStyle(color: Theme.of(context).colorScheme.outline),
-                ),
-              ),
-              Expanded(
-                child: ListView.builder(
-                  itemCount: modes.length,
-                  itemBuilder: (_, int i) {
-                    final DisplayMode mode = modes[i];
-                    return RadioListTile<DisplayMode>(
-                      value: mode,
-                      title: mode == DisplayMode.auto
-                          ? const Text('自动')
-                          : Text('$mode${mode == active ? "  [系统]" : ""}'),
-                      groupValue: preferred,
-                      onChanged: (DisplayMode? newMode) async {
-                        await FlutterDisplayMode.setPreferredMode(newMode!);
-                        await Future<dynamic>.delayed(
-                          const Duration(milliseconds: 100),
-                        );
-                        await fetchAll();
-                      },
-                    );
-                  },
+      body: Center(
+        child: SizedBox(
+          width: (MediaQuery.of(context).size.width > 1000) ? 1000 : null,
+          child: (modes.isEmpty)
+              ? const CircularProgressIndicator()
+              : SettingsList(
+                  sections: [
+                    SettingsSection(
+                      title: const Text('没有生效? 重启app试试'),
+                      tiles: modes
+                          .map((e) => SettingsTile<DisplayMode>.radioTile(
+                                radioValue: e,
+                                groupValue: preferred,
+                                onChanged: (DisplayMode? newMode) async {
+                                  await FlutterDisplayMode.setPreferredMode(
+                                      newMode!);
+                                  await Future<dynamic>.delayed(
+                                    const Duration(milliseconds: 100),
+                                  );
+                                  await fetchAll();
+                                },
+                                title: e == DisplayMode.auto
+                                    ? const Text('自动')
+                                    : Text('$e${e == active ? "  [系统]" : ""}'),
+                              ))
+                          .toList(),
+                    ),
+                  ],
                 ),
-              ),
-            ],
-          ],
         ),
       ),
     );
diff --git a/pubspec.lock b/pubspec.lock
index 34854dc4..cf861741 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -186,10 +186,10 @@ packages:
     dependency: "direct main"
     description:
       name: card_settings_ui
-      sha256: "36bd1bb8e3d18612e2654e722da0f1ed9bc7a412339b906205107ece72b8e14b"
+      sha256: "3c0677c31b68ac654e7efc85a4adfec4375445f8c67a1dbe88aa8cf115e52533"
       url: "https://pub.dev"
     source: hosted
-    version: "1.0.0"
+    version: "1.1.1"
   characters:
     dependency: transitive
     description:
diff --git a/pubspec.yaml b/pubspec.yaml
index 9b4d0c0b..fb05d3f9 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -50,7 +50,7 @@ dependencies:
   hive: ^2.2.3
   hive_flutter: ^1.1.0
   cached_network_image: ^3.4.1
-  card_settings_ui: ^1.0.0
+  card_settings_ui: ^1.1.1
 
   # fvp: ^0.28.0
   # video_player: ^2.9.1
