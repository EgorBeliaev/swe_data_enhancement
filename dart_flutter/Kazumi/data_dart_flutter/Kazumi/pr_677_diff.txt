diff --git a/lib/pages/player/episode_comments_sheet.dart b/lib/pages/player/episode_comments_sheet.dart
index f82a3f7e..226f718d 100644
--- a/lib/pages/player/episode_comments_sheet.dart
+++ b/lib/pages/player/episode_comments_sheet.dart
@@ -15,22 +15,12 @@ class EpisodeCommentsSheet extends StatefulWidget {
   State<EpisodeCommentsSheet> createState() => _EpisodeCommentsSheetState();
 }
 
-class _EpisodeCommentsSheetState extends State<EpisodeCommentsSheet> {
+class _EpisodeCommentsSheetState extends State<EpisodeCommentsSheet>
+    with AutomaticKeepAliveClientMixin {
   final infoController = Modular.get<InfoController>();
   bool isLoading = false;
   bool commentsQueryTimeout = false;
 
-  @override
-  void initState() {
-    super.initState();
-    if (infoController.episodeCommentsList.isEmpty) {
-      setState(() {
-        isLoading = true;
-      });
-      loadComments(widget.episode);
-    }
-  }
-
   Future<void> loadComments(int episode) async {
     commentsQueryTimeout = false;
     infoController
@@ -56,39 +46,60 @@ class _EpisodeCommentsSheetState extends State<EpisodeCommentsSheet> {
   }
 
   Widget get episodeCommentsBody {
-    return SelectionArea(
-      child: CustomScrollView(
-        slivers: [
-          SliverPadding(
-            padding: const EdgeInsets.fromLTRB(4, 0, 4, 4),
-            sliver: Observer(builder: (context) {
-              if (isLoading) {
-                return const SliverFillRemaining(
-                  child: Center(
-                    child: CircularProgressIndicator(),
-                  ),
-                );
-              }
-              if (commentsQueryTimeout) {
-                return const SliverFillRemaining(
-                  child: Center(
-                    child: Text('空空如也'),
-                  ),
-                );
-              }
-              return SliverList(
-                delegate: SliverChildBuilderDelegate(
-                  (context, index) {
-                    return EpisodeCommentsCard(
-                        commentItem: infoController.episodeCommentsList[index]);
-                  },
-                  childCount: infoController.episodeCommentsList.length,
+    if (infoController.episodeCommentsList.isEmpty) {
+      setState(() {
+        isLoading = true;
+      });
+      loadComments(widget.episode);
+    }
+    return CustomScrollView(
+      // Scrollbars' movement is not linear so hide it.
+      scrollBehavior: const ScrollBehavior().copyWith(scrollbars: false),
+      slivers: [
+        SliverPadding(
+          padding: const EdgeInsets.fromLTRB(4, 0, 4, 4),
+          sliver: Observer(builder: (context) {
+            if (isLoading) {
+              return const SliverFillRemaining(
+                child: Center(
+                  child: CircularProgressIndicator(),
                 ),
               );
-            }),
-          ),
-        ],
-      ),
+            }
+            if (commentsQueryTimeout) {
+              return const SliverFillRemaining(
+                child: Center(
+                  child: Text('空空如也'),
+                ),
+              );
+            }
+            return SliverList(
+              delegate: SliverChildBuilderDelegate(
+                (context, index) {
+                  // Fix scroll issue caused by height change of network images
+                  // by keeping loaded cards alive.
+                  return KeepAlive(
+                    keepAlive: true,
+                    child: IndexedSemantics(
+                      index: index,
+                      child: SelectionArea(
+                        child: EpisodeCommentsCard(
+                          commentItem:
+                              infoController.episodeCommentsList[index],
+                        ),
+                      ),
+                    ),
+                  );
+                },
+                childCount: infoController.episodeCommentsList.length,
+                addAutomaticKeepAlives: false,
+                addRepaintBoundaries: false,
+                addSemanticIndexes: false,
+              ),
+            );
+          }),
+        ),
+      ],
     );
   }
 
@@ -192,6 +203,7 @@ class _EpisodeCommentsSheetState extends State<EpisodeCommentsSheet> {
 
   @override
   Widget build(BuildContext context) {
+    super.build(context);
     return Scaffold(
       body: Column(
         crossAxisAlignment: CrossAxisAlignment.start,
@@ -199,4 +211,7 @@ class _EpisodeCommentsSheetState extends State<EpisodeCommentsSheet> {
       ),
     );
   }
+
+  @override
+  bool get wantKeepAlive => true;
 }
diff --git a/lib/pages/video/video_page.dart b/lib/pages/video/video_page.dart
index 86578709..05bb9a24 100644
--- a/lib/pages/video/video_page.dart
+++ b/lib/pages/video/video_page.dart
@@ -390,10 +390,8 @@ class _VideoPageState extends State<VideoPage>
                         position: _rightOffsetAnimation,
                         child: SizedBox(
                           height: MediaQuery.of(context).size.height,
-                          width: videoPageController.isFullscreen
-                              ? (Utils.isTablet()
-                                  ? MediaQuery.of(context).size.width / 3
-                                  : MediaQuery.of(context).size.height)
+                          width: !isWideScreen
+                              ? MediaQuery.of(context).size.height
                               : (MediaQuery.of(context).size.width / 3 > 420
                                   ? 420
                                   : MediaQuery.of(context).size.width / 3),
