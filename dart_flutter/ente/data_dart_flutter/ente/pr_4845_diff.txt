diff --git a/.github/workflows/mobile-internal-release.yml b/.github/workflows/mobile-internal-release.yml
index def535a005a..6752fb1308e 100644
--- a/.github/workflows/mobile-internal-release.yml
+++ b/.github/workflows/mobile-internal-release.yml
@@ -4,7 +4,7 @@ on:
     workflow_dispatch: # Allow manually running the action
 
 env:
-    FLUTTER_VERSION: "3.27.2"
+    FLUTTER_VERSION: "3.24.3"
 
 jobs:
     build:
diff --git a/.github/workflows/mobile-lint.yml b/.github/workflows/mobile-lint.yml
index fa250f0a03c..1edf5c875ed 100644
--- a/.github/workflows/mobile-lint.yml
+++ b/.github/workflows/mobile-lint.yml
@@ -9,7 +9,7 @@ on:
 
 env:
 
-    FLUTTER_VERSION: "3.27.2"
+    FLUTTER_VERSION: "3.24.3"
 
 jobs:
     lint:
diff --git a/.github/workflows/mobile-release.yml b/.github/workflows/mobile-release.yml
index 49f0992bdf7..ecf2c6d7699 100644
--- a/.github/workflows/mobile-release.yml
+++ b/.github/workflows/mobile-release.yml
@@ -9,7 +9,7 @@ on:
             - "photos-v*"
 
 env:
-    FLUTTER_VERSION: "3.27.2"
+    FLUTTER_VERSION: "3.24.3"
 
 jobs:
     build:
diff --git a/mobile/README.md b/mobile/README.md
index f9491013609..93d8541c91d 100644
--- a/mobile/README.md
+++ b/mobile/README.md
@@ -46,7 +46,7 @@ You can alternatively install the build from PlayStore or F-Droid.
 
 ## üßë‚Äçüíª Building from source
 
-1. [Install Flutter v3.27.2](https://flutter.dev/docs/get-started/install).
+1. [Install Flutter v3.24.3](https://flutter.dev/docs/get-started/install).
 
 2. Pull in all submodules with `git submodule update --init --recursive`
 
diff --git a/mobile/lib/core/configuration.dart b/mobile/lib/core/configuration.dart
index f71256a61c6..e15193a5d3b 100644
--- a/mobile/lib/core/configuration.dart
+++ b/mobile/lib/core/configuration.dart
@@ -26,6 +26,7 @@ import 'package:photos/services/collections_service.dart';
 import 'package:photos/services/favorites_service.dart';
 import "package:photos/services/home_widget_service.dart";
 import 'package:photos/services/ignored_files_service.dart';
+import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
 import 'package:photos/services/memories_service.dart';
 import 'package:photos/services/search_service.dart';
 import 'package:photos/services/sync_service.dart';
@@ -216,6 +217,7 @@ class Configuration {
       FavoritesService.instance.clearCache();
       MemoriesService.instance.clearCache();
       SearchService.instance.clearCache();
+      PersonService.instance.clearCache();
       unawaited(HomeWidgetService.instance.clearHomeWidget());
       Bus.instance.fire(UserLoggedOutEvent());
     } else {
diff --git a/mobile/lib/events/people_changed_event.dart b/mobile/lib/events/people_changed_event.dart
index 859748e8d36..7106421ff26 100644
--- a/mobile/lib/events/people_changed_event.dart
+++ b/mobile/lib/events/people_changed_event.dart
@@ -23,4 +23,5 @@ enum PeopleEventType {
   defaultType,
   removedFilesFromCluster,
   syncDone,
+  saveOrEditPerson,
 }
diff --git a/mobile/lib/extensions/user_extension.dart b/mobile/lib/extensions/user_extension.dart
new file mode 100644
index 00000000000..019aef3b894
--- /dev/null
+++ b/mobile/lib/extensions/user_extension.dart
@@ -0,0 +1,9 @@
+import "package:photos/models/api/collection/user.dart";
+import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
+
+extension UserExtension on User {
+  //Some initial users have name in name field.
+  String? get displayName =>
+      PersonService.instance.emailToNameMapCache[email] ??
+      ((name?.isEmpty ?? true) ? null : name);
+}
diff --git a/mobile/lib/generated/intl/messages_ar.dart b/mobile/lib/generated/intl/messages_ar.dart
index 1ce7ba622c8..645721693e0 100644
--- a/mobile/lib/generated/intl/messages_ar.dart
+++ b/mobile/lib/generated/intl/messages_ar.dart
@@ -41,6 +41,10 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑÿßÿ≥ÿ™ÿ±ÿØÿßÿØ ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠"),
         "invalidEmailAddress": MessageLookupByLibrary.simpleMessage(
             "ÿπŸÜŸàÿßŸÜ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey":
             MessageLookupByLibrary.simpleMessage("ŸÖÿß ŸÖŸÜ ŸÖŸÅÿ™ÿßÿ≠ ÿßÿ≥ÿ™ÿ±ÿØÿßÿØÿü"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_be.dart b/mobile/lib/generated/intl/messages_be.dart
index a4a49d3b643..3cb73d7e92f 100644
--- a/mobile/lib/generated/intl/messages_be.dart
+++ b/mobile/lib/generated/intl/messages_be.dart
@@ -156,6 +156,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "–ö–∞–ª—ñ –ª–∞—Å–∫–∞, –¥–∞–ø–∞–º–∞–∂—ã—Ü–µ –Ω–∞–º –∑ –≥—ç—Ç–∞–π —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—è–π"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("–°–≤–µ—Ç–ª–∞—è"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "lockscreen": MessageLookupByLibrary.simpleMessage("–≠–∫—Ä–∞–Ω –±–ª–∞–∫—ñ—Ä–æ—û–∫—ñ"),
         "logInLabel": MessageLookupByLibrary.simpleMessage("–£–≤–∞–π—Å—Ü—ñ"),
         "loginTerms": MessageLookupByLibrary.simpleMessage(
@@ -168,6 +170,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "never": MessageLookupByLibrary.simpleMessage("–ù—ñ–∫–æ–ª—ñ"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® –ù—è–º–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∞—û"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey":
             MessageLookupByLibrary.simpleMessage("–ù—è–º–∞ –∫–ª—é—á–∞ –∞–¥–Ω–∞—û–ª–µ–Ω–Ω—è?"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_bg.dart b/mobile/lib/generated/intl/messages_bg.dart
index e887127f40f..5530097185a 100644
--- a/mobile/lib/generated/intl/messages_bg.dart
+++ b/mobile/lib/generated/intl/messages_bg.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'bg';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_ca.dart b/mobile/lib/generated/intl/messages_ca.dart
index 84dea987b01..03a5af3af14 100644
--- a/mobile/lib/generated/intl/messages_ca.dart
+++ b/mobile/lib/generated/intl/messages_ca.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'ca';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_cs.dart b/mobile/lib/generated/intl/messages_cs.dart
index 226e365e9c3..c65701ef73d 100644
--- a/mobile/lib/generated/intl/messages_cs.dart
+++ b/mobile/lib/generated/intl/messages_cs.dart
@@ -26,6 +26,10 @@ class MessageLookup extends MessageLookupByLibrary {
             "Jak√Ω je v√°≈° hlavn√≠ d≈Øvod, proƒç ma≈æete sv≈Øj √∫ƒçet?"),
         "checkInboxAndSpamFolder": MessageLookupByLibrary.simpleMessage(
             "Zkontrolujte pros√≠m svou doruƒçenou po≈°tu (a spam) pro dokonƒçen√≠ ovƒõ≈ôen√≠"),
-        "incorrectRecoveryKeyBody": MessageLookupByLibrary.simpleMessage("")
+        "incorrectRecoveryKeyBody": MessageLookupByLibrary.simpleMessage(""),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
       };
 }
diff --git a/mobile/lib/generated/intl/messages_da.dart b/mobile/lib/generated/intl/messages_da.dart
index c47bf7b6c6c..ed6af4ac51f 100644
--- a/mobile/lib/generated/intl/messages_da.dart
+++ b/mobile/lib/generated/intl/messages_da.dart
@@ -94,6 +94,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "invite": MessageLookupByLibrary.simpleMessage("Inviter"),
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "Hj√¶lp os venligst med disse oplysninger"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "loggingOut": MessageLookupByLibrary.simpleMessage("Logger ud..."),
         "longPressAnEmailToVerifyEndToEndEncryption":
             MessageLookupByLibrary.simpleMessage(
@@ -104,6 +106,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Bem√¶rk venligst, at maskinindl√¶ring vil resultere i en h√∏jere b√•ndbredde og batteriforbrug, indtil alle elementer er indekseret. Overvej at bruge desktop app til hurtigere indeksering, vil alle resultater blive synkroniseret automatisk."),
         "moments": MessageLookupByLibrary.simpleMessage("√òjeblikke"),
         "next": MessageLookupByLibrary.simpleMessage("N√¶ste"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "ok": MessageLookupByLibrary.simpleMessage("Ok"),
         "oops": MessageLookupByLibrary.simpleMessage("Ups"),
         "password": MessageLookupByLibrary.simpleMessage("Adgangskode"),
diff --git a/mobile/lib/generated/intl/messages_de.dart b/mobile/lib/generated/intl/messages_de.dart
index bc15c4410f6..8dc25d7b82e 100644
--- a/mobile/lib/generated/intl/messages_de.dart
+++ b/mobile/lib/generated/intl/messages_de.dart
@@ -1120,9 +1120,11 @@ class MessageLookup extends MessageLookupByLibrary {
             "Vertrauensw√ºrdige Kontakte k√∂nnen eine Kontowiederherstellung einleiten und, wenn dies nicht innerhalb von 30 Tagen blockiert wird, dein Passwort und den Kontozugriff zur√ºcksetzen."),
         "light": MessageLookupByLibrary.simpleMessage("Hell"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Hell"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Link in Zwischenablage kopiert"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Ger√§te-Limit"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Aktiviert"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Abgelaufen"),
         "linkExpiresOn": m43,
@@ -1279,6 +1281,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Du hast keine Dateien auf diesem Ger√§t, die gel√∂scht werden k√∂nnen"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Keine Duplikate"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Keine Exif-Daten"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("Keine Gesichter gefunden"),
diff --git a/mobile/lib/generated/intl/messages_el.dart b/mobile/lib/generated/intl/messages_el.dart
index 79c0433b27f..4d418d51fd6 100644
--- a/mobile/lib/generated/intl/messages_el.dart
+++ b/mobile/lib/generated/intl/messages_el.dart
@@ -23,6 +23,10 @@ class MessageLookup extends MessageLookupByLibrary {
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
         "enterYourEmailAddress": MessageLookupByLibrary.simpleMessage(
-            "ŒïŒπœÉŒ¨Œ≥ŒµœÑŒµ œÑŒ∑ŒΩ Œ¥ŒπŒµœçŒ∏œÖŒΩœÉŒ∑ Œ∑Œª. œÑŒ±œáœÖŒ¥œÅŒøŒºŒµŒØŒøœÖ œÉŒ±œÇ")
+            "ŒïŒπœÉŒ¨Œ≥ŒµœÑŒµ œÑŒ∑ŒΩ Œ¥ŒπŒµœçŒ∏œÖŒΩœÉŒ∑ Œ∑Œª. œÑŒ±œáœÖŒ¥œÅŒøŒºŒµŒØŒøœÖ œÉŒ±œÇ"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
       };
 }
diff --git a/mobile/lib/generated/intl/messages_en.dart b/mobile/lib/generated/intl/messages_en.dart
index af94f25dcb7..5222ad12e6b 100644
--- a/mobile/lib/generated/intl/messages_en.dart
+++ b/mobile/lib/generated/intl/messages_en.dart
@@ -1074,9 +1074,11 @@ class MessageLookup extends MessageLookupByLibrary {
             "Trusted contacts can initiate account recovery, and if not blocked within 30 days, reset your password and access your account."),
         "light": MessageLookupByLibrary.simpleMessage("Light"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Light"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("Link copied to clipboard"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Device limit"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Enabled"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Expired"),
         "linkExpiresOn": m43,
@@ -1226,6 +1228,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceThatCanBeDeleted": MessageLookupByLibrary.simpleMessage(
             "You\'ve no files on this device that can be deleted"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® No duplicates"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("No EXIF data"),
         "noFacesFound": MessageLookupByLibrary.simpleMessage("No faces found"),
         "noHiddenPhotosOrVideos":
diff --git a/mobile/lib/generated/intl/messages_es.dart b/mobile/lib/generated/intl/messages_es.dart
index 6a82e5e1057..bde55c68da6 100644
--- a/mobile/lib/generated/intl/messages_es.dart
+++ b/mobile/lib/generated/intl/messages_es.dart
@@ -1118,10 +1118,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Los contactos de confianza pueden iniciar la recuperaci√≥n de la cuenta, y si no est√°n bloqueados en un plazo de 30 d√≠as, restablecer su contrase√±a y acceder a su cuenta."),
         "light": MessageLookupByLibrary.simpleMessage("Brillo"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Claro"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Enlace copiado al portapapeles"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("L√≠mite del dispositivo"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Habilitado"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Vencido"),
         "linkExpiresOn": m43,
@@ -1284,6 +1286,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "No tienes archivos en este dispositivo que puedan ser borrados"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Sin duplicados"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("No hay datos EXIF"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("No se han encontrado caras"),
diff --git a/mobile/lib/generated/intl/messages_et.dart b/mobile/lib/generated/intl/messages_et.dart
index dc3a61a6ffd..0fb7edefd7e 100644
--- a/mobile/lib/generated/intl/messages_et.dart
+++ b/mobile/lib/generated/intl/messages_et.dart
@@ -137,7 +137,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lahkuda jagatud albumist?"),
         "light": MessageLookupByLibrary.simpleMessage("Hele"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Hele"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Seadme limit"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Sees"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Aegunud"),
         "linkExpiry": MessageLookupByLibrary.simpleMessage("Lingi aegumine"),
@@ -165,6 +167,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "newest": MessageLookupByLibrary.simpleMessage("Uusimad"),
         "no": MessageLookupByLibrary.simpleMessage("Ei"),
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("Puudub"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "ok": MessageLookupByLibrary.simpleMessage("OK"),
         "oops": MessageLookupByLibrary.simpleMessage("Oih"),
         "oopsSomethingWentWrong":
diff --git a/mobile/lib/generated/intl/messages_fa.dart b/mobile/lib/generated/intl/messages_fa.dart
index ff03c504048..003457bcc02 100644
--- a/mobile/lib/generated/intl/messages_fa.dart
+++ b/mobile/lib/generated/intl/messages_fa.dart
@@ -241,6 +241,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "ŸÑÿ∑ŸÅÿß ÿ®ÿß ÿß€åŸÜ ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ®Ÿá ŸÖÿß ⁄©ŸÖ⁄© ⁄©ŸÜ€åÿØ"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("ÿ±Ÿàÿ¥ŸÜ"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "loadMessage2": MessageLookupByLibrary.simpleMessage(
             "ŸÖÿß ÿ™ÿß ⁄©ŸÜŸàŸÜ ÿ®€åÿ¥ ÿßÿ≤ €≥€∞ ŸÖ€åŸÑ€åŸàŸÜ ÿÆÿßÿ∑ÿ±Ÿá ÿ±ÿß ÿ≠ŸÅÿ∏ ⁄©ÿ±ÿØŸá‚Äåÿß€åŸÖ"),
         "lockButtonLabel": MessageLookupByLibrary.simpleMessage("ŸÇŸÅŸÑ"),
@@ -262,6 +264,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "never": MessageLookupByLibrary.simpleMessage("Ÿáÿ±⁄Øÿ≤"),
         "newToEnte": MessageLookupByLibrary.simpleMessage("⁄©ÿßÿ±ÿ®ÿ± ÿ¨ÿØ€åÿØ Ente"),
         "no": MessageLookupByLibrary.simpleMessage("ÿÆ€åÿ±"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey":
             MessageLookupByLibrary.simpleMessage("⁄©ŸÑ€åÿØ ÿ®ÿßÿ≤€åÿßÿ®€å ŸÜÿØÿßÿ±€åÿØÿü"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_fr.dart b/mobile/lib/generated/intl/messages_fr.dart
index c9d5243d386..fb93bb4ddb8 100644
--- a/mobile/lib/generated/intl/messages_fr.dart
+++ b/mobile/lib/generated/intl/messages_fr.dart
@@ -1129,10 +1129,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Les contacts de confiance peuvent initier la r√©cup√©ration du compte et, s\'ils ne sont pas bloqu√©s dans les 30 jours qui suivent, peuvent r√©initialiser votre mot de passe et acc√©der √† votre compte."),
         "light": MessageLookupByLibrary.simpleMessage("Clair"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Clair"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Lien copi√© dans le presse-papiers"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Limite d\'appareil"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Activ√©"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Expir√©"),
         "linkExpiresOn": m43,
@@ -1293,6 +1295,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceThatCanBeDeleted": MessageLookupByLibrary.simpleMessage(
             "Vous n\'avez pas de fichiers sur cet appareil qui peuvent √™tre supprim√©s"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® Aucun doublon"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData":
             MessageLookupByLibrary.simpleMessage("Aucune donn√©e EXIF"),
         "noFacesFound":
diff --git a/mobile/lib/generated/intl/messages_gu.dart b/mobile/lib/generated/intl/messages_gu.dart
index 6c1d7e4d90a..b3f4efc68c1 100644
--- a/mobile/lib/generated/intl/messages_gu.dart
+++ b/mobile/lib/generated/intl/messages_gu.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'gu';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_he.dart b/mobile/lib/generated/intl/messages_he.dart
index d7156458e4f..1c62accc0a8 100644
--- a/mobile/lib/generated/intl/messages_he.dart
+++ b/mobile/lib/generated/intl/messages_he.dart
@@ -533,10 +533,12 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("◊ú◊¢◊ñ◊ï◊ë ◊ê◊™ ◊î◊ê◊ú◊ë◊ï◊ù ◊î◊û◊©◊ï◊™◊£?"),
         "light": MessageLookupByLibrary.simpleMessage("◊ê◊ï◊®"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("◊ë◊î◊ô◊®"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("◊î◊ß◊ô◊©◊ï◊® ◊î◊ï◊¢◊™◊ß ◊ú◊ú◊ï◊ó"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("◊û◊í◊ë◊ú◊™ ◊õ◊û◊ï◊™ ◊û◊õ◊©◊ô◊®◊ô◊ù"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("◊û◊ê◊ï◊§◊©◊®"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("◊§◊í ◊™◊ï◊ß◊£"),
         "linkExpiresOn": m43,
@@ -585,6 +587,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceThatCanBeDeleted": MessageLookupByLibrary.simpleMessage(
             "◊ê◊ô◊ü ◊ú◊ö ◊ß◊ë◊¶◊ô◊ù ◊ë◊û◊õ◊©◊ô◊® ◊î◊ñ◊î ◊©◊†◊ô◊™◊ü ◊ú◊û◊ó◊ï◊ß ◊ê◊ï◊™◊ù"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® ◊ê◊ô◊ü ◊õ◊§◊ô◊ú◊ï◊ô◊ï◊™"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noPhotosAreBeingBackedUpRightNow":
             MessageLookupByLibrary.simpleMessage(
                 "◊ê◊£ ◊™◊û◊ï◊†◊î ◊ê◊ô◊†◊î ◊†◊û◊¶◊ê◊™ ◊ë◊™◊î◊ú◊ô◊ö ◊í◊ô◊ë◊ï◊ô ◊õ◊®◊í◊¢"),
diff --git a/mobile/lib/generated/intl/messages_hi.dart b/mobile/lib/generated/intl/messages_hi.dart
index ff4756d8d49..7a3e6163c63 100644
--- a/mobile/lib/generated/intl/messages_hi.dart
+++ b/mobile/lib/generated/intl/messages_hi.dart
@@ -75,6 +75,10 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("‡§Ö‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§à‡§Æ‡•á‡§≤ ‡§ê‡§°‡•ç‡§∞‡•á‡§∏"),
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "‡§ï‡•É‡§™‡§Ø‡§æ ‡§π‡§Æ‡•á‡§Ç ‡§á‡§∏ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞‡•á‡§Ç"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey":
             MessageLookupByLibrary.simpleMessage("‡§∞‡§ø‡§ï‡§µ‡§∞‡•Ä ‡§ï‡•Å‡§Ç‡§ú‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à?"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_hu.dart b/mobile/lib/generated/intl/messages_hu.dart
index fbe4a79ba19..121ec1644a1 100644
--- a/mobile/lib/generated/intl/messages_hu.dart
+++ b/mobile/lib/generated/intl/messages_hu.dart
@@ -38,6 +38,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "feedback": MessageLookupByLibrary.simpleMessage("Visszajelz√©s"),
         "invalidEmailAddress":
             MessageLookupByLibrary.simpleMessage("√ârv√©nytelen e-mail c√≠m"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "verify": MessageLookupByLibrary.simpleMessage("Hiteles√≠t√©s")
       };
 }
diff --git a/mobile/lib/generated/intl/messages_id.dart b/mobile/lib/generated/intl/messages_id.dart
index 485d9470d84..ca4956bb5fa 100644
--- a/mobile/lib/generated/intl/messages_id.dart
+++ b/mobile/lib/generated/intl/messages_id.dart
@@ -812,10 +812,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "left": MessageLookupByLibrary.simpleMessage("Kiri"),
         "light": MessageLookupByLibrary.simpleMessage("Cahaya"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Cerah"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("Link tersalin ke papan klip"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Batas perangkat"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Aktif"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Kedaluwarsa"),
         "linkExpiresOn": m43,
@@ -925,6 +927,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Tidak ada file yang perlu dihapus dari perangkat ini"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Tak ada file duplikat"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData":
             MessageLookupByLibrary.simpleMessage("Tidak ada data EXIF"),
         "noHiddenPhotosOrVideos": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_it.dart b/mobile/lib/generated/intl/messages_it.dart
index 847037c132f..e1c3aeb182d 100644
--- a/mobile/lib/generated/intl/messages_it.dart
+++ b/mobile/lib/generated/intl/messages_it.dart
@@ -1084,10 +1084,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "I contatti fidati possono avviare il recupero dell\'account e, se non sono bloccati entro 30 giorni, reimpostare la password e accedere al tuo account."),
         "light": MessageLookupByLibrary.simpleMessage("Chiaro"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Chiaro"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("Link copiato negli appunti"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Limite dei dispositivi"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Attivato"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Scaduto"),
         "linkExpiresOn": m43,
@@ -1246,6 +1248,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Non hai file su questo dispositivo che possono essere eliminati"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Nessun doppione"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Nessun dato EXIF"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("Nessun volto trovato"),
diff --git a/mobile/lib/generated/intl/messages_ja.dart b/mobile/lib/generated/intl/messages_ja.dart
index fd0bc7526e2..88bcd9695b4 100644
--- a/mobile/lib/generated/intl/messages_ja.dart
+++ b/mobile/lib/generated/intl/messages_ja.dart
@@ -836,9 +836,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "left": MessageLookupByLibrary.simpleMessage("Â∑¶"),
         "light": MessageLookupByLibrary.simpleMessage("„É©„Ç§„Éà"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("„É©„Ç§„Éà"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("„É™„É≥„ÇØ„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("„Éá„Éê„Ç§„Çπ„ÅÆÂà∂Èôê"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("ÊúâÂäπ"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("ÊúüÈôêÂàá„Çå"),
         "linkExpiresOn": m43,
@@ -969,6 +971,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceThatCanBeDeleted":
             MessageLookupByLibrary.simpleMessage("ÂâäÈô§„Åß„Åç„Çã„Éï„Ç°„Ç§„É´„Åå„ÅÇ„Çä„Åæ„Åõ„Çì"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® ÈáçË§á„Å™„Åó"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("EXIF„Éá„Éº„Çø„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"),
         "noHiddenPhotosOrVideos":
             MessageLookupByLibrary.simpleMessage("ÈùûË°®Á§∫„ÅÆÂÜôÁúü„ÇÑ„Éì„Éá„Ç™„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"),
diff --git a/mobile/lib/generated/intl/messages_km.dart b/mobile/lib/generated/intl/messages_km.dart
index 22d42313612..9c9d54269a9 100644
--- a/mobile/lib/generated/intl/messages_km.dart
+++ b/mobile/lib/generated/intl/messages_km.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'km';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_ko.dart b/mobile/lib/generated/intl/messages_ko.dart
index e378d62fd94..17c398f5f6a 100644
--- a/mobile/lib/generated/intl/messages_ko.dart
+++ b/mobile/lib/generated/intl/messages_ko.dart
@@ -40,6 +40,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "feedback": MessageLookupByLibrary.simpleMessage("ÌîºÎìúÎ∞±"),
         "invalidEmailAddress":
             MessageLookupByLibrary.simpleMessage("ÏûòÎ™ªÎêú Ïù¥Î©îÏùº Ï£ºÏÜå"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "verify": MessageLookupByLibrary.simpleMessage("Ïù∏Ï¶ù"),
         "yourAccountHasBeenDeleted":
             MessageLookupByLibrary.simpleMessage("Í≥ÑÏ†ïÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.")
diff --git a/mobile/lib/generated/intl/messages_lt.dart b/mobile/lib/generated/intl/messages_lt.dart
index 57a0576d173..bee6bc9e099 100644
--- a/mobile/lib/generated/intl/messages_lt.dart
+++ b/mobile/lib/generated/intl/messages_lt.dart
@@ -850,8 +850,10 @@ class MessageLookup extends MessageLookupByLibrary {
             "Patikimi kontaktai gali pradƒóti paskyros atk≈´rimƒÖ, o jei per 30 dien≈≥ paskyra neu≈æblokuojama, i≈° naujo nustatyti slapta≈æodƒØ ir pasiekti paskyrƒÖ."),
         "light": MessageLookupByLibrary.simpleMessage("≈†viesi"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("≈†viesi"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("ƒÆrengini≈≥ riba"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("ƒÆjungta"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Nebegalioja"),
         "linkExpiresOn": m43,
@@ -990,6 +992,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("Jokio"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Dublikat≈≥ nƒóra"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Nƒóra EXIF duomen≈≥"),
         "noFacesFound": MessageLookupByLibrary.simpleMessage("Nerasta veid≈≥."),
         "noImagesWithLocation":
diff --git a/mobile/lib/generated/intl/messages_ml.dart b/mobile/lib/generated/intl/messages_ml.dart
index 6a3eec447cb..b71258bc9ed 100644
--- a/mobile/lib/generated/intl/messages_ml.dart
+++ b/mobile/lib/generated/intl/messages_ml.dart
@@ -78,6 +78,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "kindlyHelpUsWithThisInformation":
             MessageLookupByLibrary.simpleMessage("‡¥µ‡¥ø‡¥µ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥§‡¥®‡µç‡¥®‡µÅ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("‡¥§‡µÜ‡¥≥‡¥ø‡¥û"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("‡¥ï‡¥æ‡¥≤‡¥π‡¥∞‡¥£‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü‡µÅ"),
         "mastodon": MessageLookupByLibrary.simpleMessage("‡¥Æ‡¥æ‡¥∏‡µç‡¥±‡µç‡¥±‡¥°‡µã‡µ∫"),
         "matrix": MessageLookupByLibrary.simpleMessage("‡¥Æ‡µá‡¥ü‡µç‡¥∞‡¥ø‡¥ï‡µç‡¥∏‡µç"),
@@ -86,6 +88,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "name": MessageLookupByLibrary.simpleMessage("‡¥™‡µá‡¥∞‡µç"),
         "no": MessageLookupByLibrary.simpleMessage("‡¥µ‡µá‡¥£‡µç‡¥ü"),
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("‡¥í‡¥®‡µç‡¥®‡µÅ‡¥Æ‡¥ø‡¥≤‡µç‡¥≤"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "nothingToSeeHere":
             MessageLookupByLibrary.simpleMessage("‡¥á‡¥µ‡¥ø‡¥ü‡µä‡¥®‡µç‡¥®‡µÅ‡¥Ç ‡¥ï‡¥æ‡¥£‡µç‡¥Æ‡¥æ‡¥®‡¥ø‡¥≤‡µç‡¥≤! üëÄ"),
         "ok": MessageLookupByLibrary.simpleMessage("‡¥∂‡¥∞‡¥ø"),
diff --git a/mobile/lib/generated/intl/messages_nl.dart b/mobile/lib/generated/intl/messages_nl.dart
index d1dce4fb557..94970a6554c 100644
--- a/mobile/lib/generated/intl/messages_nl.dart
+++ b/mobile/lib/generated/intl/messages_nl.dart
@@ -490,6 +490,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "blog": MessageLookupByLibrary.simpleMessage("Blog"),
         "cachedData": MessageLookupByLibrary.simpleMessage("Cachegegevens"),
         "calculating": MessageLookupByLibrary.simpleMessage("Berekenen..."),
+        "canNotOpenBody": MessageLookupByLibrary.simpleMessage(
+            "Sorry, dit album kan niet worden geopend in de app."),
+        "canNotOpenTitle":
+            MessageLookupByLibrary.simpleMessage("Kan dit album niet openen"),
         "canNotUploadToAlbumsOwnedByOthers":
             MessageLookupByLibrary.simpleMessage(
                 "Kan niet uploaden naar albums die van anderen zijn"),
@@ -812,8 +816,12 @@ class MessageLookup extends MessageLookupByLibrary {
                 "Bewerkte locatie wordt alleen gezien binnen Ente"),
         "eligible": MessageLookupByLibrary.simpleMessage("gerechtigd"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
+        "emailAlreadyRegistered":
+            MessageLookupByLibrary.simpleMessage("E-mail is al geregistreerd."),
         "emailChangedTo": m30,
         "emailNoEnteAccount": m31,
+        "emailNotRegistered":
+            MessageLookupByLibrary.simpleMessage("E-mail niet geregistreerd."),
         "emailVerificationToggle":
             MessageLookupByLibrary.simpleMessage("E-mailverificatie"),
         "emailYourLogs":
@@ -981,6 +989,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Bespaar ruimte op je apparaat door bestanden die al geback-upt zijn te wissen."),
         "freeUpSpace": MessageLookupByLibrary.simpleMessage("Ruimte vrijmaken"),
         "freeUpSpaceSaving": m39,
+        "gallery": MessageLookupByLibrary.simpleMessage("Galerij"),
         "galleryMemoryLimitInfo": MessageLookupByLibrary.simpleMessage(
             "Tot 1000 herinneringen getoond in de galerij"),
         "general": MessageLookupByLibrary.simpleMessage("Algemeen"),
@@ -1011,6 +1020,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Verbergt app-inhoud in de app-schakelaar en schakelt schermopnamen uit"),
         "hideContentDescriptionIos": MessageLookupByLibrary.simpleMessage(
             "Verbergt de inhoud van de app in de app-schakelaar"),
+        "hideSharedItemsFromHomeGallery": MessageLookupByLibrary.simpleMessage(
+            "Verberg gedeelde bestanden uit de galerij"),
         "hiding": MessageLookupByLibrary.simpleMessage("Verbergen..."),
         "hostedAtOsmFrance":
             MessageLookupByLibrary.simpleMessage("Gehost bij OSM France"),
@@ -1073,6 +1084,13 @@ class MessageLookup extends MessageLookupByLibrary {
                 "Bestanden tonen het aantal resterende dagen voordat ze permanent worden verwijderd"),
         "itemsWillBeRemovedFromAlbum": MessageLookupByLibrary.simpleMessage(
             "Geselecteerde items zullen worden verwijderd uit dit album"),
+        "join": MessageLookupByLibrary.simpleMessage("Deelnemen"),
+        "joinAlbum":
+            MessageLookupByLibrary.simpleMessage("Deelnemen aan album"),
+        "joinAlbumSubtext": MessageLookupByLibrary.simpleMessage(
+            "om je foto\'s te bekijken en toe te voegen"),
+        "joinAlbumSubtextViewer": MessageLookupByLibrary.simpleMessage(
+            "om dit aan gedeelde albums toe te voegen"),
         "joinDiscord": MessageLookupByLibrary.simpleMessage("Join de Discord"),
         "keepPhotos": MessageLookupByLibrary.simpleMessage("Foto\'s behouden"),
         "kiloMeterUnit": MessageLookupByLibrary.simpleMessage("km"),
@@ -1097,10 +1115,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Vertrouwde contacten kunnen accountherstel starten, en indien deze niet binnen 30 dagen wordt geblokkeerd, je wachtwoord resetten en toegang krijgen tot je account."),
         "light": MessageLookupByLibrary.simpleMessage("Licht"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Licht"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Link gekopieerd naar klembord"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Apparaat limiet"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Ingeschakeld"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Verlopen"),
         "linkExpiresOn": m43,
@@ -1259,6 +1279,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Je hebt geen bestanden op dit apparaat die verwijderd kunnen worden"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Geen duplicaten"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData":
             MessageLookupByLibrary.simpleMessage("Geen EXIF gegevens"),
         "noFacesFound":
@@ -1422,6 +1444,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Priv√© back-ups"),
         "privateSharing": MessageLookupByLibrary.simpleMessage("Priv√© delen"),
         "proceed": MessageLookupByLibrary.simpleMessage("Verder"),
+        "processed": MessageLookupByLibrary.simpleMessage("Verwerkt"),
         "processingImport": m54,
         "publicLinkCreated":
             MessageLookupByLibrary.simpleMessage("Publieke link aangemaakt"),
diff --git a/mobile/lib/generated/intl/messages_no.dart b/mobile/lib/generated/intl/messages_no.dart
index 5d70d1c00b2..3dd377378f6 100644
--- a/mobile/lib/generated/intl/messages_no.dart
+++ b/mobile/lib/generated/intl/messages_no.dart
@@ -249,7 +249,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "keepPhotos": MessageLookupByLibrary.simpleMessage("Behold Bilder"),
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "V√¶r vennlig og hjelp oss med denne informasjonen"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Enhetsgrense"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Aktivert"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Utl√∏pt"),
         "linkExpiresOn": m43,
@@ -275,6 +277,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "never": MessageLookupByLibrary.simpleMessage("Aldri"),
         "newAlbum": MessageLookupByLibrary.simpleMessage("Nytt album"),
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("Ingen"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey": MessageLookupByLibrary.simpleMessage(
             "Ingen gjenopprettingsn√∏kkel?"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_pl.dart b/mobile/lib/generated/intl/messages_pl.dart
index 058e4fae31b..e0de3e5e0bc 100644
--- a/mobile/lib/generated/intl/messages_pl.dart
+++ b/mobile/lib/generated/intl/messages_pl.dart
@@ -1091,10 +1091,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Zaufane kontakty mogƒÖ rozpoczƒÖƒá odzyskiwanie konta, a je≈õli nie zostanƒÖ zablokowane w ciƒÖgu 30 dni, zresetowaƒá Twoje has≈Ço i uzyskaƒá dostƒôp do Twojego konta."),
         "light": MessageLookupByLibrary.simpleMessage("Jasny"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Jasny"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("Link skopiowany do schowka"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Limit urzƒÖdze≈Ñ"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Aktywny"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Wygas≈Ç"),
         "linkExpiresOn": m43,
@@ -1256,6 +1258,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Nie masz ≈ºadnych plik√≥w na tym urzƒÖdzeniu, kt√≥re mo≈ºna usunƒÖƒá"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Brak duplikat√≥w"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Brak danych EXIF"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("Nie znaleziono twarzy"),
diff --git a/mobile/lib/generated/intl/messages_pt.dart b/mobile/lib/generated/intl/messages_pt.dart
index 74158e63c27..9e80591dc0c 100644
--- a/mobile/lib/generated/intl/messages_pt.dart
+++ b/mobile/lib/generated/intl/messages_pt.dart
@@ -1105,10 +1105,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Contatos confi√°veis podem iniciar recupera√ß√£o de conta, e se n√£o for cancelado dentro de 30 dias, redefina sua senha e acesse sua conta."),
         "light": MessageLookupByLibrary.simpleMessage("Brilho"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Claro"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Link copiado para a √°rea de transfer√™ncia"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Limite do dispositivo"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Ativado"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Expirado"),
         "linkExpiresOn": m43,
@@ -1267,6 +1269,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Voc√™ n√£o tem arquivos neste dispositivo que possam ser exclu√≠dos"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Sem duplicatas"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Sem dados EXIF"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("Nenhum rosto encontrado"),
diff --git a/mobile/lib/generated/intl/messages_ro.dart b/mobile/lib/generated/intl/messages_ro.dart
index 2fc58682346..8d59234c116 100644
--- a/mobile/lib/generated/intl/messages_ro.dart
+++ b/mobile/lib/generated/intl/messages_ro.dart
@@ -60,6 +60,12 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m18(albumName) => "Link colaborativ creat pentru ${albumName}";
 
+  static String m19(count) =>
+      "${Intl.plural(count, zero: 'S-au adƒÉugat 0 colaboratori', one: 'S-a adƒÉugat 1 colaborator', few: 'S-au adƒÉugat ${count} colaboratori', other: 'S-au adƒÉugat ${count} de colaboratori')}";
+
+  static String m20(email, numOfDays) =>
+      "Sunte»õi pe cale sƒÉ adƒÉuga»õi ${email} ca persoanƒÉ de contact de √Æncredere. Acesta va putea sƒÉ vƒÉ recupereze contul dacƒÉ lipsi»õi timp de ${numOfDays} de zile.";
+
   static String m21(familyAdminEmail) =>
       "VƒÉ rugƒÉm sƒÉ contacta»õi <green>${familyAdminEmail}</green> pentru a gestiona abonamentul";
 
@@ -91,6 +97,8 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m31(email) =>
       "${email} nu are un cont Ente.\n\nTrimite»õi-le o invita»õie pentru a distribui fotografii.";
 
+  static String m32(text) => "S-au gƒÉsit fotografii extra pentru ${text}";
+
   static String m33(count, formattedNumber) =>
       "${Intl.plural(count, one: 'Un fi»ôier de pe acest dispozitiv a fost deja salvat √Æn siguran»õƒÉ', few: '${formattedNumber} fi»ôiere de pe acest dispozitiv au fost deja salvate √Æn siguran»õƒÉ', other: '${formattedNumber} de fi»ôiere de pe acest dispozitiv fost deja salvate √Æn siguran»õƒÉ')}";
 
@@ -117,6 +125,9 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m41(count) =>
       "${Intl.plural(count, one: '${count} articol', few: '${count} articole', other: '${count} de articole')}";
 
+  static String m42(email) =>
+      "${email} v-a invitat sƒÉ fi»õi un contact de √Æncredere";
+
   static String m43(expiryTime) => "Linkul va expira pe ${expiryTime}";
 
   static String m3(count, formattedCount) =>
@@ -127,6 +138,8 @@ class MessageLookup extends MessageLookupByLibrary {
 
   static String m45(albumName) => "S-au mutat cu succes √Æn ${albumName}";
 
+  static String m46(personName) => "Nicio sugestie pentru ${personName}";
+
   static String m47(name) => "Nu este ${name}?";
 
   static String m48(familyAdminEmail) =>
@@ -138,6 +151,9 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m49(providerName) =>
       "VƒÉ rugƒÉm sƒÉ vorbi»õi cu asisten»õa ${providerName} dacƒÉ a»õi fost taxat";
 
+  static String m50(count) =>
+      "${Intl.plural(count, zero: '0 fotografii', one: '1 fotografie', few: '${count} fotografii', other: '${count} de fotografii')}";
+
   static String m51(endDate) =>
       "Perioada de √Æncercare gratuitƒÉ valabilƒÉ p√¢nƒÉ pe ${endDate}.\nUlterior, pute»õi opta pentru un plan plƒÉtit.";
 
@@ -147,8 +163,18 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m53(toEmail) =>
       "VƒÉ rugƒÉm sƒÉ trimite»õi jurnalele la \n${toEmail}";
 
+  static String m54(folderName) => "Se proceseazƒÉ ${folderName}...";
+
   static String m55(storeName) => "Evalua»õi-ne pe ${storeName}";
 
+  static String m56(days, email) =>
+      "Pute»õi accesa contul dupƒÉ ${days} zile. O notificare va fi trimisƒÉ la ${email}.";
+
+  static String m57(email) =>
+      "Acum pute»õi recupera contul ${email} set√¢nd o nouƒÉ parolƒÉ.";
+
+  static String m58(email) => "${email} √ÆncearcƒÉ sƒÉ vƒÉ recupereze contul.";
+
   static String m59(storageInGB) =>
       "3. Am√¢ndoi primi»õi ${storageInGB} GB* gratuit";
 
@@ -160,6 +186,9 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m62(count) =>
       "${Intl.plural(count, one: '${count} rezultat gƒÉsit', few: '${count} rezultate gƒÉsite', other: '${count} de rezultate gƒÉsite')}";
 
+  static String m63(snapshotLength, searchLength) =>
+      "Lungimea sec»õiunilor nu se potrivesc: ${snapshotLength} != ${searchLength}";
+
   static String m4(count) => "${count} selectate";
 
   static String m64(count, yourCount) =>
@@ -202,6 +231,9 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m75(completed, total) =>
       "${completed}/${total} amintiri salvate";
 
+  static String m76(ignoreReason) =>
+      "Atinge»õi pentru a √ÆncƒÉrca, √ÆncƒÉrcarea este ignoratƒÉ √Æn prezent datoritƒÉ ${ignoreReason}";
+
   static String m77(storageAmountInGB) =>
       "De asemenea, va primii ${storageAmountInGB} GB";
 
@@ -210,12 +242,24 @@ class MessageLookup extends MessageLookupByLibrary {
   static String m79(count) =>
       "${Intl.plural(count, zero: 'Cur√¢nd', one: 'O zi', other: '${count} de zile')}";
 
+  static String m80(email) =>
+      "A»õi fost √Ænvitat sƒÉ fi»õi un contact de mo»ôtenire de cƒÉtre ${email}.";
+
+  static String m81(galleryType) =>
+      "Tipul de galerie ${galleryType} nu este acceptat pentru redenumire";
+
+  static String m82(ignoreReason) =>
+      "√éncƒÉrcare ignoratƒÉ din motivul ${ignoreReason}";
+
   static String m83(count) => "Se salveazƒÉ ${count} amintiri...";
 
   static String m84(endDate) => "Valabil p√¢nƒÉ pe ${endDate}";
 
   static String m85(email) => "Verificare ${email}";
 
+  static String m86(count) =>
+      "${Intl.plural(count, zero: 'S-au adƒÉugat 0 observatori', one: 'S-a adƒÉugat 1 observator', few: 'S-au adƒÉugat ${count} observatori', other: 'S-au adƒÉugat ${count} de observatori')}";
+
   static String m2(email) => "Am trimis un e-mail la <green>${email}</green>";
 
   static String m87(count) =>
@@ -228,32 +272,51 @@ class MessageLookup extends MessageLookupByLibrary {
         "aNewVersionOfEnteIsAvailable": MessageLookupByLibrary.simpleMessage(
             "Este disponibilƒÉ o nouƒÉ versiune de Ente."),
         "about": MessageLookupByLibrary.simpleMessage("Despre"),
+        "acceptTrustInvite":
+            MessageLookupByLibrary.simpleMessage("Accepta»õi invita»õia"),
         "account": MessageLookupByLibrary.simpleMessage("Cont"),
+        "accountIsAlreadyConfigured": MessageLookupByLibrary.simpleMessage(
+            "Contul este deja configurat."),
         "accountWelcomeBack":
             MessageLookupByLibrary.simpleMessage("Bine a»õi revenit!"),
         "ackPasswordLostWarning": MessageLookupByLibrary.simpleMessage(
             "√én»õeleg cƒÉ dacƒÉ √Æmi pierd parola, √Æmi pot pierde datele, deoarece datele mele sunt <underline>criptate integral</underline>."),
         "activeSessions":
             MessageLookupByLibrary.simpleMessage("Sesiuni active"),
+        "add": MessageLookupByLibrary.simpleMessage("AdƒÉugare"),
         "addAName": MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi un nume"),
         "addANewEmail":
             MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi un e-mail nou"),
         "addCollaborator":
             MessageLookupByLibrary.simpleMessage("AdƒÉugare colaborator"),
         "addCollaborators": m6,
+        "addFiles": MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi fi»ôiere"),
+        "addFromDevice":
+            MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi de pe dispozitiv"),
         "addItem": m7,
         "addLocation": MessageLookupByLibrary.simpleMessage("AdƒÉugare loca»õie"),
         "addLocationButton": MessageLookupByLibrary.simpleMessage("AdƒÉugare"),
         "addMore": MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi mai mul»õi"),
+        "addName": MessageLookupByLibrary.simpleMessage("AdƒÉugare nume"),
+        "addNameOrMerge":
+            MessageLookupByLibrary.simpleMessage("AdƒÉugare nume sau √Æmbinare"),
         "addNew": MessageLookupByLibrary.simpleMessage("AdƒÉugare nou"),
+        "addNewPerson":
+            MessageLookupByLibrary.simpleMessage("AdƒÉugare persoanƒÉ nouƒÉ"),
         "addOnPageSubtitle":
             MessageLookupByLibrary.simpleMessage("Detaliile suplimentelor"),
         "addOnValidTill": m8,
         "addOns": MessageLookupByLibrary.simpleMessage("Suplimente"),
+        "addPhotos":
+            MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi fotografii"),
+        "addSelected":
+            MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi selectate"),
         "addToAlbum": MessageLookupByLibrary.simpleMessage("AdƒÉugare la album"),
         "addToEnte": MessageLookupByLibrary.simpleMessage("AdƒÉugare la Ente"),
         "addToHiddenAlbum":
             MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi la album ascuns"),
+        "addTrustedContact": MessageLookupByLibrary.simpleMessage(
+            "AdƒÉugare contact de √Æncredere"),
         "addViewer":
             MessageLookupByLibrary.simpleMessage("AdƒÉugare observator"),
         "addViewers": m9,
@@ -280,16 +343,47 @@ class MessageLookup extends MessageLookupByLibrary {
         "allClear": MessageLookupByLibrary.simpleMessage("‚ú® Totul e curat"),
         "allMemoriesPreserved": MessageLookupByLibrary.simpleMessage(
             "S-au salvat toate amintirile"),
+        "allPersonGroupingWillReset": MessageLookupByLibrary.simpleMessage(
+            "Toate grupƒÉrile pentru aceastƒÉ persoanƒÉ vor fi resetate »ôi ve»õi pierde toate sugestiile fƒÉcute pentru aceastƒÉ persoanƒÉ"),
+        "allow": MessageLookupByLibrary.simpleMessage("Permite»õi"),
         "allowAddPhotosDescription": MessageLookupByLibrary.simpleMessage(
             "Permite»õi persoanelor care au linkul sƒÉ adauge »ôi fotografii la albumul distribuit."),
         "allowAddingPhotos": MessageLookupByLibrary.simpleMessage(
             "Permite»õi adƒÉugarea fotografiilor"),
+        "allowAppToOpenSharedAlbumLinks": MessageLookupByLibrary.simpleMessage(
+            "Permite»õi aplica»õiei sƒÉ deschidƒÉ link-uri de album partajate"),
         "allowDownloads":
             MessageLookupByLibrary.simpleMessage("Permite»õi descƒÉrcƒÉrile"),
         "allowPeopleToAddPhotos": MessageLookupByLibrary.simpleMessage(
             "Permite»õi persoanelor sƒÉ adauge fotografii"),
+        "allowPermBody": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ permite»õi accesul la fotografiile dvs. din SetƒÉri, astfel √Ænc√¢t Ente sƒÉ vƒÉ poatƒÉ afi»ôa »ôi salva biblioteca."),
+        "allowPermTitle": MessageLookupByLibrary.simpleMessage(
+            "Permite»õi accesul la fotografii"),
+        "androidBiometricHint":
+            MessageLookupByLibrary.simpleMessage("Verifica»õi-vƒÉ identitatea"),
+        "androidBiometricNotRecognized": MessageLookupByLibrary.simpleMessage(
+            "Neidentificat. √éncerca»õi din nou."),
+        "androidBiometricRequiredTitle":
+            MessageLookupByLibrary.simpleMessage("Biometrice necesare"),
+        "androidBiometricSuccess":
+            MessageLookupByLibrary.simpleMessage("Succes"),
+        "androidCancelButton": MessageLookupByLibrary.simpleMessage("Anulare"),
+        "androidDeviceCredentialsRequiredTitle":
+            MessageLookupByLibrary.simpleMessage(
+                "Sunt necesare acreditƒÉrile dispozitivului"),
+        "androidDeviceCredentialsSetupDescription":
+            MessageLookupByLibrary.simpleMessage(
+                "Sunt necesare acreditƒÉrile dispozitivului"),
+        "androidGoToSettingsDescription": MessageLookupByLibrary.simpleMessage(
+            "Autentificarea biometricƒÉ nu este configuratƒÉ pe dispozitivul dvs. Merge»õi la ‚ÄûSetƒÉri > Securitate‚Äù pentru a adƒÉuga autentificarea biometricƒÉ."),
         "androidIosWebDesktop":
             MessageLookupByLibrary.simpleMessage("Android, iOS, Web, Desktop"),
+        "androidSignInTitle":
+            MessageLookupByLibrary.simpleMessage("Autentificare necesarƒÉ"),
+        "appLock": MessageLookupByLibrary.simpleMessage("Blocare aplica»õie"),
+        "appLockDescriptions": MessageLookupByLibrary.simpleMessage(
+            "Alege»õi √Æntre ecranul de blocare implicit al dispozitivului dvs. »ôi un ecran de blocare personalizat cu PIN sau parolƒÉ."),
         "appVersion": m13,
         "appleId": MessageLookupByLibrary.simpleMessage("Apple ID"),
         "apply": MessageLookupByLibrary.simpleMessage("Aplicare"),
@@ -314,6 +408,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Sunte»õi sigur cƒÉ dori»õi sƒÉ vƒÉ deconecta»õi?"),
         "areYouSureYouWantToRenew": MessageLookupByLibrary.simpleMessage(
             "Sunte»õi sigur cƒÉ dori»õi sƒÉ re√Ænnoi»õi?"),
+        "areYouSureYouWantToResetThisPerson":
+            MessageLookupByLibrary.simpleMessage(
+                "Sunte»õi sigur cƒÉ dori»õi sƒÉ reseta≈£i aceastƒÉ persoanƒÉ?"),
         "askCancelReason": MessageLookupByLibrary.simpleMessage(
             "Abonamentul dvs. a fost anulat. Dori»õi sƒÉ ne comunica»õi motivul?"),
         "askDeleteReason": MessageLookupByLibrary.simpleMessage(
@@ -336,6 +433,12 @@ class MessageLookup extends MessageLookupByLibrary {
                 "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a configura autentificarea cu doi factori"),
         "authToInitiateAccountDeletion": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a ini»õia »ôtergerea contului"),
+        "authToManageLegacy": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a gestiona contactele de √Æncredere"),
+        "authToViewPasskey": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a vizualiza cheia de acces"),
+        "authToViewTrashedFiles": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a vedea fi»ôierele din co»ôul de gunoi"),
         "authToViewYourActiveSessions": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi pentru a vedea sesiunile active"),
         "authToViewYourHiddenFiles": MessageLookupByLibrary.simpleMessage(
@@ -355,6 +458,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ve»õi vedea dispozitivele disponibile pentru Cast aici."),
         "autoCastiOSPermission": MessageLookupByLibrary.simpleMessage(
             "Asigura»õi-vƒÉ cƒÉ permisiunile de re»õea localƒÉ sunt activate pentru aplica»õia Ente Foto, √Æn SetƒÉri."),
+        "autoLock": MessageLookupByLibrary.simpleMessage("Blocare automatƒÉ"),
+        "autoLockFeatureDescription": MessageLookupByLibrary.simpleMessage(
+            "Timpul dupƒÉ care aplica»õia se blocheazƒÉ dupƒÉ ce a fost pusƒÉ √Æn fundal"),
         "autoLogoutMessage": MessageLookupByLibrary.simpleMessage(
             "Din cauza unei probleme tehnice, a»õi fost deconectat. Ne cerem scuze pentru neplƒÉcerile create."),
         "autoPair": MessageLookupByLibrary.simpleMessage("Asociere automatƒÉ"),
@@ -367,6 +473,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "backup": MessageLookupByLibrary.simpleMessage("Copie de rezervƒÉ"),
         "backupFailed":
             MessageLookupByLibrary.simpleMessage("Copie de rezervƒÉ e»ôuatƒÉ"),
+        "backupFile": MessageLookupByLibrary.simpleMessage("Salvare fi»ôier"),
         "backupOverMobileData": MessageLookupByLibrary.simpleMessage(
             "Efectuare copie de rezervƒÉ prin date mobile"),
         "backupSettings":
@@ -384,6 +491,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "cachedData": MessageLookupByLibrary.simpleMessage(
             "Date salvate √Æn memoria cache"),
         "calculating": MessageLookupByLibrary.simpleMessage("Se calculeazƒÉ..."),
+        "canNotOpenBody": MessageLookupByLibrary.simpleMessage(
+            "Ne pare rƒÉu, acest album nu poate fi deschis √Æn aplica»õie."),
+        "canNotOpenTitle": MessageLookupByLibrary.simpleMessage(
+            "Nu se poate deschide acest album"),
         "canNotUploadToAlbumsOwnedByOthers":
             MessageLookupByLibrary.simpleMessage(
                 "Nu se poate √ÆncƒÉrca √Æn albumele de»õinute de al»õii"),
@@ -393,22 +504,43 @@ class MessageLookup extends MessageLookupByLibrary {
         "canOnlyRemoveFilesOwnedByYou": MessageLookupByLibrary.simpleMessage(
             "Pute»õi elimina numai fi»ôierele de»õinute de dvs."),
         "cancel": MessageLookupByLibrary.simpleMessage("Anulare"),
+        "cancelAccountRecovery":
+            MessageLookupByLibrary.simpleMessage("Anulare recuperare"),
+        "cancelAccountRecoveryBody": MessageLookupByLibrary.simpleMessage(
+            "Sunte»õi sigur cƒÉ dori»õi sƒÉ anula»õi recuperarea?"),
         "cancelOtherSubscription": m15,
         "cancelSubscription":
             MessageLookupByLibrary.simpleMessage("Anulare abonament"),
         "cannotAddMorePhotosAfterBecomingViewer": m16,
         "cannotDeleteSharedFiles": MessageLookupByLibrary.simpleMessage(
             "Nu se pot »ôterge fi»ôierele distribuite"),
+        "castAlbum": MessageLookupByLibrary.simpleMessage("Difuza»õi albumul"),
         "castIPMismatchBody": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ vƒÉ asigura»õi cƒÉ sunte»õi √Æn aceea»ôi re»õea cu televizorul."),
         "castIPMismatchTitle": MessageLookupByLibrary.simpleMessage(
             "Nu s-a reu»ôit proiectarea albumului"),
+        "castInstruction": MessageLookupByLibrary.simpleMessage(
+            "Accesa»õi cast.ente.io de pe dispozitivul pe care dori»õi sƒÉ √Æl asocia»õi.\n\nIntroduce»õi codul de mai jos pentru a reda albumul pe TV."),
         "centerPoint": MessageLookupByLibrary.simpleMessage("Punctul central"),
         "change": MessageLookupByLibrary.simpleMessage("Schimba»õi"),
         "changeEmail":
             MessageLookupByLibrary.simpleMessage("Schimba»õi e-mailul"),
         "changeLocationOfSelectedItems": MessageLookupByLibrary.simpleMessage(
             "Schimba»õi loca»õia articolelor selectate?"),
+        "changeLogBackupStatusContent": MessageLookupByLibrary.simpleMessage(
+            "Am adƒÉugat un jurnal al tuturor fi»ôierelor care au fost √ÆncƒÉrcate pe Ente, inclusiv e»ôecurile »ôi coada de a»ôteptare."),
+        "changeLogBackupStatusTitle":
+            MessageLookupByLibrary.simpleMessage("Starea copiei de rezervƒÉ"),
+        "changeLogDiscoverContent": MessageLookupByLibrary.simpleMessage(
+            "CƒÉuta»õi fotografii ale cƒÉr»õilor de identitate, noti»õe sau chiar meme-uri? Merge»õi la fila de cƒÉutare »ôi da»õi o privire la Descoperire. Bazat pe cƒÉutarea noastrƒÉ semanticƒÉ, este un loc √Æn care pute»õi gƒÉsi fotografii care ar putea fi importante pentru dvs.\\n\\nEste disponibilƒÉ numai dacƒÉ a»õi activat √ÆnvƒÉ»õarea automatƒÉ."),
+        "changeLogDiscoverTitle":
+            MessageLookupByLibrary.simpleMessage("Descoperire"),
+        "changeLogMagicSearchImprovementContent":
+            MessageLookupByLibrary.simpleMessage(
+                "Am √ÆmbunƒÉtƒÉ»õit cƒÉutarea magicƒÉ pentru a deveni mult mai rapidƒÉ, astfel √Ænc√¢t sƒÉ nu trebuiascƒÉ sƒÉ a»ôtepta»õi pentru a gƒÉsi ceea ce cƒÉuta»õi."),
+        "changeLogMagicSearchImprovementTitle":
+            MessageLookupByLibrary.simpleMessage(
+                "√émbunƒÉtƒÉ»õire a cƒÉutƒÉrii magice"),
         "changePassword":
             MessageLookupByLibrary.simpleMessage("Schimbare parolƒÉ"),
         "changePasswordTitle":
@@ -424,6 +556,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "checkStatus":
             MessageLookupByLibrary.simpleMessage("Verifica»õi starea"),
         "checking": MessageLookupByLibrary.simpleMessage("Se verificƒÉ..."),
+        "checkingModels":
+            MessageLookupByLibrary.simpleMessage("Se verificƒÉ modelele..."),
         "claimFreeStorage":
             MessageLookupByLibrary.simpleMessage("RevendicƒÉ spa»õiul gratuit"),
         "claimMore":
@@ -432,6 +566,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "claimedStorageSoFar": m17,
         "cleanUncategorized":
             MessageLookupByLibrary.simpleMessage("CurƒÉ»õare Necategorisite"),
+        "cleanUncategorizedDescription": MessageLookupByLibrary.simpleMessage(
+            "Elimina»õi toate fi»ôierele din ‚ÄûFƒÉrƒÉ categorie‚Äù care sunt prezente √Æn alte albume"),
         "clearCaches":
             MessageLookupByLibrary.simpleMessage("»òterge»õi memoria cache"),
         "clearIndexes":
@@ -463,19 +599,25 @@ class MessageLookup extends MessageLookupByLibrary {
         "collaboratorsCanAddPhotosAndVideosToTheSharedAlbum":
             MessageLookupByLibrary.simpleMessage(
                 "Colaboratorii pot adƒÉuga fotografii »ôi videoclipuri la albumul distribuit."),
+        "collaboratorsSuccessfullyAdded": m19,
         "collageLayout": MessageLookupByLibrary.simpleMessage("Aspect"),
         "collageSaved":
             MessageLookupByLibrary.simpleMessage("Colaj salvat √Æn galerie"),
+        "collect": MessageLookupByLibrary.simpleMessage("Colectare"),
         "collectEventPhotos": MessageLookupByLibrary.simpleMessage(
             "Str√¢nge»õi imagini de la evenimente"),
         "collectPhotos":
             MessageLookupByLibrary.simpleMessage("Colectare fotografii"),
+        "collectPhotosDescription": MessageLookupByLibrary.simpleMessage(
+            "Crea»õi un link unde prietenii dvs. pot √ÆncƒÉrca fotografii la calitatea originalƒÉ."),
         "color": MessageLookupByLibrary.simpleMessage("Culoare"),
+        "configuration": MessageLookupByLibrary.simpleMessage("Configurare"),
         "confirm": MessageLookupByLibrary.simpleMessage("Confirmare"),
         "confirm2FADisable": MessageLookupByLibrary.simpleMessage(
             "Sigur dori»õi dezactivarea autentificƒÉrii cu doi factori?"),
         "confirmAccountDeletion": MessageLookupByLibrary.simpleMessage(
             "Confirma»õi »ôtergerea contului"),
+        "confirmAddingTrustedContact": m20,
         "confirmDeletePrompt": MessageLookupByLibrary.simpleMessage(
             "Da, doresc sƒÉ »ôterg definitiv acest cont »ôi toate datele sale din toate aplica»õiile."),
         "confirmPassword":
@@ -514,6 +656,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "count": MessageLookupByLibrary.simpleMessage("Total"),
         "crashReporting":
             MessageLookupByLibrary.simpleMessage("Raportarea problemelor"),
+        "create": MessageLookupByLibrary.simpleMessage("Creare"),
         "createAccount": MessageLookupByLibrary.simpleMessage("Creare cont"),
         "createAlbumActionHint": MessageLookupByLibrary.simpleMessage(
             "ApƒÉsa»õi lung pentru a selecta fotografii »ôi apƒÉsa»õi pe + pentru a crea un album"),
@@ -533,11 +676,15 @@ class MessageLookup extends MessageLookupByLibrary {
         "crop": MessageLookupByLibrary.simpleMessage("Decupare"),
         "currentUsageIs":
             MessageLookupByLibrary.simpleMessage("Utilizarea actualƒÉ este "),
+        "currentlyRunning":
+            MessageLookupByLibrary.simpleMessage("ruleazƒÉ √Æn prezent"),
         "custom": MessageLookupByLibrary.simpleMessage("Particularizat"),
         "customEndpoint": m23,
         "darkTheme": MessageLookupByLibrary.simpleMessage("√éntunecatƒÉ"),
         "dayToday": MessageLookupByLibrary.simpleMessage("AstƒÉzi"),
         "dayYesterday": MessageLookupByLibrary.simpleMessage("Ieri"),
+        "declineTrustInvite":
+            MessageLookupByLibrary.simpleMessage("Refuza»õi invita»õia"),
         "decrypting": MessageLookupByLibrary.simpleMessage("Se decripteazƒÉ..."),
         "decryptingVideo": MessageLookupByLibrary.simpleMessage(
             "Se decripteazƒÉ videoclipul..."),
@@ -598,12 +745,16 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("SetƒÉri dezvoltator"),
         "developerSettingsWarning": MessageLookupByLibrary.simpleMessage(
             "Sunte»õi sigur cƒÉ dori»õi sƒÉ modifica»õi setƒÉrile pentru dezvoltatori?"),
+        "deviceCodeHint":
+            MessageLookupByLibrary.simpleMessage("Introduce»õi codul"),
         "deviceFilesAutoUploading": MessageLookupByLibrary.simpleMessage(
             "Fi»ôierele adƒÉugate la acest album de pe dispozitiv vor fi √ÆncƒÉrcate automat pe Ente."),
         "deviceLock":
             MessageLookupByLibrary.simpleMessage("Blocare dispozitiv"),
         "deviceLockExplanation": MessageLookupByLibrary.simpleMessage(
             "Dezactiva»õi blocarea ecranului dispozitivului atunci c√¢nd Ente este √Æn prim-plan »ôi existƒÉ o copie de rezervƒÉ √Æn curs de desfƒÉ»ôurare. √én mod normal, acest lucru nu este necesar, dar poate ajuta la finalizarea mai rapidƒÉ a √ÆncƒÉrcƒÉrilor mari »ôi a importurilor ini»õiale de biblioteci mari."),
+        "deviceNotFound": MessageLookupByLibrary.simpleMessage(
+            "Dispozitivul nu a fost gƒÉsit"),
         "didYouKnow": MessageLookupByLibrary.simpleMessage("»òtia»õi cƒÉ?"),
         "disableAutoLock": MessageLookupByLibrary.simpleMessage(
             "Dezactivare blocare automatƒÉ"),
@@ -666,18 +817,29 @@ class MessageLookup extends MessageLookupByLibrary {
                 "EditƒÉrile loca»õiei vor fi vizibile doar pe Ente"),
         "eligible": MessageLookupByLibrary.simpleMessage("eligibil"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
+        "emailAlreadyRegistered":
+            MessageLookupByLibrary.simpleMessage("E-mail deja √Ænregistrat."),
         "emailChangedTo": m30,
         "emailNoEnteAccount": m31,
+        "emailNotRegistered": MessageLookupByLibrary.simpleMessage(
+            "E-mailul nu este √Ænregistrat."),
         "emailVerificationToggle": MessageLookupByLibrary.simpleMessage(
             "Verificarea adresei de e-mail"),
         "emailYourLogs": MessageLookupByLibrary.simpleMessage(
             "Trimite»õi jurnalele prin e-mail"),
+        "emergencyContacts":
+            MessageLookupByLibrary.simpleMessage("Contacte de urgen»õƒÉ"),
         "empty": MessageLookupByLibrary.simpleMessage("Gol"),
         "emptyTrash":
             MessageLookupByLibrary.simpleMessage("Goli»õi co»ôul de gunoi?"),
         "enable": MessageLookupByLibrary.simpleMessage("Activare"),
         "enableMLIndexingDesc": MessageLookupByLibrary.simpleMessage(
             "Ente acceptƒÉ √ÆnvƒÉ»õarea automatƒÉ pe dispozitiv pentru recunoa»ôtere facialƒÉ, cƒÉutarea magicƒÉ »ôi alte func»õii avansate de cƒÉutare"),
+        "enableMachineLearningBanner": MessageLookupByLibrary.simpleMessage(
+            "Activa»õi √ÆnvƒÉ»õarea automatƒÉ pentru a folosi cƒÉutarea magicƒÉ »ôi recunoa»ôterea facialƒÉ"),
+        "enableMaps": MessageLookupByLibrary.simpleMessage("Activare hƒÉr»õi"),
+        "enableMapsDesc": MessageLookupByLibrary.simpleMessage(
+            "Se va afi»ôa fotografiile dvs. pe o hartƒÉ a lumii.\n\nAceastƒÉ hartƒÉ este gƒÉzduitƒÉ de Open Street Map, iar loca»õiile exacte ale fotografiilor dvs. nu sunt niciodatƒÉ partajate.\n\nPute»õi dezactiva aceastƒÉ func»õie oric√¢nd din SetƒÉri."),
         "enabled": MessageLookupByLibrary.simpleMessage("Activat"),
         "encryptingBackup": MessageLookupByLibrary.simpleMessage(
             "Criptare copie de rezervƒÉ..."),
@@ -717,6 +879,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Introduce»õi o parolƒÉ pe care o putem folosi pentru a decripta datele"),
         "enterPersonName": MessageLookupByLibrary.simpleMessage(
             "Introduce»õi numele persoanei"),
+        "enterPin":
+            MessageLookupByLibrary.simpleMessage("Introduce≈£i codul PIN"),
         "enterReferralCode": MessageLookupByLibrary.simpleMessage(
             "Introduce≈£i codul de recomandare"),
         "enterThe6digitCodeFromnyourAuthenticatorApp":
@@ -741,6 +905,11 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Exporta»õi jurnalele"),
         "exportYourData":
             MessageLookupByLibrary.simpleMessage("Export de date"),
+        "extraPhotosFound":
+            MessageLookupByLibrary.simpleMessage("S-au gƒÉsit fotografii extra"),
+        "extraPhotosFoundFor": m32,
+        "faceNotClusteredYet": MessageLookupByLibrary.simpleMessage(
+            "Fa»õa nu este √ÆncƒÉ grupatƒÉ, vƒÉ rugƒÉm sƒÉ reveni»õi mai t√¢rziu"),
         "faceRecognition":
             MessageLookupByLibrary.simpleMessage("Recunoa»ôtere facialƒÉ"),
         "faces": MessageLookupByLibrary.simpleMessage("Fe»õe"),
@@ -750,26 +919,40 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nu s-a reu»ôit anularea"),
         "failedToDownloadVideo": MessageLookupByLibrary.simpleMessage(
             "DescƒÉrcarea videoclipului nu a reu»ôit"),
+        "failedToFetchActiveSessions": MessageLookupByLibrary.simpleMessage(
+            "Nu s-a reu»ôit preluarea sesiunilor active"),
         "failedToFetchOriginalForEdit": MessageLookupByLibrary.simpleMessage(
             "Nu s-a reu»ôit preluarea originalului pentru editare"),
         "failedToFetchReferralDetails": MessageLookupByLibrary.simpleMessage(
             "Nu se pot ob»õine detaliile recomandƒÉrii. VƒÉ rugƒÉm sƒÉ √Æncerca»õi din nou mai t√¢rziu."),
         "failedToLoadAlbums": MessageLookupByLibrary.simpleMessage(
             "√éncƒÉrcarea albumelor nu a reu»ôit"),
+        "failedToPlayVideo": MessageLookupByLibrary.simpleMessage(
+            "Eroare la redarea videoclipului"),
+        "failedToRefreshStripeSubscription":
+            MessageLookupByLibrary.simpleMessage(
+                "Nu s-a reu»ôit re√ÆmprospƒÉtarea abonamentului"),
         "failedToRenew":
             MessageLookupByLibrary.simpleMessage("Nu s-a reu»ôit re√Ænnoirea"),
         "failedToVerifyPaymentStatus": MessageLookupByLibrary.simpleMessage(
             "Verificarea stƒÉrii plƒÉ»õii nu a reu»ôit"),
+        "familyPlanOverview": MessageLookupByLibrary.simpleMessage(
+            "AdƒÉuga»õi 5 membri ai familiei la planul dvs. existent fƒÉrƒÉ a plƒÉti suplimentar.\n\nFiecare membru prime»ôte propriul spa»õiu privat »ôi nu poate vedea fi»ôierele celuilalt dec√¢t dacƒÉ acestea sunt partajate.\n\nPlanurile de familie sunt disponibile pentru clien»õii care au un abonament Ente plƒÉtit.\n\nAbona»õi-vƒÉ acum pentru a √Æncepe!"),
+        "familyPlanPortalTitle":
+            MessageLookupByLibrary.simpleMessage("Familie"),
         "familyPlans":
             MessageLookupByLibrary.simpleMessage("Planuri de familie"),
         "faq": MessageLookupByLibrary.simpleMessage("√éntrebƒÉri frecvente"),
         "faqs": MessageLookupByLibrary.simpleMessage("√éntrebƒÉri frecvente"),
         "favorite": MessageLookupByLibrary.simpleMessage("Favorit"),
         "feedback": MessageLookupByLibrary.simpleMessage("Feedback"),
+        "file": MessageLookupByLibrary.simpleMessage("Fi»ôier"),
         "fileFailedToSaveToGallery": MessageLookupByLibrary.simpleMessage(
             "Salvarea fi»ôierului √Æn galerie nu a reu»ôit"),
         "fileInfoAddDescHint":
             MessageLookupByLibrary.simpleMessage("AdƒÉuga»õi o descriere..."),
+        "fileNotUploadedYet": MessageLookupByLibrary.simpleMessage(
+            "Fi»ôierul nu a fost √ÆncƒÉrcat √ÆncƒÉ"),
         "fileSavedToGallery":
             MessageLookupByLibrary.simpleMessage("Fi»ôier salvat √Æn galerie"),
         "fileTypes": MessageLookupByLibrary.simpleMessage("Tipuri de fi»ôiere"),
@@ -805,12 +988,15 @@ class MessageLookup extends MessageLookupByLibrary {
             "Economisi»õi spa»õiu pe dispozitivul dvs. prin »ôtergerea fi»ôierelor cƒÉrora li s-a fƒÉcut copie de rezervƒÉ."),
         "freeUpSpace": MessageLookupByLibrary.simpleMessage("Elibera»õi spa»õiu"),
         "freeUpSpaceSaving": m39,
+        "gallery": MessageLookupByLibrary.simpleMessage("Galerie"),
         "galleryMemoryLimitInfo": MessageLookupByLibrary.simpleMessage(
             "P√¢nƒÉ la 1000 de amintiri afi»ôate √Æn galerie"),
         "general": MessageLookupByLibrary.simpleMessage("General"),
         "generatingEncryptionKeys": MessageLookupByLibrary.simpleMessage(
             "Se genereazƒÉ cheile de criptare..."),
         "genericProgress": m40,
+        "goToSettings":
+            MessageLookupByLibrary.simpleMessage("Merge»õi la setƒÉri"),
         "googlePlayId": MessageLookupByLibrary.simpleMessage("ID Google Play"),
         "grantFullAccessPrompt": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ permite»õi accesul la toate fotografiile √Æn aplica»õia SetƒÉri"),
@@ -818,6 +1004,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Acorda»õi permisiunea"),
         "groupNearbyPhotos": MessageLookupByLibrary.simpleMessage(
             "Grupare fotografii apropiate"),
+        "guestView": MessageLookupByLibrary.simpleMessage("Mod oaspete"),
+        "guestViewEnablePreSteps": MessageLookupByLibrary.simpleMessage(
+            "Pentru a activa modul oaspete, vƒÉ rugƒÉm sƒÉ configura»õi codul de acces al dispozitivului sau blocarea ecranului √Æn setƒÉrile sistemului."),
         "hearUsExplanation": MessageLookupByLibrary.simpleMessage(
             "Nu urmƒÉrim instalƒÉrile aplica»õiei. Ne-ar ajuta dacƒÉ ne-a»õi spune unde ne-a»õi gƒÉsit!"),
         "hearUsWhereTitle": MessageLookupByLibrary.simpleMessage(
@@ -825,13 +1014,32 @@ class MessageLookup extends MessageLookupByLibrary {
         "help": MessageLookupByLibrary.simpleMessage("Asisten»õƒÉ"),
         "hidden": MessageLookupByLibrary.simpleMessage("Ascunse"),
         "hide": MessageLookupByLibrary.simpleMessage("Ascundere"),
+        "hideContent":
+            MessageLookupByLibrary.simpleMessage("Ascunde»õi con»õinutul"),
+        "hideContentDescriptionAndroid": MessageLookupByLibrary.simpleMessage(
+            "Ascunde con»õinutul aplica»õiei √Æn comutatorul de aplica»õii »ôi dezactiveazƒÉ capturile de ecran"),
+        "hideContentDescriptionIos": MessageLookupByLibrary.simpleMessage(
+            "Ascunde con»õinutul aplica»õiei √Æn comutatorul de aplica»õii"),
+        "hideSharedItemsFromHomeGallery": MessageLookupByLibrary.simpleMessage(
+            "Ascunde»õi elementele distribuite din galeria principalƒÉ"),
         "hiding": MessageLookupByLibrary.simpleMessage("Se ascunde..."),
+        "hostedAtOsmFrance":
+            MessageLookupByLibrary.simpleMessage("GƒÉzduit la OSM Fran≈£a"),
         "howItWorks": MessageLookupByLibrary.simpleMessage("Cum func≈£ioneazƒÉ"),
         "howToViewShareeVerificationID": MessageLookupByLibrary.simpleMessage(
             "Ruga»õi-i sƒÉ »õinƒÉ apƒÉsat pe adresa de e-mail din ecranul de setƒÉri »ôi sƒÉ verifice dacƒÉ ID-urile de pe ambele dispozitive se potrivesc."),
+        "iOSGoToSettingsDescription": MessageLookupByLibrary.simpleMessage(
+            "Autentificarea biometricƒÉ nu este configuratƒÉ pe dispozitivul dvs. VƒÉ rugƒÉm sƒÉ activa»õi Touch ID sau Face ID pe telefonul dvs."),
+        "iOSLockOut": MessageLookupByLibrary.simpleMessage(
+            "Autentificarea biometricƒÉ este dezactivatƒÉ. VƒÉ rugƒÉm sƒÉ bloca»õi »ôi sƒÉ debloca»õi ecranul pentru a o activa."),
+        "iOSOkButton": MessageLookupByLibrary.simpleMessage("OK"),
         "ignoreUpdate": MessageLookupByLibrary.simpleMessage("Ignorare"),
+        "ignored": MessageLookupByLibrary.simpleMessage("ignorat"),
         "ignoredFolderUploadReason": MessageLookupByLibrary.simpleMessage(
             "Unele fi»ôiere din acest album sunt excluse de la √ÆncƒÉrcare deoarece au fost »ôterse anterior din Ente."),
+        "imageNotAnalyzed": MessageLookupByLibrary.simpleMessage(
+            "Imaginea nu a fost analizatƒÉ"),
+        "immediately": MessageLookupByLibrary.simpleMessage("Imediat"),
         "importing": MessageLookupByLibrary.simpleMessage("Se importƒÉ...."),
         "incorrectCode": MessageLookupByLibrary.simpleMessage("Cod incorect"),
         "incorrectPasswordTitle":
@@ -846,6 +1054,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Elemente indexate"),
         "indexingIsPaused": MessageLookupByLibrary.simpleMessage(
             "Indexarea este √Æn pauzƒÉ. Va relua automat c√¢nd dispozitivul este pregƒÉtit."),
+        "info": MessageLookupByLibrary.simpleMessage("Informa»õii"),
         "insecureDevice":
             MessageLookupByLibrary.simpleMessage("Dispozitiv nesigur"),
         "installManually":
@@ -875,6 +1084,15 @@ class MessageLookup extends MessageLookupByLibrary {
                 "Articolele afi»ôeazƒÉ numƒÉrul de zile rƒÉmase p√¢nƒÉ la »ôtergerea definitivƒÉ"),
         "itemsWillBeRemovedFromAlbum": MessageLookupByLibrary.simpleMessage(
             "Articolele selectate vor fi eliminate din acest album"),
+        "join": MessageLookupByLibrary.simpleMessage("AlƒÉturare"),
+        "joinAlbum":
+            MessageLookupByLibrary.simpleMessage("AlƒÉtura»õi-vƒÉ albumului"),
+        "joinAlbumSubtext": MessageLookupByLibrary.simpleMessage(
+            "pentru a vedea »ôi a adƒÉuga fotografii"),
+        "joinAlbumSubtextViewer": MessageLookupByLibrary.simpleMessage(
+            "pentru a adƒÉuga la albumele distribuite"),
+        "joinDiscord":
+            MessageLookupByLibrary.simpleMessage("AlƒÉtura»õi-vƒÉ pe Discord"),
         "keepPhotos":
             MessageLookupByLibrary.simpleMessage("PƒÉstra»õi fotografiile"),
         "kiloMeterUnit": MessageLookupByLibrary.simpleMessage("km"),
@@ -889,12 +1107,22 @@ class MessageLookup extends MessageLookupByLibrary {
         "leaveSharedAlbum": MessageLookupByLibrary.simpleMessage(
             "PƒÉrƒÉsi»õi albumul distribuit?"),
         "left": MessageLookupByLibrary.simpleMessage("St√¢nga"),
+        "legacy": MessageLookupByLibrary.simpleMessage("Mo»ôtenire"),
+        "legacyAccounts":
+            MessageLookupByLibrary.simpleMessage("Conturi de mo»ôtenire"),
+        "legacyInvite": m42,
+        "legacyPageDesc": MessageLookupByLibrary.simpleMessage(
+            "Mo»ôtenirea permite contactelor de √Æncredere sƒÉ vƒÉ acceseze contul √Æn absen»õa dvs."),
+        "legacyPageDesc2": MessageLookupByLibrary.simpleMessage(
+            "Persoanele de contact de √Æncredere pot ini»õia recuperarea contului »ôi, dacƒÉ nu este blocatƒÉ √Æn termen de 30 de zile, vƒÉ pot reseta parola »ôi accesa contul."),
         "light": MessageLookupByLibrary.simpleMessage("LuminƒÉ"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("LuminoasƒÉ"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Linkul a fost copiat √Æn clipboard"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("LimitƒÉ de dispozitive"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Activat"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Expirat"),
         "linkExpiresOn": m43,
@@ -930,7 +1158,13 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Se √ÆncarcƒÉ fotografiile..."),
         "loadingModel":
             MessageLookupByLibrary.simpleMessage("Se descarcƒÉ modelele..."),
+        "loadingYourPhotos": MessageLookupByLibrary.simpleMessage(
+            "Se √ÆncarcƒÉ fotografiile dvs..."),
         "localGallery": MessageLookupByLibrary.simpleMessage("Galerie localƒÉ"),
+        "localIndexing":
+            MessageLookupByLibrary.simpleMessage("Indexare localƒÉ"),
+        "localSyncErrorMessage": MessageLookupByLibrary.simpleMessage(
+            "Se pare cƒÉ ceva nu a mers bine, deoarece sincronizarea fotografiilor locale dureazƒÉ mai mult dec√¢t ne a»ôteptam. VƒÉ rugƒÉm sƒÉ contacta»õi echipa noastrƒÉ de asisten»õƒÉ"),
         "location": MessageLookupByLibrary.simpleMessage("Loca»õie"),
         "locationName": MessageLookupByLibrary.simpleMessage("Numele loca»õiei"),
         "locationTagFeatureDescription": MessageLookupByLibrary.simpleMessage(
@@ -941,8 +1175,14 @@ class MessageLookup extends MessageLookupByLibrary {
         "logInLabel": MessageLookupByLibrary.simpleMessage("Conectare"),
         "loggingOut":
             MessageLookupByLibrary.simpleMessage("Se deconecteazƒÉ..."),
+        "loginSessionExpired":
+            MessageLookupByLibrary.simpleMessage("Sesiune expiratƒÉ"),
+        "loginSessionExpiredDetails": MessageLookupByLibrary.simpleMessage(
+            "Sesiunea a expirat. VƒÉ rugƒÉm sƒÉ vƒÉ autentifica»õi din nou."),
         "loginTerms": MessageLookupByLibrary.simpleMessage(
             "ApƒÉs√¢nd pe ‚ÄûConectare‚Äù, sunte»õi de acord cu <u-terms>termenii de prestare ai serviciului</u-terms> »ôi <u-policy>politica de confiden≈£ialitate</u-policy>"),
+        "loginWithTOTP": MessageLookupByLibrary.simpleMessage(
+            "Autentificare cu parolƒÉ unicƒÉ (TOTP)"),
         "logout": MessageLookupByLibrary.simpleMessage("Deconectare"),
         "logsDialogBody": MessageLookupByLibrary.simpleMessage(
             "Aceasta va trimite jurnalele pentru a ne ajuta sƒÉ depistƒÉm problema. VƒÉ rugƒÉm sƒÉ re»õine»õi cƒÉ numele fi»ôierelor vor fi incluse pentru a ne ajuta sƒÉ urmƒÉrim problemele cu anumite fi»ôiere."),
@@ -952,6 +1192,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "longpressOnAnItemToViewInFullscreen":
             MessageLookupByLibrary.simpleMessage(
                 "ApƒÉsa»õi lung pe un articol pentru a-l vizualiza pe tot ecranul"),
+        "loopVideoOff":
+            MessageLookupByLibrary.simpleMessage("Repetare video dezactivatƒÉ"),
+        "loopVideoOn":
+            MessageLookupByLibrary.simpleMessage("Repetare video activatƒÉ"),
         "lostDevice":
             MessageLookupByLibrary.simpleMessage("Dispozitiv pierdut?"),
         "machineLearning":
@@ -960,6 +1204,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "magicSearchHint": MessageLookupByLibrary.simpleMessage(
             "CƒÉutarea magicƒÉ permite cƒÉutarea fotografiilor dupƒÉ con»õinutul lor, de exemplu, ‚Äûfloare‚Äù, ‚Äûma»ôinƒÉ ro»ôie‚Äù, ‚Äûdocumente de identitate‚Äù"),
         "manage": MessageLookupByLibrary.simpleMessage("Gestionare"),
+        "manageDeviceStorage": MessageLookupByLibrary.simpleMessage(
+            "Gestiona»õi memoria cache a dispozitivului"),
         "manageDeviceStorageDesc": MessageLookupByLibrary.simpleMessage(
             "Revizui»õi »ôi »ôterge»õi spa»õiul din memoria cache localƒÉ."),
         "manageFamily":
@@ -971,10 +1217,14 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Gestionare abonament"),
         "manualPairDesc": MessageLookupByLibrary.simpleMessage(
             "Asocierea cu PIN func»õioneazƒÉ cu orice ecran pe care dori»õi sƒÉ vizualiza»õi albumul."),
+        "map": MessageLookupByLibrary.simpleMessage("HartƒÉ"),
+        "maps": MessageLookupByLibrary.simpleMessage("HƒÉr≈£i"),
         "mastodon": MessageLookupByLibrary.simpleMessage("Mastodon"),
         "matrix": MessageLookupByLibrary.simpleMessage("Matrix"),
         "memoryCount": m3,
         "merchandise": MessageLookupByLibrary.simpleMessage("Produse"),
+        "mergeWithExisting":
+            MessageLookupByLibrary.simpleMessage("√émbinare cu unul existent"),
         "mergedPhotos":
             MessageLookupByLibrary.simpleMessage("Fotografii combinate"),
         "mlConsent":
@@ -996,9 +1246,13 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage(
                 "Modifica»õi interogarea sau √Æncerca»õi sƒÉ cƒÉuta»õi"),
         "moments": MessageLookupByLibrary.simpleMessage("Momente"),
+        "month": MessageLookupByLibrary.simpleMessage("lunƒÉ"),
         "monthly": MessageLookupByLibrary.simpleMessage("Lunar"),
         "moreDetails":
             MessageLookupByLibrary.simpleMessage("Mai multe detalii"),
+        "mostRecent": MessageLookupByLibrary.simpleMessage("Cele mai recente"),
+        "mostRelevant":
+            MessageLookupByLibrary.simpleMessage("Cele mai relevante"),
         "moveItem": m44,
         "moveToAlbum": MessageLookupByLibrary.simpleMessage("Mutare √Æn album"),
         "moveToHiddenAlbum":
@@ -1009,30 +1263,47 @@ class MessageLookup extends MessageLookupByLibrary {
         "movingFilesToAlbum": MessageLookupByLibrary.simpleMessage(
             "Se mutƒÉ fi»ôierele √Æn album..."),
         "name": MessageLookupByLibrary.simpleMessage("Nume"),
+        "nameTheAlbum":
+            MessageLookupByLibrary.simpleMessage("Denumi»õi albumul"),
         "networkConnectionRefusedErr": MessageLookupByLibrary.simpleMessage(
             "Nu se poate conecta la Ente, vƒÉ rugƒÉm sƒÉ re√Æncerca»õi dupƒÉ un timp. DacƒÉ eroarea persistƒÉ, contacta»õi asisten»õa."),
         "networkHostLookUpErr": MessageLookupByLibrary.simpleMessage(
             "Nu se poate conecta la Ente, vƒÉ rugƒÉm sƒÉ verifica»õi setƒÉrile de re»õea »ôi sƒÉ contacta»õi asistenta dacƒÉ eroarea persistƒÉ."),
         "never": MessageLookupByLibrary.simpleMessage("NiciodatƒÉ"),
         "newAlbum": MessageLookupByLibrary.simpleMessage("Album nou"),
+        "newLocation": MessageLookupByLibrary.simpleMessage("Loca»õie nouƒÉ"),
+        "newPerson": MessageLookupByLibrary.simpleMessage("PersoanƒÉ nouƒÉ"),
         "newToEnte": MessageLookupByLibrary.simpleMessage("Nou la Ente"),
         "newest": MessageLookupByLibrary.simpleMessage("Cele mai noi"),
+        "next": MessageLookupByLibrary.simpleMessage("√énainte"),
         "no": MessageLookupByLibrary.simpleMessage("Nu"),
+        "noAlbumsSharedByYouYet": MessageLookupByLibrary.simpleMessage(
+            "Niciun album nu a fost distribuit de dvs. √ÆncƒÉ"),
         "noDeviceFound":
             MessageLookupByLibrary.simpleMessage("Niciun dispozitiv gƒÉsit"),
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("Niciuna"),
         "noDeviceThatCanBeDeleted": MessageLookupByLibrary.simpleMessage(
             "Nu ave»õi fi»ôiere pe acest dispozitiv care pot fi »ôterse"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® FƒÉrƒÉ dubluri"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData":
             MessageLookupByLibrary.simpleMessage("Nu existƒÉ date EXIF"),
+        "noFacesFound":
+            MessageLookupByLibrary.simpleMessage("Nu au fost gƒÉsite fe»õe"),
         "noHiddenPhotosOrVideos": MessageLookupByLibrary.simpleMessage(
             "FƒÉrƒÉ poze sau videoclipuri ascunse"),
+        "noImagesWithLocation":
+            MessageLookupByLibrary.simpleMessage("Nicio imagine cu loca»õie"),
         "noInternetConnection": MessageLookupByLibrary.simpleMessage(
             "Nu existƒÉ conexiune la internet"),
         "noPhotosAreBeingBackedUpRightNow":
             MessageLookupByLibrary.simpleMessage(
                 "Nicio fotografie nu este salvatƒÉ √Æn acest moment"),
+        "noPhotosFoundHere": MessageLookupByLibrary.simpleMessage(
+            "Nu s-au gƒÉsit fotografii aici"),
+        "noQuickLinksSelected": MessageLookupByLibrary.simpleMessage(
+            "Nu au fost gƒÉsite linkuri rapide"),
         "noRecoveryKey": MessageLookupByLibrary.simpleMessage(
             "Nu ave»õi cheia de recuperare?"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
@@ -1040,7 +1311,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "noResults": MessageLookupByLibrary.simpleMessage("Niciun rezultat"),
         "noResultsFound":
             MessageLookupByLibrary.simpleMessage("Nu s-au gƒÉsit rezultate"),
+        "noSuggestionsForPerson": m46,
+        "noSystemLockFound": MessageLookupByLibrary.simpleMessage(
+            "Nu s-a gƒÉsit nicio blocare de sistem"),
         "notPersonLabel": m47,
+        "nothingSharedWithYouYet": MessageLookupByLibrary.simpleMessage(
+            "Nimic distribuit cu dvs. √ÆncƒÉ"),
         "nothingToSeeHere":
             MessageLookupByLibrary.simpleMessage("Nimic de vƒÉzut aici! üëÄ"),
         "notifications": MessageLookupByLibrary.simpleMessage("NotificƒÉri"),
@@ -1049,31 +1325,47 @@ class MessageLookup extends MessageLookupByLibrary {
         "onEnte": MessageLookupByLibrary.simpleMessage(
             "Pe <branding>ente</branding>"),
         "onlyFamilyAdminCanChangeCode": m48,
+        "onlyThem": MessageLookupByLibrary.simpleMessage("Numai el/ea"),
         "oops": MessageLookupByLibrary.simpleMessage("Ups"),
         "oopsCouldNotSaveEdits": MessageLookupByLibrary.simpleMessage(
             "Hopa, nu s-au putut salva editƒÉrile"),
         "oopsSomethingWentWrong":
             MessageLookupByLibrary.simpleMessage("Hopa, ceva nu a mers bine"),
+        "openAlbumInBrowser": MessageLookupByLibrary.simpleMessage(
+            "Deschide»õi albumul √Æn browser"),
+        "openAlbumInBrowserTitle": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ utiliza»õi aplica»õia web pentru a adƒÉuga fotografii la acest album"),
+        "openFile": MessageLookupByLibrary.simpleMessage("Deschidere fi»ôier"),
         "openSettings":
             MessageLookupByLibrary.simpleMessage("Deschide»õi SetƒÉri"),
         "openTheItem":
             MessageLookupByLibrary.simpleMessage("‚Ä¢ Deschide»õi articolul"),
+        "openstreetmapContributors":
+            MessageLookupByLibrary.simpleMessage("Contribuitori OpenStreetMap"),
         "optionalAsShortAsYouLike": MessageLookupByLibrary.simpleMessage(
             "Op»õional, c√¢t de scurt dori»õi..."),
         "orMergeWithExistingPerson": MessageLookupByLibrary.simpleMessage(
             "Sau √Æmbina»õi cu cele existente"),
         "orPickAnExistingOne":
             MessageLookupByLibrary.simpleMessage("Sau alege»õi unul existent"),
+        "pair": MessageLookupByLibrary.simpleMessage("Asociere"),
         "pairWithPin": MessageLookupByLibrary.simpleMessage("Asociere cu PIN"),
         "pairingComplete":
             MessageLookupByLibrary.simpleMessage("Asociere reu»ôitƒÉ"),
         "panorama": MessageLookupByLibrary.simpleMessage("PanoramƒÉ"),
+        "passKeyPendingVerification": MessageLookupByLibrary.simpleMessage(
+            "Verificarea este √ÆncƒÉ √Æn a»ôteptare"),
+        "passkey": MessageLookupByLibrary.simpleMessage("Cheie de acces"),
+        "passkeyAuthTitle":
+            MessageLookupByLibrary.simpleMessage("Verificare cheie de acces"),
         "password": MessageLookupByLibrary.simpleMessage("ParolƒÉ"),
         "passwordChangedSuccessfully": MessageLookupByLibrary.simpleMessage(
             "Parola a fost schimbatƒÉ cu succes"),
         "passwordLock":
             MessageLookupByLibrary.simpleMessage("Blocare cu parolƒÉ"),
         "passwordStrength": m0,
+        "passwordStrengthInfo": MessageLookupByLibrary.simpleMessage(
+            "Puterea parolei este calculatƒÉ lu√¢nd √Æn considerare lungimea parolei, caracterele utilizate »ôi dacƒÉ parola apare sau nu √Æn top 10.000 cele mai utilizate parole"),
         "passwordWarning": MessageLookupByLibrary.simpleMessage(
             "Nu re»õinem aceastƒÉ parolƒÉ, deci dacƒÉ o uita»õi <underline>nu vƒÉ putem decripta datele</underline>"),
         "paymentDetails":
@@ -1096,6 +1388,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("»òtergere definitivƒÉ"),
         "permanentlyDeleteFromDevice": MessageLookupByLibrary.simpleMessage(
             "»òterge»õi permanent de pe dispozitiv?"),
+        "personName": MessageLookupByLibrary.simpleMessage("Numele persoanei"),
         "photoDescriptions":
             MessageLookupByLibrary.simpleMessage("Descrieri fotografie"),
         "photoGridSize":
@@ -1105,8 +1398,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "photosAddedByYouWillBeRemovedFromTheAlbum":
             MessageLookupByLibrary.simpleMessage(
                 "Fotografiile adƒÉugate de dvs. vor fi eliminate din album"),
+        "photosCount": m50,
         "pickCenterPoint":
             MessageLookupByLibrary.simpleMessage("Alege»õi punctul central"),
+        "pinAlbum": MessageLookupByLibrary.simpleMessage("Fixa»õi albumul"),
+        "pinLock": MessageLookupByLibrary.simpleMessage("Blocare PIN"),
+        "playOnTv": MessageLookupByLibrary.simpleMessage("Redare album pe TV"),
         "playStoreFreeTrialValidTill": m51,
         "playstoreSubscription":
             MessageLookupByLibrary.simpleMessage("Abonament PlayStore"),
@@ -1124,6 +1421,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "VƒÉ rugƒÉm sƒÉ acorda»õi permisiuni"),
         "pleaseLoginAgain": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm, autentifica»õi-vƒÉ din nou"),
+        "pleaseSelectQuickLinksToRemove": MessageLookupByLibrary.simpleMessage(
+            "VƒÉ rugƒÉm sƒÉ selecta»õi linkurile rapide de eliminat"),
         "pleaseSendTheLogsTo": m53,
         "pleaseTryAgain": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ √Æncerca»õi din nou"),
@@ -1152,10 +1451,14 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Copii de rezervƒÉ private"),
         "privateSharing":
             MessageLookupByLibrary.simpleMessage("Distribuire privatƒÉ"),
+        "proceed": MessageLookupByLibrary.simpleMessage("Continua»õi"),
+        "processed": MessageLookupByLibrary.simpleMessage("Procesate"),
+        "processingImport": m54,
         "publicLinkCreated":
             MessageLookupByLibrary.simpleMessage("Link public creat"),
         "publicLinkEnabled":
             MessageLookupByLibrary.simpleMessage("Link public activat"),
+        "quickLinks": MessageLookupByLibrary.simpleMessage("Link-uri rapide"),
         "radius": MessageLookupByLibrary.simpleMessage("RazƒÉ"),
         "raiseTicket":
             MessageLookupByLibrary.simpleMessage("Solicita»õi asisten»õƒÉ"),
@@ -1167,6 +1470,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "recoverAccount":
             MessageLookupByLibrary.simpleMessage("Recuperare cont"),
         "recoverButton": MessageLookupByLibrary.simpleMessage("Recuperare"),
+        "recoveryAccount":
+            MessageLookupByLibrary.simpleMessage("Recuperare cont"),
+        "recoveryInitiated":
+            MessageLookupByLibrary.simpleMessage("Recuperare ini»õiatƒÉ"),
+        "recoveryInitiatedDesc": m56,
         "recoveryKey":
             MessageLookupByLibrary.simpleMessage("Cheie de recuperare"),
         "recoveryKeyCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
@@ -1181,8 +1489,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "Cheie de recuperare verificatƒÉ"),
         "recoveryKeyVerifyReason": MessageLookupByLibrary.simpleMessage(
             "Cheia dvs. de recuperare este singura modalitate de a vƒÉ recupera fotografiile dacƒÉ uita»õi parola. Pute»õi gƒÉsi cheia dvs. de recuperare √Æn SetƒÉri > Cont.\n\nVƒÉ rugƒÉm sƒÉ introduce»õi aici cheia de recuperare pentru a verifica dacƒÉ a»õi salvat-o corect."),
+        "recoveryReady": m57,
         "recoverySuccessful":
             MessageLookupByLibrary.simpleMessage("Recuperare reu»ôitƒÉ!"),
+        "recoveryWarning": MessageLookupByLibrary.simpleMessage(
+            "Un contact de √Æncredere √ÆncearcƒÉ sƒÉ vƒÉ acceseze contul"),
+        "recoveryWarningBody": m58,
         "recreatePasswordBody": MessageLookupByLibrary.simpleMessage(
             "Dispozitivul actual nu este suficient de puternic pentru a vƒÉ verifica parola, dar o putem regenera √Æntr-un mod care sƒÉ func»õioneze cu toate dispozitivele.\n\nVƒÉ rugƒÉm sƒÉ vƒÉ conecta»õi utiliz√¢nd cheia de recuperare »ôi sƒÉ vƒÉ regenera»õi parola (dacƒÉ dori»õi, o pute»õi utiliza din nou pe aceea»ôi)."),
         "recreatePasswordTitle":
@@ -1202,6 +1514,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "referrals": MessageLookupByLibrary.simpleMessage("RecomandƒÉri"),
         "referralsAreCurrentlyPaused": MessageLookupByLibrary.simpleMessage(
             "RecomandƒÉrile sunt momentan √Æntrerupte"),
+        "rejectRecovery":
+            MessageLookupByLibrary.simpleMessage("Respinge»õi recuperarea"),
         "remindToEmptyDeviceTrash": MessageLookupByLibrary.simpleMessage(
             "De asemenea, goli»õi dosarul ‚Äû»òterse recent‚Äù din ‚ÄûSetƒÉri‚Äù -> ‚ÄûSpa»õiu‚Äù pentru a recupera spa»õiul eliberat"),
         "remindToEmptyEnteTrash": MessageLookupByLibrary.simpleMessage(
@@ -1223,6 +1537,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Elimina»õi din album?"),
         "removeFromFavorite":
             MessageLookupByLibrary.simpleMessage("Elimina»õi din favorite"),
+        "removeInvite":
+            MessageLookupByLibrary.simpleMessage("Eliminare invita»õie"),
         "removeLink": MessageLookupByLibrary.simpleMessage("Elimina»õi linkul"),
         "removeParticipant":
             MessageLookupByLibrary.simpleMessage("Elimina»õi participantul"),
@@ -1231,10 +1547,14 @@ class MessageLookup extends MessageLookupByLibrary {
             "Elimina»õi eticheta persoanei"),
         "removePublicLink":
             MessageLookupByLibrary.simpleMessage("Elimina»õi linkul public"),
+        "removePublicLinks":
+            MessageLookupByLibrary.simpleMessage("Elimina»õi linkurile publice"),
         "removeShareItemsWarning": MessageLookupByLibrary.simpleMessage(
             "Unele dintre articolele pe care le elimina»õi au fost adƒÉugate de alte persoane »ôi ve»õi pierde accesul la acestea"),
         "removeWithQuestionMark":
             MessageLookupByLibrary.simpleMessage("Elimina»õi?"),
+        "removeYourselfAsTrustedContact": MessageLookupByLibrary.simpleMessage(
+            "Elimina»õi-vƒÉ ca persoanƒÉ de contact de √Æncredere"),
         "removingFromFavorites":
             MessageLookupByLibrary.simpleMessage("Se eliminƒÉ din favorite..."),
         "rename": MessageLookupByLibrary.simpleMessage("Redenumire"),
@@ -1253,6 +1573,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Resetare fi»ôiere ignorate"),
         "resetPasswordTitle":
             MessageLookupByLibrary.simpleMessage("Reseta»õi parola"),
+        "resetPerson": MessageLookupByLibrary.simpleMessage("Eliminare"),
         "resetToDefault": MessageLookupByLibrary.simpleMessage(
             "Resetare la valori implicite"),
         "restore": MessageLookupByLibrary.simpleMessage("Restaurare"),
@@ -1301,6 +1622,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "AdƒÉuga»õi descrieri precum ‚Äû#excursie‚Äù √Æn informa»õiile fotografiilor pentru a le gƒÉsi u»ôor aici"),
         "searchDatesEmptySection": MessageLookupByLibrary.simpleMessage(
             "CƒÉutare dupƒÉ o datƒÉ, o lunƒÉ sau un an"),
+        "searchDiscoverEmptySection": MessageLookupByLibrary.simpleMessage(
+            "Imaginile vor fi afi»ôate aici odatƒÉ ce procesarea »ôi sincronizarea este completƒÉ"),
         "searchFaceEmptySection": MessageLookupByLibrary.simpleMessage(
             "Persoanele vor fi afi»ôate aici odatƒÉ ce indexarea este finalizatƒÉ"),
         "searchFileTypesAndNamesEmptySection":
@@ -1319,18 +1642,30 @@ class MessageLookup extends MessageLookupByLibrary {
             "Grupare fotografii realizate √Æn raza unei fotografii"),
         "searchPeopleEmptySection": MessageLookupByLibrary.simpleMessage(
             "Invita»õi persoane »ôi ve»õi vedea aici toate fotografiile distribuite de acestea"),
+        "searchPersonsEmptySection": MessageLookupByLibrary.simpleMessage(
+            "Persoanele vor fi afi»ôate aici odatƒÉ ce procesarea »ôi sincronizarea este completƒÉ"),
         "searchResultCount": m62,
+        "searchSectionsLengthMismatch": m63,
         "security": MessageLookupByLibrary.simpleMessage("Securitate"),
+        "seePublicAlbumLinksInApp": MessageLookupByLibrary.simpleMessage(
+            "Vede»õi linkurile albumelor publice √Æn aplica»õie"),
         "selectALocation":
             MessageLookupByLibrary.simpleMessage("Selecta»õi o loca»õie"),
         "selectALocationFirst": MessageLookupByLibrary.simpleMessage(
             "Selecta»õi mai √Ænt√¢i o loca»õie"),
         "selectAlbum": MessageLookupByLibrary.simpleMessage("Selectare album"),
         "selectAll": MessageLookupByLibrary.simpleMessage("Selectare totalƒÉ"),
+        "selectAllShort": MessageLookupByLibrary.simpleMessage("Toate"),
+        "selectCoverPhoto": MessageLookupByLibrary.simpleMessage(
+            "Selecta»õi fotografia de copertƒÉ"),
         "selectFoldersForBackup": MessageLookupByLibrary.simpleMessage(
             "Selecta»õi folderele pentru copie de rezervƒÉ"),
+        "selectItemsToAdd": MessageLookupByLibrary.simpleMessage(
+            "Selecta»õi elementele de adƒÉugat"),
         "selectLanguage":
             MessageLookupByLibrary.simpleMessage("Selecta≈£i limba"),
+        "selectMailApp": MessageLookupByLibrary.simpleMessage(
+            "Selecta»õi aplica»õia de e-mail"),
         "selectMorePhotos": MessageLookupByLibrary.simpleMessage(
             "Selecta»õi mai multe fotografii"),
         "selectReason":
@@ -1356,10 +1691,16 @@ class MessageLookup extends MessageLookupByLibrary {
             "Adresa (endpoint) server-ului"),
         "sessionExpired":
             MessageLookupByLibrary.simpleMessage("Sesiune expiratƒÉ"),
+        "sessionIdMismatch":
+            MessageLookupByLibrary.simpleMessage("Nepotrivire ID sesiune"),
         "setAPassword": MessageLookupByLibrary.simpleMessage("Seta»õi o parolƒÉ"),
         "setAs": MessageLookupByLibrary.simpleMessage("Setare ca"),
         "setCover": MessageLookupByLibrary.simpleMessage("Setare copertƒÉ"),
         "setLabel": MessageLookupByLibrary.simpleMessage("Setare"),
+        "setNewPassword":
+            MessageLookupByLibrary.simpleMessage("Seta»õi parola noua"),
+        "setNewPin":
+            MessageLookupByLibrary.simpleMessage("Seta»õi un cod nou PIN"),
         "setPasswordTitle":
             MessageLookupByLibrary.simpleMessage("Seta»õi parola"),
         "setRadius": MessageLookupByLibrary.simpleMessage("Setare razƒÉ"),
@@ -1402,6 +1743,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "sharing": MessageLookupByLibrary.simpleMessage("Se distribuie..."),
         "showMemories":
             MessageLookupByLibrary.simpleMessage("Afi»ôare amintiri"),
+        "showPerson": MessageLookupByLibrary.simpleMessage("Afi»ôare persoanƒÉ"),
         "signOutFromOtherDevices": MessageLookupByLibrary.simpleMessage(
             "Deconectare de pe alte dispozitive"),
         "signOutOtherBody": MessageLookupByLibrary.simpleMessage(
@@ -1443,12 +1785,15 @@ class MessageLookup extends MessageLookupByLibrary {
         "sorryWeCouldNotGenerateSecureKeysOnThisDevicennplease":
             MessageLookupByLibrary.simpleMessage(
                 "Ne pare rƒÉu, nu am putut genera chei securizate pe acest dispozitiv.\n\nvƒÉ rugƒÉm sƒÉ vƒÉ √Ænregistra»õi de pe un alt dispozitiv."),
+        "sort": MessageLookupByLibrary.simpleMessage("Sortare"),
         "sortAlbumsBy": MessageLookupByLibrary.simpleMessage("Sortare dupƒÉ"),
         "sortNewestFirst":
             MessageLookupByLibrary.simpleMessage("Cele mai noi primele"),
         "sortOldestFirst":
             MessageLookupByLibrary.simpleMessage("Cele mai vechi primele"),
         "sparkleSuccess": MessageLookupByLibrary.simpleMessage("‚ú® Succes"),
+        "startAccountRecoveryTitle":
+            MessageLookupByLibrary.simpleMessage("√éncepe»õi recuperarea"),
         "startBackup":
             MessageLookupByLibrary.simpleMessage("√éncepe»õi copia de rezervƒÉ"),
         "status": MessageLookupByLibrary.simpleMessage("Status"),
@@ -1491,6 +1836,11 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("atinge»õi pentru a copia"),
         "tapToEnterCode": MessageLookupByLibrary.simpleMessage(
             "Atinge»õi pentru a introduce codul"),
+        "tapToUnlock":
+            MessageLookupByLibrary.simpleMessage("Atinge»õi pentru a debloca"),
+        "tapToUpload":
+            MessageLookupByLibrary.simpleMessage("Atinge»õi pentru a √ÆncƒÉrca"),
+        "tapToUploadIsIgnoredDue": m76,
         "tempErrorContactSupportIfPersists": MessageLookupByLibrary.simpleMessage(
             "Se pare cƒÉ ceva nu a mers bine. VƒÉ rugƒÉm sƒÉ √Æncerca»õi din nou dupƒÉ ceva timp. DacƒÉ eroarea persistƒÉ, vƒÉ rugƒÉm sƒÉ contacta»õi echipa noastrƒÉ de asisten»õƒÉ."),
         "terminate": MessageLookupByLibrary.simpleMessage("Terminare"),
@@ -1503,6 +1853,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Mul»õumim pentru abonare!"),
         "theDownloadCouldNotBeCompleted": MessageLookupByLibrary.simpleMessage(
             "DescƒÉrcarea nu a putut fi finalizatƒÉ"),
+        "theLinkYouAreTryingToAccessHasExpired":
+            MessageLookupByLibrary.simpleMessage(
+                "Linkul pe care √Æncerca»õi sƒÉ √Æl accesa»õi a expirat."),
         "theRecoveryKeyYouEnteredIsIncorrect":
             MessageLookupByLibrary.simpleMessage(
                 "Cheia de recuperare introdusƒÉ este incorectƒÉ"),
@@ -1534,17 +1887,28 @@ class MessageLookup extends MessageLookupByLibrary {
                 "UrmeazƒÉ sƒÉ vƒÉ deconecta»õi de pe urmƒÉtorul dispozitiv:"),
         "thisWillLogYouOutOfThisDevice": MessageLookupByLibrary.simpleMessage(
             "UrmeazƒÉ sƒÉ vƒÉ deconecta»õi de pe acest dispozitiv!"),
+        "thisWillRemovePublicLinksOfAllSelectedQuickLinks":
+            MessageLookupByLibrary.simpleMessage(
+                "Se vor elimina linkurile publice ale linkurilor rapide selectate."),
+        "toEnableAppLockPleaseSetupDevicePasscodeOrScreen":
+            MessageLookupByLibrary.simpleMessage(
+                "Pentru a activa blocarea aplica»õiei, vƒÉ rugƒÉm sƒÉ configura»õi codul de acces al dispozitivului sau blocarea ecranului √Æn setƒÉrile sistemului."),
         "toHideAPhotoOrVideo": MessageLookupByLibrary.simpleMessage(
             "Pentru a ascunde o fotografie sau un videoclip"),
         "toResetVerifyEmail": MessageLookupByLibrary.simpleMessage(
             "Pentru a reseta parola, vƒÉ rugƒÉm sƒÉ verifica»õi mai √Ænt√¢i e-mailul."),
         "todaysLogs":
             MessageLookupByLibrary.simpleMessage("Jurnalele de astƒÉzi"),
+        "tooManyIncorrectAttempts": MessageLookupByLibrary.simpleMessage(
+            "Prea multe √ÆncercƒÉri incorecte"),
         "total": MessageLookupByLibrary.simpleMessage("total"),
         "totalSize": MessageLookupByLibrary.simpleMessage("Dimensiune totalƒÉ"),
         "trash": MessageLookupByLibrary.simpleMessage("Co»ô de gunoi"),
         "trashDaysLeft": m79,
         "trim": MessageLookupByLibrary.simpleMessage("Decupare"),
+        "trustedContacts":
+            MessageLookupByLibrary.simpleMessage("Contacte de √Æncredere"),
+        "trustedInviteBody": m80,
         "tryAgain": MessageLookupByLibrary.simpleMessage("√éncerca»õi din nou"),
         "turnOnBackupForAutoUpload": MessageLookupByLibrary.simpleMessage(
             "Activa»õi copia de rezervƒÉ pentru a √ÆncƒÉrca automat fi»ôierele adƒÉugate la acest dosar de pe dispozitiv √Æn Ente."),
@@ -1563,6 +1927,7 @@ class MessageLookup extends MessageLookupByLibrary {
                 "Autentificarea cu doi factori a fost resetatƒÉ cu succes"),
         "twofactorSetup":
             MessageLookupByLibrary.simpleMessage("Configurare doi factori"),
+        "typeOfGallerGallerytypeIsNotSupportedForRename": m81,
         "unarchive": MessageLookupByLibrary.simpleMessage("Dezarhivare"),
         "unarchiveAlbum":
             MessageLookupByLibrary.simpleMessage("Dezarhivare album"),
@@ -1578,6 +1943,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "unhidingFilesToAlbum": MessageLookupByLibrary.simpleMessage(
             "Se reafi»ôeazƒÉ fi»ôierele √Æn album"),
         "unlock": MessageLookupByLibrary.simpleMessage("Deblocare"),
+        "unpinAlbum":
+            MessageLookupByLibrary.simpleMessage("Anula»õi fixarea albumului"),
         "unselectAll":
             MessageLookupByLibrary.simpleMessage("Deselectare totalƒÉ"),
         "update": MessageLookupByLibrary.simpleMessage("Actualizare"),
@@ -1586,6 +1953,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "updatingFolderSelection": MessageLookupByLibrary.simpleMessage(
             "Se actualizeazƒÉ selec»õia dosarelor..."),
         "upgrade": MessageLookupByLibrary.simpleMessage("√émbunƒÉtƒÉ»õire"),
+        "uploadIsIgnoredDueToIgnorereason": m82,
         "uploadingFilesToAlbum": MessageLookupByLibrary.simpleMessage(
             "Se √ÆncarcƒÉ fi»ôiere √Æn album..."),
         "uploadingMultipleMemories": m83,
@@ -1597,6 +1965,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Spa»õiul utilizabil este limitat de planul dvs. actual. Spa»õiul suplimentar revendicat va deveni automat utilizabil atunci c√¢nd vƒÉ √ÆmbunƒÉtƒÉ»õi»õi planul."),
         "useAsCover":
             MessageLookupByLibrary.simpleMessage("Utiliza»õi ca »ôi copertƒÉ"),
+        "useDifferentPlayerInfo": MessageLookupByLibrary.simpleMessage(
+            "Ave»õi probleme cu redarea acestui videoclip? ApƒÉsa»õi lung aici pentru a √Æncerca un alt player."),
         "usePublicLinksForPeopleNotOnEnte": MessageLookupByLibrary.simpleMessage(
             "Folosi»õi linkuri publice pentru persoanele care nu sunt pe Ente"),
         "useRecoveryKey": MessageLookupByLibrary.simpleMessage(
@@ -1615,17 +1985,21 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Verificare e-mail"),
         "verifyEmailID": m85,
         "verifyIDLabel": MessageLookupByLibrary.simpleMessage("Verificare"),
+        "verifyPasskey":
+            MessageLookupByLibrary.simpleMessage("Verifica»õi cheia de acces"),
         "verifyPassword":
             MessageLookupByLibrary.simpleMessage("Verifica»õi parola"),
         "verifying": MessageLookupByLibrary.simpleMessage("Se verificƒÉ..."),
         "verifyingRecoveryKey": MessageLookupByLibrary.simpleMessage(
             "Se verificƒÉ cheia de recuperare..."),
+        "videoInfo": MessageLookupByLibrary.simpleMessage("Informa≈£ii video"),
         "videoSmallCase": MessageLookupByLibrary.simpleMessage("videoclip"),
         "videos": MessageLookupByLibrary.simpleMessage("Videoclipuri"),
         "viewActiveSessions":
             MessageLookupByLibrary.simpleMessage("Vede»õi sesiunile active"),
         "viewAddOnButton":
             MessageLookupByLibrary.simpleMessage("Vizualizare suplimente"),
+        "viewAll": MessageLookupByLibrary.simpleMessage("Vizualiza»õi tot"),
         "viewAllExifData": MessageLookupByLibrary.simpleMessage(
             "Vizualiza»õi toate datele EXIF"),
         "viewLargeFiles": MessageLookupByLibrary.simpleMessage("Fi»ôiere mari"),
@@ -1635,10 +2009,14 @@ class MessageLookup extends MessageLookupByLibrary {
         "viewRecoveryKey": MessageLookupByLibrary.simpleMessage(
             "Vizualiza»õi cheia de recuperare"),
         "viewer": MessageLookupByLibrary.simpleMessage("Observator"),
+        "viewersSuccessfullyAdded": m86,
         "visitWebToManage": MessageLookupByLibrary.simpleMessage(
             "VƒÉ rugƒÉm sƒÉ vizita»õi web.ente.io pentru a vƒÉ gestiona abonamentul"),
+        "waitingForVerification":
+            MessageLookupByLibrary.simpleMessage("Se a»ôteaptƒÉ verificarea..."),
         "waitingForWifi":
             MessageLookupByLibrary.simpleMessage("Se a»ôteaptƒÉ WiFi..."),
+        "warning": MessageLookupByLibrary.simpleMessage("Aten»õie"),
         "weAreOpenSource":
             MessageLookupByLibrary.simpleMessage("Suntem open source!"),
         "weDontSupportEditingPhotosAndAlbumsThatYouDont":
@@ -1649,6 +2027,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "welcomeBack":
             MessageLookupByLibrary.simpleMessage("Bine a»õi revenit!"),
         "whatsNew": MessageLookupByLibrary.simpleMessage("NoutƒÉ»õi"),
+        "whyAddTrustContact": MessageLookupByLibrary.simpleMessage(
+            "Contactul de √Æncredere vƒÉ poate ajuta la recuperarea datelor."),
+        "yearShort": MessageLookupByLibrary.simpleMessage("an"),
         "yearly": MessageLookupByLibrary.simpleMessage("Anual"),
         "yearsAgo": m87,
         "yes": MessageLookupByLibrary.simpleMessage("Da"),
@@ -1661,6 +2042,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "yesLogout": MessageLookupByLibrary.simpleMessage("Da, mƒÉ deconectez"),
         "yesRemove": MessageLookupByLibrary.simpleMessage("Da, eliminƒÉ"),
         "yesRenew": MessageLookupByLibrary.simpleMessage("Da, re√Ænnoie»ôte"),
+        "yesResetPerson":
+            MessageLookupByLibrary.simpleMessage("Da, reseteazƒÉ persoana"),
         "you": MessageLookupByLibrary.simpleMessage("Dvs."),
         "youAreOnAFamilyPlan": MessageLookupByLibrary.simpleMessage(
             "Sunte»õi pe un plan de familie!"),
@@ -1706,6 +2089,8 @@ class MessageLookup extends MessageLookupByLibrary {
                 "Nu ave»õi dubluri care pot fi »ôterse"),
         "youveNoFilesInThisAlbumThatCanBeDeleted":
             MessageLookupByLibrary.simpleMessage(
-                "Nu ave»õi fi»ôiere √Æn acest album care pot fi »ôterse")
+                "Nu ave»õi fi»ôiere √Æn acest album care pot fi »ôterse"),
+        "zoomOutToSeePhotos": MessageLookupByLibrary.simpleMessage(
+            "Mic»ôora»õi pentru a vedea fotografiile")
       };
 }
diff --git a/mobile/lib/generated/intl/messages_ru.dart b/mobile/lib/generated/intl/messages_ru.dart
index dccf030aa6b..2c6326ce32a 100644
--- a/mobile/lib/generated/intl/messages_ru.dart
+++ b/mobile/lib/generated/intl/messages_ru.dart
@@ -1026,10 +1026,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–æ–≥—É—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π, —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏."),
         "light": MessageLookupByLibrary.simpleMessage("–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("–õ–∏–º–∏—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("–†–∞–∑—Ä–µ—à—ë–Ω"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("–ò—Å—Ç–µ–∫—à–∞—è"),
         "linkExpiresOn": m43,
@@ -1189,6 +1191,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "–£ –≤–∞—Å –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ—Ç"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö EXIF"),
         "noFacesFound": MessageLookupByLibrary.simpleMessage("–õ–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"),
         "noHiddenPhotosOrVideos":
diff --git a/mobile/lib/generated/intl/messages_sl.dart b/mobile/lib/generated/intl/messages_sl.dart
index d41d848b0fd..199ddd31bd2 100644
--- a/mobile/lib/generated/intl/messages_sl.dart
+++ b/mobile/lib/generated/intl/messages_sl.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'sl';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_sv.dart b/mobile/lib/generated/intl/messages_sv.dart
index 89c256959ab..35921400fe4 100644
--- a/mobile/lib/generated/intl/messages_sv.dart
+++ b/mobile/lib/generated/intl/messages_sv.dart
@@ -320,7 +320,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "language": MessageLookupByLibrary.simpleMessage("Spr√•k"),
         "leave": MessageLookupByLibrary.simpleMessage("L√§mna"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Ljust"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Enhetsgr√§ns"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Aktiverat"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Upph√∂rt"),
         "linkExpiresOn": m43,
@@ -362,6 +364,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "next": MessageLookupByLibrary.simpleMessage("N√§sta"),
         "no": MessageLookupByLibrary.simpleMessage("Nej"),
         "noDeviceLimit": MessageLookupByLibrary.simpleMessage("Ingen"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Ingen EXIF-data"),
         "noInternetConnection":
             MessageLookupByLibrary.simpleMessage("Ingen internetanslutning"),
diff --git a/mobile/lib/generated/intl/messages_ta.dart b/mobile/lib/generated/intl/messages_ta.dart
index 30c00c6d720..0e62efdd6b6 100644
--- a/mobile/lib/generated/intl/messages_ta.dart
+++ b/mobile/lib/generated/intl/messages_ta.dart
@@ -48,6 +48,10 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("‡Æ§‡Æµ‡Æ±‡Ææ‡Æ© ‡ÆÆ‡Æø‡Æ©‡Øç‡Æ©‡Æû‡Øç‡Æö‡Æ≤‡Øç ‡ÆÆ‡ØÅ‡Æï‡Æµ‡Æ∞‡Æø"),
         "kindlyHelpUsWithThisInformation": MessageLookupByLibrary.simpleMessage(
             "‡Æá‡Æ®‡Øç‡Æ§ ‡Æ§‡Æï‡Æµ‡Æ≤‡ØÅ‡Æü‡Æ©‡Øç ‡Æ§‡ÆØ‡Æµ‡ØÅ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ ‡Æé‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æâ‡Æ§‡Æµ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "verify": MessageLookupByLibrary.simpleMessage("‡Æö‡Æ∞‡Æø‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç")
       };
 }
diff --git a/mobile/lib/generated/intl/messages_te.dart b/mobile/lib/generated/intl/messages_te.dart
index 5e415c9da0c..6f521306011 100644
--- a/mobile/lib/generated/intl/messages_te.dart
+++ b/mobile/lib/generated/intl/messages_te.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'te';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_th.dart b/mobile/lib/generated/intl/messages_th.dart
index 771dd0967e8..d7235ef0cef 100644
--- a/mobile/lib/generated/intl/messages_th.dart
+++ b/mobile/lib/generated/intl/messages_th.dart
@@ -200,8 +200,10 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ"),
         "lastUpdated": MessageLookupByLibrary.simpleMessage("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("‡∏™‡∏ß‡πà‡∏≤‡∏á"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡πâ‡∏ß"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkHasExpired":
             MessageLookupByLibrary.simpleMessage("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß"),
         "loadMessage9": MessageLookupByLibrary.simpleMessage(
@@ -217,6 +219,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "moveToAlbum": MessageLookupByLibrary.simpleMessage("‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏±‡∏•‡∏ö‡∏±‡πâ‡∏°"),
         "name": MessageLookupByLibrary.simpleMessage("‡∏ä‡∏∑‡πà‡∏≠"),
         "newest": MessageLookupByLibrary.simpleMessage("‡πÉ‡∏´‡∏°‡πà‡∏™‡∏∏‡∏î"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noRecoveryKey":
             MessageLookupByLibrary.simpleMessage("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô?"),
         "noRecoveryKeyNoDecryption": MessageLookupByLibrary.simpleMessage(
diff --git a/mobile/lib/generated/intl/messages_ti.dart b/mobile/lib/generated/intl/messages_ti.dart
index 775cc78213d..8e6f8e23935 100644
--- a/mobile/lib/generated/intl/messages_ti.dart
+++ b/mobile/lib/generated/intl/messages_ti.dart
@@ -21,5 +21,10 @@ class MessageLookup extends MessageLookupByLibrary {
   String get localeName => 'ti';
 
   final messages = _notInlinedMessages(_notInlinedMessages);
-  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{};
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!")
+      };
 }
diff --git a/mobile/lib/generated/intl/messages_tr.dart b/mobile/lib/generated/intl/messages_tr.dart
index 3c01f9f1ddf..dcf56d5a164 100644
--- a/mobile/lib/generated/intl/messages_tr.dart
+++ b/mobile/lib/generated/intl/messages_tr.dart
@@ -799,9 +799,11 @@ class MessageLookup extends MessageLookupByLibrary {
             "Payla≈üƒ±lan alb√ºm silinsin mi?"),
         "light": MessageLookupByLibrary.simpleMessage("Aydƒ±nlƒ±k"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("Aydƒ±nlƒ±k"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("Link panoya kopyalandƒ±"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("Cihaz limiti"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Ge√ßerli"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("S√ºresi dolmu≈ü"),
         "linkExpiresOn": m43,
@@ -909,6 +911,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Bu cihazda silinebilecek hi√ßbir dosyanƒ±z yok"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("Yinelenenleri kaldƒ±r"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("EXIF verisi yok"),
         "noHiddenPhotosOrVideos": MessageLookupByLibrary.simpleMessage(
             "Gizli fotoƒüraf veya video yok"),
diff --git a/mobile/lib/generated/intl/messages_uk.dart b/mobile/lib/generated/intl/messages_uk.dart
index 10b8d62f5bb..54a2c5efb6a 100644
--- a/mobile/lib/generated/intl/messages_uk.dart
+++ b/mobile/lib/generated/intl/messages_uk.dart
@@ -1086,10 +1086,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "–î–æ–≤—ñ—Ä–µ–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –º–æ–∂—É—Ç—å —ñ–Ω—ñ—Ü—ñ—é–≤–∞—Ç–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É, —ñ —è–∫—â–æ –π–æ–≥–æ –Ω–µ –±—É–¥–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –ø—Ä–æ—Ç—è–≥–æ–º 30 –¥–Ω—ñ–≤, —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –Ω—å–æ–≥–æ."),
         "light": MessageLookupByLibrary.simpleMessage("–Ø—Å–∫—Ä–∞–≤—ñ—Å—Ç—å"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("–°–≤—ñ—Ç–ª–∞"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "–ü–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("–î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç—É –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("–£–≤—ñ–º–∫–Ω–µ–Ω–æ"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("–ó–∞–∫—ñ–Ω—á–∏–≤—Å—è"),
         "linkExpiresOn": m43,
@@ -1253,6 +1255,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "–£ –≤–∞—Å –Ω–µ –º–∞—î—Ç–µ —Ñ–∞–π–ª—ñ–≤ –Ω–∞ —Ü—å–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó, —è–∫—ñ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® –ù–µ–º–∞—î –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö EXIF"),
         "noFacesFound":
             MessageLookupByLibrary.simpleMessage("–û–±–ª–∏—á—á—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"),
diff --git a/mobile/lib/generated/intl/messages_vi.dart b/mobile/lib/generated/intl/messages_vi.dart
index 1947198a2e0..6d775043abc 100644
--- a/mobile/lib/generated/intl/messages_vi.dart
+++ b/mobile/lib/generated/intl/messages_vi.dart
@@ -1083,10 +1083,12 @@ class MessageLookup extends MessageLookupByLibrary {
             "C√°c li√™n h·ªá tin c·∫≠y c√≥ th·ªÉ kh·ªüi ƒë·ªông qu√° tr√¨nh kh√¥i ph·ª•c t√†i kho·∫£n, v√† n·∫øu kh√¥ng b·ªã ch·∫∑n trong v√≤ng 30 ng√†y, c√≥ th·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u v√† truy c·∫≠p t√†i kho·∫£n c·ªßa b·∫°n."),
         "light": MessageLookupByLibrary.simpleMessage("√Ånh s√°ng"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("S√°ng"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard": MessageLookupByLibrary.simpleMessage(
             "Li√™n k·∫øt ƒë√£ ƒë∆∞·ª£c sao ch√©p v√†o clipboard"),
         "linkDeviceLimit":
             MessageLookupByLibrary.simpleMessage("Gi·ªõi h·∫°n thi·∫øt b·ªã"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("ƒê√£ b·∫≠t"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("H·∫øt h·∫°n"),
         "linkExpiresOn": m43,
@@ -1242,6 +1244,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "B·∫°n kh√¥ng c√≥ t·ªáp n√†o tr√™n thi·∫øt b·ªã n√†y c√≥ th·ªÉ b·ªã x√≥a"),
         "noDuplicates":
             MessageLookupByLibrary.simpleMessage("‚ú® Kh√¥ng c√≥ tr√πng l·∫∑p"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData":
             MessageLookupByLibrary.simpleMessage("Kh√¥ng c√≥ d·ªØ li·ªáu EXIF"),
         "noFacesFound":
diff --git a/mobile/lib/generated/intl/messages_zh.dart b/mobile/lib/generated/intl/messages_zh.dart
index 65e13e46339..6f448786d89 100644
--- a/mobile/lib/generated/intl/messages_zh.dart
+++ b/mobile/lib/generated/intl/messages_zh.dart
@@ -890,9 +890,11 @@ class MessageLookup extends MessageLookupByLibrary {
             "ÂèØ‰ø°ËÅîÁ≥ª‰∫∫ÂèØ‰ª•ÂêØÂä®Ë¥¶Êà∑ÊÅ¢Â§çÔºåÂ¶ÇÊûú 30 Â§©ÂÜÖÊ≤°ÊúâË¢´ÈòªÊ≠¢ÔºåÂàôÂèØ‰ª•ÈáçÁΩÆÂØÜÁ†ÅÂπ∂ËÆøÈóÆÊÇ®ÁöÑË¥¶Êà∑„ÄÇ"),
         "light": MessageLookupByLibrary.simpleMessage("‰∫ÆÂ∫¶"),
         "lightTheme": MessageLookupByLibrary.simpleMessage("ÊµÖËâ≤"),
+        "link": MessageLookupByLibrary.simpleMessage("Link"),
         "linkCopiedToClipboard":
             MessageLookupByLibrary.simpleMessage("ÈìæÊé•Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø"),
         "linkDeviceLimit": MessageLookupByLibrary.simpleMessage("ËÆæÂ§áÈôêÂà∂"),
+        "linkEmail": MessageLookupByLibrary.simpleMessage("Link email"),
         "linkEnabled": MessageLookupByLibrary.simpleMessage("Â∑≤ÂêØÁî®"),
         "linkExpired": MessageLookupByLibrary.simpleMessage("Â∑≤ËøáÊúü"),
         "linkExpiresOn": m43,
@@ -1022,6 +1024,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "noDeviceThatCanBeDeleted":
             MessageLookupByLibrary.simpleMessage("ÊÇ®Âú®Ê≠§ËÆæÂ§á‰∏äÊ≤°ÊúâÂèØË¢´Âà†Èô§ÁöÑÊñá‰ª∂"),
         "noDuplicates": MessageLookupByLibrary.simpleMessage("‚ú® Ê≤°ÊúâÈáçÂ§çÂÜÖÂÆπ"),
+        "noEnteAccountExclamation":
+            MessageLookupByLibrary.simpleMessage("No Ente account!"),
         "noExifData": MessageLookupByLibrary.simpleMessage("Êó† EXIF Êï∞ÊçÆ"),
         "noFacesFound": MessageLookupByLibrary.simpleMessage("Êú™ÊâæÂà∞‰ªª‰ΩïÈù¢ÈÉ®"),
         "noHiddenPhotosOrVideos":
diff --git a/mobile/lib/generated/l10n.dart b/mobile/lib/generated/l10n.dart
index 85cfa79c986..c0c18d40ab4 100644
--- a/mobile/lib/generated/l10n.dart
+++ b/mobile/lib/generated/l10n.dart
@@ -10928,6 +10928,36 @@ class S {
       args: [],
     );
   }
+
+  /// `Link email`
+  String get linkEmail {
+    return Intl.message(
+      'Link email',
+      name: 'linkEmail',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Link`
+  String get link {
+    return Intl.message(
+      'Link',
+      name: 'link',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `No Ente account!`
+  String get noEnteAccountExclamation {
+    return Intl.message(
+      'No Ente account!',
+      name: 'noEnteAccountExclamation',
+      desc: '',
+      args: [],
+    );
+  }
 }
 
 class AppLocalizationDelegate extends LocalizationsDelegate<S> {
diff --git a/mobile/lib/l10n/intl_ar.arb b/mobile/lib/l10n/intl_ar.arb
index 86273581a63..d2a830de43f 100644
--- a/mobile/lib/l10n/intl_ar.arb
+++ b/mobile/lib/l10n/intl_ar.arb
@@ -23,5 +23,8 @@
   "noRecoveryKeyNoDecryption": "ŸÑÿß ŸäŸÖŸÉŸÜ ŸÅŸÉ ÿ™ÿ¥ŸÅŸäÿ± ÿ®ŸäÿßŸÜÿßÿ™ŸÉ ÿØŸàŸÜ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ÿ£Ÿà ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑÿßÿ≥ÿ™ÿ±ÿØÿßÿØ ÿ®ÿ≥ÿ®ÿ® ÿ∑ÿ®Ÿäÿπÿ© ÿ®ÿ±Ÿàÿ™ŸàŸÉŸàŸÑ ÿßŸÑÿ™ÿ¥ŸÅŸäÿ± ÿßŸÑÿÆÿßÿµ ÿ®ŸÜÿß ŸÖŸÜ ÿßŸÑŸÜŸáÿßŸäÿ© ÿ•ŸÑŸâ ÿßŸÑŸÜŸáÿßŸäÿ©",
   "verifyEmail": "ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä",
   "toResetVerifyEmail": "ŸÑÿ•ÿπÿßÿØÿ© ÿ™ÿπŸäŸäŸÜ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±ÿå Ÿäÿ±ÿ¨Ÿâ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ®ÿ±ŸäÿØŸÉ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ£ŸàŸÑÿßŸã.",
-  "ackPasswordLostWarning": "ÿ£ŸèÿØÿ±ŸÉŸè ÿ£ŸÜŸëŸÜŸä ŸÅŸÇÿØÿ™Ÿè ŸÉŸÑŸÖÿ© ŸÖÿ±Ÿàÿ±Ÿäÿå ŸÅŸÇÿØ ÿ£ŸÅŸÇÿØ ÿ®ŸäÿßŸÜÿßÿ™Ÿä ŸÑÿ£ŸÜ ÿ®ŸäÿßŸÜÿßÿ™Ÿä <underline>ŸÖÿ¥ŸÅÿ±ÿ© ÿ™ÿ¥ŸÅŸäÿ±Ÿãÿß ÿ™ÿßŸÖŸëŸãÿß ŸÖŸÜ ÿßŸÑŸÜŸáÿßŸäÿ© ÿ•ŸÑŸâ ÿßŸÑŸÜŸáÿßŸäÿ©</underline>."
+  "ackPasswordLostWarning": "ÿ£ŸèÿØÿ±ŸÉŸè ÿ£ŸÜŸëŸÜŸä ŸÅŸÇÿØÿ™Ÿè ŸÉŸÑŸÖÿ© ŸÖÿ±Ÿàÿ±Ÿäÿå ŸÅŸÇÿØ ÿ£ŸÅŸÇÿØ ÿ®ŸäÿßŸÜÿßÿ™Ÿä ŸÑÿ£ŸÜ ÿ®ŸäÿßŸÜÿßÿ™Ÿä <underline>ŸÖÿ¥ŸÅÿ±ÿ© ÿ™ÿ¥ŸÅŸäÿ±Ÿãÿß ÿ™ÿßŸÖŸëŸãÿß ŸÖŸÜ ÿßŸÑŸÜŸáÿßŸäÿ© ÿ•ŸÑŸâ ÿßŸÑŸÜŸáÿßŸäÿ©</underline>.",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_be.arb b/mobile/lib/l10n/intl_be.arb
index d6b7f03339d..70c21b58651 100644
--- a/mobile/lib/l10n/intl_be.arb
+++ b/mobile/lib/l10n/intl_be.arb
@@ -199,5 +199,8 @@
   "darkTheme": "–¶—ë–º–Ω–∞—è",
   "systemTheme": "–°—ñ—Å—Ç—ç–º–∞",
   "freeTrial": "–ë—è—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–±–Ω–∞—è –≤–µ—Ä—Å—ñ—è",
-  "faqs": "–ß–∞—Å—Ç—ã—è –ø—ã—Ç–∞–Ω–Ω—ñ"
+  "faqs": "–ß–∞—Å—Ç—ã—è –ø—ã—Ç–∞–Ω–Ω—ñ",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_bg.arb b/mobile/lib/l10n/intl_bg.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_bg.arb
+++ b/mobile/lib/l10n/intl_bg.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ca.arb b/mobile/lib/l10n/intl_ca.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_ca.arb
+++ b/mobile/lib/l10n/intl_ca.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_cs.arb b/mobile/lib/l10n/intl_cs.arb
index 2bd9d2da70e..1f8d8415c21 100644
--- a/mobile/lib/l10n/intl_cs.arb
+++ b/mobile/lib/l10n/intl_cs.arb
@@ -2,5 +2,8 @@
   "@@locale ": "en",
   "askDeleteReason": "Jak√Ω je v√°≈° hlavn√≠ d≈Øvod, proƒç ma≈æete sv≈Øj √∫ƒçet?",
   "incorrectRecoveryKeyBody": "",
-  "checkInboxAndSpamFolder": "Zkontrolujte pros√≠m svou doruƒçenou po≈°tu (a spam) pro dokonƒçen√≠ ovƒõ≈ôen√≠"
+  "checkInboxAndSpamFolder": "Zkontrolujte pros√≠m svou doruƒçenou po≈°tu (a spam) pro dokonƒçen√≠ ovƒõ≈ôen√≠",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_da.arb b/mobile/lib/l10n/intl_da.arb
index e4b2cc656bd..53626db8eaf 100644
--- a/mobile/lib/l10n/intl_da.arb
+++ b/mobile/lib/l10n/intl_da.arb
@@ -84,5 +84,8 @@
   "longPressAnEmailToVerifyEndToEndEncryption": "Langt tryk p√• en e-mail for at bekr√¶fte slutningen af krypteringen.",
   "developerSettingsWarning": "Er du sikker p√•, at du vil √¶ndre udviklerindstillingerne?",
   "next": "N√¶ste",
-  "enterPin": "Indtast PIN"
+  "enterPin": "Indtast PIN",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_de.arb b/mobile/lib/l10n/intl_de.arb
index f4635d68392..aca21b6dbae 100644
--- a/mobile/lib/l10n/intl_de.arb
+++ b/mobile/lib/l10n/intl_de.arb
@@ -1589,5 +1589,8 @@
   "joinAlbum": "Album beitreten",
   "joinAlbumSubtext": "um deine Fotos anzuzeigen und hinzuzuf√ºgen",
   "joinAlbumSubtextViewer": "um dies zu geteilten Alben hinzuzuf√ºgen",
-  "join": "Beitreten"
+  "join": "Beitreten",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_el.arb b/mobile/lib/l10n/intl_el.arb
index ce8b1a1a547..7edd0c7cb94 100644
--- a/mobile/lib/l10n/intl_el.arb
+++ b/mobile/lib/l10n/intl_el.arb
@@ -1,4 +1,7 @@
 {
   "@@locale ": "en",
-  "enterYourEmailAddress": "ŒïŒπœÉŒ¨Œ≥ŒµœÑŒµ œÑŒ∑ŒΩ Œ¥ŒπŒµœçŒ∏œÖŒΩœÉŒ∑ Œ∑Œª. œÑŒ±œáœÖŒ¥œÅŒøŒºŒµŒØŒøœÖ œÉŒ±œÇ"
+  "enterYourEmailAddress": "ŒïŒπœÉŒ¨Œ≥ŒµœÑŒµ œÑŒ∑ŒΩ Œ¥ŒπŒµœçŒ∏œÖŒΩœÉŒ∑ Œ∑Œª. œÑŒ±œáœÖŒ¥œÅŒøŒºŒµŒØŒøœÖ œÉŒ±œÇ",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_en.arb b/mobile/lib/l10n/intl_en.arb
index 345ab541692..81f80a2c8f9 100644
--- a/mobile/lib/l10n/intl_en.arb
+++ b/mobile/lib/l10n/intl_en.arb
@@ -1589,6 +1589,8 @@
   "joinAlbum": "Join album",
   "joinAlbumSubtext": "to view and add your photos",
   "joinAlbumSubtextViewer": "to add this to shared albums",
-  "join": "Join"
-  
+  "join": "Join",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_es.arb b/mobile/lib/l10n/intl_es.arb
index f1351f169bf..8aa7cd3e807 100644
--- a/mobile/lib/l10n/intl_es.arb
+++ b/mobile/lib/l10n/intl_es.arb
@@ -1587,5 +1587,8 @@
   "joinAlbum": "Unir √°lbum",
   "joinAlbumSubtext": "para ver y a√±adir tus fotos",
   "joinAlbumSubtextViewer": "para a√±adir esto a los √°lbumes compartidos",
-  "join": "Unir"
+  "join": "Unir",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_et.arb b/mobile/lib/l10n/intl_et.arb
index dfe1fba1a47..35b50b3f902 100644
--- a/mobile/lib/l10n/intl_et.arb
+++ b/mobile/lib/l10n/intl_et.arb
@@ -218,5 +218,8 @@
   "storageBreakupYou": "Sina",
   "@storageBreakupYou": {
     "description": "Label to indicate how much storage you are using when you are part of a family plan"
-  }
+  },
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_fa.arb b/mobile/lib/l10n/intl_fa.arb
index ba9d203a8f0..44f57f11f73 100644
--- a/mobile/lib/l10n/intl_fa.arb
+++ b/mobile/lib/l10n/intl_fa.arb
@@ -308,5 +308,8 @@
   "developerSettings": "ÿ™ŸÜÿ∏€åŸÖÿßÿ™ ÿ™Ÿàÿ≥ÿπŸá‚ÄåÿØŸáŸÜÿØŸá",
   "search": "ÿ¨ÿ≥ÿ™ÿ¨Ÿà",
   "whatsNew": "ÿ™ÿ∫€å€åÿ±ÿßÿ™ ÿ¨ÿØ€åÿØ",
-  "reviewSuggestions": "ŸÖÿ±Ÿàÿ± Ÿæ€åÿ¥ŸÜŸáÿßÿØŸáÿß"
+  "reviewSuggestions": "ŸÖÿ±Ÿàÿ± Ÿæ€åÿ¥ŸÜŸáÿßÿØŸáÿß",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_fr.arb b/mobile/lib/l10n/intl_fr.arb
index 4ba889cb4af..36ed19f97f9 100644
--- a/mobile/lib/l10n/intl_fr.arb
+++ b/mobile/lib/l10n/intl_fr.arb
@@ -1584,5 +1584,8 @@
   "joinAlbum": "Rejoindre l'album",
   "joinAlbumSubtext": "pour afficher et ajouter vos photos",
   "joinAlbumSubtextViewer": "pour ajouter ceci aux albums partag√©s",
-  "join": "Rejoindre"
+  "join": "Rejoindre",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_gu.arb b/mobile/lib/l10n/intl_gu.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_gu.arb
+++ b/mobile/lib/l10n/intl_gu.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_he.arb b/mobile/lib/l10n/intl_he.arb
index f0aad995f80..9aaee2ac35c 100644
--- a/mobile/lib/l10n/intl_he.arb
+++ b/mobile/lib/l10n/intl_he.arb
@@ -815,5 +815,8 @@
   "addPhotos": "◊î◊ï◊°◊£ ◊™◊û◊ï◊†◊ï◊™",
   "create": "◊¶◊ï◊®",
   "viewAll": "◊î◊¶◊í ◊î◊õ◊ú",
-  "hiding": "◊û◊ó◊ë◊ô◊ê..."
+  "hiding": "◊û◊ó◊ë◊ô◊ê...",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_hi.arb b/mobile/lib/l10n/intl_hi.arb
index b79d9682f2f..195aeb2b6ca 100644
--- a/mobile/lib/l10n/intl_hi.arb
+++ b/mobile/lib/l10n/intl_hi.arb
@@ -48,5 +48,8 @@
   "sorry": "‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç!",
   "noRecoveryKeyNoDecryption": "‡§π‡§Æ‡§æ‡§∞‡•á ‡§è‡§Ç‡§°-‡§ü‡•Ç-‡§è‡§Ç‡§° ‡§è‡§®‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§∂‡§® ‡§™‡•ç‡§∞‡•ã‡§ü‡•ã‡§ï‡•â‡§≤ ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ï‡•É‡§§‡§ø ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£, ‡§Ü‡§™‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§Ø‡§æ ‡§∞‡§ø‡§ï‡§µ‡§∞‡•Ä ‡§ï‡•Å‡§Ç‡§ú‡•Ä ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§°‡§ø‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à",
   "verifyEmail": "‡§à‡§Æ‡•á‡§≤ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
-  "toResetVerifyEmail": "‡§Ö‡§™‡§®‡§æ ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§Ö‡§™‡§®‡§æ ‡§à‡§Æ‡•á‡§≤ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§"
+  "toResetVerifyEmail": "‡§Ö‡§™‡§®‡§æ ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§Ö‡§™‡§®‡§æ ‡§à‡§Æ‡•á‡§≤ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_hu.arb b/mobile/lib/l10n/intl_hu.arb
index 92bdab90952..b2c7818366e 100644
--- a/mobile/lib/l10n/intl_hu.arb
+++ b/mobile/lib/l10n/intl_hu.arb
@@ -10,5 +10,8 @@
   "deleteAccount": "Fi√≥k t√∂rl√©se",
   "askDeleteReason": "Mi√©rt t√∂rli a fi√≥kj√°t?",
   "deleteAccountFeedbackPrompt": "Sajn√°ljuk, hogy t√°vozik. K√©rj√ºk, ossza meg vel√ºnk visszajelz√©seit, hogy seg√≠tsen nek√ºnk a fejl≈ëd√©sben.",
-  "feedback": "Visszajelz√©s"
+  "feedback": "Visszajelz√©s",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_id.arb b/mobile/lib/l10n/intl_id.arb
index 21ff8eed39c..0fce6e80eba 100644
--- a/mobile/lib/l10n/intl_id.arb
+++ b/mobile/lib/l10n/intl_id.arb
@@ -1131,5 +1131,8 @@
   "rotate": "Putar",
   "left": "Kiri",
   "right": "Kanan",
-  "whatsNew": "Hal yang baru"
+  "whatsNew": "Hal yang baru",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_it.arb b/mobile/lib/l10n/intl_it.arb
index 48f76062680..89fe0fb7445 100644
--- a/mobile/lib/l10n/intl_it.arb
+++ b/mobile/lib/l10n/intl_it.arb
@@ -1543,5 +1543,8 @@
   "authToManageLegacy": "Autenticati per gestire i tuoi contatti fidati",
   "useDifferentPlayerInfo": "Hai problemi a riprodurre questo video? Premi a lungo qui per provare un altro lettore.",
   "hideSharedItemsFromHomeGallery": "Nascondi gli elementi condivisi dalla galleria principale",
-  "gallery": "Galleria"
+  "gallery": "Galleria",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ja.arb b/mobile/lib/l10n/intl_ja.arb
index a6bccc9a863..a7b0fbfd466 100644
--- a/mobile/lib/l10n/intl_ja.arb
+++ b/mobile/lib/l10n/intl_ja.arb
@@ -1361,5 +1361,8 @@
   },
   "extraPhotosFound": "ËøΩÂä†„ÅÆÂÜôÁúü„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü",
   "configuration": "Ë®≠ÂÆö",
-  "localIndexing": "„Åì„ÅÆ„Éá„Éê„Ç§„Çπ‰∏ä„Åß„ÅÆÂÆüË°å"
+  "localIndexing": "„Åì„ÅÆ„Éá„Éê„Ç§„Çπ‰∏ä„Åß„ÅÆÂÆüË°å",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_km.arb b/mobile/lib/l10n/intl_km.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_km.arb
+++ b/mobile/lib/l10n/intl_km.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ko.arb b/mobile/lib/l10n/intl_ko.arb
index 06c81195f70..b71a0e4b8c2 100644
--- a/mobile/lib/l10n/intl_ko.arb
+++ b/mobile/lib/l10n/intl_ko.arb
@@ -12,5 +12,8 @@
   "feedback": "ÌîºÎìúÎ∞±",
   "confirmAccountDeletion": "Í≥ÑÏ†ï ÏÇ≠Ï†ú ÌôïÏù∏",
   "deleteAccountPermanentlyButton": "Í≥ÑÏ†ïÏùÑ ÏòÅÍµ¨Ï†ÅÏúºÎ°ú ÏÇ≠Ï†ú",
-  "yourAccountHasBeenDeleted": "Í≥ÑÏ†ïÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§."
+  "yourAccountHasBeenDeleted": "Í≥ÑÏ†ïÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_lt.arb b/mobile/lib/l10n/intl_lt.arb
index b3ced840f88..ab72c3bf784 100644
--- a/mobile/lib/l10n/intl_lt.arb
+++ b/mobile/lib/l10n/intl_lt.arb
@@ -1262,5 +1262,8 @@
   "joinAlbum": "Junkitƒós prie albumo",
   "joinAlbumSubtext": "kad per≈æi≈´rƒótumƒóte ir pridƒótumƒóte savo nuotraukas",
   "joinAlbumSubtextViewer": "kad pridƒótumƒóte tai prie bendrinam≈≥ album≈≥",
-  "join": "Jungtis"
+  "join": "Jungtis",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ml.arb b/mobile/lib/l10n/intl_ml.arb
index 7cfd3a2887f..73bd76bc47d 100644
--- a/mobile/lib/l10n/intl_ml.arb
+++ b/mobile/lib/l10n/intl_ml.arb
@@ -99,5 +99,8 @@
   "nothingToSeeHere": "‡¥á‡¥µ‡¥ø‡¥ü‡µä‡¥®‡µç‡¥®‡µÅ‡¥Ç ‡¥ï‡¥æ‡¥£‡µç‡¥Æ‡¥æ‡¥®‡¥ø‡¥≤‡µç‡¥≤! üëÄ",
   "calculating": "‡¥ï‡¥£‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡µÇ‡¥ü‡µç‡¥ü‡µÅ‡¥®‡µç‡¥®‡µÅ...",
   "close": "‡¥Ö‡¥ü‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
-  "count": "‡¥é‡¥£‡µç‡¥£‡¥Ç"
+  "count": "‡¥é‡¥£‡µç‡¥£‡¥Ç",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_nl.arb b/mobile/lib/l10n/intl_nl.arb
index 36da3abf1b3..8a4048ff751 100644
--- a/mobile/lib/l10n/intl_nl.arb
+++ b/mobile/lib/l10n/intl_nl.arb
@@ -1589,5 +1589,8 @@
   "joinAlbum": "Deelnemen aan album",
   "joinAlbumSubtext": "om je foto's te bekijken en toe te voegen",
   "joinAlbumSubtextViewer": "om dit aan gedeelde albums toe te voegen",
-  "join": "Deelnemen"
+  "join": "Deelnemen",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_no.arb b/mobile/lib/l10n/intl_no.arb
index 5fd97c23693..f40b1a121ff 100644
--- a/mobile/lib/l10n/intl_no.arb
+++ b/mobile/lib/l10n/intl_no.arb
@@ -370,5 +370,8 @@
   "advanced": "Avansert",
   "general": "Generelt",
   "security": "Sikkerhet",
-  "authToViewYourRecoveryKey": "Vennligst autentiser deg for √• se gjennopprettingsn√∏kkelen din"
+  "authToViewYourRecoveryKey": "Vennligst autentiser deg for √• se gjennopprettingsn√∏kkelen din",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_pl.arb b/mobile/lib/l10n/intl_pl.arb
index 599a71cc9e6..1847c104ce7 100644
--- a/mobile/lib/l10n/intl_pl.arb
+++ b/mobile/lib/l10n/intl_pl.arb
@@ -1577,5 +1577,8 @@
   },
   "legacyInvite": "{email} zaprosi≈Ç Ciƒô do zostania zaufanym kontaktem",
   "authToManageLegacy": "Prosimy uwierzytelniƒá siƒô, aby zarzƒÖdzaƒá zaufanymi kontaktami",
-  "useDifferentPlayerInfo": "Masz problem z odtwarzaniem tego wideo? Przytrzymaj tutaj, aby spr√≥bowaƒá innego odtwarzacza."
+  "useDifferentPlayerInfo": "Masz problem z odtwarzaniem tego wideo? Przytrzymaj tutaj, aby spr√≥bowaƒá innego odtwarzacza.",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_pt.arb b/mobile/lib/l10n/intl_pt.arb
index d85328f34ad..55b224fb0d0 100644
--- a/mobile/lib/l10n/intl_pt.arb
+++ b/mobile/lib/l10n/intl_pt.arb
@@ -1589,5 +1589,8 @@
   "joinAlbum": "Unir-se ao √°lbum",
   "joinAlbumSubtext": "para visualizar e adicionar suas fotos",
   "joinAlbumSubtextViewer": "para adicionar isso aos √°lbuns compartilhados",
-  "join": "Unir-se"
+  "join": "Unir-se",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ro.arb b/mobile/lib/l10n/intl_ro.arb
index aea8bb673ea..1156bfbdc84 100644
--- a/mobile/lib/l10n/intl_ro.arb
+++ b/mobile/lib/l10n/intl_ro.arb
@@ -1589,5 +1589,8 @@
   "joinAlbum": "AlƒÉtura»õi-vƒÉ albumului",
   "joinAlbumSubtext": "pentru a vedea »ôi a adƒÉuga fotografii",
   "joinAlbumSubtextViewer": "pentru a adƒÉuga la albumele distribuite",
-  "join": "AlƒÉturare"
+  "join": "AlƒÉturare",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ru.arb b/mobile/lib/l10n/intl_ru.arb
index bd1b59594c5..131ff5e7a88 100644
--- a/mobile/lib/l10n/intl_ru.arb
+++ b/mobile/lib/l10n/intl_ru.arb
@@ -1462,5 +1462,8 @@
   "removeInvite": "–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ",
   "recoveryWarning": "–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏",
   "rejectRecovery": "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
-  "recoveryInitiated": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
+  "recoveryInitiated": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_sl.arb b/mobile/lib/l10n/intl_sl.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_sl.arb
+++ b/mobile/lib/l10n/intl_sl.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_sv.arb b/mobile/lib/l10n/intl_sv.arb
index b57b862e222..80c3e35ab06 100644
--- a/mobile/lib/l10n/intl_sv.arb
+++ b/mobile/lib/l10n/intl_sv.arb
@@ -445,5 +445,8 @@
   "sort": "Sortera",
   "newPerson": "Ny person",
   "addName": "L√§gg till namn",
-  "add": "L√§gg till"
+  "add": "L√§gg till",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ta.arb b/mobile/lib/l10n/intl_ta.arb
index d3d26e203c8..489054ac224 100644
--- a/mobile/lib/l10n/intl_ta.arb
+++ b/mobile/lib/l10n/intl_ta.arb
@@ -15,5 +15,8 @@
   "confirmDeletePrompt": "‡ÆÜ‡ÆÆ‡Øç, ‡Æé‡Æ≤‡Øç‡Æ≤‡Ææ ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Æø‡Æï‡Æ≥‡Æø‡Æ≤‡ØÅ‡ÆÆ‡Øç ‡Æá‡Æ®‡Øç‡Æ§‡Æï‡Øç ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Øà‡ÆØ‡ØÅ‡ÆÆ‡Øç ‡ÆÖ‡Æ§‡Æ©‡Øç ‡Æ§‡Æ∞‡Æµ‡Øà‡ÆØ‡ØÅ‡ÆÆ‡Øç ‡Æ®‡Æø‡Æ∞‡Æ®‡Øç‡Æ§‡Æ∞‡ÆÆ‡Ææ‡Æï ‡Æ®‡ØÄ‡Æï‡Øç‡Æï ‡Æµ‡Æø‡Æ∞‡ØÅ‡ÆÆ‡Øç‡Æ™‡ØÅ‡Æï‡Æø‡Æ±‡Øá‡Æ©‡Øç.",
   "confirmAccountDeletion": "‡Æï‡Æ£‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡ØÄ‡Æï‡Øç‡Æï‡ØÅ‡Æ§‡Æ≤‡Øà ‡Æâ‡Æ±‡ØÅ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç",
   "deleteAccountPermanentlyButton": "‡Æï‡Æ£‡Æï‡Øç‡Æï‡Øà ‡Æ®‡Æø‡Æ∞‡Æ®‡Øç‡Æ§‡Æ∞‡ÆÆ‡Ææ‡Æï ‡Æ®‡ØÄ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
-  "deleteReason1": "‡Æé‡Æ©‡Æï‡Øç‡Æï‡ØÅ ‡Æ§‡Øá‡Æµ‡Øà‡ÆØ‡Ææ‡Æ© ‡Æí‡Æ∞‡ØÅ ‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡ÆÖ‡ÆÆ‡Øç‡Æö‡ÆÆ‡Øç ‡Æá‡Æ§‡Æø‡Æ≤‡Øç ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà"
+  "deleteReason1": "‡Æé‡Æ©‡Æï‡Øç‡Æï‡ØÅ ‡Æ§‡Øá‡Æµ‡Øà‡ÆØ‡Ææ‡Æ© ‡Æí‡Æ∞‡ØÅ ‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡ÆÖ‡ÆÆ‡Øç‡Æö‡ÆÆ‡Øç ‡Æá‡Æ§‡Æø‡Æ≤‡Øç ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_te.arb b/mobile/lib/l10n/intl_te.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_te.arb
+++ b/mobile/lib/l10n/intl_te.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_th.arb b/mobile/lib/l10n/intl_th.arb
index 375d1cc22db..49f26182a5e 100644
--- a/mobile/lib/l10n/intl_th.arb
+++ b/mobile/lib/l10n/intl_th.arb
@@ -295,5 +295,8 @@
     "description": "Label for the map view"
   },
   "maps": "‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà",
-  "enableMaps": "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà"
+  "enableMaps": "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_ti.arb b/mobile/lib/l10n/intl_ti.arb
index c8494661c61..65f14887453 100644
--- a/mobile/lib/l10n/intl_ti.arb
+++ b/mobile/lib/l10n/intl_ti.arb
@@ -1,3 +1,6 @@
 {
-  "@@locale ": "en"
+  "@@locale ": "en",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_tr.arb b/mobile/lib/l10n/intl_tr.arb
index 6541f31f8dc..ed30409025f 100644
--- a/mobile/lib/l10n/intl_tr.arb
+++ b/mobile/lib/l10n/intl_tr.arb
@@ -1157,5 +1157,8 @@
   "invalidEndpoint": "Ge√ßersiz u√ß nokta",
   "invalidEndpointMessage": "√úzg√ºn√ºz, girdiƒüiniz u√ß nokta ge√ßersiz. L√ºtfen ge√ßerli bir u√ß nokta girin ve tekrar deneyin.",
   "endpointUpdatedMessage": "Fatura ba≈üarƒ±yla g√ºncellendi",
-  "customEndpoint": "{endpoint}'e baƒülanƒ±ldƒ±"
+  "customEndpoint": "{endpoint}'e baƒülanƒ±ldƒ±",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_uk.arb b/mobile/lib/l10n/intl_uk.arb
index f98966a567c..7c6f4d39106 100644
--- a/mobile/lib/l10n/intl_uk.arb
+++ b/mobile/lib/l10n/intl_uk.arb
@@ -1577,5 +1577,8 @@
   },
   "legacyInvite": "{email} –∑–∞–ø—Ä–æ—Å–∏–≤ –≤–∞—Å —Å—Ç–∞—Ç–∏ –¥–æ–≤—ñ—Ä–µ–Ω–æ—é –æ—Å–æ–±–æ—é",
   "authToManageLegacy": "–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, —â–æ–±–∏ –∫–µ—Ä—É–≤–∞—Ç–∏ –¥–æ–≤—ñ—Ä–µ–Ω–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
-  "useDifferentPlayerInfo": "–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è–º —Ü—å–æ–≥–æ –≤—ñ–¥–µ–æ? –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —ñ —É—Ç—Ä–∏–º—É–π—Ç–µ —Ç—É—Ç, —â–æ–± —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —ñ–Ω—à–∏–π –ø–ª–µ—î—Ä."
+  "useDifferentPlayerInfo": "–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è–º —Ü—å–æ–≥–æ –≤—ñ–¥–µ–æ? –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —ñ —É—Ç—Ä–∏–º—É–π—Ç–µ —Ç—É—Ç, —â–æ–± —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —ñ–Ω—à–∏–π –ø–ª–µ—î—Ä.",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_vi.arb b/mobile/lib/l10n/intl_vi.arb
index 8253d2a15f8..d224f4bbca3 100644
--- a/mobile/lib/l10n/intl_vi.arb
+++ b/mobile/lib/l10n/intl_vi.arb
@@ -1586,5 +1586,8 @@
   "joinAlbum": "Tham gia album",
   "joinAlbumSubtext": "ƒë·ªÉ xem v√† th√™m ·∫£nh c·ªßa b·∫°n",
   "joinAlbumSubtextViewer": "th√™m v√†o album ƒë∆∞·ª£c chia s·∫ª",
-  "join": "Tham gia"
+  "join": "Tham gia",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/l10n/intl_zh.arb b/mobile/lib/l10n/intl_zh.arb
index 781a6a0ec6d..dd63787a35c 100644
--- a/mobile/lib/l10n/intl_zh.arb
+++ b/mobile/lib/l10n/intl_zh.arb
@@ -1562,5 +1562,8 @@
   },
   "legacyInvite": "{email} Â∑≤ÈÇÄËØ∑ÊÇ®Êàê‰∏∫ÂèØ‰ø°ËÅîÁ≥ª‰∫∫",
   "authToManageLegacy": "ËØ∑È™åËØÅË∫´‰ªΩ‰ª•ÁÆ°ÁêÜÊÇ®ÁöÑÂèØ‰ø°ËÅîÁ≥ª‰∫∫",
-  "useDifferentPlayerInfo": "Êí≠ÊîæÊ≠§ËßÜÈ¢ëÊó∂ÈÅáÂà∞ÈóÆÈ¢ò‰∫ÜÂêóÔºüÈïøÊåâÊ≠§Â§ÑÂèØÂ∞ùËØï‰ΩøÁî®ÂÖ∂‰ªñÊí≠ÊîæÂô®„ÄÇ"
+  "useDifferentPlayerInfo": "Êí≠ÊîæÊ≠§ËßÜÈ¢ëÊó∂ÈÅáÂà∞ÈóÆÈ¢ò‰∫ÜÂêóÔºüÈïøÊåâÊ≠§Â§ÑÂèØÂ∞ùËØï‰ΩøÁî®ÂÖ∂‰ªñÊí≠ÊîæÂô®„ÄÇ",
+  "linkEmail": "Link email",
+  "link": "Link",
+  "noEnteAccountExclamation": "No Ente account!"
 }
\ No newline at end of file
diff --git a/mobile/lib/models/api/collection/user.dart b/mobile/lib/models/api/collection/user.dart
index cce90d81473..179756d8c11 100644
--- a/mobile/lib/models/api/collection/user.dart
+++ b/mobile/lib/models/api/collection/user.dart
@@ -3,6 +3,10 @@ import "dart:convert";
 class User {
   int? id;
   String email;
+  @Deprecated(
+    "Use displayName() extension method instead. Note: Some early users have"
+    " value in name field.",
+  )
   String? name;
   String? role;
 
diff --git a/mobile/lib/models/search/hierarchical/contacts_filter.dart b/mobile/lib/models/search/hierarchical/contacts_filter.dart
index 100061cc22e..5e7d72e4719 100644
--- a/mobile/lib/models/search/hierarchical/contacts_filter.dart
+++ b/mobile/lib/models/search/hierarchical/contacts_filter.dart
@@ -1,4 +1,5 @@
 import "package:flutter/material.dart";
+import "package:photos/extensions/user_extension.dart";
 import "package:photos/models/api/collection/user.dart";
 import "package:photos/models/file/file.dart";
 import "package:photos/models/search/hierarchical/hierarchical_search_filter.dart";
@@ -16,10 +17,11 @@ class ContactsFilter extends HierarchicalSearchFilter {
 
   @override
   String name() {
-    if (user.name == null || user.name!.isEmpty) {
-      return user.email.split("@")[0];
+    final name = user.displayName;
+    if (name == null || name.isEmpty) {
+      return user.email;
     }
-    return user.name!;
+    return name;
   }
 
   @override
diff --git a/mobile/lib/models/search/search_types.dart b/mobile/lib/models/search/search_types.dart
index 90d1a320f54..a56ecbf791f 100644
--- a/mobile/lib/models/search/search_types.dart
+++ b/mobile/lib/models/search/search_types.dart
@@ -21,7 +21,6 @@ import "package:photos/ui/viewer/location/add_location_sheet.dart";
 import "package:photos/ui/viewer/location/pick_center_point_widget.dart";
 import "package:photos/utils/dialog_util.dart";
 import "package:photos/utils/navigation_util.dart";
-import "package:photos/utils/share_util.dart";
 
 enum ResultType {
   collection,
@@ -46,8 +45,6 @@ enum SectionType {
   // includes year, month , day, event ResultType
   moment,
   album,
-  // People section shows the files shared by other persons
-  contacts,
   fileTypesAndExtension,
 }
 
@@ -63,8 +60,6 @@ extension SectionTypeExtensions on SectionType {
         return S.of(context).moments;
       case SectionType.location:
         return S.of(context).locations;
-      case SectionType.contacts:
-        return S.of(context).contacts;
       case SectionType.album:
         return S.of(context).albums;
       case SectionType.fileTypesAndExtension:
@@ -82,8 +77,6 @@ extension SectionTypeExtensions on SectionType {
         return S.of(context).searchDatesEmptySection;
       case SectionType.location:
         return S.of(context).searchLocationEmptySection;
-      case SectionType.contacts:
-        return S.of(context).searchPeopleEmptySection;
       case SectionType.album:
         return S.of(context).searchAlbumsEmptySection;
       case SectionType.fileTypesAndExtension:
@@ -103,8 +96,6 @@ extension SectionTypeExtensions on SectionType {
         return false;
       case SectionType.location:
         return true;
-      case SectionType.contacts:
-        return true;
       case SectionType.album:
         return true;
       case SectionType.fileTypesAndExtension:
@@ -124,8 +115,6 @@ extension SectionTypeExtensions on SectionType {
         return false;
       case SectionType.location:
         return true;
-      case SectionType.contacts:
-        return true;
       case SectionType.album:
         return true;
       case SectionType.fileTypesAndExtension:
@@ -145,8 +134,6 @@ extension SectionTypeExtensions on SectionType {
         return S.of(context).addNew;
       case SectionType.location:
         return S.of(context).addNew;
-      case SectionType.contacts:
-        return S.of(context).invite;
       case SectionType.album:
         return S.of(context).addNew;
       case SectionType.fileTypesAndExtension:
@@ -164,8 +151,6 @@ extension SectionTypeExtensions on SectionType {
         return null;
       case SectionType.location:
         return Icons.add_location_alt_outlined;
-      case SectionType.contacts:
-        return Icons.adaptive.share;
       case SectionType.album:
         return Icons.add;
       case SectionType.fileTypesAndExtension:
@@ -175,12 +160,6 @@ extension SectionTypeExtensions on SectionType {
 
   FutureVoidCallback ctaOnTap(BuildContext context) {
     switch (this) {
-      case SectionType.contacts:
-        return () async {
-          await shareText(
-            S.of(context).shareTextRecommendUsingEnte,
-          );
-        };
       case SectionType.location:
         return () async {
           final centerPoint = await showPickCenterPointSheet(context);
@@ -249,9 +228,6 @@ extension SectionTypeExtensions on SectionType {
       case SectionType.location:
         return SearchService.instance.getAllLocationTags(limit);
 
-      case SectionType.contacts:
-        return SearchService.instance.getAllContactsSearchResults(limit);
-
       case SectionType.album:
         return SearchService.instance.getAllCollectionSearchResults(limit);
 
diff --git a/mobile/lib/services/collections_service.dart b/mobile/lib/services/collections_service.dart
index 8bc86b6eb64..7c5de3985b7 100644
--- a/mobile/lib/services/collections_service.dart
+++ b/mobile/lib/services/collections_service.dart
@@ -949,9 +949,7 @@ class CollectionsService {
         data: {
           "collectionID": collection.id,
           "enableCollect": enableCollect,
-          "enableJoin": flagService.internalUser,
-          "joinViaLink":
-              flagService.internalUser, // todo: remove after server deployment
+          "enableJoin": true,
         },
       );
       collection.publicURLs?.add(PublicURL.fromMap(response.data["result"]));
diff --git a/mobile/lib/services/machine_learning/face_ml/feedback/cluster_feedback.dart b/mobile/lib/services/machine_learning/face_ml/feedback/cluster_feedback.dart
index d4901c8802b..95dfd7af5be 100644
--- a/mobile/lib/services/machine_learning/face_ml/feedback/cluster_feedback.dart
+++ b/mobile/lib/services/machine_learning/face_ml/feedback/cluster_feedback.dart
@@ -361,7 +361,8 @@ class ClusterFeedbackService {
   }
 
   Future<void> ignoreCluster(String clusterID) async {
-    await PersonService.instance.addPerson('', clusterID, isHidden: true);
+    await PersonService.instance
+        .addPerson(name: '', clusterID: clusterID, isHidden: true);
     Bus.instance.fire(PeopleChangedEvent());
     return;
   }
diff --git a/mobile/lib/services/machine_learning/face_ml/person/person_service.dart b/mobile/lib/services/machine_learning/face_ml/person/person_service.dart
index 5589843d4f0..8a13ab893c8 100644
--- a/mobile/lib/services/machine_learning/face_ml/person/person_service.dart
+++ b/mobile/lib/services/machine_learning/face_ml/person/person_service.dart
@@ -13,12 +13,15 @@ import 'package:photos/models/ml/face/face.dart';
 import "package:photos/models/ml/face/person.dart";
 import "package:photos/service_locator.dart";
 import "package:photos/services/entity_service.dart";
+import "package:photos/services/machine_learning/ml_result.dart";
+import "package:photos/services/search_service.dart";
 import "package:shared_preferences/shared_preferences.dart";
 
 class PersonService {
   final EntityService entityService;
   final MLDataDB faceMLDataDB;
   final SharedPreferences prefs;
+  final _emailToNameMapCache = <String, String>{};
 
   PersonService(this.entityService, this.faceMLDataDB, this.prefs);
 
@@ -40,6 +43,26 @@ class PersonService {
     SharedPreferences prefs,
   ) {
     _instance = PersonService(entityService, faceMLDataDB, prefs);
+    _instance!._resetEmailToNameCache();
+  }
+
+  Map<String, String> get emailToNameMapCache => _emailToNameMapCache;
+
+  void clearCache() {
+    _emailToNameMapCache.clear();
+  }
+
+  void _resetEmailToNameCache() {
+    _emailToNameMapCache.clear();
+    _instance!.getPersons().then((value) {
+      for (var person in value) {
+        if (person.data.email != null && person.data.email!.isNotEmpty) {
+          _instance!._emailToNameMapCache[person.data.email!] =
+              person.data.name;
+        }
+      }
+      logger.info("Email to name cache reset");
+    });
   }
 
   Future<List<PersonEntity>> getPersons() async {
@@ -150,10 +173,12 @@ class PersonService {
     return false;
   }
 
-  Future<PersonEntity> addPerson(
-    String name,
-    String clusterID, {
+  Future<PersonEntity> addPerson({
+    required String name,
+    required String clusterID,
     bool isHidden = false,
+    String? birthdate,
+    String? email,
   }) async {
     final faceIds = await faceMLDataDB.getFaceIDsForCluster(clusterID);
     final data = PersonData(
@@ -165,6 +190,8 @@ class PersonService {
         ),
       ],
       isHidden: isHidden,
+      birthDate: birthdate,
+      email: email,
     );
     final result = await entityService.addOrUpdate(
       EntityType.cgroup,
@@ -174,6 +201,9 @@ class PersonService {
       personID: result.id,
       clusterID: clusterID,
     );
+    if (data.email != null) {
+      _resetEmailToNameCache();
+    }
     return PersonEntity(result.id, data);
   }
 
@@ -247,8 +277,8 @@ class PersonService {
   }
 
   Future<void> deletePerson(String personID, {bool onlyMapping = false}) async {
+    final entity = await getPerson(personID);
     if (onlyMapping) {
-      final PersonEntity? entity = await getPerson(personID);
       if (entity == null) {
         return;
       }
@@ -261,9 +291,19 @@ class PersonService {
       );
       await faceMLDataDB.removePerson(personID);
       justName.data.logStats();
+
+      if (entity.data.email != null) {
+        _resetEmailToNameCache();
+      }
     } else {
       await entityService.deleteEntry(personID);
       await faceMLDataDB.removePerson(personID);
+
+      if (entity != null) {
+        if (entity.data.email != null) {
+          _resetEmailToNameCache();
+        }
+      }
     }
 
     // fire PeopleChangeEvent
@@ -410,6 +450,7 @@ class PersonService {
     bool? isHidden,
     int? version,
     String? birthDate,
+    String? email,
   }) async {
     final person = (await getPerson(id))!;
     final updatedPerson = person.copyWith(
@@ -419,9 +460,12 @@ class PersonService {
         isHidden: isHidden,
         version: version,
         birthDate: birthDate,
+        email: email,
       ),
     );
-    await updatePerson(updatedPerson);
+    await updatePerson(updatedPerson).then((value) {
+      _resetEmailToNameCache();
+    });
     return updatedPerson;
   }
 
@@ -438,4 +482,38 @@ class PersonService {
       rethrow;
     }
   }
+
+  Future<EnteFile> getRecentFileOfPerson(
+    PersonEntity person,
+  ) async {
+    final clustersToFiles =
+        await SearchService.instance.getClusterFilesForPersonID(
+      person.remoteID,
+    );
+    int? avatarFileID;
+    if (person.data.hasAvatar()) {
+      avatarFileID = tryGetFileIdFromFaceId(person.data.avatarFaceID!);
+    }
+    EnteFile? resultFile;
+    // iterate over all clusters and get the first file
+    for (final clusterFiles in clustersToFiles.values) {
+      for (final file in clusterFiles) {
+        if (avatarFileID != null && file.uploadedFileID! == avatarFileID) {
+          resultFile = file;
+          break;
+        }
+        resultFile ??= file;
+        if (resultFile.creationTime! < file.creationTime!) {
+          resultFile = file;
+        }
+      }
+    }
+    if (resultFile == null) {
+      debugPrint(
+        "Person ${kDebugMode ? person.data.name : person.remoteID} has no files",
+      );
+      return EnteFile();
+    }
+    return resultFile;
+  }
 }
diff --git a/mobile/lib/services/search_service.dart b/mobile/lib/services/search_service.dart
index 861449336e3..ad497039119 100644
--- a/mobile/lib/services/search_service.dart
+++ b/mobile/lib/services/search_service.dart
@@ -12,6 +12,7 @@ import 'package:photos/data/years.dart';
 import 'package:photos/db/files_db.dart';
 import "package:photos/db/ml/db.dart";
 import 'package:photos/events/local_photos_updated_event.dart';
+import "package:photos/extensions/user_extension.dart";
 import "package:photos/models/api/collection/user.dart";
 import 'package:photos/models/collection/collection.dart';
 import 'package:photos/models/collection/collection_items.dart';
@@ -1346,7 +1347,8 @@ class SearchService {
           .getFileOwner(file.ownerID!, file.collectionID);
 
       if (fileOwner.email.toLowerCase().contains(lowerCaseQuery) ||
-          ((fileOwner.name?.toLowerCase().contains(lowerCaseQuery)) ?? false)) {
+          ((fileOwner.displayName?.toLowerCase().contains(lowerCaseQuery)) ??
+              false)) {
         if (peopleToSharedFiles.containsKey(fileOwner)) {
           peopleToSharedFiles[fileOwner]!.add(file);
         } else {
@@ -1359,7 +1361,9 @@ class SearchService {
       searchResults.add(
         GenericSearchResult(
           ResultType.shared,
-          key.name != null && key.name!.isNotEmpty ? key.name! : key.email,
+          key.displayName != null && key.displayName!.isNotEmpty
+              ? key.displayName!
+              : key.email,
           value,
           hierarchicalSearchFilter: ContactsFilter(
             user: key,
@@ -1396,9 +1400,9 @@ class SearchService {
       }
 
       peopleToSharedFiles.forEach((key, value) {
-        final name = key.name != null && key.name!.isNotEmpty
-            ? key.name!
-            : key.email.split("@")[0];
+        final name = key.displayName != null && key.displayName!.isNotEmpty
+            ? key.displayName!
+            : key.email;
         searchResults.add(
           GenericSearchResult(
             ResultType.shared,
diff --git a/mobile/lib/ui/components/dialog_widget.dart b/mobile/lib/ui/components/dialog_widget.dart
index 2d8fe96b75b..0dbf4911773 100644
--- a/mobile/lib/ui/components/dialog_widget.dart
+++ b/mobile/lib/ui/components/dialog_widget.dart
@@ -282,7 +282,7 @@ class _TextInputDialogState extends State<TextInputDialog> {
                 isPasswordInput: widget.isPasswordInput,
                 textEditingController: _textEditingController,
                 textInputFormatter: widget.textInputFormatter,
-                textInputType: widget.textInputType,
+                keyboardType: widget.textInputType,
               ),
             ),
             const SizedBox(height: 36),
diff --git a/mobile/lib/ui/components/end_to_end_banner.dart b/mobile/lib/ui/components/end_to_end_banner.dart
new file mode 100644
index 00000000000..5f9b488c8a7
--- /dev/null
+++ b/mobile/lib/ui/components/end_to_end_banner.dart
@@ -0,0 +1,82 @@
+import "package:flutter/material.dart";
+import "package:photos/models/typedefs.dart";
+import "package:photos/theme/ente_theme.dart";
+import "package:photos/ui/components/buttons/icon_button_widget.dart";
+
+class EndToEndBanner extends StatelessWidget {
+  final String? title;
+  final String? caption;
+  final IconData? leadingIcon;
+  final FutureVoidCallback? onTap;
+  final Widget? trailingWidget;
+  const EndToEndBanner({
+    this.title,
+    this.caption,
+    this.leadingIcon,
+    this.onTap,
+    this.trailingWidget,
+    super.key,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final colorScheme = getEnteColorScheme(context);
+    final textTheme = getEnteTextTheme(context);
+    return GestureDetector(
+      onTap: onTap,
+      child: Container(
+        color: colorScheme.fillFaint,
+        padding: EdgeInsets.fromLTRB(16, 8, trailingWidget != null ? 16 : 0, 8),
+        child: Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            Row(
+              children: [
+                leadingIcon != null
+                    ? Container(
+                        width: 48,
+                        height: 48,
+                        decoration: BoxDecoration(
+                          color: colorScheme.backdropBase,
+                          borderRadius: BorderRadius.circular(24),
+                        ),
+                        child: Icon(leadingIcon!, size: 28),
+                      )
+                    : const SizedBox.shrink(),
+                leadingIcon != null
+                    ? const SizedBox(width: 12)
+                    : const SizedBox.shrink(),
+                Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    title != null
+                        ? Text(
+                            title!,
+                            style: textTheme.bodyBold,
+                          )
+                        : const SizedBox.shrink(),
+                    title != null && caption != null
+                        ? const SizedBox(height: 4)
+                        : const SizedBox.shrink(),
+                    caption != null
+                        ? Text(
+                            caption!,
+                            style: textTheme.miniMuted,
+                          )
+                        : const SizedBox.shrink(),
+                  ],
+                ),
+              ],
+            ),
+            trailingWidget == null
+                ? const IconButtonWidget(
+                    icon: Icons.chevron_right,
+                    iconButtonType: IconButtonType.primary,
+                  )
+                : trailingWidget!,
+          ],
+        ),
+      ),
+    );
+  }
+}
diff --git a/mobile/lib/ui/components/text_input_widget.dart b/mobile/lib/ui/components/text_input_widget.dart
index 5b3787035d2..965de67c485 100644
--- a/mobile/lib/ui/components/text_input_widget.dart
+++ b/mobile/lib/ui/components/text_input_widget.dart
@@ -48,8 +48,9 @@ class TextInputWidget extends StatefulWidget {
   final TextEditingController? textEditingController;
   final ValueNotifier? isEmptyNotifier;
   final List<TextInputFormatter>? textInputFormatter;
-  final TextInputType? textInputType;
+  final TextInputType? keyboardType;
   final bool enableFillColor;
+  final bool autoCorrect;
   const TextInputWidget({
     this.onSubmit,
     this.onChange,
@@ -77,8 +78,9 @@ class TextInputWidget extends StatefulWidget {
     this.textEditingController,
     this.isEmptyNotifier,
     this.textInputFormatter,
-    this.textInputType,
+    this.keyboardType,
     this.enableFillColor = true,
+    this.autoCorrect = true,
     super.key,
   });
 
@@ -155,7 +157,7 @@ class _TextInputWidgetState extends State<TextInputWidget> {
         borderRadius: BorderRadius.all(Radius.circular(widget.borderRadius)),
         child: Material(
           child: TextFormField(
-            keyboardType: widget.textInputType,
+            keyboardType: widget.keyboardType,
             textCapitalization: widget.textCapitalization!,
             autofocus: widget.autoFocus ?? false,
             autofillHints:
@@ -223,6 +225,7 @@ class _TextInputWidgetState extends State<TextInputWidget> {
             onEditingComplete: () {
               _onSubmit();
             },
+            autocorrect: widget.autoCorrect,
           ),
         ),
       ),
diff --git a/mobile/lib/ui/sharing/album_participants_page.dart b/mobile/lib/ui/sharing/album_participants_page.dart
index 0c137f3001f..2479bff28a5 100644
--- a/mobile/lib/ui/sharing/album_participants_page.dart
+++ b/mobile/lib/ui/sharing/album_participants_page.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:photos/core/configuration.dart';
 import 'package:photos/extensions/list.dart';
+import "package:photos/extensions/user_extension.dart";
 import "package:photos/generated/l10n.dart";
 import "package:photos/models/api/collection/user.dart";
 import 'package:photos/models/collection/collection.dart';
@@ -106,7 +107,11 @@ class _AlbumParticipantsPageState extends State<AlbumParticipantsPage> {
                             captionedTextWidget: CaptionedTextWidget(
                               title: isOwner
                                   ? S.of(context).you
-                                  : widget.collection.owner?.email ?? '',
+                                  : widget.collection.owner != null
+                                      ? _nameIfAvailableElseEmail(
+                                          widget.collection.owner!,
+                                        )
+                                      : '',
                               makeTextBold: isOwner,
                             ),
                             leadingIconWidget: UserAvatarWidget(
@@ -150,7 +155,7 @@ class _AlbumParticipantsPageState extends State<AlbumParticipantsPage> {
                           captionedTextWidget: CaptionedTextWidget(
                             title: isSameAsLoggedInUser
                                 ? S.of(context).you
-                                : currentUser.email,
+                                : _nameIfAvailableElseEmail(currentUser),
                             makeTextBold: isSameAsLoggedInUser,
                           ),
                           leadingIconSize: 24.0,
@@ -228,7 +233,7 @@ class _AlbumParticipantsPageState extends State<AlbumParticipantsPage> {
                           captionedTextWidget: CaptionedTextWidget(
                             title: isSameAsLoggedInUser
                                 ? S.of(context).you
-                                : currentUser.email,
+                                : _nameIfAvailableElseEmail(currentUser),
                             makeTextBold: isSameAsLoggedInUser,
                           ),
                           leadingIconSize: 24.0,
@@ -288,4 +293,12 @@ class _AlbumParticipantsPageState extends State<AlbumParticipantsPage> {
       ),
     );
   }
+
+  String _nameIfAvailableElseEmail(User user) {
+    final name = user.displayName;
+    if (name != null && name.isNotEmpty) {
+      return name;
+    }
+    return user.email;
+  }
 }
diff --git a/mobile/lib/ui/sharing/album_share_info_widget.dart b/mobile/lib/ui/sharing/album_share_info_widget.dart
index 5b7ba81cb7b..98a885cf492 100644
--- a/mobile/lib/ui/sharing/album_share_info_widget.dart
+++ b/mobile/lib/ui/sharing/album_share_info_widget.dart
@@ -14,14 +14,14 @@ class AlbumSharesIcons extends StatelessWidget {
   final Widget? trailingWidget;
 
   const AlbumSharesIcons({
-    Key? key,
+    super.key,
     required this.sharees,
     this.type = AvatarType.tiny,
     this.limitCountTo = 2,
     this.removeBorder = true,
     this.trailingWidget,
     this.padding = const EdgeInsets.only(left: 10.0, top: 10, bottom: 10),
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
@@ -58,7 +58,7 @@ class AlbumSharesIcons extends StatelessWidget {
       widgets.add(
         Positioned(
           left: (overlapPadding * (displayCount + (hasMore ? 1 : 0))) +
-              (displayCount > 0 ?  12 : 0),
+              (displayCount > 0 ? 12 : 0),
           child: trailingWidget!,
         ),
       );
diff --git a/mobile/lib/ui/sharing/user_avator_widget.dart b/mobile/lib/ui/sharing/user_avator_widget.dart
index 7741dc29e02..2df85755b5a 100644
--- a/mobile/lib/ui/sharing/user_avator_widget.dart
+++ b/mobile/lib/ui/sharing/user_avator_widget.dart
@@ -1,4 +1,5 @@
 import 'package:flutter/material.dart';
+import "package:photos/extensions/user_extension.dart";
 import "package:photos/models/api/collection/user.dart";
 import 'package:photos/theme/colors.dart';
 import 'package:photos/theme/ente_theme.dart';
@@ -23,9 +24,9 @@ class UserAvatarWidget extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     final colorScheme = getEnteColorScheme(context);
-    final displayChar = (user.name == null || user.name!.isEmpty)
+    final displayChar = (user.displayName == null || user.displayName!.isEmpty)
         ? ((user.email.isEmpty) ? " " : user.email.substring(0, 1))
-        : user.name!.substring(0, 1);
+        : user.displayName!.substring(0, 1);
     Color decorationColor;
     if (user.id == null || user.id! <= 0 || user.id == currentUserID) {
       decorationColor = Colors.black;
diff --git a/mobile/lib/ui/tabs/section_title.dart b/mobile/lib/ui/tabs/section_title.dart
index 52290820144..1f1be877f26 100644
--- a/mobile/lib/ui/tabs/section_title.dart
+++ b/mobile/lib/ui/tabs/section_title.dart
@@ -14,9 +14,9 @@ class SectionTitle extends StatelessWidget {
     this.title,
     this.titleWithBrand,
     this.mutedTitle = false,
-    Key? key,
+    super.key,
     this.padding,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
diff --git a/mobile/lib/ui/tabs/shared/contacts_all_page.dart b/mobile/lib/ui/tabs/shared/contacts_all_page.dart
new file mode 100644
index 00000000000..75761fd0c61
--- /dev/null
+++ b/mobile/lib/ui/tabs/shared/contacts_all_page.dart
@@ -0,0 +1,233 @@
+import "dart:async";
+
+import "package:collection/collection.dart";
+import "package:dotted_border/dotted_border.dart";
+import "package:flutter/material.dart";
+import "package:flutter_animate/flutter_animate.dart";
+import "package:logging/logging.dart";
+import "package:photos/core/event_bus.dart";
+import "package:photos/events/files_updated_event.dart";
+import "package:photos/events/people_changed_event.dart";
+import "package:photos/generated/l10n.dart";
+import "package:photos/models/search/generic_search_result.dart";
+import "package:photos/services/search_service.dart";
+import "package:photos/theme/ente_theme.dart";
+import "package:photos/ui/common/loading_widget.dart";
+import "package:photos/ui/components/title_bar_title_widget.dart";
+import "package:photos/ui/viewer/search/result/searchable_item.dart";
+import "package:photos/utils/debouncer.dart";
+import "package:photos/utils/share_util.dart";
+
+class ContactsSectionAllPage extends StatefulWidget {
+  const ContactsSectionAllPage({super.key});
+
+  @override
+  State<ContactsSectionAllPage> createState() => _ContactsSectionAllPageState();
+}
+
+class _ContactsSectionAllPageState extends State<ContactsSectionAllPage> {
+  late Future<List<GenericSearchResult>> results;
+  late final StreamSubscription<PeopleChangedEvent>
+      _peopleChangedEventSubscription;
+  final _logger = Logger("ContactsSectionAllPage");
+  late StreamSubscription<FilesUpdatedEvent> _filesUpdatedEvent;
+  final _debouncer = Debouncer(
+    const Duration(seconds: 2),
+    executionInterval: const Duration(seconds: 10),
+  );
+
+  @override
+  void initState() {
+    super.initState();
+    results = SearchService.instance.getAllContactsSearchResults(null);
+    _filesUpdatedEvent = Bus.instance.on<FilesUpdatedEvent>().listen((event) {
+      _reloadContacts();
+    });
+    _peopleChangedEventSubscription =
+        Bus.instance.on<PeopleChangedEvent>().listen((event) {
+      if (event.type == PeopleEventType.saveOrEditPerson) {
+        _reloadContacts();
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    _peopleChangedEventSubscription.cancel();
+    _filesUpdatedEvent.cancel();
+    _debouncer.cancelDebounceTimer();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        toolbarHeight: 48,
+        leadingWidth: 48,
+        leading: GestureDetector(
+          onTap: () {
+            Navigator.pop(context);
+          },
+          child: const Icon(
+            Icons.arrow_back_outlined,
+          ),
+        ),
+      ),
+      body: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Padding(
+            padding: const EdgeInsets.symmetric(vertical: 4, horizontal: 16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                TitleBarTitleWidget(
+                  title: S.of(context).contacts,
+                ),
+                FutureBuilder(
+                  future: results,
+                  builder: (context, snapshot) {
+                    if (snapshot.hasData) {
+                      final sectionResults = snapshot.data!;
+                      return Text(sectionResults.length.toString())
+                          .animate()
+                          .fadeIn(
+                            duration: const Duration(milliseconds: 150),
+                            curve: Curves.easeIn,
+                          );
+                    } else if (snapshot.hasError) {
+                      _logger
+                          .severe("Error loading contacts: ${snapshot.error}");
+                    }
+                    return const RepaintBoundary(
+                      child: EnteLoadingWidget(),
+                    );
+                  },
+                ),
+              ],
+            ),
+          ),
+          Expanded(
+            child: Padding(
+              padding: const EdgeInsets.symmetric(
+                vertical: 20,
+                horizontal: 16,
+              ),
+              child: FutureBuilder(
+                future: results,
+                builder: (context, snapshot) {
+                  if (snapshot.hasData) {
+                    final sectionResults = snapshot.data!;
+
+                    sectionResults.sort(
+                      (a, b) =>
+                          compareAsciiLowerCaseNatural(b.name(), a.name()),
+                    );
+
+                    return ListView.separated(
+                      itemBuilder: (context, index) {
+                        if (sectionResults.length == index) {
+                          return const _SearchableItemPlaceholder();
+                        }
+
+                        final result = sectionResults[index];
+                        return SearchableItemWidget(
+                          sectionResults[index],
+                          onResultTap: result.onResultTap != null
+                              ? () => result.onResultTap!(context)
+                              : null,
+                        );
+                      },
+                      separatorBuilder: (context, index) {
+                        return const SizedBox(height: 10);
+                      },
+                      itemCount: sectionResults.length + 1,
+                      physics: const BouncingScrollPhysics(),
+                    )
+                        .animate()
+                        .fadeIn(
+                          duration: const Duration(milliseconds: 225),
+                          curve: Curves.easeIn,
+                        )
+                        .slide(
+                          begin: const Offset(0, -0.01),
+                          curve: Curves.easeIn,
+                          duration: const Duration(
+                            milliseconds: 225,
+                          ),
+                        );
+                  } else {
+                    return const EnteLoadingWidget();
+                  }
+                },
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  void _reloadContacts() {
+    _debouncer.run(
+      () async {
+        if (mounted) {
+          setState(() {
+            results = SearchService.instance.getAllContactsSearchResults(null);
+          });
+        }
+      },
+    );
+  }
+}
+
+class _SearchableItemPlaceholder extends StatelessWidget {
+  const _SearchableItemPlaceholder();
+
+  @override
+  Widget build(BuildContext context) {
+    final colorScheme = getEnteColorScheme(context);
+    final textTheme = getEnteTextTheme(context);
+    return Padding(
+      padding: const EdgeInsets.only(right: 1),
+      child: GestureDetector(
+        onTap: () async {
+          await shareText(
+            S.of(context).shareTextRecommendUsingEnte,
+          );
+        },
+        child: DottedBorder(
+          strokeWidth: 2,
+          borderType: BorderType.RRect,
+          radius: const Radius.circular(4),
+          padding: EdgeInsets.zero,
+          dashPattern: const [4, 4],
+          color: colorScheme.strokeFainter,
+          child: Row(
+            children: [
+              Container(
+                width: 60,
+                height: 60,
+                decoration: BoxDecoration(
+                  borderRadius:
+                      const BorderRadius.horizontal(left: Radius.circular(4)),
+                  color: colorScheme.fillFaint,
+                ),
+                child: Icon(
+                  Icons.adaptive.share,
+                  color: colorScheme.strokeMuted,
+                ),
+              ),
+              const SizedBox(width: 12),
+              Text(
+                S.of(context).invite,
+                style: textTheme.body,
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/mobile/lib/ui/tabs/shared/contacts_section.dart b/mobile/lib/ui/tabs/shared/contacts_section.dart
new file mode 100644
index 00000000000..957436148f6
--- /dev/null
+++ b/mobile/lib/ui/tabs/shared/contacts_section.dart
@@ -0,0 +1,385 @@
+import "dart:async";
+
+import "package:dotted_border/dotted_border.dart";
+import "package:flutter/material.dart";
+import "package:logging/logging.dart";
+import "package:photos/core/constants.dart";
+import "package:photos/core/event_bus.dart";
+import "package:photos/events/files_updated_event.dart";
+import "package:photos/events/people_changed_event.dart";
+import "package:photos/generated/l10n.dart";
+import "package:photos/models/search/generic_search_result.dart";
+import "package:photos/models/search/recent_searches.dart";
+import "package:photos/services/search_service.dart";
+import "package:photos/theme/ente_theme.dart";
+import "package:photos/ui/common/loading_widget.dart";
+import "package:photos/ui/tabs/shared/contacts_all_page.dart";
+import "package:photos/ui/viewer/file/no_thumbnail_widget.dart";
+import "package:photos/ui/viewer/file/thumbnail_widget.dart";
+import "package:photos/ui/viewer/search/result/contact_result_page.dart";
+import "package:photos/utils/debouncer.dart";
+import "package:photos/utils/navigation_util.dart";
+import "package:photos/utils/share_util.dart";
+
+class ContactsSection extends StatefulWidget {
+  const ContactsSection({super.key});
+
+  @override
+  State<ContactsSection> createState() => _ContactsSectionState();
+}
+
+class _ContactsSectionState extends State<ContactsSection> {
+  late Future<List<GenericSearchResult>> _contactSearchResults;
+  late final StreamSubscription<PeopleChangedEvent>
+      _peopleChangedEventSubscription;
+  final _logger = Logger("ContactsSection");
+  late StreamSubscription<FilesUpdatedEvent> _filesUpdatedEvent;
+  final _debouncer = Debouncer(
+    const Duration(seconds: 2),
+    executionInterval: const Duration(seconds: 10),
+  );
+
+  @override
+  void initState() {
+    super.initState();
+    //Adding delay to avoid operation on app start
+    _contactSearchResults =
+        Future.delayed(const Duration(seconds: 2)).then((_) {
+      return SearchService.instance
+          .getAllContactsSearchResults(kSearchSectionLimit);
+    });
+
+    _filesUpdatedEvent = Bus.instance.on<FilesUpdatedEvent>().listen((event) {
+      _reloadContacts();
+    });
+    _peopleChangedEventSubscription =
+        Bus.instance.on<PeopleChangedEvent>().listen((event) {
+      if (event.type == PeopleEventType.saveOrEditPerson) {
+        _reloadContacts();
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    _peopleChangedEventSubscription.cancel();
+    _filesUpdatedEvent.cancel();
+    _debouncer.cancelDebounceTimer();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return FutureBuilder<List<GenericSearchResult>>(
+      future: _contactSearchResults,
+      builder: (context, snapshot) {
+        if (snapshot.hasData) {
+          final results = snapshot.data!;
+          if (results.isEmpty) {
+            final textTheme = getEnteTextTheme(context);
+            return Padding(
+              padding: const EdgeInsets.only(left: 12, right: 8),
+              child: Row(
+                children: [
+                  Expanded(
+                    child: Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        Text(
+                          S.of(context).contacts,
+                          style: textTheme.largeBold,
+                        ),
+                        const SizedBox(height: 24),
+                        Padding(
+                          padding: const EdgeInsets.only(left: 4),
+                          child: Text(
+                            S.of(context).searchPeopleEmptySection,
+                            style: textTheme.smallMuted,
+                          ),
+                        ),
+                      ],
+                    ),
+                  ),
+                  const SizedBox(width: 8),
+                  const _ContactsSectionEmptyCTAIcon(),
+                ],
+              ),
+            );
+          } else {
+            final recommendations = <Widget>[
+              ...results.map(
+                (contactSearchResult) =>
+                    ContactRecommendation(contactSearchResult),
+              ),
+              const ContactCTA(),
+            ];
+            return Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                _SectionHeader(
+                  hasMore: (results.length >= kSearchSectionLimit - 1),
+                ),
+                SingleChildScrollView(
+                  padding: const EdgeInsets.symmetric(horizontal: 4.5),
+                  physics: const BouncingScrollPhysics(),
+                  scrollDirection: Axis.horizontal,
+                  child: Row(
+                    crossAxisAlignment: CrossAxisAlignment.start,
+                    children: recommendations,
+                  ),
+                ),
+              ],
+            );
+          }
+        } else if (snapshot.hasError) {
+          _logger.severe("Error loading contacts: ${snapshot.error}");
+        }
+        return const RepaintBoundary(
+          child: EnteLoadingWidget(),
+        );
+      },
+    );
+  }
+
+  void _reloadContacts() {
+    _debouncer.run(
+      () async {
+        if (mounted) {
+          setState(() {
+            _contactSearchResults = SearchService.instance
+                .getAllContactsSearchResults(kSearchSectionLimit);
+          });
+        }
+      },
+    );
+  }
+}
+
+class ContactRecommendation extends StatelessWidget {
+  final GenericSearchResult contactSearchResult;
+  const ContactRecommendation(this.contactSearchResult, {super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final heroTag = contactSearchResult.heroTag() +
+        (contactSearchResult.previewThumbnail()?.tag ?? "");
+    final enteTextTheme = getEnteTextTheme(context);
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 2.5),
+      child: GestureDetector(
+        onTap: () {
+          RecentSearches().add(contactSearchResult.name());
+          if (contactSearchResult.onResultTap != null) {
+            contactSearchResult.onResultTap!(context);
+          } else {
+            routeToPage(
+              context,
+              ContactResultPage(contactSearchResult),
+            );
+          }
+        },
+        child: ConstrainedBox(
+          constraints: const BoxConstraints(
+            maxHeight: double.infinity,
+            minHeight: 115.5,
+            maxWidth: 100,
+            minWidth: 100,
+          ),
+          child: Padding(
+            padding:
+                const EdgeInsets.symmetric(horizontal: 4.25, vertical: 10.5),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.center,
+              children: [
+                ClipOval(
+                  child: SizedBox(
+                    width: 67.75,
+                    height: 67.75,
+                    child: contactSearchResult.previewThumbnail() != null
+                        ? Hero(
+                            tag: heroTag,
+                            child: ThumbnailWidget(
+                              contactSearchResult.previewThumbnail()!,
+                              shouldShowArchiveStatus: false,
+                              shouldShowSyncStatus: false,
+                            ),
+                          )
+                        : const NoThumbnailWidget(),
+                  ),
+                ),
+                const SizedBox(height: 10.5),
+                SizedBox(
+                  width: 91.5,
+                  child: Column(
+                    crossAxisAlignment: CrossAxisAlignment.center,
+                    mainAxisAlignment: MainAxisAlignment.center,
+                    children: [
+                      Text(
+                        contactSearchResult.name(),
+                        style: enteTextTheme.small,
+                        maxLines: 2,
+                        overflow: TextOverflow.ellipsis,
+                        textAlign: TextAlign.center,
+                      ),
+                    ],
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+class ContactCTA extends StatelessWidget {
+  const ContactCTA({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final enteColorScheme = getEnteColorScheme(context);
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 2.5),
+      child: GestureDetector(
+        onTap: () async {
+          await shareText(
+            S.of(context).shareTextRecommendUsingEnte,
+          );
+        },
+        child: ConstrainedBox(
+          constraints: const BoxConstraints(
+            maxHeight: double.infinity,
+            minHeight: 115.5,
+            maxWidth: 100,
+            minWidth: 100,
+          ),
+          child: Padding(
+            padding:
+                const EdgeInsets.symmetric(horizontal: 4.25, vertical: 10.5),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.center,
+              children: [
+                DottedBorder(
+                  borderType: BorderType.Circle,
+                  strokeWidth: 1.5,
+                  borderPadding: const EdgeInsets.all(0.75),
+                  dashPattern: const [4, 4],
+                  radius: const Radius.circular(2.35),
+                  padding: EdgeInsets.zero,
+                  color: enteColorScheme.strokeFaint,
+                  child: SizedBox(
+                    height: 67.75,
+                    width: 67.75,
+                    child: Icon(
+                      Icons.adaptive.share,
+                      color: enteColorScheme.strokeFaint,
+                    ),
+                  ),
+                ),
+                const SizedBox(height: 10.5),
+                Text(
+                  S.of(context).invite,
+                  style: getEnteTextTheme(context).smallFaint,
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+class _ContactsSectionEmptyCTAIcon extends StatelessWidget {
+  const _ContactsSectionEmptyCTAIcon();
+
+  @override
+  Widget build(BuildContext context) {
+    final textTheme = getEnteTextTheme(context);
+    final colorScheme = getEnteColorScheme(context);
+    return GestureDetector(
+      onTap: () async {
+        await shareText(
+          S.of(context).shareTextRecommendUsingEnte,
+        );
+      },
+      child: Padding(
+        padding: const EdgeInsets.fromLTRB(8, 14, 8, 0),
+        child: Column(
+          children: [
+            DottedBorder(
+              color: colorScheme.strokeFaint,
+              dashPattern: const [3.875, 3.875],
+              borderType: BorderType.Circle,
+              strokeWidth: 1.5,
+              radius: const Radius.circular(33.25),
+              child: SizedBox(
+                width: 62.5,
+                height: 62.5,
+                child: Icon(
+                  Icons.adaptive.share,
+                  color: colorScheme.strokeFaint,
+                  size: 20,
+                ),
+              ),
+            ),
+            const SizedBox(
+              height: 10,
+            ),
+            Text(
+              S.of(context).invite,
+              maxLines: 2,
+              textAlign: TextAlign.center,
+              overflow: TextOverflow.ellipsis,
+              style: textTheme.miniFaint,
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+class _SectionHeader extends StatelessWidget {
+  final bool hasMore;
+  const _SectionHeader({required this.hasMore});
+
+  @override
+  Widget build(BuildContext context) {
+    return GestureDetector(
+      onTap: () {
+        if (hasMore) {
+          routeToPage(
+            context,
+            const ContactsSectionAllPage(),
+          );
+        }
+      },
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.spaceBetween,
+        children: [
+          Padding(
+            padding: const EdgeInsets.all(12),
+            child: Text(
+              S.of(context).contacts,
+              style: getEnteTextTheme(context).largeBold,
+            ),
+          ),
+          hasMore
+              ? Container(
+                  color: Colors.transparent,
+                  child: Padding(
+                    padding: const EdgeInsets.fromLTRB(24, 12, 12, 12),
+                    child: Icon(
+                      Icons.chevron_right_outlined,
+                      color: getEnteColorScheme(context).strokeMuted,
+                    ),
+                  ),
+                )
+              : const SizedBox.shrink(),
+        ],
+      ),
+    );
+  }
+}
diff --git a/mobile/lib/ui/tabs/shared_collections_tab.dart b/mobile/lib/ui/tabs/shared_collections_tab.dart
index 7e93abca392..9a01a6a48f2 100644
--- a/mobile/lib/ui/tabs/shared_collections_tab.dart
+++ b/mobile/lib/ui/tabs/shared_collections_tab.dart
@@ -16,6 +16,7 @@ import 'package:photos/ui/common/loading_widget.dart';
 import "package:photos/ui/components/buttons/icon_button_widget.dart";
 import 'package:photos/ui/tabs/section_title.dart';
 import "package:photos/ui/tabs/shared/all_quick_links_page.dart";
+import "package:photos/ui/tabs/shared/contacts_section.dart";
 import "package:photos/ui/tabs/shared/empty_state.dart";
 import "package:photos/ui/tabs/shared/quick_link_album_item.dart";
 import "package:photos/ui/viewer/gallery/collect_photos_card_widget.dart";
@@ -290,6 +291,8 @@ class _SharedCollectionsTabState extends State<SharedCollectionsTab>
                     ),
                   )
                 : const SizedBox.shrink(),
+            const SizedBox(height: 2),
+            const ContactsSection(),
             const SizedBox(height: 4),
             const CollectPhotosCardWidget(),
             const SizedBox(height: 32),
diff --git a/mobile/lib/ui/viewer/actions/file_selection_actions_widget.dart b/mobile/lib/ui/viewer/actions/file_selection_actions_widget.dart
index 801786f0cac..c902b8f1403 100644
--- a/mobile/lib/ui/viewer/actions/file_selection_actions_widget.dart
+++ b/mobile/lib/ui/viewer/actions/file_selection_actions_widget.dart
@@ -698,12 +698,19 @@ class _FileSelectionActionsWidgetState
 
   Future<void> _setPersonCover() async {
     final EnteFile file = widget.selectedFiles.files.first;
-    await PersonService.instance.updateAvatar(widget.person!, file);
+    final updatedPerson =
+        await PersonService.instance.updateAvatar(widget.person!, file);
     widget.selectedFiles.clearAll();
     if (mounted) {
       setState(() => {});
     }
-    Bus.instance.fire(PeopleChangedEvent());
+    Bus.instance.fire(
+      PeopleChangedEvent(
+        type: PeopleEventType.saveOrEditPerson,
+        source: "setPersonCover",
+        person: updatedPerson,
+      ),
+    );
   }
 
   Future<void> _onNotpersonClicked() async {
diff --git a/mobile/lib/ui/viewer/file_details/added_by_widget.dart b/mobile/lib/ui/viewer/file_details/added_by_widget.dart
index 3f82c511322..12f9a0a528a 100644
--- a/mobile/lib/ui/viewer/file_details/added_by_widget.dart
+++ b/mobile/lib/ui/viewer/file_details/added_by_widget.dart
@@ -1,4 +1,5 @@
 import "package:flutter/material.dart";
+import "package:photos/extensions/user_extension.dart";
 import "package:photos/generated/l10n.dart";
 import "package:photos/models/file/extensions/file_props.dart";
 import 'package:photos/models/file/file.dart';
@@ -26,7 +27,7 @@ class AddedByWidget extends StatelessWidget {
     } else {
       final fileOwner = CollectionsService.instance
           .getFileOwner(file.ownerID!, file.collectionID);
-      addedBy = fileOwner.email;
+      addedBy = fileOwner.displayName ?? fileOwner.email;
     }
     if (addedBy == null || addedBy.isEmpty) {
       return const SizedBox.shrink();
diff --git a/mobile/lib/ui/viewer/gallery/hooks/pick_person_avatar.dart b/mobile/lib/ui/viewer/gallery/hooks/pick_person_avatar.dart
index a0ef33c0a68..9d7dabbda69 100644
--- a/mobile/lib/ui/viewer/gallery/hooks/pick_person_avatar.dart
+++ b/mobile/lib/ui/viewer/gallery/hooks/pick_person_avatar.dart
@@ -161,8 +161,9 @@ class PickPersonCoverPhotoWidget extends StatelessWidget {
                                     );
                                     Bus.instance.fire(
                                       PeopleChangedEvent(
-                                          // person: personEntity,
-                                          ),
+                                        type: PeopleEventType.saveOrEditPerson,
+                                        person: result,
+                                      ),
                                     );
                                     Navigator.pop(context, result);
                                   },
diff --git a/mobile/lib/ui/viewer/gallery/shared_public_collection_page.dart b/mobile/lib/ui/viewer/gallery/shared_public_collection_page.dart
index f96eedc4634..05ad0272062 100644
--- a/mobile/lib/ui/viewer/gallery/shared_public_collection_page.dart
+++ b/mobile/lib/ui/viewer/gallery/shared_public_collection_page.dart
@@ -1,5 +1,6 @@
 import "package:flutter/material.dart";
 import "package:logging/logging.dart";
+import "package:photos/core/configuration.dart";
 import "package:photos/core/event_bus.dart";
 import "package:photos/events/collection_meta_event.dart";
 import "package:photos/events/collection_updated_event.dart";
@@ -11,12 +12,11 @@ import "package:photos/models/file/file.dart";
 import "package:photos/models/file_load_result.dart";
 import "package:photos/models/gallery_type.dart";
 import "package:photos/models/selected_files.dart";
-import "package:photos/service_locator.dart";
 import "package:photos/services/collections_service.dart";
 import "package:photos/services/remote_sync_service.dart";
 import "package:photos/ui/components/buttons/button_widget.dart";
+import "package:photos/ui/components/end_to_end_banner.dart";
 import "package:photos/ui/components/models/button_type.dart";
-import "package:photos/ui/components/notification_widget.dart";
 import "package:photos/ui/viewer/actions/file_selection_overlay_bar.dart";
 import "package:photos/ui/viewer/gallery/collection_page.dart";
 import "package:photos/ui/viewer/gallery/gallery.dart";
@@ -96,25 +96,24 @@ class _SharedPublicCollectionPageState
       selectedFiles: _selectedFiles,
       initialFiles: initialFiles,
       albumName: widget.c.collection.displayName,
-      header: widget.c.collection.isJoinEnabled && flagService.internalUser
+      header: widget.c.collection.isJoinEnabled &&
+              Configuration.instance.isLoggedIn()
           ? Padding(
               padding: const EdgeInsets.all(8.0),
-              child: NotificationWidget(
-                startIcon: Icons.people_outline,
-                actionIcon: null,
-                actionWidget: ButtonWidget(
+              child: EndToEndBanner(
+                leadingIcon: Icons.people_outlined,
+                title: context.l10n.joinAlbum,
+                caption: widget.c.collection.isCollectEnabledForPublicLink()
+                    ? context.l10n.joinAlbumSubtext
+                    : context.l10n.joinAlbumSubtextViewer,
+                trailingWidget: ButtonWidget(
                   buttonType: ButtonType.primary,
-                  labelText: context.l10n.join,
                   buttonSize: ButtonSize.small,
+                  icon: null,
+                  labelText: context.l10n.join,
                   shouldSurfaceExecutionStates: false,
                   onTap: _joinAlbum,
                 ),
-                text: context.l10n.joinAlbum,
-                subText: widget.c.collection.isCollectEnabledForPublicLink()
-                    ? context.l10n.joinAlbumSubtext
-                    : context.l10n.joinAlbumSubtextViewer,
-                type: NotificationType.notice,
-                onTap: () async {},
               ),
             )
           : null,
diff --git a/mobile/lib/ui/viewer/people/link_email_screen.dart b/mobile/lib/ui/viewer/people/link_email_screen.dart
new file mode 100644
index 00000000000..198b5424efe
--- /dev/null
+++ b/mobile/lib/ui/viewer/people/link_email_screen.dart
@@ -0,0 +1,403 @@
+import "dart:async";
+
+import "package:email_validator/email_validator.dart";
+import 'package:flutter/material.dart';
+import "package:logging/logging.dart";
+import 'package:photos/core/configuration.dart';
+import "package:photos/core/event_bus.dart";
+import "package:photos/events/people_changed_event.dart";
+import "package:photos/generated/l10n.dart";
+import "package:photos/models/api/collection/user.dart";
+import "package:photos/models/ml/face/person.dart";
+import 'package:photos/services/collections_service.dart';
+import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
+import "package:photos/services/user_service.dart";
+import 'package:photos/theme/ente_theme.dart';
+import 'package:photos/ui/components/buttons/button_widget.dart';
+import 'package:photos/ui/components/captioned_text_widget.dart';
+import "package:photos/ui/components/dialog_widget.dart";
+import 'package:photos/ui/components/divider_widget.dart';
+import 'package:photos/ui/components/menu_item_widget/menu_item_widget.dart';
+import 'package:photos/ui/components/menu_section_title.dart';
+import 'package:photos/ui/components/models/button_type.dart';
+import "package:photos/ui/components/text_input_widget.dart";
+import 'package:photos/ui/sharing/user_avator_widget.dart';
+import "package:photos/utils/dialog_util.dart";
+import "package:photos/utils/person_contact_linking_util.dart";
+import "package:photos/utils/share_util.dart";
+
+class LinkEmailScreen extends StatefulWidget {
+  final String? personID;
+  final bool isFromSaveOrEditPerson;
+  const LinkEmailScreen(
+    this.personID, {
+    this.isFromSaveOrEditPerson = false,
+    super.key,
+  });
+
+  @override
+  State<StatefulWidget> createState() => _LinkEmailScreen();
+}
+
+class _LinkEmailScreen extends State<LinkEmailScreen> {
+  String? _selectedEmail;
+  String _newEmail = '';
+  bool _emailIsValid = false;
+  bool isKeypadOpen = false;
+  late List<User> _suggestedUsers;
+  late List<User> _filteredUsers;
+  final _logger = Logger('LinkEmailScreen');
+
+  final textFieldFocusNode = FocusNode();
+  final _textController = TextEditingController();
+
+  @override
+  void initState() {
+    super.initState();
+    _suggestedUsers = _getContacts();
+    _filteredUsers = _suggestedUsers;
+  }
+
+  @override
+  void dispose() {
+    _textController.dispose();
+    textFieldFocusNode.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    isKeypadOpen = MediaQuery.viewInsetsOf(context).bottom > 100;
+
+    return Scaffold(
+      resizeToAvoidBottomInset: isKeypadOpen,
+      appBar: AppBar(
+        title: Text(
+          S.of(context).linkEmail,
+        ),
+      ),
+      body: Column(
+        mainAxisAlignment: MainAxisAlignment.start,
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          const SizedBox(height: 12),
+          Padding(
+            padding: const EdgeInsets.symmetric(horizontal: 16.0),
+            child: MenuSectionTitle(
+              title: S.of(context).addANewEmail,
+            ),
+          ),
+          Padding(
+            padding: const EdgeInsets.symmetric(horizontal: 16.0),
+            child: TextInputWidget(
+              hintText: S.of(context).email,
+              textEditingController: _textController,
+              shouldSurfaceExecutionStates: false,
+              onChange: (value) {
+                _filteredUsers = _suggestedUsers
+                    .where(
+                      (element) => element.email.toLowerCase().contains(
+                            _textController.text.trim().toLowerCase(),
+                          ),
+                    )
+                    .toList();
+
+                final filterdFilesHaveSelectedEmail =
+                    _filteredUsers.any((user) => user.email == _selectedEmail);
+                if (!filterdFilesHaveSelectedEmail) {
+                  _selectedEmail = null;
+                }
+
+                _newEmail = value.trim();
+                _emailIsValid = EmailValidator.validate(_newEmail);
+                setState(() {});
+              },
+              focusNode: textFieldFocusNode,
+              keyboardType: TextInputType.emailAddress,
+              shouldUnfocusOnClearOrSubmit: true,
+              autoCorrect: false,
+            ),
+          ),
+          const SizedBox(height: 16),
+          Expanded(
+            child: Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 16.0),
+              child: Column(
+                children: [
+                  _filteredUsers.isNotEmpty
+                      ? const MenuSectionTitle(
+                          title: "Or pick from your contacts",
+                        )
+                      : const SizedBox.shrink(),
+                  Expanded(
+                    child: ListView.builder(
+                      physics: const BouncingScrollPhysics(),
+                      itemBuilder: (context, index) {
+                        final currentUser = _filteredUsers[index];
+                        return Column(
+                          children: [
+                            MenuItemWidget(
+                              captionedTextWidget: CaptionedTextWidget(
+                                title: currentUser.email,
+                              ),
+                              leadingIconSize: 24.0,
+                              leadingIconWidget: UserAvatarWidget(
+                                currentUser,
+                                type: AvatarType.mini,
+                              ),
+                              menuItemColor:
+                                  getEnteColorScheme(context).fillFaint,
+                              pressedColor:
+                                  getEnteColorScheme(context).fillFaint,
+                              trailingIcon:
+                                  (_selectedEmail == currentUser.email)
+                                      ? Icons.check
+                                      : null,
+                              onTap: () async {
+                                textFieldFocusNode.unfocus();
+                                if (_selectedEmail == currentUser.email) {
+                                  _selectedEmail = null;
+                                } else {
+                                  _selectedEmail = currentUser.email;
+                                }
+                                setState(() => {});
+                              },
+                              isTopBorderRadiusRemoved: index > 0,
+                              isBottomBorderRadiusRemoved:
+                                  index < (_filteredUsers.length - 1),
+                            ),
+                            (index == (_filteredUsers.length - 1))
+                                ? const SizedBox.shrink()
+                                : DividerWidget(
+                                    dividerType: DividerType.menu,
+                                    bgColor:
+                                        getEnteColorScheme(context).fillFaint,
+                                  ),
+                          ],
+                        );
+                      },
+                      itemCount: _filteredUsers.length,
+                    ),
+                  ),
+                ],
+              ),
+            ),
+          ),
+          SafeArea(
+            child: Padding(
+              padding: const EdgeInsets.only(
+                top: 8,
+                bottom: 8,
+                left: 16,
+                right: 16,
+              ),
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: [
+                  const SizedBox(height: 8),
+                  ButtonWidget(
+                    buttonType: ButtonType.primary,
+                    buttonSize: ButtonSize.large,
+                    labelText: S.of(context).link,
+                    isDisabled:
+                        !_emailIsValid && (_selectedEmail?.isEmpty ?? true),
+                    onTap: _onLinkButtonTap,
+                  ),
+                  const SizedBox(height: 12),
+                ],
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Future<void> _onLinkButtonTap() async {
+    final newEmail = _emailIsValid ? _newEmail : _selectedEmail!;
+    if (widget.isFromSaveOrEditPerson) {
+      await _emailHoldsEnteAccount(newEmail).then((value) {
+        if (value) {
+          Navigator.of(context).pop(newEmail);
+        }
+      });
+    } else {
+      try {
+        final result = await linkEmailToPerson(
+          newEmail,
+          widget.personID!,
+          context,
+        );
+        if (!result) {
+          _textController.clear();
+          return;
+        }
+
+        Navigator.of(context).pop(newEmail);
+      } catch (e) {
+        await showGenericErrorDialog(
+          context: context,
+          error: e,
+        );
+        _logger.severe("Failed to link email to person", e);
+      }
+    }
+  }
+
+  List<User> _getContacts() {
+    final List<User> suggestedUsers = [];
+    final int ownerID = Configuration.instance.getUserID()!;
+    final cachedEmailToNameMap = PersonService.instance.emailToNameMapCache;
+
+    for (final c in CollectionsService.instance.getActiveCollections()) {
+      if (c.owner?.id == ownerID) {
+        for (final User? u in c.sharees ?? []) {
+          if (u != null && u.id != null && u.email.isNotEmpty) {
+            if (!suggestedUsers.any((user) => user.email == u.email) &&
+                cachedEmailToNameMap[u.email] == null) {
+              suggestedUsers.add(u);
+            }
+          }
+        }
+      } else if (c.owner?.id != null && c.owner!.email.isNotEmpty) {
+        if (!suggestedUsers.any((user) => user.email == c.owner!.email) &&
+            cachedEmailToNameMap[c.owner!.email] == null) {
+          suggestedUsers.add(c.owner!);
+        }
+      }
+    }
+    final cachedUserDetails = UserService.instance.getCachedUserDetails();
+    if (cachedUserDetails?.familyData?.members?.isNotEmpty ?? false) {
+      for (final member in cachedUserDetails!.familyData!.members!) {
+        if (!suggestedUsers.any((user) => user.email == member.email) &&
+            cachedEmailToNameMap[member.email] == null) {
+          suggestedUsers.add(User(email: member.email));
+        }
+      }
+    }
+
+    suggestedUsers.sort((a, b) => a.email.compareTo(b.email));
+
+    return suggestedUsers;
+  }
+
+  Future<bool> _emailHoldsEnteAccount(String email) async {
+    String? publicKey;
+
+    try {
+      publicKey = await UserService.instance.getPublicKey(email);
+    } catch (e) {
+      _logger.severe("Failed to get public key", e);
+      await showGenericErrorDialog(context: context, error: e);
+      return false;
+    }
+    // getPublicKey can return null when no user is associated with given
+    // email id
+    if (publicKey == null || publicKey == '') {
+      await showDialogWidget(
+        context: context,
+        title: S.of(context).noEnteAccountExclamation,
+        body: "$email does not have an ente account.",
+        icon: Icons.info_outline,
+        isDismissible: true,
+        buttons: [
+          ButtonWidget(
+            buttonType: ButtonType.neutral,
+            icon: Icons.adaptive.share,
+            labelText: S.of(context).invite,
+            isInAlert: true,
+            onTap: () async {
+              unawaited(
+                shareText(
+                  S.of(context).shareTextRecommendUsingEnte,
+                ),
+              );
+            },
+          ),
+          ButtonWidget(
+            buttonType: ButtonType.secondary,
+            labelText: S.of(context).cancel,
+            isInAlert: true,
+          ),
+        ],
+      );
+      return false;
+    } else {
+      return true;
+    }
+  }
+
+  Future<bool> linkEmailToPerson(
+    String email,
+    String personID,
+    BuildContext context,
+  ) async {
+    if (await checkIfEmailAlreadyAssignedToAPerson(email)) {
+      throw Exception("Email already linked to a person");
+    }
+
+    String? publicKey;
+
+    try {
+      publicKey = await UserService.instance.getPublicKey(email);
+    } catch (e) {
+      _logger.severe("Failed to get public key", e);
+      await showGenericErrorDialog(context: context, error: e);
+      return false;
+    }
+    // getPublicKey can return null when no user is associated with given
+    // email id
+    if (publicKey == null || publicKey == '') {
+      await showDialogWidget(
+        context: context,
+        title: "No Ente account!",
+        icon: Icons.info_outline,
+        body: S.of(context).emailNoEnteAccount(email),
+        isDismissible: true,
+        buttons: [
+          ButtonWidget(
+            buttonType: ButtonType.neutral,
+            icon: Icons.adaptive.share,
+            labelText: S.of(context).invite,
+            isInAlert: true,
+            onTap: () async {
+              unawaited(
+                shareText(
+                  S.of(context).shareTextRecommendUsingEnte,
+                ),
+              );
+            },
+          ),
+        ],
+      );
+      return false;
+    } else {
+      try {
+        final personEntity = await PersonService.instance.getPerson(personID);
+        late final PersonEntity updatedPerson;
+
+        if (personEntity == null) {
+          throw AssertionError(
+            "Cannot link email to non-existent person. First save the person",
+          );
+        } else {
+          updatedPerson = await PersonService.instance
+              .updateAttributes(personID, email: email);
+        }
+
+        Bus.instance.fire(
+          PeopleChangedEvent(
+            type: PeopleEventType.saveOrEditPerson,
+            source: "linkEmailToPerson",
+            person: updatedPerson,
+          ),
+        );
+        return true;
+      } catch (e) {
+        _logger.severe("Failed to link email to person", e);
+        await showGenericErrorDialog(context: context, error: e);
+        return false;
+      }
+    }
+  }
+}
diff --git a/mobile/lib/ui/viewer/people/people_app_bar.dart b/mobile/lib/ui/viewer/people/people_app_bar.dart
index 6a5e4b49de0..dfa3e05682d 100644
--- a/mobile/lib/ui/viewer/people/people_app_bar.dart
+++ b/mobile/lib/ui/viewer/people/people_app_bar.dart
@@ -1,6 +1,5 @@
 import 'dart:async';
 
-import "package:flutter/cupertino.dart";
 import 'package:flutter/material.dart';
 import 'package:logging/logging.dart';
 import 'package:photos/core/configuration.dart';
@@ -15,6 +14,7 @@ import "package:photos/models/ml/face/person.dart";
 import 'package:photos/models/selected_files.dart';
 import 'package:photos/services/collections_service.dart';
 import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
+import "package:photos/theme/ente_theme.dart";
 import 'package:photos/ui/actions/collection/collection_sharing_actions.dart';
 import "package:photos/ui/viewer/gallery/state/inherited_search_filter_data.dart";
 import "package:photos/ui/viewer/hierarchicial_search/applied_filters_for_appbar.dart";
@@ -22,6 +22,7 @@ import "package:photos/ui/viewer/hierarchicial_search/recommended_filters_for_ap
 import "package:photos/ui/viewer/people/add_person_action_sheet.dart";
 import "package:photos/ui/viewer/people/people_page.dart";
 import "package:photos/ui/viewer/people/person_cluster_suggestion.dart";
+import "package:photos/ui/viewer/people/person_selection_action_widgets.dart";
 import "package:photos/ui/viewer/people/save_or_edit_person.dart";
 import "package:photos/utils/dialog_util.dart";
 import "package:photos/utils/navigation_util.dart";
@@ -52,6 +53,7 @@ enum PeoplePopupAction {
   removeLabel,
   reviewSuggestions,
   unignore,
+  reassignMe,
 }
 
 class _AppBarWidgetState extends State<PeopleAppBar> {
@@ -64,28 +66,57 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
   bool isQuickLink = false;
   late GalleryType galleryType;
   late PersonEntity person;
+  late StreamSubscription<PeopleChangedEvent> _peopleChangedEventSubscription;
 
   @override
   void initState() {
     super.initState();
+    person = widget.person;
+    galleryType = widget.type;
+    collectionActions = CollectionActions(CollectionsService.instance);
     _selectedFilesListener = () {
       setState(() {});
     };
-    collectionActions = CollectionActions(CollectionsService.instance);
+
     widget.selectedFiles.addListener(_selectedFilesListener);
+
+    if (person.data.email == Configuration.instance.getEmail()) {
+      _appBarTitle = "${widget.title} (Me)";
+    } else {
+      _appBarTitle = widget.title;
+    }
+
     _userAuthEventSubscription =
         Bus.instance.on<SubscriptionPurchasedEvent>().listen((event) {
       setState(() {});
     });
-    person = widget.person;
-    _appBarTitle = widget.title;
-    galleryType = widget.type;
+
+    _peopleChangedEventSubscription =
+        Bus.instance.on<PeopleChangedEvent>().listen(
+      (event) {
+        if (event.person != null &&
+            event.type == PeopleEventType.saveOrEditPerson &&
+            widget.person.remoteID == event.person!.remoteID &&
+            (event.source == "linkEmailToPerson" ||
+                event.source == "reassignMe")) {
+          person = event.person!;
+
+          if (person.data.email == Configuration.instance.getEmail()) {
+            _appBarTitle = "${person.data.name} (Me)";
+          } else {
+            _appBarTitle = person.data.name;
+          }
+          setState(() {});
+        }
+      },
+    );
   }
 
   @override
   void dispose() {
     _userAuthEventSubscription.cancel();
     widget.selectedFiles.removeListener(_selectedFilesListener);
+    _peopleChangedEventSubscription.cancel();
     super.dispose();
   }
 
@@ -163,6 +194,7 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
   }
 
   List<Widget> _getDefaultActions(BuildContext context) {
+    final textTheme = getEnteTextTheme(context);
     final List<Widget> actions = <Widget>[];
     // If the user has selected files, don't show any actions
     if (widget.selectedFiles.files.isNotEmpty ||
@@ -183,7 +215,10 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
                 const Padding(
                   padding: EdgeInsets.all(8),
                 ),
-                Text(S.of(context).edit),
+                Text(
+                  S.of(context).edit,
+                  style: textTheme.bodyBold,
+                ),
               ],
             ),
           ),
@@ -195,7 +230,10 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
                 const Padding(
                   padding: EdgeInsets.all(8),
                 ),
-                Text(S.of(context).review),
+                Text(
+                  S.of(context).review,
+                  style: textTheme.bodyBold,
+                ),
               ],
             ),
           ),
@@ -207,10 +245,30 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
                 const Padding(
                   padding: EdgeInsets.all(8),
                 ),
-                Text(S.of(context).remove),
+                Text(
+                  S.of(context).remove,
+                  style: textTheme.bodyBold,
+                ),
               ],
             ),
           ),
+          if (widget.person.data.email != null &&
+              (widget.person.data.email == Configuration.instance.getEmail()))
+            PopupMenuItem(
+              value: PeoplePopupAction.reassignMe,
+              child: Row(
+                children: [
+                  const Icon(Icons.delete_outline),
+                  const Padding(
+                    padding: EdgeInsets.all(8),
+                  ),
+                  Text(
+                    "Reassign \"Me\"",
+                    style: textTheme.bodyBold,
+                  ),
+                ],
+              ),
+            ),
         ],
       );
     } else {
@@ -256,6 +314,8 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
               await _showPerson(context);
             } else if (value == PeoplePopupAction.removeLabel) {
               await _resetPerson(context);
+            } else if (value == PeoplePopupAction.reassignMe) {
+              await _reassignMe(context);
             }
           },
         ),
@@ -330,4 +390,13 @@ class _AppBarWidgetState extends State<PeopleAppBar> {
     //   unawaited(changeCoverPhoto(context, widget.collection!, coverPhotoID));
     // }
   }
+
+  Future<void> _reassignMe(BuildContext context) async {
+    await routeToPage(
+      context,
+      ReassignMeSelectionPage(
+        currentMeId: widget.person.remoteID,
+      ),
+    );
+  }
 }
diff --git a/mobile/lib/ui/viewer/people/people_page.dart b/mobile/lib/ui/viewer/people/people_page.dart
index 7e8a3c9a79d..73c2a2cfa5e 100644
--- a/mobile/lib/ui/viewer/people/people_page.dart
+++ b/mobile/lib/ui/viewer/people/people_page.dart
@@ -16,6 +16,7 @@ import 'package:photos/models/selected_files.dart';
 import "package:photos/services/machine_learning/face_ml/face_filtering/face_filtering_constants.dart";
 import "package:photos/services/machine_learning/face_ml/feedback/cluster_feedback.dart";
 import "package:photos/services/search_service.dart";
+import "package:photos/ui/components/end_to_end_banner.dart";
 import 'package:photos/ui/viewer/actions/file_selection_overlay_bar.dart';
 import 'package:photos/ui/viewer/gallery/gallery.dart';
 import "package:photos/ui/viewer/gallery/hierarchical_search_gallery.dart";
@@ -23,9 +24,12 @@ import "package:photos/ui/viewer/gallery/state/gallery_files_inherited_widget.da
 import "package:photos/ui/viewer/gallery/state/inherited_search_filter_data.dart";
 import "package:photos/ui/viewer/gallery/state/search_filter_data_provider.dart";
 import "package:photos/ui/viewer/gallery/state/selection_state.dart";
+import "package:photos/ui/viewer/people/link_email_screen.dart";
+
 import "package:photos/ui/viewer/people/people_app_bar.dart";
 import "package:photos/ui/viewer/people/people_banner.dart";
 import "package:photos/ui/viewer/people/person_cluster_suggestion.dart";
+import "package:photos/utils/navigation_util.dart";
 
 class PeoplePage extends StatefulWidget {
   final String tagPrefix;
@@ -52,6 +56,7 @@ class _PeoplePageState extends State<PeoplePage> {
   List<EnteFile>? files;
   int? smallestClusterSize;
   Future<List<EnteFile>> filesFuture = Future.value([]);
+  late PersonEntity _person;
 
   bool get showSuggestionBanner => (!userDismissedSuggestionBanner &&
       smallestClusterSize != null &&
@@ -67,9 +72,17 @@ class _PeoplePageState extends State<PeoplePage> {
   @override
   void initState() {
     super.initState();
+    _person = widget.person;
     ClusterFeedbackService.resetLastViewedClusterID();
     _peopleChangedEvent = Bus.instance.on<PeopleChangedEvent>().listen((event) {
-      setState(() {});
+      setState(() {
+        if (event.type == PeopleEventType.saveOrEditPerson) {
+          if (event.person != null &&
+              event.person!.remoteID == _person.remoteID) {
+            _person = event.person!;
+          }
+        }
+      });
     });
 
     filesFuture = loadPersonFiles();
@@ -91,10 +104,10 @@ class _PeoplePageState extends State<PeoplePage> {
   Future<List<EnteFile>> loadPersonFiles() async {
     log("loadPersonFiles");
     final result = await SearchService.instance
-        .getClusterFilesForPersonID(widget.person.remoteID);
+        .getClusterFilesForPersonID(_person.remoteID);
     if (result.isEmpty) {
       _logger.severe(
-        "No files found for person with id ${widget.person.remoteID}, can't load files",
+        "No files found for person with id ${_person.remoteID}, can't load files",
       );
       return [];
     }
@@ -121,7 +134,7 @@ class _PeoplePageState extends State<PeoplePage> {
 
   @override
   Widget build(BuildContext context) {
-    _logger.info("Building for ${widget.person.data.name}");
+    _logger.info("Building for ${_person.data.name}");
     return GalleryFilesState(
       child: InheritedSearchFilterDataWrapper(
         searchFilterDataProvider: widget.searchResult != null
@@ -136,9 +149,9 @@ class _PeoplePageState extends State<PeoplePage> {
                 Size.fromHeight(widget.searchResult != null ? 90.0 : 50.0),
             child: PeopleAppBar(
               GalleryType.peopleTag,
-              widget.person.data.name,
+              _person.data.name,
               _selectedFiles,
-              widget.person,
+              _person,
             ),
           ),
           body: FutureBuilder<List<EnteFile>>(
@@ -177,6 +190,7 @@ class _PeoplePageState extends State<PeoplePage> {
                                               selectedFiles: _selectedFiles,
                                               personFiles: personFiles,
                                               loadPersonFiles: loadPersonFiles,
+                                              personEntity: _person,
                                             );
                                     },
                                   )
@@ -185,11 +199,12 @@ class _PeoplePageState extends State<PeoplePage> {
                                     selectedFiles: _selectedFiles,
                                     personFiles: personFiles,
                                     loadPersonFiles: loadPersonFiles,
+                                    personEntity: _person,
                                   ),
                             FileSelectionOverlayBar(
                               PeoplePage.overlayType,
                               _selectedFiles,
-                              person: widget.person,
+                              person: _person,
                             ),
                           ],
                         ),
@@ -216,7 +231,7 @@ class _PeoplePageState extends State<PeoplePage> {
                                     MaterialPageRoute(
                                       builder: (context) =>
                                           PersonReviewClusterSuggestion(
-                                        widget.person,
+                                        _person,
                                       ),
                                     ),
                                   ),
@@ -249,12 +264,14 @@ class _Gallery extends StatelessWidget {
   final SelectedFiles selectedFiles;
   final List<EnteFile> personFiles;
   final Future<List<EnteFile>> Function() loadPersonFiles;
+  final PersonEntity personEntity;
 
   const _Gallery({
     required this.tagPrefix,
     required this.selectedFiles,
     required this.personFiles,
     required this.loadPersonFiles,
+    required this.personEntity,
   });
 
   @override
@@ -286,6 +303,23 @@ class _Gallery extends StatelessWidget {
       tagPrefix: tagPrefix + tagPrefix,
       selectedFiles: selectedFiles,
       initialFiles: personFiles.isNotEmpty ? [personFiles.first] : [],
+      header:
+          personEntity.data.email != null && personEntity.data.email!.isNotEmpty
+              ? const SizedBox.shrink()
+              : Padding(
+                  padding: const EdgeInsets.only(top: 12, bottom: 8),
+                  child: EndToEndBanner(
+                    title: "Link email",
+                    caption: "for faster sharing",
+                    leadingIcon: Icons.email_outlined,
+                    onTap: () async {
+                      await routeToPage(
+                        context,
+                        LinkEmailScreen(personEntity.remoteID),
+                      );
+                    },
+                  ),
+                ),
     );
   }
 }
diff --git a/mobile/lib/ui/viewer/people/person_selection_action_widgets.dart b/mobile/lib/ui/viewer/people/person_selection_action_widgets.dart
new file mode 100644
index 00000000000..acaf6021e6f
--- /dev/null
+++ b/mobile/lib/ui/viewer/people/person_selection_action_widgets.dart
@@ -0,0 +1,431 @@
+import "dart:async";
+
+import "package:flutter/material.dart";
+import "package:logging/logging.dart";
+import "package:photos/core/configuration.dart";
+import "package:photos/core/event_bus.dart";
+import "package:photos/events/people_changed_event.dart";
+import "package:photos/generated/l10n.dart";
+import "package:photos/models/file/file.dart";
+import "package:photos/models/ml/face/person.dart";
+import "package:photos/models/typedefs.dart";
+import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
+import "package:photos/theme/ente_theme.dart";
+import "package:photos/ui/common/loading_widget.dart";
+import "package:photos/ui/components/buttons/button_widget.dart";
+import "package:photos/ui/components/dialog_widget.dart";
+import "package:photos/ui/components/models/button_type.dart";
+import "package:photos/ui/viewer/search/result/person_face_widget.dart";
+import "package:photos/utils/dialog_util.dart";
+import "package:photos/utils/person_contact_linking_util.dart";
+import "package:photos/utils/toast_util.dart";
+
+class PersonEntityWithThumbnailFile {
+  final PersonEntity person;
+  final EnteFile thumbnailFile;
+
+  const PersonEntityWithThumbnailFile(
+    this.person,
+    this.thumbnailFile,
+  );
+}
+
+class LinkContactToPersonSelectionPage extends StatefulWidget {
+  final String? emailToLink;
+  const LinkContactToPersonSelectionPage({
+    this.emailToLink,
+    super.key,
+  });
+
+  @override
+  State<LinkContactToPersonSelectionPage> createState() =>
+      _LinkContactToPersonSelectionPageState();
+}
+
+class _LinkContactToPersonSelectionPageState
+    extends State<LinkContactToPersonSelectionPage> {
+  late Future<List<PersonEntityWithThumbnailFile>>
+      _personEntitiesWithThumnailFile;
+  final _logger = Logger('LinkContactToPersonSelectionPage');
+
+  @override
+  void initState() {
+    super.initState();
+
+    _personEntitiesWithThumnailFile =
+        PersonService.instance.getPersons().then((persons) async {
+      final List<PersonEntityWithThumbnailFile> result = [];
+      for (final person in persons) {
+        if (person.data.email != null && person.data.email!.isNotEmpty) {
+          continue;
+        }
+        final file = await PersonService.instance.getRecentFileOfPerson(person);
+        result.add(PersonEntityWithThumbnailFile(person, file));
+      }
+      return result;
+    });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final smallFontSize = getEnteTextTheme(context).small.fontSize!;
+    final textScaleFactor =
+        MediaQuery.textScalerOf(context).scale(smallFontSize) / smallFontSize;
+    const horizontalEdgePadding = 20.0;
+    const gridPadding = 16.0;
+    return Scaffold(
+      appBar: AppBar(
+        title: const Text(
+          "Select person to link",
+        ),
+        centerTitle: false,
+      ),
+      body: FutureBuilder<List<PersonEntityWithThumbnailFile>>(
+        future: _personEntitiesWithThumnailFile,
+        builder: (context, snapshot) {
+          if (snapshot.connectionState == ConnectionState.waiting) {
+            return const Center(child: EnteLoadingWidget());
+          } else if (snapshot.hasError) {
+            return const Center(child: Icon(Icons.error_outline_rounded));
+          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {
+            return Center(child: Text(S.of(context).noResultsFound + '.'));
+          } else {
+            final results = snapshot.data!;
+            final screenWidth = MediaQuery.of(context).size.width;
+            final crossAxisCount = (screenWidth / 100).floor();
+
+            final itemSize = (screenWidth -
+                    ((horizontalEdgePadding * 2) +
+                        ((crossAxisCount - 1) * gridPadding))) /
+                crossAxisCount;
+
+            return GridView.builder(
+              padding: const EdgeInsets.fromLTRB(
+                horizontalEdgePadding,
+                16,
+                horizontalEdgePadding,
+                96,
+              ),
+              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                mainAxisSpacing: gridPadding,
+                crossAxisSpacing: gridPadding,
+                crossAxisCount: crossAxisCount,
+                childAspectRatio:
+                    itemSize / (itemSize + (24 * textScaleFactor)),
+              ),
+              itemCount: results.length,
+              itemBuilder: (context, index) {
+                return _RoundedPersonFaceWidget(
+                  onTap: () async {
+                    try {
+                      final updatedPerson = await linkPersonToContact(
+                        context,
+                        emailToLink: widget.emailToLink!,
+                        personEntity: results[index].person,
+                      );
+
+                      if (updatedPerson != null) {
+                        Navigator.of(context).pop(updatedPerson);
+                      }
+                    } catch (e) {
+                      await showGenericErrorDialog(context: context, error: e);
+                      _logger.severe("Failed to link person to contact", e);
+                    }
+                  },
+                  itemSize: itemSize,
+                  personEntitiesWithThumbnailFile: results[index],
+                );
+              },
+            );
+          }
+        },
+      ),
+    );
+  }
+
+  Future<PersonEntity?> linkPersonToContact(
+    BuildContext context, {
+    required String emailToLink,
+    required PersonEntity personEntity,
+  }) async {
+    if (await checkIfEmailAlreadyAssignedToAPerson(emailToLink)) {
+      throw Exception("Email already linked to a person");
+    }
+
+    final personName = personEntity.data.name;
+    PersonEntity? updatedPerson;
+    final result = await showDialogWidget(
+      context: context,
+      title: "Link person to $emailToLink",
+      icon: Icons.info_outline,
+      body: "This will link $personName to $emailToLink",
+      isDismissible: true,
+      buttons: [
+        ButtonWidget(
+          buttonAction: ButtonAction.first,
+          buttonType: ButtonType.neutral,
+          labelText: "Link",
+          isInAlert: true,
+          onTap: () async {
+            updatedPerson = await PersonService.instance
+                .updateAttributes(personEntity.remoteID, email: emailToLink);
+            Bus.instance.fire(
+              PeopleChangedEvent(
+                type: PeopleEventType.saveOrEditPerson,
+                source: "linkPersonToContact",
+                person: updatedPerson,
+              ),
+            );
+          },
+        ),
+        ButtonWidget(
+          buttonAction: ButtonAction.cancel,
+          buttonType: ButtonType.secondary,
+          labelText: S.of(context).cancel,
+          isInAlert: true,
+        ),
+      ],
+    );
+
+    if (result?.exception != null) {
+      Logger("linkPersonToContact")
+          .severe("Failed to link person to contact", result!.exception);
+      await showGenericErrorDialog(context: context, error: result.exception);
+      return null;
+    } else {
+      return updatedPerson;
+    }
+  }
+}
+
+class ReassignMeSelectionPage extends StatefulWidget {
+  final String currentMeId;
+  const ReassignMeSelectionPage({
+    required this.currentMeId,
+    super.key,
+  });
+
+  @override
+  State<ReassignMeSelectionPage> createState() =>
+      _ReassignMeSelectionPageState();
+}
+
+class _ReassignMeSelectionPageState extends State<ReassignMeSelectionPage> {
+  late Future<List<PersonEntityWithThumbnailFile>>
+      _personEntitiesWithThumnailFile;
+  final _logger = Logger('ReassignMeSelectionPage');
+
+  @override
+  void initState() {
+    super.initState();
+
+    _personEntitiesWithThumnailFile =
+        PersonService.instance.getPersons().then((persons) async {
+      final List<PersonEntityWithThumbnailFile> result = [];
+      for (final person in persons) {
+        if (person.data.email != null && person.data.email!.isNotEmpty) {
+          continue;
+        }
+        final file = await PersonService.instance.getRecentFileOfPerson(person);
+        result.add(PersonEntityWithThumbnailFile(person, file));
+      }
+      return result;
+    });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final smallFontSize = getEnteTextTheme(context).small.fontSize!;
+    final textScaleFactor =
+        MediaQuery.textScalerOf(context).scale(smallFontSize) / smallFontSize;
+    const horizontalEdgePadding = 20.0;
+    const gridPadding = 16.0;
+    return Scaffold(
+      appBar: AppBar(
+        title: const Text(
+          "Select your face",
+        ),
+        centerTitle: false,
+      ),
+      body: FutureBuilder<List<PersonEntityWithThumbnailFile>>(
+        future: _personEntitiesWithThumnailFile,
+        builder: (context, snapshot) {
+          if (snapshot.connectionState == ConnectionState.waiting) {
+            return const Center(child: EnteLoadingWidget());
+          } else if (snapshot.hasError) {
+            return const Center(child: Icon(Icons.error_outline_rounded));
+          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {
+            return Center(child: Text(S.of(context).noResultsFound + '.'));
+          } else {
+            final results = snapshot.data!;
+            final screenWidth = MediaQuery.of(context).size.width;
+            final crossAxisCount = (screenWidth / 100).floor();
+
+            final itemSize = (screenWidth -
+                    ((horizontalEdgePadding * 2) +
+                        ((crossAxisCount - 1) * gridPadding))) /
+                crossAxisCount;
+
+            return GridView.builder(
+              padding: const EdgeInsets.fromLTRB(
+                horizontalEdgePadding,
+                16,
+                horizontalEdgePadding,
+                96,
+              ),
+              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                mainAxisSpacing: gridPadding,
+                crossAxisSpacing: gridPadding,
+                crossAxisCount: crossAxisCount,
+                childAspectRatio:
+                    itemSize / (itemSize + (24 * textScaleFactor)),
+              ),
+              itemCount: results.length,
+              itemBuilder: (context, index) {
+                return _RoundedPersonFaceWidget(
+                  onTap: () async {
+                    final dialog =
+                        createProgressDialog(context, "Reassigning...");
+                    unawaited(dialog.show());
+                    try {
+                      await reassignMe(
+                        currentPersonID: widget.currentMeId,
+                        newPersonID: results[index].person.remoteID,
+                      );
+                      showToast(
+                        context,
+                        "Reassigned you to ${results[index].person.data.name}",
+                      );
+                      await Future.delayed(const Duration(milliseconds: 1250));
+                      unawaited(dialog.hide());
+                      Navigator.of(context).pop();
+                    } catch (e) {
+                      unawaited(dialog.hide());
+                      unawaited(
+                        showGenericErrorDialog(context: context, error: e),
+                      );
+                    }
+                  },
+                  itemSize: itemSize,
+                  personEntitiesWithThumbnailFile: results[index],
+                );
+              },
+            );
+          }
+        },
+      ),
+    );
+  }
+
+  Future<void> reassignMe({
+    required String currentPersonID,
+    required String newPersonID,
+  }) async {
+    try {
+      final email = Configuration.instance.getEmail();
+
+      final updatedPerson1 = await PersonService.instance
+          .updateAttributes(currentPersonID, email: '');
+      Bus.instance.fire(
+        PeopleChangedEvent(
+          type: PeopleEventType.saveOrEditPerson,
+          source: "reassignMe",
+          person: updatedPerson1,
+        ),
+      );
+
+      final updatedPerson2 = await PersonService.instance
+          .updateAttributes(newPersonID, email: email);
+      Bus.instance.fire(
+        PeopleChangedEvent(
+          type: PeopleEventType.saveOrEditPerson,
+          source: "reassignMe",
+          person: updatedPerson2,
+        ),
+      );
+    } catch (e) {
+      _logger.severe("Failed to reassign me", e);
+      rethrow;
+    }
+  }
+}
+
+class _RoundedPersonFaceWidget extends StatelessWidget {
+  final FutureVoidCallback onTap;
+  final double itemSize;
+  final PersonEntityWithThumbnailFile personEntitiesWithThumbnailFile;
+
+  const _RoundedPersonFaceWidget({
+    required this.onTap,
+    required this.itemSize,
+    required this.personEntitiesWithThumbnailFile,
+  });
+
+  double get borderRadius => 82 * (itemSize / 102);
+
+  @override
+  Widget build(BuildContext context) {
+    return GestureDetector(
+      onTap: onTap,
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        crossAxisAlignment: CrossAxisAlignment.center,
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          Stack(
+            clipBehavior: Clip.none,
+            alignment: Alignment.center,
+            children: [
+              ClipPath(
+                clipper: ShapeBorderClipper(
+                  shape: ContinuousRectangleBorder(
+                    borderRadius: BorderRadius.circular(borderRadius),
+                  ),
+                ),
+                child: Container(
+                  width: itemSize,
+                  height: itemSize,
+                  decoration: BoxDecoration(
+                    color: getEnteColorScheme(context).strokeFaint,
+                  ),
+                ),
+              ),
+              SizedBox(
+                width: itemSize,
+                height: itemSize,
+                child: SizedBox(
+                  width: itemSize - 2,
+                  height: itemSize - 2,
+                  child: ClipPath(
+                    clipper: ShapeBorderClipper(
+                      shape: ContinuousRectangleBorder(
+                        borderRadius: BorderRadius.circular(
+                          borderRadius - 1,
+                        ),
+                      ),
+                    ),
+                    child: PersonFaceWidget(
+                      personEntitiesWithThumbnailFile.thumbnailFile,
+                      personId: personEntitiesWithThumbnailFile.person.remoteID,
+                      useFullFile: true,
+                    ),
+                  ),
+                ),
+              ),
+            ],
+          ),
+          Padding(
+            padding: const EdgeInsets.only(top: 6, bottom: 0),
+            child: Text(
+              personEntitiesWithThumbnailFile.person.data.name,
+              maxLines: 1,
+              textAlign: TextAlign.center,
+              overflow: TextOverflow.ellipsis,
+              style: getEnteTextTheme(context).small,
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
diff --git a/mobile/lib/ui/viewer/people/save_or_edit_person.dart b/mobile/lib/ui/viewer/people/save_or_edit_person.dart
index 636d8558e4a..e53b743e4a8 100644
--- a/mobile/lib/ui/viewer/people/save_or_edit_person.dart
+++ b/mobile/lib/ui/viewer/people/save_or_edit_person.dart
@@ -1,11 +1,14 @@
 import 'dart:async';
 import "dart:developer" as dev;
+import "dart:io";
 import "dart:math" show max;
 
 import "package:flutter/foundation.dart";
 import "package:flutter/material.dart";
+import "package:flutter_animate/flutter_animate.dart";
 import "package:logging/logging.dart";
 import "package:ml_linalg/linalg.dart" as ml;
+import "package:photos/core/configuration.dart";
 import "package:photos/core/event_bus.dart";
 import "package:photos/db/ml/db.dart";
 import "package:photos/ente_theme_data.dart";
@@ -22,14 +25,18 @@ import "package:photos/services/search_service.dart";
 import "package:photos/theme/ente_theme.dart";
 import "package:photos/ui/common/date_input.dart";
 import "package:photos/ui/common/loading_widget.dart";
+import "package:photos/ui/components/action_sheet_widget.dart";
 import "package:photos/ui/components/buttons/button_widget.dart";
 import "package:photos/ui/components/models/button_type.dart";
 import "package:photos/ui/viewer/file/no_thumbnail_widget.dart";
 import "package:photos/ui/viewer/gallery/hooks/pick_person_avatar.dart";
+import "package:photos/ui/viewer/people/link_email_screen.dart";
 import "package:photos/ui/viewer/people/person_clusters_page.dart";
 import "package:photos/ui/viewer/people/person_row_item.dart";
 import "package:photos/ui/viewer/search/result/person_face_widget.dart";
 import "package:photos/utils/dialog_util.dart";
+import "package:photos/utils/navigation_util.dart";
+import "package:photos/utils/person_contact_linking_util.dart";
 import "package:photos/utils/toast_util.dart";
 
 class SaveOrEditPerson extends StatefulWidget {
@@ -57,256 +64,379 @@ class _SaveOrEditPersonState extends State<SaveOrEditPerson> {
   bool isKeypadOpen = false;
   String _inputName = "";
   String? _selectedDate;
+  String? _email;
   bool userAlreadyAssigned = false;
   late final Logger _logger = Logger("_SavePersonState");
   Timer? _debounce;
   List<(PersonEntity, EnteFile)> _cachedPersons = [];
   Map<String, double> _personToMaxSimilarity = {};
   PersonEntity? person;
+  final _nameFocsNode = FocusNode();
 
   @override
   void initState() {
     super.initState();
     _inputName = widget.person?.data.name ?? "";
     _selectedDate = widget.person?.data.birthDate;
+    _email = widget.person?.data.email;
     person = widget.person;
   }
 
   @override
   void dispose() {
+    _debounce?.cancel();
+    _nameFocsNode.dispose();
     _debounce?.cancel();
     super.dispose();
   }
 
   @override
   Widget build(BuildContext context) {
-    return Scaffold(
-      resizeToAvoidBottomInset: isKeypadOpen,
-      appBar: AppBar(
-        title: Align(
-          alignment: Alignment.centerLeft,
-          child: Text(
-            widget.isEditing
-                ? context.l10n.editPerson
-                : context.l10n.savePerson,
+    return PopScope(
+      canPop: changed && _inputName.isNotEmpty ? false : true,
+      onPopInvokedWithResult: (bool didPop, Object? result) async {
+        if (didPop) {
+          return;
+        }
+
+        _nameFocsNode.unfocus();
+        final result = await _saveChangesPrompt(context);
+
+        if (result is PersonEntity) {
+          if (context.mounted) {
+            Navigator.pop(context, result);
+          }
+
+          return;
+        }
+
+        late final bool shouldPop;
+        if (result == ButtonAction.first || result == ButtonAction.second) {
+          shouldPop = true;
+        } else {
+          shouldPop = false;
+        }
+
+        if (context.mounted && shouldPop) {
+          Navigator.pop(context);
+        }
+      },
+      child: Scaffold(
+        resizeToAvoidBottomInset: isKeypadOpen,
+        appBar: AppBar(
+          title: Align(
+            alignment: Alignment.centerLeft,
+            child: Text(
+              widget.isEditing
+                  ? context.l10n.editPerson
+                  : context.l10n.savePerson,
+            ),
           ),
         ),
-      ),
-      body: GestureDetector(
-        onTap: () {
-          FocusScope.of(context).unfocus();
-        },
-        child: SafeArea(
-          child: Column(
-            children: [
-              Expanded(
-                child: SingleChildScrollView(
-                  padding: const EdgeInsets.only(
-                    bottom: 32.0,
-                    left: 16.0,
-                    right: 16.0,
-                  ),
-                  child: Column(
-                    children: [
-                      const SizedBox(height: 48),
-                      if (person != null)
-                        FutureBuilder<(String, EnteFile)>(
-                          future: _getRecentFileWithClusterID(person!),
-                          builder: (context, snapshot) {
-                            if (snapshot.hasData) {
-                              final String personClusterID = snapshot.data!.$1;
-                              final personFile = snapshot.data!.$2;
-                              return Stack(
-                                children: [
-                                  SizedBox(
-                                    height: 110,
-                                    width: 110,
-                                    child: ClipPath(
-                                      clipper: ShapeBorderClipper(
-                                        shape: ContinuousRectangleBorder(
-                                          borderRadius:
-                                              BorderRadius.circular(80),
+        body: GestureDetector(
+          onTap: () {
+            FocusScope.of(context).unfocus();
+          },
+          child: SafeArea(
+            child: Column(
+              children: [
+                Expanded(
+                  child: SingleChildScrollView(
+                    padding: const EdgeInsets.only(
+                      bottom: 32.0,
+                      left: 16.0,
+                      right: 16.0,
+                    ),
+                    child: Column(
+                      children: [
+                        const SizedBox(height: 48),
+                        if (person != null)
+                          FutureBuilder<(String, EnteFile)>(
+                            future: _getRecentFileWithClusterID(person!),
+                            builder: (context, snapshot) {
+                              if (snapshot.hasData) {
+                                final String personClusterID =
+                                    snapshot.data!.$1;
+                                final personFile = snapshot.data!.$2;
+                                return Stack(
+                                  children: [
+                                    SizedBox(
+                                      height: 110,
+                                      width: 110,
+                                      child: ClipPath(
+                                        clipper: ShapeBorderClipper(
+                                          shape: ContinuousRectangleBorder(
+                                            borderRadius:
+                                                BorderRadius.circular(80),
+                                          ),
                                         ),
-                                      ),
-                                      child: snapshot.hasData
-                                          ? PersonFaceWidget(
-                                              key: ValueKey(
-                                                person?.data.avatarFaceID ?? "",
+                                        child: snapshot.hasData
+                                            ? PersonFaceWidget(
+                                                key: ValueKey(
+                                                  person?.data.avatarFaceID ??
+                                                      "",
+                                                ),
+                                                personFile,
+                                                clusterID: personClusterID,
+                                                personId: person!.remoteID,
+                                              )
+                                            : const NoThumbnailWidget(
+                                                addBorder: false,
                                               ),
-                                              personFile,
-                                              clusterID: personClusterID,
-                                              personId: person!.remoteID,
-                                            )
-                                          : const NoThumbnailWidget(
-                                              addBorder: false,
-                                            ),
+                                      ),
                                     ),
-                                  ),
-                                  if (person != null)
-                                    Positioned(
-                                      right: 0,
-                                      bottom: 0,
-                                      child: Container(
-                                        width: 28,
-                                        height: 28,
-                                        decoration: BoxDecoration(
-                                          borderRadius:
-                                              BorderRadius.circular(8.0),
-                                          boxShadow: Theme.of(context)
-                                              .colorScheme
-                                              .enteTheme
-                                              .shadowMenu,
-                                          color: getEnteColorScheme(context)
-                                              .backgroundElevated2,
-                                        ),
-                                        child: IconButton(
-                                          icon: const Icon(Icons.edit),
-                                          iconSize:
-                                              16, // specify the size of the icon
-                                          onPressed: () async {
-                                            final result =
-                                                await showPersonAvatarPhotoSheet(
-                                              context,
-                                              person!,
-                                            );
-                                            if (result != null) {
-                                              _logger.info(
-                                                'Person avatar updated',
-                                              );
-                                              setState(() {
-                                                person = result;
-                                              });
-                                              Bus.instance.fire(
-                                                PeopleChangedEvent(),
+                                    if (person != null)
+                                      Positioned(
+                                        right: 0,
+                                        bottom: 0,
+                                        child: Container(
+                                          width: 28,
+                                          height: 28,
+                                          decoration: BoxDecoration(
+                                            borderRadius:
+                                                BorderRadius.circular(8.0),
+                                            boxShadow: Theme.of(context)
+                                                .colorScheme
+                                                .enteTheme
+                                                .shadowMenu,
+                                            color: getEnteColorScheme(context)
+                                                .backgroundElevated2,
+                                          ),
+                                          child: IconButton(
+                                            icon: const Icon(Icons.edit),
+                                            iconSize:
+                                                16, // specify the size of the icon
+                                            onPressed: () async {
+                                              final result =
+                                                  await showPersonAvatarPhotoSheet(
+                                                context,
+                                                person!,
                                               );
-                                            }
-                                          },
+                                              if (result != null) {
+                                                _logger.info(
+                                                  'Person avatar updated',
+                                                );
+                                                setState(() {
+                                                  person = result;
+                                                });
+                                                Bus.instance.fire(
+                                                  PeopleChangedEvent(
+                                                    type: PeopleEventType
+                                                        .saveOrEditPerson,
+                                                    source:
+                                                        "_SaveOrEditPersonState",
+                                                    person: result,
+                                                  ),
+                                                );
+                                              }
+                                            },
+                                          ),
                                         ),
                                       ),
+                                  ],
+                                );
+                              } else {
+                                return const SizedBox.shrink();
+                              }
+                            },
+                          ),
+                        if (person == null)
+                          SizedBox(
+                            height: 110,
+                            width: 110,
+                            child: ClipPath(
+                              clipper: ShapeBorderClipper(
+                                shape: ContinuousRectangleBorder(
+                                  borderRadius: BorderRadius.circular(80),
+                                ),
+                              ),
+                              child: widget.file != null
+                                  ? PersonFaceWidget(
+                                      widget.file!,
+                                      clusterID: widget.clusterID,
+                                    )
+                                  : const NoThumbnailWidget(
+                                      addBorder: false,
                                     ),
-                                ],
-                              );
-                            } else {
-                              return const SizedBox.shrink();
+                            ),
+                          ),
+                        const SizedBox(height: 36),
+                        TextFormField(
+                          keyboardType: TextInputType.name,
+                          textCapitalization: TextCapitalization.words,
+                          autocorrect: false,
+                          focusNode: _nameFocsNode,
+                          onChanged: (value) {
+                            if (_debounce?.isActive ?? false) {
+                              _debounce?.cancel();
                             }
+                            _debounce =
+                                Timer(const Duration(milliseconds: 300), () {
+                              setState(() {
+                                _inputName = value;
+                              });
+                            });
                           },
-                        ),
-                      if (person == null)
-                        SizedBox(
-                          height: 110,
-                          width: 110,
-                          child: ClipPath(
-                            clipper: ShapeBorderClipper(
-                              shape: ContinuousRectangleBorder(
-                                borderRadius: BorderRadius.circular(80),
+                          initialValue: _inputName,
+                          decoration: InputDecoration(
+                            focusedBorder: OutlineInputBorder(
+                              borderRadius:
+                                  const BorderRadius.all(Radius.circular(8.0)),
+                              borderSide: BorderSide(
+                                color: getEnteColorScheme(context).strokeMuted,
                               ),
                             ),
-                            child: widget.file != null
-                                ? PersonFaceWidget(
-                                    widget.file!,
-                                    clusterID: widget.clusterID,
-                                  )
-                                : const NoThumbnailWidget(
-                                    addBorder: false,
-                                  ),
+                            fillColor: getEnteColorScheme(context).fillFaint,
+                            filled: true,
+                            hintText: context.l10n.enterName,
+                            hintStyle: getEnteTextTheme(context).bodyFaint,
+                            contentPadding: const EdgeInsets.symmetric(
+                              horizontal: 16,
+                              vertical: 14,
+                            ),
+                            border: UnderlineInputBorder(
+                              borderSide: BorderSide.none,
+                              borderRadius: BorderRadius.circular(8),
+                            ),
                           ),
                         ),
-                      const SizedBox(height: 36),
-                      TextFormField(
-                        keyboardType: TextInputType.name,
-                        textCapitalization: TextCapitalization.words,
-                        autocorrect: false,
-                        onChanged: (value) {
-                          if (_debounce?.isActive ?? false) _debounce?.cancel();
-                          _debounce =
-                              Timer(const Duration(milliseconds: 300), () {
+                        const SizedBox(height: 16),
+                        DatePickerField(
+                          hintText: context.l10n.enterDateOfBirth,
+                          firstDate: DateTime(100),
+                          lastDate: DateTime.now(),
+                          initialValue: _selectedDate,
+                          isRequired: false,
+                          onChanged: (date) {
                             setState(() {
-                              _inputName = value;
+                              // format date to yyyy-MM-dd
+                              _selectedDate =
+                                  date?.toIso8601String().split("T").first;
                             });
-                          });
-                        },
-                        initialValue: _inputName,
-                        decoration: InputDecoration(
-                          focusedBorder: OutlineInputBorder(
-                            borderRadius:
-                                const BorderRadius.all(Radius.circular(8.0)),
-                            borderSide: BorderSide(
-                              color: getEnteColorScheme(context).strokeMuted,
-                            ),
-                          ),
-                          fillColor: getEnteColorScheme(context).fillFaint,
-                          filled: true,
-                          hintText: context.l10n.enterName,
-                          hintStyle: getEnteTextTheme(context).bodyFaint,
-                          contentPadding: const EdgeInsets.symmetric(
-                            horizontal: 16,
-                            vertical: 14,
-                          ),
-                          border: UnderlineInputBorder(
-                            borderSide: BorderSide.none,
-                            borderRadius: BorderRadius.circular(8),
-                          ),
+                          },
                         ),
-                      ),
-                      const SizedBox(height: 16),
-                      DatePickerField(
-                        hintText: context.l10n.enterDateOfBirth,
-                        firstDate: DateTime(100),
-                        lastDate: DateTime.now(),
-                        initialValue: _selectedDate,
-                        isRequired: false,
-                        onChanged: (date) {
-                          setState(() {
-                            // format date to yyyy-MM-dd
-                            _selectedDate =
-                                date?.toIso8601String().split("T").first;
-                          });
-                        },
-                      ),
-                      const SizedBox(height: 32),
-                      ButtonWidget(
-                        buttonType: ButtonType.primary,
-                        labelText: context.l10n.save,
-                        isDisabled: !changed,
-                        onTap: () async {
-                          if (widget.isEditing) {
-                            await updatePerson(context);
-                          } else {
-                            await addNewPerson(
-                              context,
-                              text: _inputName,
-                              clusterID: widget.clusterID!,
-                            );
-                          }
-                        },
-                      ),
-                      const SizedBox(height: 32),
-                      if (!widget.isEditing) _getPersonItems(),
-                      if (widget.isEditing)
-                        Align(
-                          alignment: Alignment.centerLeft,
-                          child: Text(
-                            context.l10n.mergedPhotos,
-                            style: getEnteTextTheme(context).body,
-                          ),
+                        const SizedBox(height: 16),
+                        AnimatedSize(
+                          duration: const Duration(milliseconds: 200),
+                          curve: Curves.easeInOutQuad,
+                          child: _EmailSection(_email, person?.remoteID),
                         ),
-                      if (widget.isEditing)
-                        Padding(
-                          padding:
-                              const EdgeInsets.only(bottom: 12.0, top: 24.0),
-                          child: PersonClustersWidget(person!),
+                        const SizedBox(height: 32),
+                        ButtonWidget(
+                          buttonType: ButtonType.primary,
+                          labelText: context.l10n.save,
+                          isDisabled: !changed || _inputName.isEmpty,
+                          onTap: () async {
+                            if (widget.isEditing) {
+                              final updatedPersonEntity =
+                                  await updatePerson(context);
+                              if (updatedPersonEntity != null) {
+                                Navigator.pop(context, updatedPersonEntity);
+                              }
+                            } else {
+                              final newPersonEntity = await addNewPerson(
+                                context,
+                                text: _inputName,
+                                clusterID: widget.clusterID!,
+                                birthdate: _selectedDate,
+                                email: _email,
+                              ).catchError((e) {
+                                _logger.severe("Error adding new person", e);
+                                return null;
+                              });
+                              if (newPersonEntity != null) {
+                                Navigator.pop(context, newPersonEntity);
+                              }
+                            }
+                          },
                         ),
-                    ],
+                        const SizedBox(height: 32),
+                        if (!widget.isEditing) _getPersonItems(),
+                        if (widget.isEditing)
+                          Align(
+                            alignment: Alignment.centerLeft,
+                            child: Text(
+                              context.l10n.mergedPhotos,
+                              style: getEnteTextTheme(context).body,
+                            ),
+                          ),
+                        if (widget.isEditing)
+                          Padding(
+                            padding:
+                                const EdgeInsets.only(bottom: 12.0, top: 24.0),
+                            child: PersonClustersWidget(person!),
+                          ),
+                      ],
+                    ),
                   ),
                 ),
-              ),
-            ],
+              ],
+            ),
           ),
         ),
       ),
     );
   }
 
+  Future<dynamic> _saveChangesPrompt(BuildContext context) async {
+    PersonEntity? updatedPersonEntity;
+    return await showActionSheet(
+      useRootNavigator: Platform.isIOS ? true : false,
+      body: "Save changes before leaving?",
+      context: context,
+      buttons: [
+        ButtonWidget(
+          buttonType: ButtonType.neutral,
+          labelText: S.of(context).save,
+          isInAlert: true,
+          buttonAction: ButtonAction.first,
+          shouldStickToDarkTheme: true,
+          onTap: () async {
+            if (widget.isEditing) {
+              updatedPersonEntity = await updatePerson(context);
+            } else {
+              try {
+                updatedPersonEntity = await addNewPerson(
+                  context,
+                  text: _inputName,
+                  clusterID: widget.clusterID!,
+                  birthdate: _selectedDate,
+                  email: _email,
+                );
+              } catch (e) {
+                _logger.severe("Error updating person", e);
+              }
+            }
+          },
+        ),
+        const ButtonWidget(
+          buttonType: ButtonType.secondary,
+          labelText: "Don't save",
+          isInAlert: true,
+          buttonAction: ButtonAction.second,
+          shouldStickToDarkTheme: true,
+        ),
+        ButtonWidget(
+          buttonType: ButtonType.secondary,
+          labelText: S.of(context).cancel,
+          isInAlert: true,
+          buttonAction: ButtonAction.cancel,
+          shouldStickToDarkTheme: true,
+        ),
+      ],
+    ).then((buttonResult) {
+      if (buttonResult == null ||
+          buttonResult.action == null ||
+          buttonResult.action == ButtonAction.cancel) {
+        return ButtonAction.cancel;
+      } else if (buttonResult.action == ButtonAction.second) {
+        return ButtonAction.second;
+      } else {
+        return updatedPersonEntity;
+      }
+    });
+  }
+
   Widget _getPersonItems() {
     return Padding(
       padding: const EdgeInsets.fromLTRB(0, 12, 4, 0),
@@ -481,21 +611,40 @@ class _SaveOrEditPersonState extends State<SaveOrEditPerson> {
     return searchResults;
   }
 
-  Future<void> addNewPerson(
+  Future<PersonEntity?> addNewPerson(
     BuildContext context, {
     String text = '',
     required String clusterID,
+    String? birthdate,
+    String? email,
   }) async {
+    if (email != null &&
+        email.isNotEmpty &&
+        await checkIfEmailAlreadyAssignedToAPerson(email)) {
+      _logger.severe(
+        "Failed to addNewPerson, email is already assigned to a person",
+      );
+      await showGenericErrorDialog(
+        context: context,
+        error: "Email already assigned",
+      );
+      return null;
+    }
+
     try {
       if (userAlreadyAssigned) {
-        return;
+        return null;
       }
       if (text.trim() == "") {
-        return;
+        return null;
       }
       userAlreadyAssigned = true;
-      final personEntity =
-          await PersonService.instance.addPerson(text, clusterID);
+      final personEntity = await PersonService.instance.addPerson(
+        name: text,
+        clusterID: clusterID,
+        birthdate: birthdate,
+        email: email,
+      );
       final bool extraPhotosFound =
           await ClusterFeedbackService.instance.checkAndDoAutomaticMerges(
         personEntity,
@@ -504,35 +653,57 @@ class _SaveOrEditPersonState extends State<SaveOrEditPerson> {
       if (extraPhotosFound) {
         showShortToast(context, S.of(context).extraPhotosFound);
       }
-      Bus.instance.fire(PeopleChangedEvent());
-      Navigator.pop(context, personEntity);
+      Bus.instance.fire(
+        PeopleChangedEvent(
+          type: PeopleEventType.saveOrEditPerson,
+          source: "_SaveOrEditPersonState addNewPerson",
+          person: personEntity,
+        ),
+      );
+      return personEntity;
     } catch (e) {
       _logger.severe("Error adding new person", e);
       userAlreadyAssigned = false;
       await showGenericErrorDialog(context: context, error: e);
+      return null;
     }
   }
 
   bool get changed => widget.isEditing
       ? (_inputName.trim() != person!.data.name ||
-          _selectedDate != person!.data.birthDate)
+              _selectedDate != person!.data.birthDate) ||
+          _email != person!.data.email
       : _inputName.trim().isNotEmpty;
 
-  Future<void> updatePerson(BuildContext context) async {
+  Future<PersonEntity?> updatePerson(BuildContext context) async {
     try {
+      if (_email != null &&
+          _email!.isNotEmpty &&
+          _email != person!.data.email &&
+          await checkIfEmailAlreadyAssignedToAPerson(_email!)) {
+        throw Exception("Email already assigned to a person");
+      }
       final String name = _inputName.trim();
       final String? birthDate = _selectedDate;
       final personEntity = await PersonService.instance.updateAttributes(
         person!.remoteID,
         name: name,
         birthDate: birthDate,
+        email: _email,
       );
 
-      Bus.instance.fire(PeopleChangedEvent());
-      Navigator.pop(context, personEntity);
+      Bus.instance.fire(
+        PeopleChangedEvent(
+          type: PeopleEventType.saveOrEditPerson,
+          source: "_SaveOrEditPersonState updatePerson",
+          person: personEntity,
+        ),
+      );
+      return personEntity;
     } catch (e) {
       _logger.severe("Error adding updating person", e);
       await showGenericErrorDialog(context: context, error: e);
+      return null;
     }
   }
 
@@ -595,3 +766,186 @@ class _SaveOrEditPersonState extends State<SaveOrEditPerson> {
     return (person.remoteID, resultFile);
   }
 }
+
+class _EmailSection extends StatefulWidget {
+  final String? personID;
+  final String? email;
+  const _EmailSection(this.email, this.personID);
+
+  @override
+  State<_EmailSection> createState() => _EmailSectionState();
+}
+
+class _EmailSectionState extends State<_EmailSection> {
+  String? _email;
+  final _logger = Logger("_EmailSectionState");
+  bool _initialEmailIsUserEmail = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _email = widget.email;
+    _initialEmailIsUserEmail = Configuration.instance.getEmail() == _email;
+  }
+
+  @override
+  void didUpdateWidget(covariant _EmailSection oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    if (oldWidget.email != widget.email) {
+      setState(() {
+        _email = widget.email;
+      });
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    if (_email == null || _email!.isEmpty) {
+      return AnimatedSize(
+        duration: const Duration(milliseconds: 200),
+        curve: Curves.easeInOutQuad,
+        child: Padding(
+          padding: const EdgeInsets.only(top: 20),
+          child: Container(
+            padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 16),
+            decoration: BoxDecoration(
+              color: getEnteColorScheme(context).fillFaint,
+              borderRadius: BorderRadius.circular(12.0),
+            ),
+            child: Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 8.0),
+              child: FutureBuilder<bool>(
+                future: _isMeAssigned(),
+                builder: (context, snapshot) {
+                  if (snapshot.hasData) {
+                    final isMeAssigned = snapshot.data!;
+                    if (!isMeAssigned || _initialEmailIsUserEmail) {
+                      return Row(
+                        mainAxisAlignment: MainAxisAlignment.center,
+                        children: [
+                          Expanded(
+                            child: ButtonWidget(
+                              buttonType: ButtonType.secondary,
+                              labelText: "This is me!",
+                              onTap: () async {
+                                _updateEmailField(
+                                  Configuration.instance.getEmail(),
+                                );
+                              },
+                            ),
+                          ),
+                          const SizedBox(width: 8),
+                          Expanded(
+                            child: ButtonWidget(
+                              buttonType: ButtonType.primary,
+                              labelText: "Link email",
+                              shouldSurfaceExecutionStates: false,
+                              onTap: () async {
+                                final newEmail = await routeToPage(
+                                  context,
+                                  LinkEmailScreen(
+                                    widget.personID,
+                                    isFromSaveOrEditPerson: true,
+                                  ),
+                                );
+                                if (newEmail != null) {
+                                  _updateEmailField(newEmail as String);
+                                }
+                              },
+                            ),
+                          ),
+                        ],
+                      );
+                    } else {
+                      return ButtonWidget(
+                        buttonType: ButtonType.primary,
+                        labelText: "Link email",
+                        shouldSurfaceExecutionStates: false,
+                        onTap: () async {
+                          final newEmail = await routeToPage(
+                            context,
+                            LinkEmailScreen(
+                              widget.personID,
+                              isFromSaveOrEditPerson: true,
+                            ),
+                          );
+                          if (newEmail != null) {
+                            _updateEmailField(newEmail as String);
+                          }
+                        },
+                      );
+                    }
+                  } else if (snapshot.hasError) {
+                    _logger.severe(
+                      "Error getting isMeAssigned",
+                      snapshot.error,
+                    );
+                    return const RepaintBoundary(child: EnteLoadingWidget());
+                  } else {
+                    return const RepaintBoundary(child: EnteLoadingWidget());
+                  }
+                },
+              ),
+            ),
+          ).animate().fadeIn(
+                duration: const Duration(milliseconds: 200),
+                curve: Curves.easeInOutQuad,
+              ),
+        ),
+      );
+    } else {
+      return TextFormField(
+        canRequestFocus: false,
+        autocorrect: false,
+        decoration: InputDecoration(
+          suffixIcon: GestureDetector(
+            onTap: () {
+              _updateEmailField("");
+            },
+            child: Icon(
+              Icons.close_outlined,
+              color: getEnteColorScheme(context).strokeMuted,
+            ),
+          ),
+          fillColor: getEnteColorScheme(context).fillFaint,
+          filled: true,
+          hintText: _email,
+          hintStyle: getEnteTextTheme(context).bodyFaint,
+          contentPadding: const EdgeInsets.symmetric(
+            horizontal: 16,
+            vertical: 14,
+          ),
+          border: UnderlineInputBorder(
+            borderSide: BorderSide.none,
+            borderRadius: BorderRadius.circular(8),
+          ),
+        ),
+      ).animate().fadeIn(
+            duration: const Duration(milliseconds: 200),
+            curve: Curves.easeInOutQuad,
+          );
+    }
+  }
+
+  Future<bool> _isMeAssigned() async {
+    final personEntities = await PersonService.instance.getPersons();
+    final currentUserEmail = Configuration.instance.getEmail();
+
+    bool isAssigned = false;
+    for (final personEntity in personEntities) {
+      if (personEntity.data.email == currentUserEmail) {
+        isAssigned = true;
+        break;
+      }
+    }
+    return isAssigned;
+  }
+
+  void _updateEmailField(String? newEmail) {
+    final saveOrEditPersonState =
+        context.findAncestorStateOfType<_SaveOrEditPersonState>()!;
+    saveOrEditPersonState.setState(() {
+      saveOrEditPersonState._email = newEmail;
+    });
+  }
+}
diff --git a/mobile/lib/ui/viewer/search/result/contact_result_page.dart b/mobile/lib/ui/viewer/search/result/contact_result_page.dart
new file mode 100644
index 00000000000..3bd3294aea7
--- /dev/null
+++ b/mobile/lib/ui/viewer/search/result/contact_result_page.dart
@@ -0,0 +1,178 @@
+import "dart:async";
+
+import "package:email_validator/email_validator.dart";
+import 'package:flutter/material.dart';
+import 'package:photos/core/event_bus.dart';
+import 'package:photos/events/files_updated_event.dart';
+import 'package:photos/events/local_photos_updated_event.dart';
+import 'package:photos/models/file/file.dart';
+import 'package:photos/models/file_load_result.dart';
+import 'package:photos/models/gallery_type.dart';
+import "package:photos/models/ml/face/person.dart";
+import 'package:photos/models/search/search_result.dart';
+import 'package:photos/models/selected_files.dart';
+import "package:photos/ui/components/end_to_end_banner.dart";
+import 'package:photos/ui/viewer/actions/file_selection_overlay_bar.dart';
+import 'package:photos/ui/viewer/gallery/gallery.dart';
+import 'package:photos/ui/viewer/gallery/gallery_app_bar_widget.dart';
+import "package:photos/ui/viewer/gallery/hierarchical_search_gallery.dart";
+import "package:photos/ui/viewer/gallery/state/gallery_files_inherited_widget.dart";
+import "package:photos/ui/viewer/gallery/state/inherited_search_filter_data.dart";
+import "package:photos/ui/viewer/gallery/state/search_filter_data_provider.dart";
+import "package:photos/ui/viewer/gallery/state/selection_state.dart";
+import "package:photos/ui/viewer/people/person_selection_action_widgets.dart";
+import "package:photos/utils/navigation_util.dart";
+
+class ContactResultPage extends StatefulWidget {
+  final SearchResult searchResult;
+  final bool enableGrouping;
+  final String tagPrefix;
+
+  static const GalleryType appBarType = GalleryType.searchResults;
+  static const GalleryType overlayType = GalleryType.searchResults;
+
+  const ContactResultPage(
+    this.searchResult, {
+    this.enableGrouping = true,
+    this.tagPrefix = "",
+    super.key,
+  });
+
+  @override
+  State<ContactResultPage> createState() => _ContactResultPageState();
+}
+
+class _ContactResultPageState extends State<ContactResultPage> {
+  final _selectedFiles = SelectedFiles();
+  late final List<EnteFile> files;
+  late final StreamSubscription<LocalPhotosUpdatedEvent> _filesUpdatedEvent;
+  late String _searchResultName;
+
+  @override
+  void initState() {
+    super.initState();
+    files = widget.searchResult.resultFiles();
+    _searchResultName = widget.searchResult.name();
+    _filesUpdatedEvent =
+        Bus.instance.on<LocalPhotosUpdatedEvent>().listen((event) {
+      if (event.type == EventType.deletedFromDevice ||
+          event.type == EventType.deletedFromEverywhere ||
+          event.type == EventType.deletedFromRemote ||
+          event.type == EventType.hide) {
+        for (var updatedFile in event.updatedFiles) {
+          files.remove(updatedFile);
+        }
+        setState(() {});
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    _filesUpdatedEvent.cancel();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final gallery = Gallery(
+      asyncLoader: (creationStartTime, creationEndTime, {limit, asc}) {
+        final result = files
+            .where(
+              (file) =>
+                  file.creationTime! >= creationStartTime &&
+                  file.creationTime! <= creationEndTime,
+            )
+            .toList();
+        return Future.value(
+          FileLoadResult(
+            result,
+            result.length < files.length,
+          ),
+        );
+      },
+      reloadEvent: Bus.instance.on<LocalPhotosUpdatedEvent>(),
+      removalEventTypes: const {
+        EventType.deletedFromRemote,
+        EventType.deletedFromEverywhere,
+        EventType.hide,
+      },
+      tagPrefix: widget.tagPrefix + widget.searchResult.heroTag(),
+      selectedFiles: _selectedFiles,
+      enableFileGrouping: widget.enableGrouping,
+      initialFiles: [widget.searchResult.resultFiles().first],
+      header: EmailValidator.validate(_searchResultName)
+          ? Padding(
+              padding: const EdgeInsets.only(top: 12, bottom: 8),
+              child: EndToEndBanner(
+                title: "Link person",
+                caption: "for better sharing experience",
+                leadingIcon: Icons.person,
+                onTap: () async {
+                  final PersonEntity? updatedPerson = await routeToPage(
+                    context,
+                    LinkContactToPersonSelectionPage(
+                      emailToLink: _searchResultName,
+                    ),
+                  );
+                  if (updatedPerson != null) {
+                    setState(() {
+                      _searchResultName = updatedPerson.data.name;
+                    });
+                  }
+                },
+              ),
+            )
+          : null,
+    );
+
+    return GalleryFilesState(
+      child: InheritedSearchFilterDataWrapper(
+        searchFilterDataProvider: SearchFilterDataProvider(
+          initialGalleryFilter:
+              widget.searchResult.getHierarchicalSearchFilter(),
+        ),
+        child: Scaffold(
+          appBar: PreferredSize(
+            preferredSize: const Size.fromHeight(90.0),
+            child: GalleryAppBarWidget(
+              key: ValueKey(_searchResultName),
+              ContactResultPage.appBarType,
+              _searchResultName,
+              _selectedFiles,
+            ),
+          ),
+          body: SelectionState(
+            selectedFiles: _selectedFiles,
+            child: Stack(
+              alignment: Alignment.bottomCenter,
+              children: [
+                Builder(
+                  builder: (context) {
+                    return ValueListenableBuilder(
+                      valueListenable: InheritedSearchFilterData.of(context)
+                          .searchFilterDataProvider!
+                          .isSearchingNotifier,
+                      builder: (context, value, _) {
+                        return value
+                            ? HierarchicalSearchGallery(
+                                tagPrefix: widget.tagPrefix,
+                                selectedFiles: _selectedFiles,
+                              )
+                            : gallery;
+                      },
+                    );
+                  },
+                ),
+                FileSelectionOverlayBar(
+                  ContactResultPage.overlayType,
+                  _selectedFiles,
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/mobile/lib/ui/viewer/search/result/search_result_widget.dart b/mobile/lib/ui/viewer/search/result/search_result_widget.dart
index 12a1d2182df..43fea4be05b 100644
--- a/mobile/lib/ui/viewer/search/result/search_result_widget.dart
+++ b/mobile/lib/ui/viewer/search/result/search_result_widget.dart
@@ -5,6 +5,7 @@ import "package:photos/models/search/recent_searches.dart";
 import 'package:photos/models/search/search_result.dart';
 import "package:photos/models/search/search_types.dart";
 import "package:photos/theme/ente_theme.dart";
+import "package:photos/ui/viewer/search/result/contact_result_page.dart";
 import 'package:photos/ui/viewer/search/result/search_result_page.dart';
 import 'package:photos/ui/viewer/search/result/search_thumbnail_widget.dart';
 import 'package:photos/utils/navigation_util.dart';
@@ -16,10 +17,10 @@ class SearchResultWidget extends StatelessWidget {
 
   const SearchResultWidget(
     this.searchResult, {
-    Key? key,
+    super.key,
     this.resultCount,
     this.onResultTap,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
@@ -106,12 +107,21 @@ class SearchResultWidget extends StatelessWidget {
         if (onResultTap != null) {
           onResultTap!();
         } else {
-          routeToPage(
-            context,
-            SearchResultPage(
-              searchResult,
-            ),
-          );
+          if (searchResult.type() == ResultType.shared) {
+            routeToPage(
+              context,
+              ContactResultPage(
+                searchResult,
+              ),
+            );
+          } else {
+            routeToPage(
+              context,
+              SearchResultPage(
+                searchResult,
+              ),
+            );
+          }
         }
       },
     );
diff --git a/mobile/lib/ui/viewer/search/result/searchable_item.dart b/mobile/lib/ui/viewer/search/result/searchable_item.dart
index f8e2ed1acbc..462e88aa0ba 100644
--- a/mobile/lib/ui/viewer/search/result/searchable_item.dart
+++ b/mobile/lib/ui/viewer/search/result/searchable_item.dart
@@ -5,6 +5,7 @@ import "package:photos/models/search/search_result.dart";
 import "package:photos/models/search/search_types.dart";
 import "package:photos/theme/ente_theme.dart";
 import "package:photos/ui/components/buttons/icon_button_widget.dart";
+import "package:photos/ui/viewer/search/result/contact_result_page.dart";
 import "package:photos/ui/viewer/search/result/search_result_page.dart";
 import "package:photos/ui/viewer/search/result/search_thumbnail_widget.dart";
 import "package:photos/utils/navigation_util.dart";
@@ -15,10 +16,10 @@ class SearchableItemWidget extends StatelessWidget {
   final Function? onResultTap;
   const SearchableItemWidget(
     this.searchResult, {
-    Key? key,
+    super.key,
     this.resultCount,
     this.onResultTap,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
@@ -39,13 +40,23 @@ class SearchableItemWidget extends StatelessWidget {
         if (onResultTap != null) {
           onResultTap!();
         } else {
-          routeToPage(
-            context,
-            SearchResultPage(
-              searchResult,
-              tagPrefix: additionalPrefix,
-            ),
-          );
+          if (searchResult.type() == ResultType.shared) {
+            routeToPage(
+              context,
+              ContactResultPage(
+                searchResult,
+                tagPrefix: additionalPrefix,
+              ),
+            );
+          } else {
+            routeToPage(
+              context,
+              SearchResultPage(
+                searchResult,
+                tagPrefix: additionalPrefix,
+              ),
+            );
+          }
         }
       },
       child: Container(
diff --git a/mobile/lib/ui/viewer/search_tab/contacts_section.dart b/mobile/lib/ui/viewer/search_tab/contacts_section.dart
deleted file mode 100644
index c2a34b780bc..00000000000
--- a/mobile/lib/ui/viewer/search_tab/contacts_section.dart
+++ /dev/null
@@ -1,262 +0,0 @@
-import "dart:async";
-
-import "package:dotted_border/dotted_border.dart";
-import "package:flutter/material.dart";
-import "package:photos/core/constants.dart";
-import "package:photos/events/event.dart";
-import "package:photos/generated/l10n.dart";
-import "package:photos/models/search/generic_search_result.dart";
-import "package:photos/models/search/recent_searches.dart";
-import "package:photos/models/search/search_types.dart";
-import "package:photos/theme/ente_theme.dart";
-import "package:photos/ui/viewer/file/no_thumbnail_widget.dart";
-import "package:photos/ui/viewer/file/thumbnail_widget.dart";
-import "package:photos/ui/viewer/search/result/search_result_page.dart";
-import "package:photos/ui/viewer/search/search_section_cta.dart";
-import "package:photos/ui/viewer/search_tab/section_header.dart";
-import "package:photos/utils/navigation_util.dart";
-
-class ContactsSection extends StatefulWidget {
-  final List<GenericSearchResult> contactSearchResults;
-  const ContactsSection(this.contactSearchResults, {super.key});
-
-  @override
-  State<ContactsSection> createState() => _ContactsSectionState();
-}
-
-class _ContactsSectionState extends State<ContactsSection> {
-  late List<GenericSearchResult> _contactSearchResults;
-  final streamSubscriptions = <StreamSubscription>[];
-
-  @override
-  void initState() {
-    super.initState();
-    _contactSearchResults = widget.contactSearchResults;
-
-    final streamsToListenTo = SectionType.contacts.sectionUpdateEvents();
-    for (Stream<Event> stream in streamsToListenTo) {
-      streamSubscriptions.add(
-        stream.listen((event) async {
-          _contactSearchResults = (await SectionType.contacts.getData(
-            context,
-            limit: kSearchSectionLimit,
-          )) as List<GenericSearchResult>;
-          setState(() {});
-        }),
-      );
-    }
-  }
-
-  @override
-  void dispose() {
-    for (var subscriptions in streamSubscriptions) {
-      subscriptions.cancel();
-    }
-    super.dispose();
-  }
-
-  @override
-  void didUpdateWidget(covariant ContactsSection oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    _contactSearchResults = widget.contactSearchResults;
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    if (_contactSearchResults.isEmpty) {
-      final textTheme = getEnteTextTheme(context);
-      return Padding(
-        padding: const EdgeInsets.only(left: 12, right: 8),
-        child: Row(
-          children: [
-            Expanded(
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.start,
-                children: [
-                  Text(
-                    SectionType.contacts.sectionTitle(context),
-                    style: textTheme.largeBold,
-                  ),
-                  const SizedBox(height: 24),
-                  Padding(
-                    padding: const EdgeInsets.only(left: 4),
-                    child: Text(
-                      SectionType.contacts.getEmptyStateText(context),
-                      style: textTheme.smallMuted,
-                    ),
-                  ),
-                ],
-              ),
-            ),
-            const SizedBox(width: 8),
-            const SearchSectionEmptyCTAIcon(SectionType.contacts),
-          ],
-        ),
-      );
-    } else {
-      final recommendations = <Widget>[
-        ..._contactSearchResults.map(
-          (contactSearchResult) => ContactRecommendation(contactSearchResult),
-        ),
-        const ContactCTA(),
-      ];
-      return Padding(
-        padding: const EdgeInsets.symmetric(vertical: 8),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            SectionHeader(
-              SectionType.contacts,
-              hasMore:
-                  (_contactSearchResults.length >= kSearchSectionLimit - 1),
-            ),
-            const SizedBox(height: 2),
-            SizedBox(
-              child: SingleChildScrollView(
-                padding: const EdgeInsets.symmetric(horizontal: 4.5),
-                physics: const BouncingScrollPhysics(),
-                scrollDirection: Axis.horizontal,
-                child: Row(
-                  crossAxisAlignment: CrossAxisAlignment.start,
-                  children: recommendations,
-                ),
-              ),
-            ),
-          ],
-        ),
-      );
-    }
-  }
-}
-
-class ContactRecommendation extends StatelessWidget {
-  final GenericSearchResult contactSearchResult;
-  const ContactRecommendation(this.contactSearchResult, {super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    final heroTag = contactSearchResult.heroTag() +
-        (contactSearchResult.previewThumbnail()?.tag ?? "");
-    final enteTextTheme = getEnteTextTheme(context);
-    return Padding(
-      padding: const EdgeInsets.symmetric(horizontal: 2.5),
-      child: GestureDetector(
-        onTap: () {
-          RecentSearches().add(contactSearchResult.name());
-          if (contactSearchResult.onResultTap != null) {
-            contactSearchResult.onResultTap!(context);
-          } else {
-            routeToPage(
-              context,
-              SearchResultPage(contactSearchResult),
-            );
-          }
-        },
-        child: ConstrainedBox(
-          constraints: const BoxConstraints(
-            maxHeight: double.infinity,
-            minHeight: 115.5,
-            maxWidth: 100,
-            minWidth: 100,
-          ),
-          child: Padding(
-            padding:
-                const EdgeInsets.symmetric(horizontal: 4.25, vertical: 10.5),
-            child: Column(
-              crossAxisAlignment: CrossAxisAlignment.center,
-              children: [
-                ClipOval(
-                  child: SizedBox(
-                    width: 67.75,
-                    height: 67.75,
-                    child: contactSearchResult.previewThumbnail() != null
-                        ? Hero(
-                            tag: heroTag,
-                            child: ThumbnailWidget(
-                              contactSearchResult.previewThumbnail()!,
-                              shouldShowArchiveStatus: false,
-                              shouldShowSyncStatus: false,
-                            ),
-                          )
-                        : const NoThumbnailWidget(),
-                  ),
-                ),
-                const SizedBox(height: 10.5),
-                SizedBox(
-                  width: 91.5,
-                  child: Column(
-                    crossAxisAlignment: CrossAxisAlignment.center,
-                    mainAxisAlignment: MainAxisAlignment.center,
-                    children: [
-                      Text(
-                        contactSearchResult.name(),
-                        style: enteTextTheme.small,
-                        maxLines: 2,
-                        overflow: TextOverflow.ellipsis,
-                        textAlign: TextAlign.center,
-                      ),
-                    ],
-                  ),
-                ),
-              ],
-            ),
-          ),
-        ),
-      ),
-    );
-  }
-}
-
-class ContactCTA extends StatelessWidget {
-  const ContactCTA({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    final enteColorScheme = getEnteColorScheme(context);
-    return Padding(
-      padding: const EdgeInsets.symmetric(horizontal: 2.5),
-      child: GestureDetector(
-        onTap: SectionType.contacts.ctaOnTap(context),
-        child: ConstrainedBox(
-          constraints: const BoxConstraints(
-            maxHeight: double.infinity,
-            minHeight: 115.5,
-            maxWidth: 100,
-            minWidth: 100,
-          ),
-          child: Padding(
-            padding:
-                const EdgeInsets.symmetric(horizontal: 4.25, vertical: 10.5),
-            child: Column(
-              crossAxisAlignment: CrossAxisAlignment.center,
-              children: [
-                DottedBorder(
-                  borderType: BorderType.Circle,
-                  strokeWidth: 1.5,
-                  borderPadding: const EdgeInsets.all(0.75),
-                  dashPattern: const [4, 4],
-                  radius: const Radius.circular(2.35),
-                  padding: EdgeInsets.zero,
-                  color: enteColorScheme.strokeFaint,
-                  child: SizedBox(
-                    height: 67.75,
-                    width: 67.75,
-                    child: Icon(
-                      Icons.adaptive.share,
-                      color: enteColorScheme.strokeFaint,
-                    ),
-                  ),
-                ),
-                const SizedBox(height: 10.5),
-                Text(
-                  S.of(context).invite,
-                  style: getEnteTextTheme(context).smallFaint,
-                ),
-              ],
-            ),
-          ),
-        ),
-      ),
-    );
-  }
-}
diff --git a/mobile/lib/ui/viewer/search_tab/search_tab.dart b/mobile/lib/ui/viewer/search_tab/search_tab.dart
index 27e3f468305..d21becdcbf7 100644
--- a/mobile/lib/ui/viewer/search_tab/search_tab.dart
+++ b/mobile/lib/ui/viewer/search_tab/search_tab.dart
@@ -17,7 +17,6 @@ import "package:photos/ui/viewer/search/result/no_result_widget.dart";
 import "package:photos/ui/viewer/search/search_suggestions.dart";
 import "package:photos/ui/viewer/search/tab_empty_state.dart";
 import 'package:photos/ui/viewer/search_tab/albums_section.dart';
-import "package:photos/ui/viewer/search_tab/contacts_section.dart";
 import "package:photos/ui/viewer/search_tab/file_type_section.dart";
 import "package:photos/ui/viewer/search_tab/locations_section.dart";
 import "package:photos/ui/viewer/search_tab/magic_section.dart";
@@ -144,11 +143,6 @@ class _AllSearchSectionsState extends State<AllSearchSections> {
                           snapshot.data!.elementAt(index)
                               as List<GenericSearchResult>,
                         );
-                      case SectionType.contacts:
-                        return ContactsSection(
-                          snapshot.data!.elementAt(index)
-                              as List<GenericSearchResult>,
-                        );
                       case SectionType.fileTypesAndExtension:
                         return FileTypeSection(
                           snapshot.data!.elementAt(index)
diff --git a/mobile/lib/utils/navigation_util.dart b/mobile/lib/utils/navigation_util.dart
index f40a8a3d268..467626d5219 100644
--- a/mobile/lib/utils/navigation_util.dart
+++ b/mobile/lib/utils/navigation_util.dart
@@ -114,9 +114,9 @@ class SwipeableRouteBuilder<T> extends PageRoute<T> {
 class TransparentRoute extends PageRoute<void> {
   TransparentRoute({
     required this.builder,
-    RouteSettings? settings,
+    super.settings,
   })  : assert(builder != null),
-        super(settings: settings, fullscreenDialog: false);
+        super(fullscreenDialog: false);
 
   final WidgetBuilder? builder;
 
diff --git a/mobile/lib/utils/person_contact_linking_util.dart b/mobile/lib/utils/person_contact_linking_util.dart
new file mode 100644
index 00000000000..cf8877269ec
--- /dev/null
+++ b/mobile/lib/utils/person_contact_linking_util.dart
@@ -0,0 +1,13 @@
+import "package:photos/services/machine_learning/face_ml/person/person_service.dart";
+
+Future<bool> checkIfEmailAlreadyAssignedToAPerson(
+  String email,
+) async {
+  final persons = await PersonService.instance.getPersons();
+  for (var person in persons) {
+    if (person.data.email == email) {
+      return true;
+    }
+  }
+  return false;
+}
diff --git a/mobile/pubspec.lock b/mobile/pubspec.lock
index 0cba96166c2..28219c70d9d 100644
--- a/mobile/pubspec.lock
+++ b/mobile/pubspec.lock
@@ -5,10 +5,10 @@ packages:
     dependency: transitive
     description:
       name: _fe_analyzer_shared
-      sha256: "16e298750b6d0af7ce8a3ba7c18c69c3785d11b15ec83f6dcd0ad2a0009b3cab"
+      sha256: f256b0c0ba6c7577c15e2e4e114755640a875e885099367bf6e012b19314c834
       url: "https://pub.dev"
     source: hosted
-    version: "76.0.0"
+    version: "72.0.0"
   _flutterfire_internals:
     dependency: transitive
     description:
@@ -21,7 +21,7 @@ packages:
     dependency: transitive
     description: dart
     source: sdk
-    version: "0.3.3"
+    version: "0.3.2"
   adaptive_theme:
     dependency: "direct main"
     description:
@@ -34,10 +34,10 @@ packages:
     dependency: transitive
     description:
       name: analyzer
-      sha256: "1f14db053a8c23e260789e9b0980fa27f2680dd640932cae5e1137cce0e46e1e"
+      sha256: b652861553cd3990d8ed361f7979dc6d7053a9ac8843fa73820ab68ce5410139
       url: "https://pub.dev"
     source: hosted
-    version: "6.11.0"
+    version: "6.7.0"
   android_intent_plus:
     dependency: "direct main"
     description:
@@ -284,10 +284,10 @@ packages:
     dependency: "direct main"
     description:
       name: collection
-      sha256: a1ace0a119f20aabc852d165077c036cd864315bd99b7eaa10a60100341941bf
+      sha256: ee67cb0715911d28db6bf4af1026078bd6f0128b07a5f66fb2ed94ec6783c09a
       url: "https://pub.dev"
     source: hosted
-    version: "1.19.0"
+    version: "1.18.0"
   computer:
     dependency: "direct main"
     description:
@@ -585,12 +585,11 @@ packages:
   figma_squircle:
     dependency: "direct main"
     description:
-      path: "."
-      ref: HEAD
-      resolved-ref: "5f1ad5aaccdf31fc398fc141979ea845a0f45383"
-      url: "https://github.com/Ax0elz/figma_squircle.git"
-    source: git
-    version: "0.5.5"
+      name: figma_squircle
+      sha256: "790b91a9505e90d246f6efe2fa065ff7fffe658c7b44fe9b5b20c7b0ad3818c0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.5.3"
   file:
     dependency: transitive
     description:
@@ -1359,18 +1358,18 @@ packages:
     dependency: transitive
     description:
       name: leak_tracker
-      sha256: "7bb2830ebd849694d1ec25bf1f44582d6ac531a57a365a803a6034ff751d2d06"
+      sha256: "3f87a60e8c63aecc975dda1ceedbc8f24de75f09e4856ea27daf8958f2f0ce05"
       url: "https://pub.dev"
     source: hosted
-    version: "10.0.7"
+    version: "10.0.5"
   leak_tracker_flutter_testing:
     dependency: transitive
     description:
       name: leak_tracker_flutter_testing
-      sha256: "9491a714cca3667b60b5c420da8217e6de0d1ba7a5ec322fab01758f6998f379"
+      sha256: "932549fb305594d82d7183ecd9fa93463e9914e1b67cacc34bc40906594a1806"
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.8"
+    version: "3.0.5"
   leak_tracker_testing:
     dependency: transitive
     description:
@@ -1487,10 +1486,10 @@ packages:
     dependency: transitive
     description:
       name: macros
-      sha256: "1d9e801cd66f7ea3663c45fc708450db1fa57f988142c64289142c9b7ee80656"
+      sha256: "0acaed5d6b7eab89f63350bccd82119e6c602df0f391260d0e32b5e23db79536"
       url: "https://pub.dev"
     source: hosted
-    version: "0.1.3-main.0"
+    version: "0.1.2-main.4"
   maps_launcher:
     dependency: "direct main"
     description:
@@ -2293,7 +2292,7 @@ packages:
     dependency: transitive
     description: flutter
     source: sdk
-    version: "0.0.0"
+    version: "0.0.99"
   source_gen:
     dependency: transitive
     description:
@@ -2418,10 +2417,10 @@ packages:
     dependency: transitive
     description:
       name: stack_trace
-      sha256: "9f47fd3630d76be3ab26f0ee06d213679aa425996925ff3feffdec504931c377"
+      sha256: "73713990125a6d93122541237550ee3352a2d84baad52d375a4cad2eb9b7ce0b"
       url: "https://pub.dev"
     source: hosted
-    version: "1.12.0"
+    version: "1.11.1"
   step_progress_indicator:
     dependency: "direct main"
     description:
@@ -2450,10 +2449,10 @@ packages:
     dependency: transitive
     description:
       name: string_scanner
-      sha256: "688af5ed3402a4bde5b3a6c15fd768dbf2621a614950b17f04626c431ab3c4c3"
+      sha256: "556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde"
       url: "https://pub.dev"
     source: hosted
-    version: "1.3.0"
+    version: "1.2.0"
   styled_text:
     dependency: "direct main"
     description:
@@ -2514,26 +2513,26 @@ packages:
     dependency: "direct dev"
     description:
       name: test
-      sha256: "713a8789d62f3233c46b4a90b174737b2c04cb6ae4500f2aa8b1be8f03f5e67f"
+      sha256: "7ee44229615f8f642b68120165ae4c2a75fe77ae2065b1e55ae4711f6cf0899e"
       url: "https://pub.dev"
     source: hosted
-    version: "1.25.8"
+    version: "1.25.7"
   test_api:
     dependency: transitive
     description:
       name: test_api
-      sha256: "664d3a9a64782fcdeb83ce9c6b39e78fd2971d4e37827b9b06c3aa1edc5e760c"
+      sha256: "5b8a98dafc4d5c4c9c72d8b31ab2b23fc13422348d2997120294d3bac86b4ddb"
       url: "https://pub.dev"
     source: hosted
-    version: "0.7.3"
+    version: "0.7.2"
   test_core:
     dependency: transitive
     description:
       name: test_core
-      sha256: "12391302411737c176b0b5d6491f466b0dd56d4763e347b6714efbaa74d7953d"
+      sha256: "55ea5a652e38a1dfb32943a7973f3681a60f872f8c3a05a14664ad54ef9c6696"
       url: "https://pub.dev"
     source: hosted
-    version: "0.6.5"
+    version: "0.6.4"
   timezone:
     dependency: transitive
     description:
@@ -2820,10 +2819,10 @@ packages:
     dependency: transitive
     description:
       name: vm_service
-      sha256: f6be3ed8bd01289b34d679c2b62226f63c0e69f9fd2e50a6b3c1c729a961041b
+      sha256: "5c5f338a667b4c644744b661f309fb8080bb94b18a7e91ef1dbd343bed00ed6d"
       url: "https://pub.dev"
     source: hosted
-    version: "14.3.0"
+    version: "14.2.5"
   volume_controller:
     dependency: transitive
     description:
@@ -2892,10 +2891,10 @@ packages:
     dependency: transitive
     description:
       name: webdriver
-      sha256: "3d773670966f02a646319410766d3b5e1037efb7f07cc68f844d5e06cd4d61c8"
+      sha256: "003d7da9519e1e5f329422b36c4dcdf18d7d2978d1ba099ea4e45ba490ed845e"
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.4"
+    version: "3.0.3"
   webkit_inspection_protocol:
     dependency: transitive
     description:
diff --git a/mobile/pubspec.yaml b/mobile/pubspec.yaml
index c7b233e26d6..ce1d447a056 100644
--- a/mobile/pubspec.yaml
+++ b/mobile/pubspec.yaml
@@ -12,7 +12,7 @@ description: ente photos application
 # Read more about iOS versioning at
 # https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
 
-version: 0.9.83+983
+version: 0.9.84+984
 publish_to: none
 
 environment:
@@ -63,9 +63,7 @@ dependencies:
   fade_indexed_stack: ^0.2.2
   fast_base58: ^0.2.1
   ffmpeg_kit_flutter_min: ^6.0.3
-  figma_squircle: 
-    git:
-      url: https://github.com/Ax0elz/figma_squircle.git
+  figma_squircle: ^0.5.3
   file_saver:
     # Use forked version till this PR is merged: https://github.com/incrediblezayed/file_saver/pull/87
     git: https://github.com/jesims/file_saver.git
