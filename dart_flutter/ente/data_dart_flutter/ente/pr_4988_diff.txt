diff --git a/mobile/lib/states/all_sections_examples_state.dart b/mobile/lib/states/all_sections_examples_state.dart
index 9feb3d96bdd..abb0077ef33 100644
--- a/mobile/lib/states/all_sections_examples_state.dart
+++ b/mobile/lib/states/all_sections_examples_state.dart
@@ -36,11 +36,13 @@ class _AllSectionsExamplesProviderState
   late StreamSubscription<TabChangedEvent> _tabChangeEvent;
   bool hasPendingUpdate = false;
   bool isOnSearchTab = false;
+  bool _firstLoadInProgressOrComplete = false;
   final _logger = Logger("AllSectionsExamplesProvider");
 
   final _debouncer = Debouncer(
     const Duration(seconds: 3),
     executionInterval: const Duration(seconds: 12),
+    leading: true,
   );
 
   @override
@@ -66,7 +68,12 @@ class _AllSectionsExamplesProviderState
         isOnSearchTab = false;
       }
     });
-    reloadAllSections();
+
+    Future.delayed(const Duration(seconds: 3), () {
+      if (!_firstLoadInProgressOrComplete) {
+        reloadAllSections();
+      }
+    });
   }
 
   void onDataUpdate() {
@@ -82,6 +89,7 @@ class _AllSectionsExamplesProviderState
   }
 
   void reloadAllSections() {
+    _firstLoadInProgressOrComplete = true;
     _logger.info('queue reload all sections');
     _debouncer.run(() async {
       setState(() {
diff --git a/mobile/lib/ui/collections/device/device_folders_grid_view.dart b/mobile/lib/ui/collections/device/device_folders_grid_view.dart
index b9c25886131..6f4ac30f0f9 100644
--- a/mobile/lib/ui/collections/device/device_folders_grid_view.dart
+++ b/mobile/lib/ui/collections/device/device_folders_grid_view.dart
@@ -16,8 +16,8 @@ import "package:photos/utils/debouncer.dart";
 
 class DeviceFoldersGridView extends StatefulWidget {
   const DeviceFoldersGridView({
-    Key? key,
-  }) : super(key: key);
+    super.key,
+  });
 
   @override
   State<DeviceFoldersGridView> createState() => _DeviceFoldersGridViewState();
@@ -31,10 +31,12 @@ class _DeviceFoldersGridViewState extends State<DeviceFoldersGridView> {
   final _debouncer = Debouncer(
     const Duration(seconds: 2),
     executionInterval: const Duration(seconds: 5),
+    leading: true,
   );
 
   @override
   void initState() {
+    super.initState();
     _backupFoldersUpdatedEvent =
         Bus.instance.on<BackupFoldersUpdatedEvent>().listen((event) {
       _loadReason = event.reason;
@@ -51,8 +53,6 @@ class _DeviceFoldersGridViewState extends State<DeviceFoldersGridView> {
         }
       });
     });
-
-    super.initState();
   }
 
   @override
diff --git a/mobile/lib/ui/collections/device/device_folders_vertical_grid_view.dart b/mobile/lib/ui/collections/device/device_folders_vertical_grid_view.dart
index f465878ff53..d5ac85e0ea0 100644
--- a/mobile/lib/ui/collections/device/device_folders_vertical_grid_view.dart
+++ b/mobile/lib/ui/collections/device/device_folders_vertical_grid_view.dart
@@ -74,6 +74,7 @@ class _DeviceFolderVerticalGridViewBodyState
 
   @override
   void initState() {
+    super.initState();
     _backupFoldersUpdatedEvent =
         Bus.instance.on<BackupFoldersUpdatedEvent>().listen((event) {
       _loadReason = event.reason;
@@ -90,7 +91,6 @@ class _DeviceFolderVerticalGridViewBodyState
         }
       });
     });
-    super.initState();
   }
 
   @override
diff --git a/mobile/lib/ui/map/map_view.dart b/mobile/lib/ui/map/map_view.dart
index 88047742239..3629da7e96e 100644
--- a/mobile/lib/ui/map/map_view.dart
+++ b/mobile/lib/ui/map/map_view.dart
@@ -28,7 +28,7 @@ class MapView extends StatefulWidget {
   static const defaultMarkerSize = Size(75, 75);
 
   const MapView({
-    Key? key,
+    super.key,
     required this.updateVisibleImages,
     required this.imageMarkers,
     required this.controller,
@@ -42,7 +42,7 @@ class MapView extends StatefulWidget {
     this.onTap,
     this.interactiveFlags = InteractiveFlag.all,
     this.showControls = true,
-  }) : super(key: key);
+  });
 
   @override
   State<StatefulWidget> createState() => _MapViewState();
diff --git a/mobile/lib/ui/sharing/user_avator_widget.dart b/mobile/lib/ui/sharing/user_avator_widget.dart
index 8b06f09edef..a69430a953c 100644
--- a/mobile/lib/ui/sharing/user_avator_widget.dart
+++ b/mobile/lib/ui/sharing/user_avator_widget.dart
@@ -45,6 +45,7 @@ class _UserAvatarWidgetState extends State<UserAvatarWidget> {
   final _debouncer = Debouncer(
     const Duration(milliseconds: 250),
     executionInterval: const Duration(seconds: 20),
+    leading: true,
   );
 
   @override
diff --git a/mobile/lib/ui/tabs/shared_collections_tab.dart b/mobile/lib/ui/tabs/shared_collections_tab.dart
index 7e93abca392..a6e7f3c679a 100644
--- a/mobile/lib/ui/tabs/shared_collections_tab.dart
+++ b/mobile/lib/ui/tabs/shared_collections_tab.dart
@@ -40,6 +40,7 @@ class _SharedCollectionsTabState extends State<SharedCollectionsTab>
   final _debouncer = Debouncer(
     const Duration(seconds: 2),
     executionInterval: const Duration(seconds: 5),
+    leading: true,
   );
   static const heroTagPrefix = "outgoing_collection";
 
diff --git a/mobile/lib/ui/tabs/user_collections_tab.dart b/mobile/lib/ui/tabs/user_collections_tab.dart
index b7b1b748294..5e8431a5a91 100644
--- a/mobile/lib/ui/tabs/user_collections_tab.dart
+++ b/mobile/lib/ui/tabs/user_collections_tab.dart
@@ -54,6 +54,7 @@ class _UserCollectionsTabState extends State<UserCollectionsTab>
   final _debouncer = Debouncer(
     const Duration(seconds: 2),
     executionInterval: const Duration(seconds: 5),
+    leading: true,
   );
 
   static const int _kOnEnteItemLimitCount = 10;
diff --git a/mobile/lib/ui/viewer/gallery/gallery.dart b/mobile/lib/ui/viewer/gallery/gallery.dart
index 17888666973..8eea50057ce 100644
--- a/mobile/lib/ui/viewer/gallery/gallery.dart
+++ b/mobile/lib/ui/viewer/gallery/gallery.dart
@@ -125,6 +125,7 @@ class GalleryState extends State<Gallery> {
     _debouncer = Debouncer(
       widget.reloadDebounceTime,
       executionInterval: widget.reloadDebounceExecutionInterval,
+      leading: true,
     );
     _sortOrderAsc = widget.sortAsyncFn != null ? widget.sortAsyncFn!() : false;
     _itemScroller = ItemScrollController();
diff --git a/mobile/lib/utils/debouncer.dart b/mobile/lib/utils/debouncer.dart
index 31e97095214..07097440f0e 100644
--- a/mobile/lib/utils/debouncer.dart
+++ b/mobile/lib/utils/debouncer.dart
@@ -15,12 +15,24 @@ class Debouncer {
   /// This is useful for example when you want to execute a callback every 5 seconds
   final Duration? executionInterval;
   Timer? _debounceTimer;
+  final bool leading;
 
-  Debouncer(this._duration, {this.executionInterval});
+  Debouncer(this._duration, {this.executionInterval, this.leading = false});
 
   final Stopwatch _stopwatch = Stopwatch();
 
   void run(FutureVoidCallback fn) {
+    if (leading && !isActive()) {
+      _stopwatch.stop();
+      _stopwatch.reset();
+      fn();
+      _debounceTimer = Timer(_duration, () {
+        _debounceActiveNotifier.value = false;
+      });
+      _debounceActiveNotifier.value = true;
+      return;
+    }
+
     bool shouldRunImmediately = false;
     if (executionInterval != null) {
       // ensure the stop watch is running
