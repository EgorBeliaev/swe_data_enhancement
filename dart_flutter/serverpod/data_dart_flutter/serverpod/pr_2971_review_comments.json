[
    {
        "title": "fix(Inheritance): Sealed Class Hierarchy Generation Limited to Same Directory"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This fixes the limitation that all members of a sealed hierarchy can only be located in the same directory.\r\n\r\nChanges:\r\n- Remove the `restriction` and corresponding `test` disallowing sealed hierarchy members in separate directories\r\n\r\n- `custom_allocators.dart`  extract the functionality collecting and aliasing `imports`  into a `ImportCollector`, which is to be instantiated with the allocators and is passed the `path` of the corresponding `model`. It normalizes the path to avoid duplication and then set's it relative to the top node\r\n\r\n- `class_generators_util.dart` adds a function `getGeneratedModelPath(...)` returning a `String` with the models path \r\n\r\n- `model_library_generator.dart` add `part` and `part of` directive with relative paths\r\n\r\n- `server_code_generator.dart` and `client_code_generator.dart` instantiate `ImportCollector` and for each sealed hierarchy and use `getGeneratedModelPath` to avoid repetition.\r\n\r\n- `sealed_class_test.dart` adds 3 tests checking if the directives (`part` and `part of`) are generated with the correct uri\r\n\r\n- `compilation_unit_helpers.dart` created `applyWindowsBugfix(uri)` as separate method used in `tryFindPartDirective` and `tryFindPartOfDirective`\r\n\r\ncloses #2893\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contribute](https://docs.serverpod.dev/contribute) page and followed the process outlined there for submitting PRs.\r\n- [x] This update contains only one single feature or bug fix and nothing else. (If you are submitting multiple fixes, please make multiple PRs.)\r\n- [x] I read and followed the [Dart Style Guide](https://dart.dev/guides/language/effective-dart/style) and formatted the code with [dart format](https://dart.dev/tools/dart-format).\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`), and made sure that the documentation follows the same style as other Serverpod documentation. I checked spelling and grammar.\r\n- [x] I added new tests to check the change I am making.\r\n- [x] All existing and new tests are passing.\r\n- [x] Any breaking changes are documented below.\r\n\r\nIf you need help, consider asking for advice on the [discussion board](https://github.com/serverpod/serverpod/discussions).\r\n\r\n## Breaking changes\r\nNo breaking changes "
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "Nice work!\n\nWill be neat to wrap this up! :)\nI have a couple of comments and suggestions for improvement. Please have a look and let me know if anything is unclear."
    },
    {
        "author": {
            "login": "BenAuerDev"
        },
        "body": ""
    },
    {
        "author": {
            "login": "BenAuerDev"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "Nice to see us harmonizing the code paths between the client and the server generator.\n\n\nCouple of minor last comments."
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "LGTM! \ud83d\udc4d "
    },
    {
        "author": {
            "login": "BenAuerDev"
        },
        "body": "Sorry for all the failed workflows :x: \r\n\r\nit was a bit hard to debug the failing tests only for windows. \r\n\r\nI ended up adding the following to `tryFindPartDirective` and `tryFindPartOfDirective`:\r\n\r\n```dart\r\n // Windows-specific: separator fix\r\nif (Platform.isWindows) {\r\n    directiveUri = directiveUri.replaceAll('/', '');\r\n    uri = uri.replaceAll('/', '');\r\n }\r\n```\r\n\r\nas `CompilationUnit.directive.uri.stringValue` on `windows` returns a path without separators, so \r\n\r\nso what is `../filename.dart` on `linux` \r\nis returned as `..filename.dart` on `windows`\r\n\r\ntherefore all conventional attempts  to normalize and then compare the paths failed, so I went with a less conventional attempt that is only used on windows \r\n"
    }
]