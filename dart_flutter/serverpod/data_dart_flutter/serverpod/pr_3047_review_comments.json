[
    {
        "title": "fix: Support typed database exceptions."
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Introduces a new database exception type called `DatabaseQueryException` that contains information related to an exception that occurred during a database query.\r\n\r\nThe fields exposed through the `DatabaseQueryException` class have been minimized to contain what is most relevant to the user.\r\n\r\n**Please provide feedback if any important field has been left out.**\r\n\r\nThe `code` field, which is probably what most developers will add code to parse, would have been nice to have typed. But since codes are not shared between different database types, the field is simply a nullable String.\r\n\r\nThis PR supersedes the original PR introduced here: https://github.com/serverpod/serverpod/pull/2546\r\n\r\n### Database exception abstract interfaces\r\nNew interfaces have been added that allow the framework to extend the interfaces in a backward-compatible way.\r\n\r\nBy using abstract interface class we reserve the right to extend the interface in the future and prevent code outside of the library to implement it.\r\n\r\nAn implementation of the interface has been added to the Postgres adapter. This continues to set the foundation for allowing other adapters in the future.\r\n\r\n### Additional fixes\r\nWhere applicable, all legacy tests were converted to be more precise in their type checking.\r\n\r\nThe last commit also contains a minor refactor to flatten out the if statements when catching exceptions in a database query.\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contribute](https://docs.serverpod.dev/contribute) page and followed the process outlined there for submitting PRs.\r\n- [x] This update contains only one single feature or bug fix and nothing else. (If you are submitting multiple fixes, please make multiple PRs.)\r\n- [x] I read and followed the [Dart Style Guide](https://dart.dev/guides/language/effective-dart/style) and formatted the code with [dart format](https://dart.dev/tools/dart-format).\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`), and made sure that the documentation follows the same style as other Serverpod documentation. I checked spelling and grammar.\r\n- [x] I added new tests to check the change I am making.\r\n- [x] All existing and new tests are passing.\r\n- [x] Any breaking changes are documented below.\r\n\r\nIf you need help, consider asking for advice on the [discussion board](https://github.com/serverpod/serverpod/discussions).\r\n\r\n## Breaking changes\r\n\r\nNone - the intention behind these changes is to be implemented in a backwards-compatible way.\r\nNew subtypes in the adapter have been added, but these should not interfere with logic that catches current exceptions."
    },
    {
        "author": {
            "login": "hampuslavin"
        },
        "body": "Looks good! \ud83c\udfce\ufe0f  Just some small Qs "
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "christerswahn"
        },
        "body": "This is a really great \"maturity\" improvement! :) Left some comments and discussion point!"
    },
    {
        "author": {
            "login": "hampuslavin"
        },
        "body": ""
    },
    {
        "author": {
            "login": "hampuslavin"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "hampuslavin"
        },
        "body": "Looks good on my end \ud83d\udc4d "
    },
    {
        "author": {
            "login": "christerswahn"
        },
        "body": ""
    },
    {
        "author": {
            "login": "christerswahn"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": ""
    },
    {
        "author": {
            "login": "christerswahn"
        },
        "body": "LGTM!"
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "@lukehutch - Please have a look at this to ensure everything you need is included."
    },
    {
        "author": {
            "login": "lukehutch"
        },
        "body": "> @lukehutch - Please have a look at this to ensure everything you need is included.\r\n\r\nLGTM, other than the open comments."
    }
]