[
    {
        "title": "fix: [Inheritance] Invalid code generation when base class have parameters with default values"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This PR closes the issue #3082, where the problem is described in detail. As a brief summary, when using the model inheritance experimental feature, there is a bug if any of the base class fields have default values. The generated constructor tries to initialize the default fields as if they belong to the class itself instead of delegating to super.\r\n\r\nCloses: #3082\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contribute](https://docs.serverpod.dev/contribute) page and followed the process outlined there for submitting PRs.\r\n- [x] This update contains only one single feature or bug fix and nothing else. (If you are submitting multiple fixes, please make multiple PRs.)\r\n- [x] I read and followed the [Dart Style Guide](https://dart.dev/guides/language/effective-dart/style) and formatted the code with [dart format](https://dart.dev/tools/dart-format).\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`), and made sure that the documentation follows the same style as other Serverpod documentation. I checked spelling and grammar.\r\n- [x] I added new tests to check the change I am making.\r\n- [x] All existing and new tests are passing.\r\n- [x] Any breaking changes are documented below.\r\n\r\nIf you need help, consider asking for advice on the [discussion board](https://github.com/serverpod/serverpod/discussions).\r\n\r\n## Breaking changes\r\n\r\nNo breaking changes, only the fix for a case not covered on the tests."
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "Awesome bug report and nice and isolated fix.\r\n\r\nApart from the comment on the tests, could you please add a model in the test project that validates this scenario? We generally try to have each feature of our models generated once in the project to catch edge cases."
    },
    {
        "author": {
            "login": "marcelomendoncasoares"
        },
        "body": ""
    },
    {
        "author": {
            "login": "SandPod"
        },
        "body": "LGTM! \ud83d\udc4d \r\n\r\nAwesome work and thanks for improving the framework! \ud83d\ude4f "
    },
    {
        "author": {
            "login": "marcelomendoncasoares"
        },
        "body": "> Awesome bug report and nice and isolated fix.\r\n> \r\n> Apart from the comment on the tests, could you please add a model in the test project that validates this scenario? We generally try to have each feature of our models generated once in the project to catch edge cases.\r\n\r\nNo problem. Just added two models (the parent and the child) with the exact same configuration from the server and client tests."
    }
]