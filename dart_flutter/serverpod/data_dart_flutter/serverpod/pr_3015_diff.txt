diff --git a/tests/serverpod_test_client/lib/src/custom_classes.dart b/tests/serverpod_test_client/lib/src/custom_classes.dart
deleted file mode 100644
index 57f636668c..0000000000
--- a/tests/serverpod_test_client/lib/src/custom_classes.dart
+++ /dev/null
@@ -1,50 +0,0 @@
-// ignore: depend_on_referenced_packages
-import 'package:serverpod_client/serverpod_client.dart';
-
-// Usually such a class should be placed in a common package.
-// But since this is only a test project, it should be fine.
-// Just be careful while importing, since the serialization
-// system treats the two implementations this classes differently.
-
-class CustomClass implements SerializableModel {
-  final String value;
-
-  CustomClass(this.value);
-
-  @override
-  String toJson() => value;
-
-  static CustomClass fromJson(dynamic data) {
-    return CustomClass(data);
-  }
-}
-
-class CustomClass2 {
-  final String value;
-
-  const CustomClass2(this.value);
-
-  factory CustomClass2.fromJson(dynamic data) {
-    return CustomClass2(data['text']);
-  }
-
-  dynamic toJson() => {'text': value};
-}
-
-class CustomClass3 implements SerializableModel, ProtocolSerialization {
-  final String value;
-
-  CustomClass3(this.value);
-
-  @override
-  String toJson() => value;
-
-  @override
-  String toJsonForProtocol() => value;
-
-  CustomClass3 copyWith() => this;
-
-  static CustomClass3 fromJson(dynamic data) {
-    return CustomClass3(data);
-  }
-}
diff --git a/tests/serverpod_test_client/lib/src/protocol/client.dart b/tests/serverpod_test_client/lib/src/protocol/client.dart
index 990a6b570b..94a6797e3d 100644
--- a/tests/serverpod_test_client/lib/src/protocol/client.dart
+++ b/tests/serverpod_test_client/lib/src/protocol/client.dart
@@ -14,8 +14,8 @@ import 'dart:async' as _i2;
 import 'package:serverpod_auth_client/serverpod_auth_client.dart' as _i3;
 import 'dart:typed_data' as _i4;
 import 'package:uuid/uuid_value.dart' as _i5;
-import 'package:serverpod_test_client/src/protocol_custom_classes.dart' as _i6;
-import 'package:serverpod_test_client/src/custom_classes.dart' as _i7;
+import 'package:serverpod_test_shared/src/protocol_custom_classes.dart' as _i6;
+import 'package:serverpod_test_shared/src/custom_classes.dart' as _i7;
 import 'package:serverpod_test_shared/src/external_custom_class.dart' as _i8;
 import 'package:serverpod_test_shared/src/freezed_custom_class.dart' as _i9;
 import 'package:serverpod_test_client/src/protocol/simple_data.dart' as _i10;
@@ -413,6 +413,35 @@ class EndpointCustomTypes extends _i1.EndpointRef {
         'returnFreezedCustomClassNullable',
         {'data': data},
       );
+
+  _i2.Future<_i7.CustomClassWithoutProtocolSerialization>
+      returnCustomClassWithoutProtocolSerialization(
+              _i7.CustomClassWithoutProtocolSerialization data) =>
+          caller
+              .callServerEndpoint<_i7.CustomClassWithoutProtocolSerialization>(
+            'customTypes',
+            'returnCustomClassWithoutProtocolSerialization',
+            {'data': data},
+          );
+
+  _i2.Future<_i7.CustomClassWithProtocolSerialization>
+      returnCustomClassWithProtocolSerialization(
+              _i7.CustomClassWithProtocolSerialization data) =>
+          caller.callServerEndpoint<_i7.CustomClassWithProtocolSerialization>(
+            'customTypes',
+            'returnCustomClassWithProtocolSerialization',
+            {'data': data},
+          );
+
+  _i2.Future<_i7.CustomClassWithProtocolSerializationMethod>
+      returnCustomClassWithProtocolSerializationMethod(
+              _i7.CustomClassWithProtocolSerializationMethod data) =>
+          caller.callServerEndpoint<
+              _i7.CustomClassWithProtocolSerializationMethod>(
+            'customTypes',
+            'returnCustomClassWithProtocolSerializationMethod',
+            {'data': data},
+          );
 }
 
 /// {@category Endpoint}
diff --git a/tests/serverpod_test_client/lib/src/protocol/object_with_custom_class.dart b/tests/serverpod_test_client/lib/src/protocol/object_with_custom_class.dart
index 670f72da73..25e0f987e3 100644
--- a/tests/serverpod_test_client/lib/src/protocol/object_with_custom_class.dart
+++ b/tests/serverpod_test_client/lib/src/protocol/object_with_custom_class.dart
@@ -10,27 +10,65 @@
 
 // ignore_for_file: no_leading_underscores_for_library_prefixes
 import 'package:serverpod_client/serverpod_client.dart' as _i1;
-import 'package:serverpod_test_client/src/custom_classes.dart' as _i2;
+import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i2;
 
 abstract class ObjectWithCustomClass implements _i1.SerializableModel {
-  ObjectWithCustomClass._({required this.customClassField});
+  ObjectWithCustomClass._({
+    required this.customClassWithoutProtocolSerialization,
+    required this.customClassWithProtocolSerialization,
+    required this.customClassWithProtocolSerializationMethod,
+  });
 
-  factory ObjectWithCustomClass({required _i2.CustomClass3 customClassField}) =
-      _ObjectWithCustomClassImpl;
+  factory ObjectWithCustomClass({
+    required _i2.CustomClassWithoutProtocolSerialization
+        customClassWithoutProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerialization
+        customClassWithProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerializationMethod
+        customClassWithProtocolSerializationMethod,
+  }) = _ObjectWithCustomClassImpl;
 
   factory ObjectWithCustomClass.fromJson(
       Map<String, dynamic> jsonSerialization) {
     return ObjectWithCustomClass(
-        customClassField:
-            _i2.CustomClass3.fromJson(jsonSerialization['customClassField']));
+      customClassWithoutProtocolSerialization:
+          _i2.CustomClassWithoutProtocolSerialization.fromJson(
+              jsonSerialization['customClassWithoutProtocolSerialization']),
+      customClassWithProtocolSerialization:
+          _i2.CustomClassWithProtocolSerialization.fromJson(
+              jsonSerialization['customClassWithProtocolSerialization']),
+      customClassWithProtocolSerializationMethod:
+          _i2.CustomClassWithProtocolSerializationMethod.fromJson(
+              jsonSerialization['customClassWithProtocolSerializationMethod']),
+    );
   }
 
-  _i2.CustomClass3 customClassField;
+  _i2.CustomClassWithoutProtocolSerialization
+      customClassWithoutProtocolSerialization;
 
-  ObjectWithCustomClass copyWith({_i2.CustomClass3? customClassField});
+  _i2.CustomClassWithProtocolSerialization customClassWithProtocolSerialization;
+
+  _i2.CustomClassWithProtocolSerializationMethod
+      customClassWithProtocolSerializationMethod;
+
+  ObjectWithCustomClass copyWith({
+    _i2.CustomClassWithoutProtocolSerialization?
+        customClassWithoutProtocolSerialization,
+    _i2.CustomClassWithProtocolSerialization?
+        customClassWithProtocolSerialization,
+    _i2.CustomClassWithProtocolSerializationMethod?
+        customClassWithProtocolSerializationMethod,
+  });
   @override
   Map<String, dynamic> toJson() {
-    return {'customClassField': customClassField.toJson()};
+    return {
+      'customClassWithoutProtocolSerialization':
+          customClassWithoutProtocolSerialization.toJson(),
+      'customClassWithProtocolSerialization':
+          customClassWithProtocolSerialization.toJson(),
+      'customClassWithProtocolSerializationMethod':
+          customClassWithProtocolSerializationMethod.toJson(),
+    };
   }
 
   @override
@@ -40,12 +78,41 @@ abstract class ObjectWithCustomClass implements _i1.SerializableModel {
 }
 
 class _ObjectWithCustomClassImpl extends ObjectWithCustomClass {
-  _ObjectWithCustomClassImpl({required _i2.CustomClass3 customClassField})
-      : super._(customClassField: customClassField);
+  _ObjectWithCustomClassImpl({
+    required _i2.CustomClassWithoutProtocolSerialization
+        customClassWithoutProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerialization
+        customClassWithProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerializationMethod
+        customClassWithProtocolSerializationMethod,
+  }) : super._(
+          customClassWithoutProtocolSerialization:
+              customClassWithoutProtocolSerialization,
+          customClassWithProtocolSerialization:
+              customClassWithProtocolSerialization,
+          customClassWithProtocolSerializationMethod:
+              customClassWithProtocolSerializationMethod,
+        );
 
   @override
-  ObjectWithCustomClass copyWith({_i2.CustomClass3? customClassField}) {
+  ObjectWithCustomClass copyWith({
+    _i2.CustomClassWithoutProtocolSerialization?
+        customClassWithoutProtocolSerialization,
+    _i2.CustomClassWithProtocolSerialization?
+        customClassWithProtocolSerialization,
+    _i2.CustomClassWithProtocolSerializationMethod?
+        customClassWithProtocolSerializationMethod,
+  }) {
     return ObjectWithCustomClass(
-        customClassField: customClassField ?? this.customClassField.copyWith());
+      customClassWithoutProtocolSerialization:
+          customClassWithoutProtocolSerialization ??
+              this.customClassWithoutProtocolSerialization.copyWith(),
+      customClassWithProtocolSerialization:
+          customClassWithProtocolSerialization ??
+              this.customClassWithProtocolSerialization.copyWith(),
+      customClassWithProtocolSerializationMethod:
+          customClassWithProtocolSerializationMethod ??
+              this.customClassWithProtocolSerializationMethod.copyWith(),
+    );
   }
 }
diff --git a/tests/serverpod_test_client/lib/src/protocol/protocol.dart b/tests/serverpod_test_client/lib/src/protocol/protocol.dart
index adcd9effe8..ccf547b652 100644
--- a/tests/serverpod_test_client/lib/src/protocol/protocol.dart
+++ b/tests/serverpod_test_client/lib/src/protocol/protocol.dart
@@ -134,13 +134,10 @@ import 'my_feature/models/my_feature_model.dart' as _i114;
 import 'package:serverpod_test_module_client/serverpod_test_module_client.dart'
     as _i115;
 import 'dart:typed_data' as _i116;
-import 'package:serverpod_test_client/src/custom_classes.dart' as _i117;
+import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i117;
 import 'package:serverpod_test_client/src/protocol/simple_data.dart' as _i118;
 import 'package:serverpod_test_client/src/protocol/test_enum.dart' as _i119;
-import 'package:serverpod_test_client/src/protocol_custom_classes.dart'
-    as _i120;
-import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i121;
-import 'package:serverpod_auth_client/serverpod_auth_client.dart' as _i122;
+import 'package:serverpod_auth_client/serverpod_auth_client.dart' as _i120;
 export 'defaults/boolean/bool_default.dart';
 export 'defaults/boolean/bool_default_mix.dart';
 export 'defaults/boolean/bool_default_model.dart';
@@ -1260,8 +1257,15 @@ class Protocol extends _i1.SerializationManager {
               (k, v) => MapEntry(deserialize<String>(k), deserialize<int?>(v)))
           : null) as dynamic;
     }
-    if (t == _i117.CustomClass3) {
-      return _i117.CustomClass3.fromJson(data) as T;
+    if (t == _i117.CustomClassWithoutProtocolSerialization) {
+      return _i117.CustomClassWithoutProtocolSerialization.fromJson(data) as T;
+    }
+    if (t == _i117.CustomClassWithProtocolSerialization) {
+      return _i117.CustomClassWithProtocolSerialization.fromJson(data) as T;
+    }
+    if (t == _i117.CustomClassWithProtocolSerializationMethod) {
+      return _i117.CustomClassWithProtocolSerializationMethod.fromJson(data)
+          as T;
     }
     if (t == List<_i108.TestEnum>) {
       return (data as List).map((e) => deserialize<_i108.TestEnum>(e)).toList()
@@ -1928,14 +1932,14 @@ class Protocol extends _i1.SerializationManager {
     if (t == _i117.CustomClass2) {
       return _i117.CustomClass2.fromJson(data) as T;
     }
-    if (t == _i120.ProtocolCustomClass) {
-      return _i120.ProtocolCustomClass.fromJson(data) as T;
+    if (t == _i117.ProtocolCustomClass) {
+      return _i117.ProtocolCustomClass.fromJson(data) as T;
     }
-    if (t == _i121.ExternalCustomClass) {
-      return _i121.ExternalCustomClass.fromJson(data) as T;
+    if (t == _i117.ExternalCustomClass) {
+      return _i117.ExternalCustomClass.fromJson(data) as T;
     }
-    if (t == _i121.FreezedCustomClass) {
-      return _i121.FreezedCustomClass.fromJson(data) as T;
+    if (t == _i117.FreezedCustomClass) {
+      return _i117.FreezedCustomClass.fromJson(data) as T;
     }
     if (t == _i1.getType<_i117.CustomClass?>()) {
       return (data != null ? _i117.CustomClass.fromJson(data) : null) as T;
@@ -1943,23 +1947,35 @@ class Protocol extends _i1.SerializationManager {
     if (t == _i1.getType<_i117.CustomClass2?>()) {
       return (data != null ? _i117.CustomClass2.fromJson(data) : null) as T;
     }
-    if (t == _i1.getType<_i117.CustomClass3?>()) {
-      return (data != null ? _i117.CustomClass3.fromJson(data) : null) as T;
+    if (t == _i1.getType<_i117.CustomClassWithoutProtocolSerialization?>()) {
+      return (data != null
+          ? _i117.CustomClassWithoutProtocolSerialization.fromJson(data)
+          : null) as T;
+    }
+    if (t == _i1.getType<_i117.CustomClassWithProtocolSerialization?>()) {
+      return (data != null
+          ? _i117.CustomClassWithProtocolSerialization.fromJson(data)
+          : null) as T;
     }
-    if (t == _i1.getType<_i120.ProtocolCustomClass?>()) {
-      return (data != null ? _i120.ProtocolCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i117.CustomClassWithProtocolSerializationMethod?>()) {
+      return (data != null
+          ? _i117.CustomClassWithProtocolSerializationMethod.fromJson(data)
+          : null) as T;
+    }
+    if (t == _i1.getType<_i117.ProtocolCustomClass?>()) {
+      return (data != null ? _i117.ProtocolCustomClass.fromJson(data) : null)
           as T;
     }
-    if (t == _i1.getType<_i121.ExternalCustomClass?>()) {
-      return (data != null ? _i121.ExternalCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i117.ExternalCustomClass?>()) {
+      return (data != null ? _i117.ExternalCustomClass.fromJson(data) : null)
           as T;
     }
-    if (t == _i1.getType<_i121.FreezedCustomClass?>()) {
-      return (data != null ? _i121.FreezedCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i117.FreezedCustomClass?>()) {
+      return (data != null ? _i117.FreezedCustomClass.fromJson(data) : null)
           as T;
     }
     try {
-      return _i122.Protocol().deserialize<T>(data, t);
+      return _i120.Protocol().deserialize<T>(data, t);
     } on _i1.DeserializationTypeNotFoundException catch (_) {}
     try {
       return _i115.Protocol().deserialize<T>(data, t);
@@ -1977,16 +1993,22 @@ class Protocol extends _i1.SerializationManager {
     if (data is _i117.CustomClass2) {
       return 'CustomClass2';
     }
-    if (data is _i117.CustomClass3) {
-      return 'CustomClass3';
+    if (data is _i117.CustomClassWithoutProtocolSerialization) {
+      return 'CustomClassWithoutProtocolSerialization';
+    }
+    if (data is _i117.CustomClassWithProtocolSerialization) {
+      return 'CustomClassWithProtocolSerialization';
     }
-    if (data is _i120.ProtocolCustomClass) {
+    if (data is _i117.CustomClassWithProtocolSerializationMethod) {
+      return 'CustomClassWithProtocolSerializationMethod';
+    }
+    if (data is _i117.ProtocolCustomClass) {
       return 'ProtocolCustomClass';
     }
-    if (data is _i121.ExternalCustomClass) {
+    if (data is _i117.ExternalCustomClass) {
       return 'ExternalCustomClass';
     }
-    if (data is _i121.FreezedCustomClass) {
+    if (data is _i117.FreezedCustomClass) {
       return 'FreezedCustomClass';
     }
     if (data is _i2.BoolDefault) {
@@ -2334,7 +2356,7 @@ class Protocol extends _i1.SerializationManager {
     if (data is _i114.MyFeatureModel) {
       return 'MyFeatureModel';
     }
-    className = _i122.Protocol().getClassNameForObject(data);
+    className = _i120.Protocol().getClassNameForObject(data);
     if (className != null) {
       return 'serverpod_auth.$className';
     }
@@ -2357,17 +2379,26 @@ class Protocol extends _i1.SerializationManager {
     if (dataClassName == 'CustomClass2') {
       return deserialize<_i117.CustomClass2>(data['data']);
     }
-    if (dataClassName == 'CustomClass3') {
-      return deserialize<_i117.CustomClass3>(data['data']);
+    if (dataClassName == 'CustomClassWithoutProtocolSerialization') {
+      return deserialize<_i117.CustomClassWithoutProtocolSerialization>(
+          data['data']);
+    }
+    if (dataClassName == 'CustomClassWithProtocolSerialization') {
+      return deserialize<_i117.CustomClassWithProtocolSerialization>(
+          data['data']);
+    }
+    if (dataClassName == 'CustomClassWithProtocolSerializationMethod') {
+      return deserialize<_i117.CustomClassWithProtocolSerializationMethod>(
+          data['data']);
     }
     if (dataClassName == 'ProtocolCustomClass') {
-      return deserialize<_i120.ProtocolCustomClass>(data['data']);
+      return deserialize<_i117.ProtocolCustomClass>(data['data']);
     }
     if (dataClassName == 'ExternalCustomClass') {
-      return deserialize<_i121.ExternalCustomClass>(data['data']);
+      return deserialize<_i117.ExternalCustomClass>(data['data']);
     }
     if (dataClassName == 'FreezedCustomClass') {
-      return deserialize<_i121.FreezedCustomClass>(data['data']);
+      return deserialize<_i117.FreezedCustomClass>(data['data']);
     }
     if (dataClassName == 'BoolDefault') {
       return deserialize<_i2.BoolDefault>(data['data']);
@@ -2716,7 +2747,7 @@ class Protocol extends _i1.SerializationManager {
     }
     if (dataClassName.startsWith('serverpod_auth.')) {
       data['className'] = dataClassName.substring(15);
-      return _i122.Protocol().deserializeByClassName(data);
+      return _i120.Protocol().deserializeByClassName(data);
     }
     if (dataClassName.startsWith('serverpod_test_module.')) {
       data['className'] = dataClassName.substring(22);
diff --git a/tests/serverpod_test_server/config/generator.yaml b/tests/serverpod_test_server/config/generator.yaml
index eb5cfc8b27..b5b193594a 100644
--- a/tests/serverpod_test_server/config/generator.yaml
+++ b/tests/serverpod_test_server/config/generator.yaml
@@ -8,9 +8,11 @@ modules:
     nickname: module
 
 extraClasses:
-  - project:src/custom_classes.dart:CustomClass
-  - project:src/custom_classes.dart:CustomClass2
-  - project:src/custom_classes.dart:CustomClass3
-  - project:src/protocol_custom_classes.dart:ProtocolCustomClass
+  - package:serverpod_test_shared/serverpod_test_shared.dart:CustomClass
+  - package:serverpod_test_shared/serverpod_test_shared.dart:CustomClass2
+  - package:serverpod_test_shared/serverpod_test_shared.dart:CustomClassWithoutProtocolSerialization
+  - package:serverpod_test_shared/serverpod_test_shared.dart:CustomClassWithProtocolSerialization
+  - package:serverpod_test_shared/serverpod_test_shared.dart:CustomClassWithProtocolSerializationMethod
+  - package:serverpod_test_shared/serverpod_test_shared.dart:ProtocolCustomClass
   - package:serverpod_test_shared/serverpod_test_shared.dart:ExternalCustomClass
   - package:serverpod_test_shared/serverpod_test_shared.dart:FreezedCustomClass
diff --git a/tests/serverpod_test_server/lib/src/custom_classes.dart b/tests/serverpod_test_server/lib/src/custom_classes.dart
deleted file mode 100644
index 57f636668c..0000000000
--- a/tests/serverpod_test_server/lib/src/custom_classes.dart
+++ /dev/null
@@ -1,50 +0,0 @@
-// ignore: depend_on_referenced_packages
-import 'package:serverpod_client/serverpod_client.dart';
-
-// Usually such a class should be placed in a common package.
-// But since this is only a test project, it should be fine.
-// Just be careful while importing, since the serialization
-// system treats the two implementations this classes differently.
-
-class CustomClass implements SerializableModel {
-  final String value;
-
-  CustomClass(this.value);
-
-  @override
-  String toJson() => value;
-
-  static CustomClass fromJson(dynamic data) {
-    return CustomClass(data);
-  }
-}
-
-class CustomClass2 {
-  final String value;
-
-  const CustomClass2(this.value);
-
-  factory CustomClass2.fromJson(dynamic data) {
-    return CustomClass2(data['text']);
-  }
-
-  dynamic toJson() => {'text': value};
-}
-
-class CustomClass3 implements SerializableModel, ProtocolSerialization {
-  final String value;
-
-  CustomClass3(this.value);
-
-  @override
-  String toJson() => value;
-
-  @override
-  String toJsonForProtocol() => value;
-
-  CustomClass3 copyWith() => this;
-
-  static CustomClass3 fromJson(dynamic data) {
-    return CustomClass3(data);
-  }
-}
diff --git a/tests/serverpod_test_server/lib/src/endpoints/custom_class_protocol.dart b/tests/serverpod_test_server/lib/src/endpoints/custom_class_protocol.dart
index a17b04611f..ca3100a737 100644
--- a/tests/serverpod_test_server/lib/src/endpoints/custom_class_protocol.dart
+++ b/tests/serverpod_test_server/lib/src/endpoints/custom_class_protocol.dart
@@ -1,7 +1,7 @@
 import 'dart:async';
 
 import 'package:serverpod/serverpod.dart';
-import 'package:serverpod_test_server/src/protocol_custom_classes.dart';
+import 'package:serverpod_test_shared/src/protocol_custom_classes.dart';
 
 class CustomClassProtocolEndpoint extends Endpoint {
   Future<ProtocolCustomClass> getProtocolField(
diff --git a/tests/serverpod_test_server/lib/src/endpoints/custom_types.dart b/tests/serverpod_test_server/lib/src/endpoints/custom_types.dart
index ffaf0fe41a..0238496c5b 100644
--- a/tests/serverpod_test_server/lib/src/endpoints/custom_types.dart
+++ b/tests/serverpod_test_server/lib/src/endpoints/custom_types.dart
@@ -1,5 +1,4 @@
 import 'package:serverpod/serverpod.dart';
-import 'package:serverpod_test_server/src/custom_classes.dart';
 import 'package:serverpod_test_shared/serverpod_test_shared.dart';
 
 class CustomTypesEndpoint extends Endpoint {
@@ -59,6 +58,30 @@ class CustomTypesEndpoint extends Endpoint {
     return data;
   }
 
+  Future<CustomClassWithoutProtocolSerialization>
+      returnCustomClassWithoutProtocolSerialization(
+    Session session,
+    CustomClassWithoutProtocolSerialization data,
+  ) async {
+    return data;
+  }
+
+  Future<CustomClassWithProtocolSerialization>
+      returnCustomClassWithProtocolSerialization(
+    Session session,
+    CustomClassWithProtocolSerialization data,
+  ) async {
+    return data;
+  }
+
+  Future<CustomClassWithProtocolSerializationMethod>
+      returnCustomClassWithProtocolSerializationMethod(
+    Session session,
+    CustomClassWithProtocolSerializationMethod data,
+  ) async {
+    return data;
+  }
+
   @override
   Future<void> handleStreamMessage(
     StreamingSession session,
diff --git a/tests/serverpod_test_server/lib/src/generated/endpoints.dart b/tests/serverpod_test_server/lib/src/generated/endpoints.dart
index a5bc1ebf34..8ea6d5f2af 100644
--- a/tests/serverpod_test_server/lib/src/generated/endpoints.dart
+++ b/tests/serverpod_test_server/lib/src/generated/endpoints.dart
@@ -48,7 +48,7 @@ import '../endpoints/test_tools.dart' as _i36;
 import '../my_feature/endpoints/my_feature_endpoint.dart' as _i37;
 import 'dart:typed_data' as _i38;
 import 'package:uuid/uuid_value.dart' as _i39;
-import 'package:serverpod_test_server/src/custom_classes.dart' as _i40;
+import 'package:serverpod_test_shared/src/custom_classes.dart' as _i40;
 import 'package:serverpod_test_shared/src/external_custom_class.dart' as _i41;
 import 'package:serverpod_test_shared/src/freezed_custom_class.dart' as _i42;
 import 'package:serverpod_test_server/src/generated/simple_data.dart' as _i43;
@@ -1106,6 +1106,64 @@ class Endpoints extends _i1.EndpointDispatch {
             params['data'],
           ),
         ),
+        'returnCustomClassWithoutProtocolSerialization': _i1.MethodConnector(
+          name: 'returnCustomClassWithoutProtocolSerialization',
+          params: {
+            'data': _i1.ParameterDescription(
+              name: 'data',
+              type: _i1.getType<_i40.CustomClassWithoutProtocolSerialization>(),
+              nullable: false,
+            )
+          },
+          call: (
+            _i1.Session session,
+            Map<String, dynamic> params,
+          ) async =>
+              (endpoints['customTypes'] as _i8.CustomTypesEndpoint)
+                  .returnCustomClassWithoutProtocolSerialization(
+            session,
+            params['data'],
+          ),
+        ),
+        'returnCustomClassWithProtocolSerialization': _i1.MethodConnector(
+          name: 'returnCustomClassWithProtocolSerialization',
+          params: {
+            'data': _i1.ParameterDescription(
+              name: 'data',
+              type: _i1.getType<_i40.CustomClassWithProtocolSerialization>(),
+              nullable: false,
+            )
+          },
+          call: (
+            _i1.Session session,
+            Map<String, dynamic> params,
+          ) async =>
+              (endpoints['customTypes'] as _i8.CustomTypesEndpoint)
+                  .returnCustomClassWithProtocolSerialization(
+            session,
+            params['data'],
+          ),
+        ),
+        'returnCustomClassWithProtocolSerializationMethod': _i1.MethodConnector(
+          name: 'returnCustomClassWithProtocolSerializationMethod',
+          params: {
+            'data': _i1.ParameterDescription(
+              name: 'data',
+              type: _i1
+                  .getType<_i40.CustomClassWithProtocolSerializationMethod>(),
+              nullable: false,
+            )
+          },
+          call: (
+            _i1.Session session,
+            Map<String, dynamic> params,
+          ) async =>
+              (endpoints['customTypes'] as _i8.CustomTypesEndpoint)
+                  .returnCustomClassWithProtocolSerializationMethod(
+            session,
+            params['data'],
+          ),
+        ),
       },
     );
     connectors['basicDatabase'] = _i1.EndpointConnector(
diff --git a/tests/serverpod_test_server/lib/src/generated/object_with_custom_class.dart b/tests/serverpod_test_server/lib/src/generated/object_with_custom_class.dart
index c12d13c0e4..1e032dd436 100644
--- a/tests/serverpod_test_server/lib/src/generated/object_with_custom_class.dart
+++ b/tests/serverpod_test_server/lib/src/generated/object_with_custom_class.dart
@@ -10,33 +10,94 @@
 
 // ignore_for_file: no_leading_underscores_for_library_prefixes
 import 'package:serverpod/serverpod.dart' as _i1;
-import 'package:serverpod_test_server/src/custom_classes.dart' as _i2;
+import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i2;
 
 abstract class ObjectWithCustomClass
     implements _i1.SerializableModel, _i1.ProtocolSerialization {
-  ObjectWithCustomClass._({required this.customClassField});
+  ObjectWithCustomClass._({
+    required this.customClassWithoutProtocolSerialization,
+    required this.customClassWithProtocolSerialization,
+    required this.customClassWithProtocolSerializationMethod,
+  });
 
-  factory ObjectWithCustomClass({required _i2.CustomClass3 customClassField}) =
-      _ObjectWithCustomClassImpl;
+  factory ObjectWithCustomClass({
+    required _i2.CustomClassWithoutProtocolSerialization
+        customClassWithoutProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerialization
+        customClassWithProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerializationMethod
+        customClassWithProtocolSerializationMethod,
+  }) = _ObjectWithCustomClassImpl;
 
   factory ObjectWithCustomClass.fromJson(
       Map<String, dynamic> jsonSerialization) {
     return ObjectWithCustomClass(
-        customClassField:
-            _i2.CustomClass3.fromJson(jsonSerialization['customClassField']));
+      customClassWithoutProtocolSerialization:
+          _i2.CustomClassWithoutProtocolSerialization.fromJson(
+              jsonSerialization['customClassWithoutProtocolSerialization']),
+      customClassWithProtocolSerialization:
+          _i2.CustomClassWithProtocolSerialization.fromJson(
+              jsonSerialization['customClassWithProtocolSerialization']),
+      customClassWithProtocolSerializationMethod:
+          _i2.CustomClassWithProtocolSerializationMethod.fromJson(
+              jsonSerialization['customClassWithProtocolSerializationMethod']),
+    );
   }
 
-  _i2.CustomClass3 customClassField;
+  _i2.CustomClassWithoutProtocolSerialization
+      customClassWithoutProtocolSerialization;
 
-  ObjectWithCustomClass copyWith({_i2.CustomClass3? customClassField});
+  _i2.CustomClassWithProtocolSerialization customClassWithProtocolSerialization;
+
+  _i2.CustomClassWithProtocolSerializationMethod
+      customClassWithProtocolSerializationMethod;
+
+  ObjectWithCustomClass copyWith({
+    _i2.CustomClassWithoutProtocolSerialization?
+        customClassWithoutProtocolSerialization,
+    _i2.CustomClassWithProtocolSerialization?
+        customClassWithProtocolSerialization,
+    _i2.CustomClassWithProtocolSerializationMethod?
+        customClassWithProtocolSerializationMethod,
+  });
   @override
   Map<String, dynamic> toJson() {
-    return {'customClassField': customClassField.toJson()};
+    return {
+      'customClassWithoutProtocolSerialization':
+          customClassWithoutProtocolSerialization.toJson(),
+      'customClassWithProtocolSerialization':
+          customClassWithProtocolSerialization.toJson(),
+      'customClassWithProtocolSerializationMethod':
+          customClassWithProtocolSerializationMethod.toJson(),
+    };
   }
 
   @override
   Map<String, dynamic> toJsonForProtocol() {
-    return {'customClassField': customClassField.toJsonForProtocol()};
+    return {
+      'customClassWithoutProtocolSerialization':
+// ignore: unnecessary_type_check
+          customClassWithoutProtocolSerialization is _i1.ProtocolSerialization
+              ? (customClassWithoutProtocolSerialization
+                      as _i1.ProtocolSerialization)
+                  .toJsonForProtocol()
+              : customClassWithoutProtocolSerialization.toJson(),
+      'customClassWithProtocolSerialization':
+// ignore: unnecessary_type_check
+          customClassWithProtocolSerialization is _i1.ProtocolSerialization
+              ? (customClassWithProtocolSerialization
+                      as _i1.ProtocolSerialization)
+                  .toJsonForProtocol()
+              : customClassWithProtocolSerialization.toJson(),
+      'customClassWithProtocolSerializationMethod':
+// ignore: unnecessary_type_check
+          customClassWithProtocolSerializationMethod
+                  is _i1.ProtocolSerialization
+              ? (customClassWithProtocolSerializationMethod
+                      as _i1.ProtocolSerialization)
+                  .toJsonForProtocol()
+              : customClassWithProtocolSerializationMethod.toJson(),
+    };
   }
 
   @override
@@ -46,12 +107,41 @@ abstract class ObjectWithCustomClass
 }
 
 class _ObjectWithCustomClassImpl extends ObjectWithCustomClass {
-  _ObjectWithCustomClassImpl({required _i2.CustomClass3 customClassField})
-      : super._(customClassField: customClassField);
+  _ObjectWithCustomClassImpl({
+    required _i2.CustomClassWithoutProtocolSerialization
+        customClassWithoutProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerialization
+        customClassWithProtocolSerialization,
+    required _i2.CustomClassWithProtocolSerializationMethod
+        customClassWithProtocolSerializationMethod,
+  }) : super._(
+          customClassWithoutProtocolSerialization:
+              customClassWithoutProtocolSerialization,
+          customClassWithProtocolSerialization:
+              customClassWithProtocolSerialization,
+          customClassWithProtocolSerializationMethod:
+              customClassWithProtocolSerializationMethod,
+        );
 
   @override
-  ObjectWithCustomClass copyWith({_i2.CustomClass3? customClassField}) {
+  ObjectWithCustomClass copyWith({
+    _i2.CustomClassWithoutProtocolSerialization?
+        customClassWithoutProtocolSerialization,
+    _i2.CustomClassWithProtocolSerialization?
+        customClassWithProtocolSerialization,
+    _i2.CustomClassWithProtocolSerializationMethod?
+        customClassWithProtocolSerializationMethod,
+  }) {
     return ObjectWithCustomClass(
-        customClassField: customClassField ?? this.customClassField.copyWith());
+      customClassWithoutProtocolSerialization:
+          customClassWithoutProtocolSerialization ??
+              this.customClassWithoutProtocolSerialization.copyWith(),
+      customClassWithProtocolSerialization:
+          customClassWithProtocolSerialization ??
+              this.customClassWithProtocolSerialization.copyWith(),
+      customClassWithProtocolSerializationMethod:
+          customClassWithProtocolSerializationMethod ??
+              this.customClassWithProtocolSerializationMethod.copyWith(),
+    );
   }
 }
diff --git a/tests/serverpod_test_server/lib/src/generated/protocol.dart b/tests/serverpod_test_server/lib/src/generated/protocol.dart
index 8c0db85721..6333cb3d7c 100644
--- a/tests/serverpod_test_server/lib/src/generated/protocol.dart
+++ b/tests/serverpod_test_server/lib/src/generated/protocol.dart
@@ -138,12 +138,9 @@ import 'types_map.dart' as _i117;
 import 'unique_data.dart' as _i118;
 import 'my_feature/models/my_feature_model.dart' as _i119;
 import 'dart:typed_data' as _i120;
-import 'package:serverpod_test_server/src/custom_classes.dart' as _i121;
+import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i121;
 import 'package:serverpod_test_server/src/generated/simple_data.dart' as _i122;
 import 'package:serverpod_test_server/src/generated/test_enum.dart' as _i123;
-import 'package:serverpod_test_server/src/protocol_custom_classes.dart'
-    as _i124;
-import 'package:serverpod_test_shared/serverpod_test_shared.dart' as _i125;
 export 'defaults/boolean/bool_default.dart';
 export 'defaults/boolean/bool_default_mix.dart';
 export 'defaults/boolean/bool_default_model.dart';
@@ -5735,8 +5732,15 @@ class Protocol extends _i1.SerializationManagerServer {
               (k, v) => MapEntry(deserialize<String>(k), deserialize<int?>(v)))
           : null) as dynamic;
     }
-    if (t == _i121.CustomClass3) {
-      return _i121.CustomClass3.fromJson(data) as T;
+    if (t == _i121.CustomClassWithoutProtocolSerialization) {
+      return _i121.CustomClassWithoutProtocolSerialization.fromJson(data) as T;
+    }
+    if (t == _i121.CustomClassWithProtocolSerialization) {
+      return _i121.CustomClassWithProtocolSerialization.fromJson(data) as T;
+    }
+    if (t == _i121.CustomClassWithProtocolSerializationMethod) {
+      return _i121.CustomClassWithProtocolSerializationMethod.fromJson(data)
+          as T;
     }
     if (t == List<_i113.TestEnum>) {
       return (data as List).map((e) => deserialize<_i113.TestEnum>(e)).toList()
@@ -6416,14 +6420,14 @@ class Protocol extends _i1.SerializationManagerServer {
     if (t == _i121.CustomClass2) {
       return _i121.CustomClass2.fromJson(data) as T;
     }
-    if (t == _i124.ProtocolCustomClass) {
-      return _i124.ProtocolCustomClass.fromJson(data) as T;
+    if (t == _i121.ProtocolCustomClass) {
+      return _i121.ProtocolCustomClass.fromJson(data) as T;
     }
-    if (t == _i125.ExternalCustomClass) {
-      return _i125.ExternalCustomClass.fromJson(data) as T;
+    if (t == _i121.ExternalCustomClass) {
+      return _i121.ExternalCustomClass.fromJson(data) as T;
     }
-    if (t == _i125.FreezedCustomClass) {
-      return _i125.FreezedCustomClass.fromJson(data) as T;
+    if (t == _i121.FreezedCustomClass) {
+      return _i121.FreezedCustomClass.fromJson(data) as T;
     }
     if (t == _i1.getType<_i121.CustomClass?>()) {
       return (data != null ? _i121.CustomClass.fromJson(data) : null) as T;
@@ -6431,19 +6435,31 @@ class Protocol extends _i1.SerializationManagerServer {
     if (t == _i1.getType<_i121.CustomClass2?>()) {
       return (data != null ? _i121.CustomClass2.fromJson(data) : null) as T;
     }
-    if (t == _i1.getType<_i121.CustomClass3?>()) {
-      return (data != null ? _i121.CustomClass3.fromJson(data) : null) as T;
+    if (t == _i1.getType<_i121.CustomClassWithoutProtocolSerialization?>()) {
+      return (data != null
+          ? _i121.CustomClassWithoutProtocolSerialization.fromJson(data)
+          : null) as T;
+    }
+    if (t == _i1.getType<_i121.CustomClassWithProtocolSerialization?>()) {
+      return (data != null
+          ? _i121.CustomClassWithProtocolSerialization.fromJson(data)
+          : null) as T;
     }
-    if (t == _i1.getType<_i124.ProtocolCustomClass?>()) {
-      return (data != null ? _i124.ProtocolCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i121.CustomClassWithProtocolSerializationMethod?>()) {
+      return (data != null
+          ? _i121.CustomClassWithProtocolSerializationMethod.fromJson(data)
+          : null) as T;
+    }
+    if (t == _i1.getType<_i121.ProtocolCustomClass?>()) {
+      return (data != null ? _i121.ProtocolCustomClass.fromJson(data) : null)
           as T;
     }
-    if (t == _i1.getType<_i125.ExternalCustomClass?>()) {
-      return (data != null ? _i125.ExternalCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i121.ExternalCustomClass?>()) {
+      return (data != null ? _i121.ExternalCustomClass.fromJson(data) : null)
           as T;
     }
-    if (t == _i1.getType<_i125.FreezedCustomClass?>()) {
-      return (data != null ? _i125.FreezedCustomClass.fromJson(data) : null)
+    if (t == _i1.getType<_i121.FreezedCustomClass?>()) {
+      return (data != null ? _i121.FreezedCustomClass.fromJson(data) : null)
           as T;
     }
     try {
@@ -6468,16 +6484,22 @@ class Protocol extends _i1.SerializationManagerServer {
     if (data is _i121.CustomClass2) {
       return 'CustomClass2';
     }
-    if (data is _i121.CustomClass3) {
-      return 'CustomClass3';
+    if (data is _i121.CustomClassWithoutProtocolSerialization) {
+      return 'CustomClassWithoutProtocolSerialization';
+    }
+    if (data is _i121.CustomClassWithProtocolSerialization) {
+      return 'CustomClassWithProtocolSerialization';
     }
-    if (data is _i124.ProtocolCustomClass) {
+    if (data is _i121.CustomClassWithProtocolSerializationMethod) {
+      return 'CustomClassWithProtocolSerializationMethod';
+    }
+    if (data is _i121.ProtocolCustomClass) {
       return 'ProtocolCustomClass';
     }
-    if (data is _i125.ExternalCustomClass) {
+    if (data is _i121.ExternalCustomClass) {
       return 'ExternalCustomClass';
     }
-    if (data is _i125.FreezedCustomClass) {
+    if (data is _i121.FreezedCustomClass) {
       return 'FreezedCustomClass';
     }
     if (data is _i5.BoolDefault) {
@@ -6858,17 +6880,26 @@ class Protocol extends _i1.SerializationManagerServer {
     if (dataClassName == 'CustomClass2') {
       return deserialize<_i121.CustomClass2>(data['data']);
     }
-    if (dataClassName == 'CustomClass3') {
-      return deserialize<_i121.CustomClass3>(data['data']);
+    if (dataClassName == 'CustomClassWithoutProtocolSerialization') {
+      return deserialize<_i121.CustomClassWithoutProtocolSerialization>(
+          data['data']);
+    }
+    if (dataClassName == 'CustomClassWithProtocolSerialization') {
+      return deserialize<_i121.CustomClassWithProtocolSerialization>(
+          data['data']);
+    }
+    if (dataClassName == 'CustomClassWithProtocolSerializationMethod') {
+      return deserialize<_i121.CustomClassWithProtocolSerializationMethod>(
+          data['data']);
     }
     if (dataClassName == 'ProtocolCustomClass') {
-      return deserialize<_i124.ProtocolCustomClass>(data['data']);
+      return deserialize<_i121.ProtocolCustomClass>(data['data']);
     }
     if (dataClassName == 'ExternalCustomClass') {
-      return deserialize<_i125.ExternalCustomClass>(data['data']);
+      return deserialize<_i121.ExternalCustomClass>(data['data']);
     }
     if (dataClassName == 'FreezedCustomClass') {
-      return deserialize<_i125.FreezedCustomClass>(data['data']);
+      return deserialize<_i121.FreezedCustomClass>(data['data']);
     }
     if (dataClassName == 'BoolDefault') {
       return deserialize<_i5.BoolDefault>(data['data']);
diff --git a/tests/serverpod_test_server/lib/src/generated/protocol.yaml b/tests/serverpod_test_server/lib/src/generated/protocol.yaml
index 3794dec77e..81c8b1d516 100644
--- a/tests/serverpod_test_server/lib/src/generated/protocol.yaml
+++ b/tests/serverpod_test_server/lib/src/generated/protocol.yaml
@@ -45,6 +45,9 @@ customTypes:
   - returnExternalCustomClassNullable:
   - returnFreezedCustomClass:
   - returnFreezedCustomClassNullable:
+  - returnCustomClassWithoutProtocolSerialization:
+  - returnCustomClassWithProtocolSerialization:
+  - returnCustomClassWithProtocolSerializationMethod:
 basicDatabase:
   - deleteAllSimpleTestData:
   - deleteSimpleTestDataLessThan:
diff --git a/tests/serverpod_test_server/lib/src/models/object_with_custom_class.spy.yaml b/tests/serverpod_test_server/lib/src/models/object_with_custom_class.spy.yaml
index eac9564008..8839069a8b 100644
--- a/tests/serverpod_test_server/lib/src/models/object_with_custom_class.spy.yaml
+++ b/tests/serverpod_test_server/lib/src/models/object_with_custom_class.spy.yaml
@@ -1,3 +1,6 @@
 class: ObjectWithCustomClass
 fields:
-    customClassField: CustomClass3,
\ No newline at end of file
+    customClassWithoutProtocolSerialization: CustomClassWithoutProtocolSerialization,
+    customClassWithProtocolSerialization: CustomClassWithProtocolSerialization,
+    customClassWithProtocolSerializationMethod: CustomClassWithProtocolSerializationMethod,
+        
\ No newline at end of file
diff --git a/tests/serverpod_test_server/test_e2e/connection_test.dart b/tests/serverpod_test_server/test_e2e/connection_test.dart
index d00c8adb73..f307a8aa71 100644
--- a/tests/serverpod_test_server/test_e2e/connection_test.dart
+++ b/tests/serverpod_test_server/test_e2e/connection_test.dart
@@ -1,7 +1,6 @@
 import 'dart:typed_data';
 
 import 'package:serverpod_test_client/serverpod_test_client.dart';
-import 'package:serverpod_test_client/src/custom_classes.dart';
 import 'package:serverpod_test_server/test_util/config.dart';
 import 'package:serverpod_test_shared/serverpod_test_shared.dart';
 import 'package:test/test.dart';
diff --git a/tests/serverpod_test_server/test_e2e/custom_class_protocol_test.dart b/tests/serverpod_test_server/test_e2e/custom_class_protocol_test.dart
new file mode 100644
index 0000000000..0251340dc7
--- /dev/null
+++ b/tests/serverpod_test_server/test_e2e/custom_class_protocol_test.dart
@@ -0,0 +1,131 @@
+import 'package:serverpod_test_client/serverpod_test_client.dart';
+import 'package:serverpod_test_server/test_util/config.dart';
+import 'package:serverpod_test_shared/serverpod_test_shared.dart';
+import 'package:test/test.dart';
+
+/// Unit tests for custom class serialization.
+/// These tests are designed to avoid creating multiple endpoint methods for each test case.
+/// Instead, custom class parameters are passed from the client side, and the server validates
+/// whether the expected values are returned correctly.
+void main() {
+  late Client client;
+  setUpAll(() {
+    client = Client(serverUrl);
+  });
+
+  tearDownAll(() {
+    client.close();
+  });
+
+  group('Given a custom class', () {
+    group('that does not implement ProtocolSerialization', () {
+      test(
+        'with the "serverSideValue" field set when the method is called then the server returns the "serverSideValue"',
+        () async {
+          final customClass = CustomClassWithoutProtocolSerialization(
+            serverSideValue: 'serverSideValue',
+          );
+          final result = await client.customTypes
+              .returnCustomClassWithoutProtocolSerialization(
+            customClass,
+          );
+          expect(
+            result.serverSideValue,
+            customClass.serverSideValue,
+          );
+        },
+      );
+
+      test(
+        'with the "value" field set when the method is called then the server returns the "value"',
+        () async {
+          final customClass = CustomClassWithoutProtocolSerialization(
+            value: 'value',
+          );
+          final result = await client.customTypes
+              .returnCustomClassWithoutProtocolSerialization(
+            customClass,
+          );
+          expect(
+            result.value,
+            customClass.value,
+          );
+        },
+      );
+    });
+
+    group('that implements ProtocolSerialization', () {
+      test(
+        'with the "serverSideValue" field set when the method is called then the server does not return the "serverSideValue"',
+        () async {
+          final customClass = CustomClassWithProtocolSerialization(
+            serverSideValue: 'serverSideValue',
+            value: 'value',
+          );
+          final result = await client.customTypes
+              .returnCustomClassWithProtocolSerialization(
+            customClass,
+          );
+          expect(
+            result.serverSideValue,
+            isNull,
+          );
+        },
+      );
+
+      test(
+        'with the "value" field set when the method is called then the server returns the "value"',
+        () async {
+          final customClass = CustomClassWithProtocolSerialization(
+            value: 'value',
+          );
+          final result = await client.customTypes
+              .returnCustomClassWithProtocolSerialization(
+            customClass,
+          );
+          expect(
+            result.value,
+            customClass.value,
+          );
+        },
+      );
+    });
+
+    group(
+        'that does not implement ProtocolSerialization but has the "toJsonForProtocol" method',
+        () {
+      test(
+        'with the "serverSideValue" field set when the method is called then the server returns the "serverSideValue"',
+        () async {
+          final customClass = CustomClassWithProtocolSerializationMethod(
+            serverSideValue: 'serverSideValue',
+          );
+          final result = await client.customTypes
+              .returnCustomClassWithProtocolSerializationMethod(
+            customClass,
+          );
+          expect(
+            result.serverSideValue,
+            customClass.serverSideValue,
+          );
+        },
+      );
+
+      test(
+          'with the "value" field set when the method is called then the server returns the "value"',
+          () async {
+        final customClass = CustomClassWithProtocolSerializationMethod(
+          value: 'value',
+        );
+        final result = await client.customTypes
+            .returnCustomClassWithProtocolSerializationMethod(
+          customClass,
+        );
+        expect(
+          result.value,
+          customClass.value,
+        );
+      });
+    });
+  });
+}
diff --git a/tests/serverpod_test_server/test_e2e/websocket_test.dart b/tests/serverpod_test_server/test_e2e/websocket_test.dart
index cbfa61d14e..7f806b2761 100644
--- a/tests/serverpod_test_server/test_e2e/websocket_test.dart
+++ b/tests/serverpod_test_server/test_e2e/websocket_test.dart
@@ -2,10 +2,10 @@ import 'dart:async';
 
 import 'package:serverpod/src/authentication/scope.dart';
 import 'package:serverpod_test_client/serverpod_test_client.dart';
-import 'package:serverpod_test_client/src/custom_classes.dart';
 import 'package:serverpod_test_module_client/serverpod_test_module_client.dart';
 import 'package:serverpod_test_server/test_util/config.dart';
 import 'package:serverpod_test_server/test_util/test_key_manager.dart';
+import 'package:serverpod_test_shared/serverpod_test_shared.dart';
 import 'package:test/test.dart';
 
 void main() {
diff --git a/tests/serverpod_test_server/test_integration/test_tools/serverpod_test_tools.dart b/tests/serverpod_test_server/test_integration/test_tools/serverpod_test_tools.dart
index ec0d4af7de..9e35af2a47 100644
--- a/tests/serverpod_test_server/test_integration/test_tools/serverpod_test_tools.dart
+++ b/tests/serverpod_test_server/test_integration/test_tools/serverpod_test_tools.dart
@@ -17,8 +17,8 @@ import 'dart:async' as _i3;
 import 'package:serverpod_auth_server/serverpod_auth_server.dart' as _i4;
 import 'dart:typed_data' as _i5;
 import 'package:uuid/uuid_value.dart' as _i6;
-import 'package:serverpod_test_server/src/protocol_custom_classes.dart' as _i7;
-import 'package:serverpod_test_server/src/custom_classes.dart' as _i8;
+import 'package:serverpod_test_shared/src/protocol_custom_classes.dart' as _i7;
+import 'package:serverpod_test_shared/src/custom_classes.dart' as _i8;
 import 'package:serverpod_test_shared/src/external_custom_class.dart' as _i9;
 import 'package:serverpod_test_shared/src/freezed_custom_class.dart' as _i10;
 import 'package:serverpod_test_server/src/generated/simple_data.dart' as _i11;
@@ -1627,6 +1627,96 @@ class _CustomTypesEndpoint {
       }
     });
   }
+
+  _i3.Future<_i8.CustomClassWithoutProtocolSerialization>
+      returnCustomClassWithoutProtocolSerialization(
+    _i1.TestSessionBuilder sessionBuilder,
+    _i8.CustomClassWithoutProtocolSerialization data,
+  ) async {
+    return _i1.callAwaitableFunctionAndHandleExceptions(() async {
+      var _localUniqueSession =
+          (sessionBuilder as _i1.InternalTestSessionBuilder).internalBuild(
+        endpoint: 'customTypes',
+        method: 'returnCustomClassWithoutProtocolSerialization',
+      );
+      try {
+        var _localCallContext = await _endpointDispatch.getMethodCallContext(
+          createSessionCallback: (_) => _localUniqueSession,
+          endpointPath: 'customTypes',
+          methodName: 'returnCustomClassWithoutProtocolSerialization',
+          parameters: _i1.testObjectToJson({'data': data}),
+          serializationManager: _serializationManager,
+        );
+        var _localReturnValue = await (_localCallContext.method.call(
+          _localUniqueSession,
+          _localCallContext.arguments,
+        ) as _i3.Future<_i8.CustomClassWithoutProtocolSerialization>);
+        return _localReturnValue;
+      } finally {
+        await _localUniqueSession.close();
+      }
+    });
+  }
+
+  _i3.Future<_i8.CustomClassWithProtocolSerialization>
+      returnCustomClassWithProtocolSerialization(
+    _i1.TestSessionBuilder sessionBuilder,
+    _i8.CustomClassWithProtocolSerialization data,
+  ) async {
+    return _i1.callAwaitableFunctionAndHandleExceptions(() async {
+      var _localUniqueSession =
+          (sessionBuilder as _i1.InternalTestSessionBuilder).internalBuild(
+        endpoint: 'customTypes',
+        method: 'returnCustomClassWithProtocolSerialization',
+      );
+      try {
+        var _localCallContext = await _endpointDispatch.getMethodCallContext(
+          createSessionCallback: (_) => _localUniqueSession,
+          endpointPath: 'customTypes',
+          methodName: 'returnCustomClassWithProtocolSerialization',
+          parameters: _i1.testObjectToJson({'data': data}),
+          serializationManager: _serializationManager,
+        );
+        var _localReturnValue = await (_localCallContext.method.call(
+          _localUniqueSession,
+          _localCallContext.arguments,
+        ) as _i3.Future<_i8.CustomClassWithProtocolSerialization>);
+        return _localReturnValue;
+      } finally {
+        await _localUniqueSession.close();
+      }
+    });
+  }
+
+  _i3.Future<_i8.CustomClassWithProtocolSerializationMethod>
+      returnCustomClassWithProtocolSerializationMethod(
+    _i1.TestSessionBuilder sessionBuilder,
+    _i8.CustomClassWithProtocolSerializationMethod data,
+  ) async {
+    return _i1.callAwaitableFunctionAndHandleExceptions(() async {
+      var _localUniqueSession =
+          (sessionBuilder as _i1.InternalTestSessionBuilder).internalBuild(
+        endpoint: 'customTypes',
+        method: 'returnCustomClassWithProtocolSerializationMethod',
+      );
+      try {
+        var _localCallContext = await _endpointDispatch.getMethodCallContext(
+          createSessionCallback: (_) => _localUniqueSession,
+          endpointPath: 'customTypes',
+          methodName: 'returnCustomClassWithProtocolSerializationMethod',
+          parameters: _i1.testObjectToJson({'data': data}),
+          serializationManager: _serializationManager,
+        );
+        var _localReturnValue = await (_localCallContext.method.call(
+          _localUniqueSession,
+          _localCallContext.arguments,
+        ) as _i3.Future<_i8.CustomClassWithProtocolSerializationMethod>);
+        return _localReturnValue;
+      } finally {
+        await _localUniqueSession.close();
+      }
+    });
+  }
 }
 
 class _BasicDatabase {
diff --git a/tests/serverpod_test_shared/lib/serverpod_test_shared.dart b/tests/serverpod_test_shared/lib/serverpod_test_shared.dart
index 5ca8182596..bbd6c6f813 100644
--- a/tests/serverpod_test_shared/lib/serverpod_test_shared.dart
+++ b/tests/serverpod_test_shared/lib/serverpod_test_shared.dart
@@ -1,2 +1,4 @@
 export 'src/external_custom_class.dart';
 export 'src/freezed_custom_class.dart';
+export 'src/custom_classes.dart';
+export 'src/protocol_custom_classes.dart';
diff --git a/tests/serverpod_test_shared/lib/src/custom_classes.dart b/tests/serverpod_test_shared/lib/src/custom_classes.dart
new file mode 100644
index 0000000000..47d5c26dc6
--- /dev/null
+++ b/tests/serverpod_test_shared/lib/src/custom_classes.dart
@@ -0,0 +1,111 @@
+import 'package:serverpod_serialization/serverpod_serialization.dart';
+
+class CustomClass implements SerializableModel {
+  final String value;
+
+  CustomClass(this.value);
+
+  @override
+  String toJson() => value;
+
+  factory CustomClass.fromJson(dynamic data) {
+    return CustomClass(data);
+  }
+}
+
+class CustomClass2 {
+  final String value;
+
+  const CustomClass2(this.value);
+
+  factory CustomClass2.fromJson(dynamic data) {
+    return CustomClass2(data['text']);
+  }
+
+  dynamic toJson() => {'text': value};
+}
+
+class CustomClassWithoutProtocolSerialization {
+  final String? serverSideValue;
+  final String? value;
+
+  CustomClassWithoutProtocolSerialization({
+    this.serverSideValue,
+    this.value,
+  });
+
+  Map<String, dynamic> toJson() => {
+        'serverSideValue': serverSideValue,
+        'value': value,
+      };
+
+  CustomClassWithoutProtocolSerialization copyWith() => this;
+
+  factory CustomClassWithoutProtocolSerialization.fromJson(
+    Map<String, dynamic> data,
+  ) {
+    return CustomClassWithoutProtocolSerialization(
+      serverSideValue: data['serverSideValue'] as String?,
+      value: data['value'] as String?,
+    );
+  }
+}
+
+class CustomClassWithProtocolSerialization implements ProtocolSerialization {
+  final String? serverSideValue;
+  final String? value;
+
+  CustomClassWithProtocolSerialization({
+    this.serverSideValue,
+    this.value,
+  });
+
+  Map<String, dynamic> toJson() => {
+        'serverSideValue': serverSideValue,
+        'value': value,
+      };
+
+  @override
+  Map<String, dynamic> toJsonForProtocol() => {'value': value};
+
+  CustomClassWithProtocolSerialization copyWith() => this;
+
+  factory CustomClassWithProtocolSerialization.fromJson(
+    Map<String, dynamic> data,
+  ) {
+    return CustomClassWithProtocolSerialization(
+      serverSideValue: data['serverSideValue'] as String?,
+      value: data['value'] as String?,
+    );
+  }
+}
+
+/// Custom class that does not implement ProtocolSerialization but has the
+/// "toJsonForProtocol" method.
+class CustomClassWithProtocolSerializationMethod {
+  final String? serverSideValue;
+  final String? value;
+
+  CustomClassWithProtocolSerializationMethod({
+    this.serverSideValue,
+    this.value,
+  });
+
+  Map<String, dynamic> toJson() => {
+        'serverSideValue': serverSideValue,
+        'value': value,
+      };
+
+  Map<String, dynamic> toJsonForProtocol() => {'value': value};
+
+  CustomClassWithProtocolSerializationMethod copyWith() => this;
+
+  factory CustomClassWithProtocolSerializationMethod.fromJson(
+    Map<String, dynamic> data,
+  ) {
+    return CustomClassWithProtocolSerializationMethod(
+      serverSideValue: data['serverSideValue'] as String?,
+      value: data['value'] as String?,
+    );
+  }
+}
diff --git a/tests/serverpod_test_server/lib/src/protocol_custom_classes.dart b/tests/serverpod_test_shared/lib/src/protocol_custom_classes.dart
similarity index 87%
rename from tests/serverpod_test_server/lib/src/protocol_custom_classes.dart
rename to tests/serverpod_test_shared/lib/src/protocol_custom_classes.dart
index 6a03b7748d..096872d62e 100644
--- a/tests/serverpod_test_server/lib/src/protocol_custom_classes.dart
+++ b/tests/serverpod_test_shared/lib/src/protocol_custom_classes.dart
@@ -1,5 +1,4 @@
-// ignore: depend_on_referenced_packages
-import 'package:serverpod_client/serverpod_client.dart';
+import 'package:serverpod_serialization/serverpod_serialization.dart';
 
 class ProtocolCustomClass implements SerializableModel, ProtocolSerialization {
   final String? value;
diff --git a/tools/serverpod_cli/lib/src/generator/dart/library_generators/model_library_generator.dart b/tools/serverpod_cli/lib/src/generator/dart/library_generators/model_library_generator.dart
index 907da9b045..c5be43fcb8 100644
--- a/tools/serverpod_cli/lib/src/generator/dart/library_generators/model_library_generator.dart
+++ b/tools/serverpod_cli/lib/src/generator/dart/library_generators/model_library_generator.dart
@@ -12,6 +12,12 @@ import 'package:serverpod_cli/src/generator/types.dart';
 import 'package:serverpod_serialization/serverpod_serialization.dart';
 import 'package:serverpod_service_client/serverpod_service_client.dart';
 
+/// The name of the method used to convert a model to JSON.
+const String _toJsonMethodName = 'toJson';
+
+/// The name of the method used to convert a model to JSON for protocol serialization.
+const String _toJsonForProtocolMethodName = 'toJsonForProtocol';
+
 /// Generates the dart libraries for [SerializableModelDefinition]s.
 class SerializableModelLibraryGenerator {
   final bool serverCode;
@@ -413,13 +419,13 @@ class SerializableModelLibraryGenerator {
         }))
         ..methods.add(Method((methodBuilder) {
           methodBuilder
-            ..name = 'toJson'
+            ..name = _toJsonMethodName
             ..annotations.add(refer('override'))
             ..returns = refer('Map<String, dynamic>')
             ..body = Block((blockBuilder) {
               blockBuilder.statements.add(
                 refer('var jsonMap')
-                    .assign(refer('super').property('toJson').call([]))
+                    .assign(refer('super').property(_toJsonMethodName).call([]))
                     .statement,
               );
 
@@ -827,7 +833,7 @@ class SerializableModelLibraryGenerator {
     return Method(
       (m) {
         m.returns = refer('Map<String,dynamic>');
-        m.name = 'toJson';
+        m.name = _toJsonMethodName;
         m.annotations.add(refer('override'));
 
         var filteredFields = fields;
@@ -840,7 +846,10 @@ class SerializableModelLibraryGenerator {
               .where((field) => field.shouldSerializeField(serverCode));
         }
 
-        m.body = _createToJsonBodyFromFields(filteredFields, 'toJson');
+        m.body = _createToJsonBodyFromFields(
+          filteredFields,
+          _toJsonMethodName,
+        );
       },
     );
   }
@@ -851,14 +860,16 @@ class SerializableModelLibraryGenerator {
     return Method(
       (m) {
         m.returns = refer('Map<String,dynamic>');
-        m.name = 'toJsonForProtocol';
+        m.name = _toJsonForProtocolMethodName;
         m.annotations.add(refer('override'));
 
         var filteredFields =
             fields.where((field) => field.shouldSerializeField(serverCode));
 
-        m.body =
-            _createToJsonBodyFromFields(filteredFields, 'toJsonForProtocol');
+        m.body = _createToJsonBodyFromFields(
+          filteredFields,
+          _toJsonForProtocolMethodName,
+        );
       },
     );
   }
@@ -887,15 +898,54 @@ class SerializableModelLibraryGenerator {
   Expression _toJsonCallConversionMethod(
     Reference fieldRef,
     TypeDefinition fieldType,
-    String toJsonMethodName,
+    String methodName,
   ) {
     if (fieldType.isSerializedValue) return fieldRef;
 
     Expression fieldExpression = fieldRef;
 
+    // If the field is a custom class and we are generating 'toJsonForProtocol',
+    // we need to check if it implements the ProtocolSerialization interface. If
+    // it does, we use the 'toJsonForProtocol' method to convert the field to
+    // JSON. Otherwise we use the 'toJson' method.
+    if (fieldType.customClass && methodName == _toJsonForProtocolMethodName) {
+      var protocolSerialization = refer(
+        'ProtocolSerialization',
+        serverpodUrl(serverCode),
+      );
+
+      var toJsonForProtocolExpression = switch (fieldType.nullable) {
+        true => fieldExpression
+            .asA(protocolSerialization)
+            .nullSafeProperty(_toJsonForProtocolMethodName),
+        false => fieldExpression
+            .asA(protocolSerialization)
+            .property(_toJsonForProtocolMethodName),
+      };
+
+      var toJsonExpression = switch (fieldType.nullable) {
+        true => fieldExpression.nullSafeProperty(_toJsonMethodName),
+        false => fieldExpression.property(_toJsonMethodName),
+      };
+
+      fieldExpression = CodeExpression(
+        Block.of(
+          [
+            const Code('\n// ignore: unnecessary_type_check'),
+            fieldExpression.isA(protocolSerialization).code,
+            const Code('?'),
+            toJsonForProtocolExpression.call([]).code,
+            const Code(':'),
+            toJsonExpression.call([]).code,
+          ],
+        ),
+      );
+      return fieldExpression;
+    }
+
     var toJson = fieldType.isSerializedByExtension || fieldType.isEnumType
-        ? 'toJson'
-        : toJsonMethodName;
+        ? _toJsonMethodName
+        : methodName;
 
     if (fieldType.nullable) {
       fieldExpression = fieldExpression.nullSafeProperty(toJson);
@@ -916,7 +966,7 @@ class SerializableModelLibraryGenerator {
             ..body = _toJsonCallConversionMethod(
               refer('v'),
               fieldType.generics.first,
-              toJsonMethodName,
+              methodName,
             ).code,
         ).closure
       };
@@ -933,11 +983,12 @@ class SerializableModelLibraryGenerator {
               ..body = _toJsonCallConversionMethod(
                 refer('k'),
                 fieldType.generics.first,
-                toJsonMethodName,
+                methodName,
               ).code,
           ).closure
         };
       }
+
       if (!fieldType.generics.last.isSerializedValue) {
         namedParams = {
           ...namedParams,
@@ -950,7 +1001,7 @@ class SerializableModelLibraryGenerator {
               ..body = _toJsonCallConversionMethod(
                 refer('v'),
                 fieldType.generics.last,
-                toJsonMethodName,
+                methodName,
               ).code,
           ).closure
         };
@@ -1290,10 +1341,12 @@ class SerializableModelLibraryGenerator {
     return Method(
       (m) => m
         ..annotations.add(refer('override'))
-        ..returns = TypeReference((t) => t
-          ..symbol = 'Table'
-          ..isNullable = true
-          ..url = 'package:serverpod/serverpod.dart')
+        ..returns = TypeReference(
+          (t) => t
+            ..symbol = 'Table'
+            ..isNullable = true
+            ..url = serverpodUrl(true),
+        )
         ..name = 'getRelationTable'
         ..requiredParameters.add(
           Parameter(
@@ -1328,9 +1381,13 @@ class SerializableModelLibraryGenerator {
     return Method(
       (m) => m
         ..annotations.add(refer('override'))
-        ..returns = TypeReference((t) => t
-          ..symbol = 'List'
-          ..types.add(refer('Column', 'package:serverpod/serverpod.dart')))
+        ..returns = TypeReference(
+          (t) => t
+            ..symbol = 'List'
+            ..types.add(
+              refer('Column', serverpodUrl(true)),
+            ),
+        )
         ..name = 'columns'
         ..lambda = true
         ..type = MethodType.getter
@@ -1359,7 +1416,7 @@ class SerializableModelLibraryGenerator {
           ..docs.addAll(field.documentation ?? [])
           ..type = TypeReference((t) => t
             ..symbol = field.type.columnType
-            ..url = 'package:serverpod/serverpod.dart'
+            ..url = serverpodUrl(true)
             ..types.addAll(field.type.isEnumType
                 ? [
                     field.type.reference(
@@ -1478,7 +1535,7 @@ class SerializableModelLibraryGenerator {
               .assign(
                 refer(
                   'createRelationTable',
-                  'package:serverpod/serverpod.dart',
+                  serverpodUrl(true),
                 ).call(
                   [],
                   {
@@ -1542,7 +1599,7 @@ class SerializableModelLibraryGenerator {
               .assign(
                 refer(
                   'createRelationTable',
-                  'package:serverpod/serverpod.dart',
+                  serverpodUrl(true),
                 ).call(
                   [],
                   {
@@ -1660,7 +1717,7 @@ class SerializableModelLibraryGenerator {
     assert(!field.type.isEnumType);
     return TypeReference((t) => t
       ..symbol = field.type.columnType
-      ..url = 'package:serverpod/serverpod.dart'
+      ..url = serverpodUrl(true)
       ..types.addAll([])).call([
       literalString(field.name),
       refer('this'),
@@ -1688,7 +1745,7 @@ class SerializableModelLibraryGenerator {
 
     return TypeReference((t) => t
       ..symbol = field.type.columnType
-      ..url = 'package:serverpod/serverpod.dart'
+      ..url = serverpodUrl(true)
       ..types.addAll([])).call([
       literalString(field.name),
       refer('this'),
@@ -1704,7 +1761,7 @@ class SerializableModelLibraryGenerator {
     ClassDefinition classDefinition,
   ) {
     return Class(((c) {
-      c.extend = refer('IncludeObject', 'package:serverpod/serverpod.dart');
+      c.extend = refer('IncludeObject', serverpodUrl(true));
       c.name = '${className}Include';
       var relationFields = fields
           .where((f) =>
@@ -1735,7 +1792,7 @@ class SerializableModelLibraryGenerator {
     ClassDefinition classDefinition,
   ) {
     return Class(((c) {
-      c.extend = refer('IncludeList', 'package:serverpod/serverpod.dart');
+      c.extend = refer('IncludeList', serverpodUrl(true));
       c.name = '${className}IncludeList';
 
       c.constructors.add(_buildModelIncludeListClassConstructor(className));
@@ -1820,7 +1877,7 @@ class SerializableModelLibraryGenerator {
           ..symbol = 'Map'
           ..types.addAll([
             refer('String'),
-            refer('Include?', 'package:serverpod/serverpod.dart'),
+            refer('Include?', serverpodUrl(true)),
           ]))
         ..name = 'includes'
         ..lambda = true
@@ -1855,7 +1912,7 @@ class SerializableModelLibraryGenerator {
           ..symbol = 'Map'
           ..types.addAll([
             refer('String'),
-            refer('Include?', 'package:serverpod/serverpod.dart'),
+            refer('Include?', serverpodUrl(true)),
           ]))
         ..name = 'includes'
         ..lambda = true
@@ -2000,7 +2057,7 @@ class SerializableModelLibraryGenerator {
         (m) => m
           ..annotations.add(refer('override'))
           ..returns = refer('int')
-          ..name = 'toJson'
+          ..name = _toJsonMethodName
           ..lambda = true
           ..body = refer('index').code,
       ),
@@ -2039,7 +2096,7 @@ class SerializableModelLibraryGenerator {
         (m) => m
           ..annotations.add(refer('override'))
           ..returns = refer('String')
-          ..name = 'toJson'
+          ..name = _toJsonMethodName
           ..lambda = true
           ..body = refer('name').code,
       ),
diff --git a/tools/serverpod_cli/test/generator/dart/server_code_generator/custom_class_test.dart b/tools/serverpod_cli/test/generator/dart/server_code_generator/custom_class_test.dart
index 0d1ecf9406..ff7b6b519f 100644
--- a/tools/serverpod_cli/test/generator/dart/server_code_generator/custom_class_test.dart
+++ b/tools/serverpod_cli/test/generator/dart/server_code_generator/custom_class_test.dart
@@ -49,7 +49,8 @@ void main() {
       name: testClassName,
     );
 
-    test('fromJson method should pass data as dynamic to custom class fromJson',
+    test(
+        'then fromJson method should pass data as dynamic to custom class fromJson',
         () {
       var fromJsonConstructor =
           CompilationUnitHelpers.tryFindConstructorDeclaration(
@@ -68,5 +69,55 @@ void main() {
             'The fromJson method should pass data as dynamic to CustomClass.fromJson but doesn\'t.',
       );
     });
+
+    test(
+      'then toJsonForProtocol method should correctly serialize customClassField by calling the appropriate toJson method',
+      () {
+        var toJsonForProtocolMethod =
+            CompilationUnitHelpers.tryFindMethodDeclaration(
+          maybeClassNamedExample!,
+          name: 'toJsonForProtocol',
+        );
+
+        var toJsonForProtocolCode = toJsonForProtocolMethod!.toSource();
+
+        // This regex checks for this pattern but allows any number on the import.
+        // Example:
+        // customClassField is _i1.ProtocolSerialization?
+        // (customClassField as _i1.ProtocolSerialization).toJsonForProtocol()
+        // : customClassField.toJson()
+        var regex = RegExp(
+          r'customClassField\s+is\s+_i\d+\.ProtocolSerialization\s*'
+          r'\?\s*\(customClassField\s+as\s+_i\d+\.ProtocolSerialization\)\.toJsonForProtocol\(\)\s*'
+          r':\s*customClassField\.toJson\(\)',
+        );
+
+        expect(
+          regex.hasMatch(toJsonForProtocolCode),
+          isTrue,
+          reason:
+              'The toJsonForProtocol method should correctly serialize customClassField by checking if it implements '
+              'ProtocolSerialization and calling the appropriate method, with dynamic handling of import prefixes (_iX) and flexible quotes.',
+        );
+      },
+    );
+
+    test(
+      'then toJson method should not call toJsonForProtocol method',
+      () {
+        var toJsonMethod = CompilationUnitHelpers.tryFindMethodDeclaration(
+          maybeClassNamedExample!,
+          name: 'toJson',
+        );
+
+        var toJsonCode = toJsonMethod!.toSource();
+
+        expect(
+          toJsonCode.contains('toJsonForProtocol'),
+          isFalse,
+          reason: 'The toJson method should not call toJsonForProtocol method.',
+        );
+      },
+    );
   });
 }
