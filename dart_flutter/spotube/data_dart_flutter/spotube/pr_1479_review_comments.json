[
    {
        "title": "Feature: Local music library"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "This PR introduces a new setting that allows you to set zero or more \"local libraries\" from a directory. These do not get modified in any way, not even created if they don't exist (they're just not loaded, in that case). Closes #595 (which seems to already be supported, actually).\r\n\r\nThis is only used right now in the \"Local tracks\" feature. Playback, queuing, removing libraries, and album art seem to work automatically, but MPRIS metadata does not, and it uses fallback data if you attempt to look at the track, album, or artist pages for any local track, but this seems to be an issue with the existing Downloads folder too.\r\n\r\nThe PR also changes some dependencies, which I had to do to get it to build and run on my machine. Feel free to revert it, or have me revert it, if you feel it necessary.\r\n\r\n## Screenshots\r\n![Screenshot of Spotube on the Settings page, focusing on the new item under Downloads labeled Local libraries](https://github.com/KRTirtho/spotube/assets/15241530/1087808a-4367-452e-b7f1-38432269dc83)\r\n![Screenshot of Spotube on the Local libraries settings sub-page, listing two entries](https://github.com/KRTirtho/spotube/assets/15241530/2d70ea59-2065-490a-87c8-4cf998c461ef)\r\n"
    },
    {
        "author": {
            "login": "KRTirtho"
        },
        "body": "Wow, that's really great work. Thanks for the contribution.\r\n\r\nBut I'd like to suggest some changes.\r\n\r\nInstead of having the Local Library section in Settings, we can just show the Local Folders as grid of cards/list in the \"Library\" > \"Local Tracks\" Tab. The tracks for each folder will be accessible only on that Folder's specific page.\r\nWe can  have the \"add local library\" button there as well to add the folders users want to.\r\n\r\nThis will also need the \"Local Tracks\" tab to be renamed as just \"Local\" meaning local library."
    },
    {
        "author": {
            "login": "bleonard252"
        },
        "body": "I'm not completely sure what a grid view would look like for a local tracks list. If you are thinking about album/artist grouping, that's a taller task, and I think it would be better to integrate it into the local fields anyway, which is definitely outside the scope of this PR. (I'm thinking about setting up local track integration via Spotify ID in a future PR.)\r\n\r\nI think I might try integrating the settings into the \"local tracks\" list, by grouping by source and putting the \"add to library\" button there, as you suggested."
    },
    {
        "author": {
            "login": "bleonard252"
        },
        "body": "One interesting side effect of this new listing mechanism is that, now, if you click play on a track (with a clear queue, not sure if that matters), it plays all the tracks _from that library source only_.\r\n\r\n![A screenshot of Spotube showing some tracks grouped by library source.](https://github.com/KRTirtho/spotube/assets/15241530/79fb35d7-c538-4aa4-abd7-4d9b256818a9)"
    },
    {
        "author": {
            "login": "KRTirtho"
        },
        "body": "Great work. This is close to what I meant and imagined. \r\nBut, instead of showing all the tracks of all the libraries together,\r\nwe can show just the Library names in the \"Local Tracks\" tab. It can be a `ListView` or a `GridView` of them. Kinda similar to Playlist. But, we'll utilize the FileSystem to manage/store it.\r\nWe can move the playbuttons, sort button etc. playback related actions to specific Library view page. The Library view page will List all the Tracks contained by it\r\n\r\n> One interesting side effect of this new listing mechanism is that, now, if you click play on a track (with a clear queue, not sure if that matters), it plays all the tracks from that library source only.\r\n\r\nDo you mean it doesn't play any other online tracks if we add them to the Queue later?"
    },
    {
        "author": {
            "login": "KRTirtho"
        },
        "body": "We actually only merge PRs in to the `dev` branch. But, you were targetting `master` branch. So some conflicts arose after changing the target branch\r\n\r\nhttps://github.com/KRTirtho/spotube/blob/a9ad7c7140b0534ba01920dd7a278d59c5ff0e38/CONTRIBUTION.md#L148"
    },
    {
        "author": {
            "login": "bleonard252"
        },
        "body": "> Do you mean it doesn't play any other online tracks if we add them to the Queue later?\r\n\r\nIt does. It doesn't add the other listed sources to the queue, though. I guess if I rework it into multiple pages, this becomes intended behavior :)\r\n\r\n> We actually only merge PRs in to the dev branch\r\n\r\nOops I must have missed that. That makes sense. I'll rebase and solve the conflict, and then start trying to rework it into multiple pages, like you asked. I still don't think a grid view makes sense, since I'd have to figure out what image shows up on it, so it'll still be a list, but I'll revert it back to a simple ListView and just list the libraries there. (This will look silly to anyone with just Downloads set, by the way.)"
    },
    {
        "author": {
            "login": "bleonard252"
        },
        "body": "The force-push was from rebasing the branch upon `dev`. Here's what it looks like now:\r\n![image](https://github.com/KRTirtho/spotube/assets/15241530/779c5f08-ea2d-4e86-9117-aa1bfa263fba)\r\n![image](https://github.com/KRTirtho/spotube/assets/15241530/41db114c-a6cc-40df-92a0-f019802f6881)\r\n"
    },
    {
        "author": {
            "login": "KRTirtho"
        },
        "body": "This is close to perfect. Later, I guess we can use the Album art of the first 4 songs of the library as the image for the GridView's items.\r\n\r\nFor now I think is acceptable. I can always redo the UI for better UX later."
    },
    {
        "author": {
            "login": "KRTirtho"
        },
        "body": "Sorry for the delay, I thought I merged this PR."
    },
    {
        "author": {
            "login": "vico93"
        },
        "body": "Well, just saw this PR just now - after reinstalling 3.7.0 - don't know if this PR here (or another brand new issue) would be the proper place, but i just want to throw my two cents as the final user:\r\n\r\n- First of all, thanks for this effort to bring local playback as a feature. I'm in this cruzade to find a better alternative to the good ol'Windows Media Player (Legacy) since i migrated to Windows 10 and started seeing the growing issues with WMP from all those years (things like Discord integration, possibility to integrate with online libraries like Spotube does).\r\n- Well, the first thing i noticed was that, apparently, you guys decided to keep the local files separate of the online stuff in the UI; although i understand that comparing the metadata of each .mp3/.m4a/.flac/etc file locally to the online database to make them appear as one would be hellish, i was aiming to see really an \"integrated\" flow, where when i try to reproduce a song it would first check if a file on the disk has the same metadata and then play it instead of downloading from the online source - or appear as unavailable if the user is offline, that is the default behavior for the official Spotify app. From that i understood, this isn't the behavior implemented, resorting to us to search around the desired song in a linear list of songs (that isn't even separated by albums and such). This really sucks, to be honest.\r\n- Also, at least on my end (Windows 11 x64, 32GB of RAM), trying to play a local song freezes the entire app for a couple of time, and when the song starts to play the app gets very slow, a couple of times i tried i needed to kill the Spotube process on Task Manager.\r\n\r\nif i was to suggest a different way to achieve that \"seamless\" local file seeking, would be actually adding a separate option on the audio source options (or even a checkbox immediately below) with something in the lines of \"prioritize song files already existing in the local Music folder\". When adding the local Music folder spotube should scan the folder (and its subdirectories, that was the missing thing from the already extant Downloads folder that made me to create #595) and create a internal \"database\" containing the song metadata and the file path on disk. And when the user tries to play a song, it would first seek if something with that metadata exists on the local database and, if positive, would play it instead of trying to resort to Youtube/Piped/Jiosaavn."
    }
]