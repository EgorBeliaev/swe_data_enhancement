[
    {
        "title": "Fix(inventory): 'uuid' criterion must be identical to what VirtualMachine does"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "## Checklist before requesting a review\r\n\r\n*Please delete options that are not relevant.*\r\n\r\n- [ ] I have read the CONTRIBUTING document.\r\n- [ ] I have performed a self-review of my code.\r\n- [ ] I have added tests that prove my fix is effective or that my feature works.\r\n- [ ] This change requires a documentation update.\r\n\r\n## Description\r\n\r\n- Alternative to [#18921](https://github.com/glpi-project/glpi/pull/18921)\r\n\r\nThis PR enhances the **GLPI reconciliation engine** by integrating the `getUUIDRestrictCriteria()` method into **UUID-based matching rules**.  \r\n\r\nCurrently, **virtual machine processing** correctly identifies and associates computers using this method. However, the **reconciliation rules do not account for \"mixed\" UUIDs** in their queries, leading to inconsistencies.  \r\n\r\nAs a result, while the **native inventory** successfully links computers even when UUIDs are \"mixed,\" the **reconciliation process fails to do so**.  \r\n\r\n### **Use Case:**  \r\n\r\n1\ufe0f\u20e3 **Step 1: Importing an inventory file (Computer with Agent)**  \r\n- The file contains `\"uuid\": \"BC4C4D56-A9C6-6919-3FEE-FA0F3887B6A5\"`.  \r\n- GLPI correctly imports it as a `Computer` \u2192 \u2705 **OK**  \r\n\r\n2\ufe0f\u20e3 **Step 2: ESX Inventory & VM Reconciliation**  \r\n- The ESX inventory detects a VM with `\"uuid\": \"564d4cbc-c6a9-1969-3fee-fa0f3887b6a5\"`.  \r\n- GLPI **correctly reconciles** it with the related computer, even though the UUID is \"mixed.\"  \r\n- During the process, the `Computer`'s UUID is updated to match the **ESX** one \u2192 \u2705 **OK**  \r\n\r\n3\ufe0f\u20e3 **Step 3: Importing an inventory file (Computer without Agent / Agentless)**  \r\n- The file contains `\"uuid\": \"BC4C4D56-A9C6-6919-3FEE-FA0F3887B6A5\"`.  \r\n- Instead of reconciling it with the **existing** `Computer`, GLPI **creates a new one**.  \r\n- This happens because the **UUID-based matching rules do not use `getUUIDRestrictCriteria()`** \u2192 \u274c **KO**  \r\n\r\n\r\nThis leads to an error in ESX (the virtual machine manager) because ESX cannot correctly identify the associated computer.\r\n\r\n![image](https://github.com/user-attachments/assets/16e50b59-fd4b-493e-96a9-3e28a74f9a09)\r\n\r\n\r\n## Screenshots (if appropriate):\r\n\r\n\r\n"
    },
    {
        "author": {
            "login": "trasher"
        },
        "body": "I don't know if that solve reported issue; but it seems legit `getUUIDRestrictCriteria` to be used here.\r\nI don't know if this change should target 10.0/bf branch, no idea what could be the impact on an existing production environment."
    },
    {
        "author": {
            "login": "trasher"
        },
        "body": ""
    },
    {
        "author": {
            "login": "stonebuzz"
        },
        "body": ""
    },
    {
        "author": {
            "login": "stonebuzz"
        },
        "body": ""
    },
    {
        "author": {
            "login": "stonebuzz"
        },
        "body": ""
    },
    {
        "author": {
            "login": "cedric-anne"
        },
        "body": "Seems OK."
    },
    {
        "author": {
            "login": "cedric-anne"
        },
        "body": "> I don't know if that solve reported issue; but it seems legit `getUUIDRestrictCriteria` to be used here. I don't know if this change should target 10.0/bf branch, no idea what could be the impact on an existing production environment.\r\n\r\nIf there is already some duplications on a GLPI instance, fixing this will not change much. Maybe it will permit to see that there is some duplicate data that has to be fixed manually.\r\nIf there is no duplication yet, then it should not change anything."
    },
    {
        "author": {
            "login": "eduardomozart"
        },
        "body": "I can confirm this PR fixes https://github.com/glpi-project/glpi/pull/18921"
    }
]