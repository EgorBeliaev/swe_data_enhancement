**Instructions for Repository Modification:**

1. **Implement Custom Order-by Feature:**
   - Add sorting options for feed results by: received date (default), publication date, title, URL, and random order.
   - Introduce URL parameters for sorting:
     - `&sort=id` for received date.
     - `&sort=date` for publication date.
     - `&sort=title`.
     - `&sort=link`.
     - `&sort=rand` (random order disables infinite scrolling).

2. **Combine with Ordering Parameters:**
   - Support `&order=ASC` or `&order=DESC` for ascending or descending order.

3. **Mitigation Solutions for Identified Problems:**
   - **Problem 1 (New Articles):** Use `idMax` to ensure no new articles are inadvertently marked as read.
   - **Problem 2 (Pagination):** Implement Keyset Pagination combining sorting by publication date/title/link with received date for stable sorting.
   - **Problem 3 (Performance):** Use a compatibility SQL syntax for Keyset Pagination. Avoid using `OFFSET`.
   - **Problem 4 (User Confusion):** Disable specific features when sorting by anything other than received date (e.g., mark-as-read menus).
   - **Problem 5 (APIs):** Ensure API calls sort by received date.

4. **Update UI Features:**
   - Adjust interface to reflect changes in sorting capabilities. Ensure users understand sorting by publication date's pitfalls.

5. **Ensure Docker Image Compatibility:**
   - Verify the feature release in Docker images (`freshrss/freshrss:edge`).

6. **Documentation:**
   - Draft Q&A and documentation outlining potential issues when sorting by publication date.

This PR is solving issues related to sorting inconsistencies, performance concerns, and user confusion when dealing with different sorting criteria in FreshRSS.