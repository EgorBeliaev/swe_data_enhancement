[
    {
        "title": "Implement custom order-by"
    },
    {
        "author": {
            "login": "PR Description"
        },
        "body": "Add option to sort results by received date (existing, default), publication date, title, URL (link), random.\r\n\r\nfix https://github.com/FreshRSS/FreshRSS/issues/1771\r\nfix https://github.com/FreshRSS/FreshRSS/issues/2083\r\nfix https://github.com/FreshRSS/FreshRSS/issues/2119\r\nfix https://github.com/FreshRSS/FreshRSS/issues/2596\r\nfix https://github.com/FreshRSS/FreshRSS/issues/3204\r\nfix https://github.com/FreshRSS/FreshRSS/issues/4405\r\nfix https://github.com/FreshRSS/FreshRSS/issues/5529\r\nfix https://github.com/FreshRSS/FreshRSS/issues/5864\r\nfix https://github.com/FreshRSS/Extensions/issues/161\r\n\r\nURL parameters:\r\n* `&sort=id` (current behaviour, sorting according to newest received articles)\r\n* `&sort=date` (publication date, which is not indicative of how new an article is)\r\n* `&sort=title`\r\n* `&sort=link`\r\n* `&sort=rand` (random order - which disables infinite scrolling, at least for now)\r\n\r\ncombined with `&order=ASC` or `&order=DESC`\r\n\r\n![image](https://github.com/user-attachments/assets/2de5aef1-604e-4a73-a147-569f6f42a1be)\r\n\r\n## Implementation notes\r\n\r\nThe sorting criteria by *received date* (id), which is the default, and which was the only one before this PR, is the one that has the best sorting characteristics:\r\n* *uniqueness*: no entries have the exact same received date\r\n* *monotonicity*: new entries always have a higher received date\r\n* *performance*: this field is efficiently indexed in database for fast usage, including for paging (indexing could also be done to other fields, but with lower effective performance)\r\n\r\nIn contrary, sorting criteria such as by *publication date*, by *title*, or by *link* are neither unique nor monotonic. In particular, multiple articles may share the same *publication date*, and we may receive articles with a *publication date* far in the future, and then later some new articles with a *publication date* far in the past.\r\n\r\nTo understand why sorting by *publication date* is problematic, it helps to think about sorting by *title* or by *link*, as sorting by *title* and by *publication date* share more or less the same characteristics.\r\n\r\n### Problem 1: new articles\r\n\r\nNew articles may be received in the background after what is shown on screen, and before the next user action such as *mark all as read*. Due to the lack of *monotonicity* when sorting by e.g. *publication date* or *title*, users risk marking as read a batch of articles containing some fresh articles without seeing them.\r\n\r\nMitigation: A parameter `idMax` tracks the maximum ID related to a batch of actions such as *mark all as read* to exclude articles received after those that are displayed.\r\n\r\n### Problem 2: paging / pagination\r\n\r\nWhen navigating articles, only a few articles are displayed, and a new \"page\" of articles needs to be received from the database when scrolling down or when clicking the button to show more articles. When sorting by e.g. *publication date* or *title*, it is not trivial to show the next page without re-showing some of the same articles, and without skipping any. Indeed, views are often with additional criteria such as showing only unread articles, and users may mark some articles as read while viewing them, hereby removing some articles from the previous pages. And like for *Problem 1*, new articles may have been received in the background. Consequently, it is not possible to use `OFFSET` to implement pagination (so the patches suggested by a few users were wrong due to that, in particular).\r\n\r\nMitigation: `idMax` is also used (just like for *Problem 1*) and a *Keyset Pagination* approach is used, combining an unstable sorting criterion such as *publication date* or *title*, together with *id* to ensure stable sorting. (So, 2 sorting criteria + 1 filter criteria)\r\n\r\nSee e.g. https://www.alwaysdeveloping.net/dailydrop/2022/07/01-keyset-pagination/\r\n\r\n### Problem 3: performance\r\n\r\nSorting by anything else than *received date* (id) is doomed to be slow(er) due to the combination of 3 criteria (see *Problem 2*). An `OFFSET` approach (which is not possible anyway as explained) would be even slower. Furthermore, we have no SQL index at the moment, but they would not necessarily help much due to the multiple sorting criteria needed and involving some `OR` logic which is difficult to optimise for databases.\r\n\r\nThe nicest syntax would be using tuples and corresponding indexes, but that is poorly supported by MySQL https://bugs.mysql.com/bug.php?id=104128\r\n\r\nMitigation: a compatibility SQL syntax is used to implement *Keyset Pagination*\r\n\r\n### Problem 4: user confusion\r\n\r\nSeveral users have shown that they do not fully understand the difference between *received date* and *publication date*, and particularly not the pitfalls of *publication date*.\r\n\r\nMitigation: the menus to mark-as-read *before 1 day* and *before 1 week* are disabled when sorting by anything else than *received date*. Likewise, the separation headers *Today* and *Yesterday* and *Before yesterday* are only shown when sorting by *received date*.\r\n\r\nAgain here, to better understand why, it helps to think about sorting by *title* or by *link*, as sorting by *title* and by *publication date* share more or less the same characteristics.\r\n\r\n* [ ] We should write a Q&A and/or documentation about the problems associated to *sorting by publication date*: risks of not noticing new publication, of inadvertently marking them as read, of having some articles with a date in the future hanging at the top of the views (vice versa when sorting in ascending order), performance, etc.\r\n\r\n### Problem 5: APIs\r\n\r\nSorting by anything else than *received date* breaks the guarantees needed for a successful synchronisation via API.\r\n\r\nMitigation: sorting by *received date* is ensured for all API calls.\r\n"
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": ""
    },
    {
        "author": {
            "login": "UserRoot-Luca"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Frenzie"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Frenzie"
        },
        "body": ""
    },
    {
        "author": {
            "login": "UserRoot-Luca"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Frenzie"
        },
        "body": ""
    },
    {
        "author": {
            "login": "UserRoot-Luca"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": ""
    },
    {
        "author": {
            "login": "UserRoot-Luca"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": ""
    },
    {
        "author": {
            "login": "UserRoot-Luca"
        },
        "body": ""
    },
    {
        "author": {
            "login": "math-GH"
        },
        "body": ""
    },
    {
        "author": {
            "login": "math-GH"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": ""
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": "Back-end and UI done"
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": "I have added some [implementation notes](https://github.com/FreshRSS/FreshRSS/pull/7149#issue-2760772548) higher up"
    },
    {
        "author": {
            "login": "ekr1"
        },
        "body": "Awesome work, @Alkarex - I just went down the rabbit hole of the copious discussions asking for this and found out that the rather large change is almost ready and you're spending what looks like your holidays on this. Thanks for your efforts! \ud83d\udc4d"
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": "I have changed a bit the title of the separation headers to reduce ambiguity:\r\n\r\n![image](https://github.com/user-attachments/assets/9d9b7fc3-87d9-48e9-9d09-c2660b97c6db)\r\n\r\n(There used to be only \"Today\")\r\n\r\n![image](https://github.com/user-attachments/assets/dfb703e8-efb7-4284-a48f-097bbf5cbb67)\r\n"
    },
    {
        "author": {
            "login": "Fayyaadh"
        },
        "body": "> Add option to sort results by received date (existing, default), publication date, title, URL (link), random.\r\n> \r\n> fix #1771 fix #2083 fix #2119 fix #2596 fix #3204 fix #4405 fix #5529 fix #5864 fix [FreshRSS/Extensions#161](https://github.com/FreshRSS/Extensions/issues/161)\r\n> \r\n> URL parameters:\r\n> \r\n> * `&sort=id` (current behaviour, sorting according to newest received articles)\r\n> * `&sort=date` (publication date, which is not indicative of how new an article is)\r\n> * `&sort=title`\r\n> * `&sort=link`\r\n> * `&sort=rand` (random order - which disables infinite scrolling, at least for now)\r\n> \r\n> combined with `&order=ASC` or `&order=DESC`\r\n> \r\n\r\nHi there\r\n\r\nThank you so much for all your work on this.\r\n\r\nCan you perhaps elaborate a bit on how to use this?\r\n\r\nI went to the main feed page and added the query parameter for `&sort=date` to the URL but nothing happened.\r\n\r\nIs the feature not yet released in the latest Docker image?\r\n\r\nThanks for the help."
    },
    {
        "author": {
            "login": "Alkarex"
        },
        "body": "@Fayyaadh What Docker image are you running, more precisely?\r\nMake sure you are using our rolling release and are using one of our official images such as `freshrss/freshrss:edge` or `freshrss/freshrss:alpine-edge`\r\n"
    },
    {
        "author": {
            "login": "Fayyaadh"
        },
        "body": "> @Fayyaadh What Docker image are you running, more precisely? Make sure you are using our rolling release and are using one of our official images such as `freshrss/freshrss:edge` or `freshrss/freshrss:alpine-edge`\r\n\r\nMy docker compose file just has `freshrss/freshrss` without any tag.\r\n\r\nI guess I'll need to change that?"
    },
    {
        "author": {
            "login": "Frenzie"
        },
        "body": "Yes, this is only in edge."
    },
    {
        "author": {
            "login": "Fayyaadh"
        },
        "body": "Ok I pulled the new docker image and the feature now works!\r\n\r\nIs there any way to get it to persist though?\r\n\r\nSo if I click away from the main feed and then go back, the query parameter `&sort=date` is no longer there."
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Episodes from a newly added feed show up under the today category",
                    "body": "I don't know how to better describe it. Perhaps this is per design. See screenshot below:\r\n\r\n![image](https://user-images.githubusercontent.com/42714627/48315837-4bdfec00-e5a9-11e8-84ba-9fee7571cd91.png)\r\n\r\nI have added the feed `VASAviation` today and even though there are episodes from last month all episodes appear in the today group.",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "pattems"
                                },
                                "body": "This is intended behavior, per #1782.\r\n\r\nEdit: also #2083, and https://github.com/FreshRSS/FreshRSS/issues/1771#issuecomment-359195655"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "Indeed, we avoid per design the insertion of articles in the middle of existing articles (which might already have been synchronised to other clients, might have appeared in RSS outputs, or being used in the Web UI during a scroll / mark all as read, etc.). The publication date / declared date, is only informative and not used for sorting. This is similar to what most other systems are using, such as e-mail clients, (distributed) social networks, and feed aggregators.\r\nTo avoid the frequent user confusion, I was considering making an option to display the received date instead of the publication / declared date, in that right-hand side column."
                            },
                            {
                                "author": {
                                    "login": "meminens"
                                },
                                "body": "Thank you both!"
                            },
                            {
                                "author": {
                                    "login": "lilydjwg"
                                },
                                "body": "I don't intend to persuade you to change your design but FYI, the Mastodon distributed social network doesn't sort by received date but by publish date. I don't see a row of new messages on my timeline when I just follow someone who has a few posts in the past."
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "For the record, I consider changing a few internal mechanisms to allow sorting entries on other criteria, such as a a potential future hotness"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "https://github.com/FreshRSS/FreshRSS/pull/7149"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Streams do not sort by date correctly",
                    "body": "Streams appear to sort by feed first, then by date, so instead of a mix of articles, you get clumps.\r\n\r\n[See this screenshot.](https://i.imgur.com/qI4evfg.jpg)\r\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "Hello,\r\nIf you have just installed FreshRSS, this is normal. As soon as you start refreshing feeds (in particular if using a cron job), the articles will be in a more chronological order, especially for FreshRSS versions newer than 1.7.0 (there is a long history https://github.com/FreshRSS/FreshRSS/issues/530 ).\r\nPlease check again after a few refresh, and let us know whether there is still a problem."
                            },
                            {
                                "author": {
                                    "login": "MorganRamsay"
                                },
                                "body": "I have 1.9.0 installed with ~100 feeds. Default refresh time over 2 days. Just \"actualized\" again.\r\n\r\nArticles are still out of order."
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "Out of order in which sense? They should be added in the order in which they come in. So if I add a feed that wasn't updated since 2007 it'll still be at the top. The \"newest\" in `Newest first` is a bit ambiguous I suppose."
                            },
                            {
                                "author": {
                                    "login": "MorganRamsay"
                                },
                                "body": "Out of order in the sense that posts dated 2017 are interspersed with posts dated 2018. There's no sense to the order in which articles appear in streams. The stream view shouldn't sort differently from the feed view.\r\n\r\nAnyway, I looked into this a bit and fixed the issue on my end by changing the SQL queries directly.\r\n\r\nI understand the problem the current solution is intended to solve (articles without pub dates), but it is unintuitive, hence the numerous issues that have been posted. In my opinion, \"sort by ID\" should be an optional sort order for those who subscribe to feeds without the necessary data."
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "> I understand the problem the current solution is intended to solve (articles without pub dates)\r\n\r\nIs that really what it's intended to do? If there is a technical limitation involved I would imagine it's that sorting by date is hard period, with articles lacking publication dates merely being a cherry on top. :-)\r\n\r\n(Sorting by date itself maybe only be hard on the CPU, but if you mark all as read and a new feed entry just showed up with a publication date in the past, what would happen? Mark all as read based on max ID doesn't have to worry about any such issues.)\r\n\r\n> but it is unintuitive\r\n\r\nI found it quite intuitive that the feed I just added was added at the top regardless when it claims to have been originally published. That way everything else remains exactly as I left it."
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "The sorting behaviour has been carefully considered and discussed: Feeds are updated as a group, then new articles are sorted by declared date, then new articles are inserted in database, and articles are then sorted like the database order.\r\n\r\nIn other words, the sort order is the discovery date, taking into account the declared date within one discovery process.\r\n\r\nIn a nutshell, for features such as the mobile API, paging,  mark as read a group of articles, to be implemented in a light way, we need guaranties that the declared date does not provide. Furthermore, feeds declared dates are often wrong or problematic. For instance, entries 1 year in the future or the past would respectively stay at the top (annoying) or the bottom (not visible). There is more to it, but this is the short version.\r\n\r\nMany other aggregators (past or present) have a similar approach, such as Google Reader, Feedly, The Old Reader, Digg, AOL Reader, etc., simply because sorting by declared date does not work well.\r\n\r\nHaving a faster refresh rate (e.g. ~2 hours) and more frequent cron (e.g. ~30 min) reduce the problem.\r\n\r\n@Frenzie As you can read French, a more detailed explanation can be found in https://github.com/FreshRSS/FreshRSS/issues/530#issuecomment-236394571 (and related issues) and the last optimisation was implemented in https://github.com/FreshRSS/FreshRSS/pull/1470\r\n\r\nHere is an example on one of my instances:\r\n\r\n![image](https://user-images.githubusercontent.com/1008324/35187493-d63ae32c-fe24-11e7-8878-bcce7b51e261.png)\r\n"
                            },
                            {
                                "author": {
                                    "login": "MorganRamsay"
                                },
                                "body": "@Frenzie \r\n> I would imagine it's that sorting by date is hard period\r\n\r\n\"Dates\" are Unix timestamps, which are just large integers. Sorting Unix timestamps is easy.\r\n\r\nOf course, there are various date types: retrieval date, published date, and calendar date. I personally only care about retrieval date - because I want my \"inbox\" to feel like an e-mail client.\r\n\r\n@Alkarex \r\n> In other works, the sort order is the discovery date, taking into account the declared date within one discovery process.\r\n\r\nSo, the `date` column is the retrieval/discovery date, correct?\r\n\r\nI modified the `ORDER BY` clauses in `sqlListWhere` and `listWhereRaw` in the `EntryDAO` class to sort by `date`, instead of `id`, which produces the sort order I want.\r\n\r\n> Here is an example on one of my instances\r\n\r\nIf you check my screenshot, you'll see articles clumped by feed with 2017-dated articles interspersed with 2018-dated articles. It does not look like your screenshot at all."
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "@MorganRamsay I gave a very explicit example of the sort of thing I meant by hard. I suppose phrasing it as \"sorting is hard\" was a bit unfortunate. ;-)\r\n\r\n> I personally only care about retrieval date - because I want my \"inbox\" to feel like an e-mail client.\r\n\r\nHold on, that means the program is acting exactly how you want it to.\r\n"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "`entry.id` indicates when the article was discovered, and `entry.date` contains the declared date.\r\nWe sort by discovery date, i.e. `entry.id`.\r\n\r\nThe current behaviour is indeed akin to what typical e-mail clients do (e.g. GMail, Outlook, ...), so it sounds like FreshRSS is already doing what you want.\r\n\r\nThe column on the right-hand side of the Web UI shows the declared date, not the discovery date.\r\n\r\n@MorganRamsay What we see on your screenshot seems to be what happens when new feeds are added (i.e. after an OPML import, or manually adding feeds). Could you please post a newer screenshot (without your manual SQL changes)?\r\n\r\nPlease tell also what the frequency of your refresh cron job is (if any), and what setting you use for refresh rate. Examples:\r\n\r\n```\r\nroot@srv3:~# cat /etc/cron.d/FreshRSS\r\nMAILTO=root\r\n5,35 * * * * www-data php -f /.../FreshRSS/app/actualize_script.php > /tmp/FreshRSS.log 2>&1 | grep -v '^PHP Notice'\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1008324/35193341-550b39be-fea1-11e7-8a6e-094018fc3d0d.png)"
                            },
                            {
                                "author": {
                                    "login": "dcuddeback"
                                },
                                "body": "In case it helps anyone else, I was able to fix this in my database by reassigning the `id` column based on the `date` column after importing my feeds. Something like this in PostgreSQL:\r\n\r\n```sql\r\nWITH entry_ids AS (\r\n  SELECT\r\n    id AS old_id,\r\n    date::bigint*1000000 + ROW_NUMBER() OVER(PARTITION BY date) - 1 AS new_id\r\n  FROM freshrss_david_entry\r\n)\r\nUPDATE freshrss_david_entry e\r\nSET id = t.new_id\r\nFROM entry_ids t\r\nWHERE e.id = t.old_id;\r\n```\r\n\r\nThen going forward, I expect that a regular cron job for fetching new articles will keep them sorted well, so hopefully this is just needed after setting up the feeds for the first time."
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Need help for changing the feed sort order from lastSeen to the publish date",
                    "body": "Hello,\r\n\r\nI am deploying a public feed aggregator and I will frequently add new feeds. The current sorting of the feed by lastSeen will look strange to the visitors.\r\n\r\nI would like to change the sort order of the feed to be by the publishing date of the post (date) instead of by the date it was seen by the aggregator (lastSeen).\r\n\r\nI searched the code and didn't find where to do that. Help will be appreciated.\r\n\r\nThanks.",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "Hello,\r\nThis is a topic that has been often times addressed, e.g. https://github.com/FreshRSS/FreshRSS/issues/1771#issuecomment-359195655 \r\nThe short version is:\r\n* If you let run FreshRSS for a few days with a refresh cron job (e.g. every 30min), the sorting will look better\r\n* Advertised date is not reliable enough to be useful, and using it creates many problems\r\n* Most other systems (including larger news aggregators but also e-mail clients etc.) are all using the same approach\r\n* Visitors are accustomed to items not strictly sorted by their declared / publication date, as it is also the case on popular systems such as Facebook, LinkedIn, Twitter, etc.\r\n* For our APIs (mobile clients) and for paging during scrolling, the guaranties given by the fact that no out-of-sequence article will be inserted allow for some important optimisations.\r\n\r\nWhat we could easily do is to make an option to replace in the UI the advertised date by the discovery date, but I am not so found of the idea.\r\n\r\nFeel free to post a link and/or screenshot, so that we can have a better idea of your precise situation, which depends on the feeds you are following, whether they support push (PubSubHubbub / WebSub) and if not, at which frequency you retrieve them.\r\n"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "P.S. the articles are sorted by the date they were **first** added to the database, not by the last seen date (which would not make sense)."
                            },
                            {
                                "author": {
                                    "login": "hanan-cohen"
                                },
                                "body": "Thanks. \r\n\r\nI have read #1771 and this is the reason I explained why I need the change.\r\n\r\nIf it was only for my personal use, that would be OK. Since it's a public website, the users will be confused by the sorting order when I add a new blog.\r\n\r\nThe live site is at https://blogim.info/ \r\n\r\nIt's a mix of Enslish/LTR and Hebrew/RTL. Work in progress.\r\n\r\nAs for lastSeen, this is the name of the value in the DB for \"date added\". I will loot at the code at try to figure out how to sort by date (publish date)."
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "No, lastSeen is the last seen date (at its name implies), not the date when the article was added.\r\nChanging the SQL requests to modify the sort order is trivial, but that will break features such as scrolling / paging, mark all as read, etc.\r\n\r\nI invite you to check the other systems that your users might be familiar with (e-mails, social media platforms, other RSS aggregators, Planet systems, social links...). E-mail clients (Outlook, GMail...) are using received date. Other RSS aggregators (including popular - current or past - ones such as Google Reader, Digg, Feedly, etc.), social media are using a multi-criteria ranking, so users are rarely exposed to a strict sort by publication date.\r\n\r\nYou can simply hide this publication date if it is a problem for you:\r\n![image](https://user-images.githubusercontent.com/1008324/47606517-b70bb900-da14-11e8-916c-b92ea4fb62bf.png)\r\nOr show the received date instead (like in an e-mail client) with a simple change in the code (we might make that an option).\r\n\r\nWe have a work-in-progress Hebrew translation, in which contributions would be welcomed https://github.com/FreshRSS/FreshRSS/tree/dev/app/i18n/he"
                            },
                            {
                                "author": {
                                    "login": "tetsuhou"
                                },
                                "body": "Hello, I also would like to be able to sort articles by the publishing date, but it seems difficult. \r\n\r\nWould it be possible to add an option that allows me to add a new feed without getting the current item, but just the new article?"
                            },
                            {
                                "author": null,
                                "body": "Since this issue is still open, I'd like to add my support for this.  \r\n\r\nSorting by date fetched tends to cause articles from the same source to get grouped together instead of having organic variety in feed content, unless you fetch at a higher frequency.   That's mostly why I'd want this.  It's not a huge deal obviously, but would be a nice improvement. \r\n\r\nCouldn't something like this be put into place to at least make a best attempt at sorting the content by when it was published?  \r\n\r\nSort By:  If PublishedDate is determined to be well-structured/reliable, use PublishedDate else use FetchedDate\r\n\r\nIt doesn't have to be perfect, but I think it would help to distribute the feed content. "
                            },
                            {
                                "author": {
                                    "login": "olinorwell"
                                },
                                "body": "I have to agree with @0x199x - sorting by PublishedDate then FetchedDate if PublishedDate is empty/'unreliable' would be a massive improvement. Even if it was optional, I think many people would immediately turn it on.\r\n\r\nCurrently I have a situation where I add a new personal blog for somebody, then at the top of my feed are effectively all the stuff they have ever written for the last few years, all listed as today, while I can clearly see the correct published date next to the title.\r\n\r\nI think the issue here is that it depends on what type of RSS feeds you are subscribing to. If you are subscribed to hundreds and they are very frequently updated, then this issue wouldn't be so obvious due to the sheer number of items.\r\n\r\nI subscribe to say 10 programmer blogs, who post every couple of months. All posts have a correct published date. If I add a new blog, I want the new blog's articles to sit in my 'timeline' on the correct dates they were published. Instead I get 'How to do XYZ, published May 2021' under 28 May 2022, 'How to do ABC, published Feb 2021', also under 28 May 2022, and so on, for typically 20+ items.\r\n\r\nThis seems like an obvious fix - when importing a post, take at face value the published date, and store that as the main date in the inbox. If it is empty, by all means use today."
                            },
                            {
                                "author": {
                                    "login": "sjthespian"
                                },
                                "body": "For another use case for sorting by publication date, take a look at the feed at https://www.elephant.town/comic/rss. The author releases a new chapter every week of 25 pages or so. Since the pubDate is ignored, I'm ending up with a scrambled list of pages every week. For example, this is what I have after this week's update:\r\n<img width=\"1309\" alt=\"Screen Shot 2022-09-08 at 14 35 55\" src=\"https://user-images.githubusercontent.com/1789285/189230362-b7dfbd0d-8a1f-4438-8f19-76fa26f3052b.png\">\r\n\r\nI basically end up ignoring FreshRSS, except as a notification of a new chapter, and have to read it on her web site."
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "> For another use case for sorting by publication date, take a look at the feed at https://www.elephant.town/comic/rss. The author releases a new chapter every week of 25 pages or so. Since the pubDate is ignored, I'm ending up with a scrambled list of pages every week.\r\n\r\nInteresting example @sjthespian . Actually, it should work just fine because FreshRSS does consider the publication date behinds the scenes when retrieving a batch of new articles. I have just tried and it worked fine for me. \r\n\r\n![image](https://user-images.githubusercontent.com/1008324/189310051-25e4864b-6325-4f03-b392-0db1b133256f.png)\r\n\r\nI am not sure of where the problem comes from in your case, but I will try to keep an eye on it. It could be that the publications dates in the RSS feed were first wrong  when you got them, and then later manually fixed. Or it might be that some chapters were published in a random order before some others.\r\n\r\nWith exactly one second of difference between the dates `Sun, 28 Aug 2022 22:00:24 -0400`, `Sun, 28 Aug 2022 22:00:23 -0400`, `Sun, 28 Aug 2022 22:00:22 -0400` it looks like there is a manual process somewhere.\r\n\r\nAnyway, I plan to add more sorting criteria in the near future, including alpha-numeric.\r\n"
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "@Alkarex Actually 1.19.x and edge don't behave the same here. @sjthespian's screenshot is from 1.19.x or older, yours is from upcoming 1.20.\r\n\r\nEdit: put another way, whatever that issue is, it's already fixed. ;-)"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Please add better sorting options when adding new feeds",
                    "body": "I realize this issue will be closed as soon as I open it, but I think it's worth putting this back on the front burner even for a short time.\r\n\r\nI am a new FreshRSS user. I've spent the better part of this week playing with all of the options out there for self-hosted RSS feeds and FreshRSS is the one I keep coming back to. While I subscribe to Bazqux for my day-to-day feed reading I wanted something I could use to consolidate my YouTube subscriptions into a topic-based system where I and not the YouTube algorithm decide what gets put in front of me.\r\n\r\nThe problem I'm having is the same one that's been raised by many others: adding a new feed to the mix brings all of the articles from that feed to the top of the list regardless of the date they were posted. It seems as though this is by design but this is not a good user experience and not what any of the alternative readers are doing with new feeds.\r\n\r\nI have, with mixed success, used some MySQL code to reorder the database but it's a pain to have to do that every time I add a new group of feeds. And my code is not always able to do this reliably.\r\n\r\nIt would be great to give the user the choice about how to sort new feeds into the database. Some may like this behavior but I think there's an equal number who don't.\r\n\r\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "> I realize this issue will be closed as soon as I open it\r\n\r\nYes, but because it's a duplicate of #2596 among others, not because of the subject matter. ;-)\r\n\r\n> It seems as though this is by design but this is not a good user experience and not what any of the alternative readers are doing with new feeds.\r\n\r\nGOG Galaxy somehow can't sort games by date purchased, only by date released. It's horrifically unusable for the purpose. :-P\r\n\r\nAnyway, I don't think anyone's opposed to a new sorting mode being added. There's just also no one who seems to be interested in putting in the work of adding such a thing.\r\n\r\nI do feel the need to point out that QuiteRSS (which I used for a while after the death of Opera/Presto) offers both published and received sorting options and so do most other readers I've tried."
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "And more confusingly a literal duplicate of https://github.com/FreshRSS/Extensions/issues/161?"
                            },
                            {
                                "author": {
                                    "login": "math-GH"
                                },
                                "body": "PRs are welcome to improve it :)"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "https://github.com/FreshRSS/FreshRSS/pull/7149"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Can I sort my feed by date of publication by default?",
                    "body": "HI there, I am new to rss feeds and so on. I've found this app, hosted it on my server and added a couple of feeds. The app is great but I noticed that in main feed articles are not sorted by date of publication but by date of adding them to the app... is there a way to switch this behaviour to use date of publication?\r\n\r\n![screenshot](https://i.ibb.co/sQjWqrv/Screen-Shot-2020-10-02-at-16-24-24.png)\r\n\r\nP.S. I've read the contributing guidelines and about your chat... but haven't succeeded to register there since I don't know the French and got there some errors I don't understand... So I decided to contact you here ",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "aledeg"
                                },
                                "body": "Short answer. No you can't.\r\nLong answer, check those issues and their comments (especially @Alkarex answers):\r\n- [How do I tell FreshRSS to sort articles by publication date, not date added? \u00b7 Issue #2596 \u00b7 FreshRSS/FreshRSS](https://github.com/FreshRSS/FreshRSS/issues/2596)\r\n- [Need help for changing the feed sort order from lastSeen to the publish date \u00b7 Issue #2083 \u00b7 FreshRSS/FreshRSS](https://github.com/FreshRSS/FreshRSS/issues/2083)\r\n"
                            },
                            {
                                "author": {
                                    "login": "vorant94"
                                },
                                "body": "Thanks. Sorry for questioning something that was discussed so many times\ud83d\ude05"
                            },
                            {
                                "author": {
                                    "login": "aledeg"
                                },
                                "body": "Don't worry. If you check closely, in one of the aforementioned issues, there is a documentation tag. That means we need to add it in the documentation. But nobody took the time to do that."
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "https://github.com/FreshRSS/FreshRSS/pull/7149"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "How do I tell FreshRSS to sort articles by publication date, not date added?",
                    "body": "Every time I add new subscriptions, \"Today\" is filled with articles that are weeks or months old. And those new articles are in a nonsensical order (presumably some implementation detail):\r\n\r\n![image](https://user-images.githubusercontent.com/747913/67589636-28319980-f759-11e9-9098-79918e6a8a55.png)\r\n\r\nI would like to be able to mark all old items as read with one click, the way I can with existing subscriptions.\r\n\r\nThanks.",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "Hello,\r\nYou can search/filter by publication date. E.g. everything older than the first of october: `pubdate:/2019-10-01`"
                            },
                            {
                                "author": {
                                    "login": "deanishe"
                                },
                                "body": "Thanks. That helps.\r\n\r\nSo there's no way to set FreshRSS to actually sort by publication date?"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "@deanishe No, it is not currently possible to sort by publication date (by design, see several related issues on the topic that explain why). However, I am considering adding some new order mechanisms (e.g. by relevance / priority), during which it might nevertheless become possible to sort by publication date in the Web UI"
                            },
                            {
                                "author": {
                                    "login": "deanishe"
                                },
                                "body": "> by design, see several related issues on the topic that explain why\r\n\r\nI've read the other issues, and I understand why that sort order works for you and your subscriptions. Unfortunately, it is poorly suited to me and mine.\r\n\r\n> However, I am considering adding some new order mechanisms (e.g. by relevance / priority)\r\n\r\nThen I'll keep my fingers crossed that you also add support for plain, old publication order.\r\n\r\nThanks for your help."
                            },
                            {
                                "author": {
                                    "login": "Redsandro"
                                },
                                "body": "Hello,\r\n\r\nI would like to indicate my interest in this as well.\r\n\r\nI'm trying out RSS readers for the first time. FreshRSS looked the most appealing to me on screenshots. I start a FreshRSS docker container and add three feeds. This is literally the next thing I was trying to accomplish. I want to read my selected news in the order it was published. \r\n\r\nBut it is ordered by feed first and by order in the XML file second or something? I don't believe it's very intuitive. The publish date is right there, on the right. I rub my eyes to see if I missed a little sorting triangle above that column. I reckon you can just click on the feed in the sidebar if you want to see only the items from a single feed without other feeds mixed in.\r\n\r\nIt is not a small preference; it was in fact wat I was trying to accomplish that made me try an RSS reader in the first place. Apart from that, FreshRSS is giving a good first impression. I like that I can self-host it and use the web-app on multiple devices. And it was super easy and fast to configure.\r\n\r\nPlease add some more weight to this feature request. \r\n"
                            },
                            {
                                "author": {
                                    "login": "Redsandro"
                                },
                                "body": "The more often you fetch feeds, the less of a problem this becomes. But certain feeds are more likely to block you from fetching too often."
                            },
                            {
                                "author": {
                                    "login": "CoryMnvl"
                                },
                                "body": "I have mostly enjoyed setting up and using FreshRSS, thank you for all the time and effort!\r\n\r\nI would like to add my voice to this feature request. This was one of my first annoyances when I started using FreshRSS and continues to be one. \r\n\r\nIn theory I agree that the more feeds you have, and the less feeds you add, the less of a problem this is. However this morning I got excited seeing there was an update from the FreshRSS Github feed at the top of the list, which was added to my reader yesterday (27 February 2023), just to realize later that it was published 2020-05-31. \r\n\r\nThis sorting behavior is misleading:\r\n![image](https://user-images.githubusercontent.com/27926827/221910415-8229a90c-865a-48c9-8d55-5d7199ce8862.png)\r\n"
                            },
                            {
                                "author": {
                                    "login": "Frenzie"
                                },
                                "body": "What you're showing is something a bit different. One or both of these must be enabled (Settings \u2192 Archiving \u2192 Purge policy). I'd set them a lot higher or disable them completely, but ymmv and all that. The problem on your screenshot would occur regardless of sorting  due to the unread status.\r\n\r\n![image](https://user-images.githubusercontent.com/202757/221933163-b7ccbd22-d366-47c1-9431-82e0cf12f449.png)"
                            },
                            {
                                "author": {
                                    "login": "CoryMnvl"
                                },
                                "body": "What I'm showing is an old article (nearly 3 years old), outside of my control, appearing recently at the top of the list as if it was new, just because FreshRSS recently became aware of it. It was meant to show a situation I came across that exacerbates this issue. \r\n\r\nMy install of FreshRSS is less than 1 month old, and my purge policies did not save me from this (I assume they also operate on the imported instead of published date/time):\r\n![image](https://user-images.githubusercontent.com/27926827/221944960-aef46333-8456-49e2-9155-51e03caee8b3.png)\r\n"
                            },
                            {
                                "author": {
                                    "login": "schobernoise"
                                },
                                "body": "I would also like to voice my interest. Since this is all free software I am VERY grateful for the work the developers put in.\r\nA plain old \"sort by\" button on the top of the column would be great... how much work would it be to implement? Can I assist somehow?\r\nBecause as of now it is kinda hard to get ahold of all the mixed up articles (I get in about 150 every day and add about 1 Source a week).\r\n"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "[BUG] Items not keeping sort by date after a new subscription is added",
                    "body": "**Describe the bug**\r\nI have several subscriptions. Whenever I add a new one, it fetches all latest RSS entries in this feed.\r\nBut in the main stream, it only shows this latest subscription, instead of \"mixing\" its publications with the existing feeds.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Have several different feeds\r\n2. Add a new feed\r\n3. Go to main stream and you'll only see the latest feed posts, despite some of them being older than existing ones on your main stream\r\n\r\n**Expected behavior**\r\nThe entries in the main stream are sorted by published date, not by \"subscription added date\" (presumably, when FreshRSS fetched the article is the date it uses to sort by \"newest\").\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/5247611/172175897-0c5662a1-d2db-4da9-b692-bcce8ae1fc13.png)\r\n\r\n**Environment information (please complete the following information):**\r\nLatest docker image at the time of writing.\r\n\r\n**Additional context**\r\nI am sorry if there is an option in the interface to sort this out, I just didn't find it :\\ \r\n",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "denppa"
                                },
                                "body": "I also have this problem, the feed is sorted by its added date instead of its published date:\r\n![image](https://i.imgur.com/d7NpZ2e.png)"
                            },
                            {
                                "author": {
                                    "login": "Thoreas"
                                },
                                "body": "Encountered the same issue again today:\r\n\r\n![image](https://user-images.githubusercontent.com/44213940/179071310-4d002c81-fb81-44bf-b70c-a4ad6c25ef71.png)\r\n"
                            },
                            {
                                "author": {
                                    "login": "EasternPA"
                                },
                                "body": "Just installed today and I'm wondering if this is what I'm seeing. Items in my Main Feed are grouped by provider, not sorted by date published. What can I expect on future refreshes? Will the entries gradually become commingled or will the Main Feed always group all new entries together by provider?"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "As for now, this is per design, and if you let the system run for some time (especially with an automated cron job to get new articles), it will look more natural.\r\nMultiple duplicates:\r\n* https://github.com/FreshRSS/FreshRSS/issues/2596#issuecomment-546586703\r\n* https://github.com/FreshRSS/FreshRSS/issues/2083#issuecomment-433622668\r\n* https://github.com/FreshRSS/FreshRSS/issues/1771#issuecomment-359195655\r\n* Etc.\r\n"
                            },
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "https://github.com/FreshRSS/FreshRSS/pull/7149"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "data": {
            "repository": {
                "issue": {
                    "title": "Problem with filtering by date",
                    "body": "I installed today freshRSS and added my feeds, but I'm facing this problem: the feeds are first grouped and then sorted by date.\r\n\r\nE.g.:\r\n\r\n> feed 1 - title - 11 nov 2023\r\n> feed 1 - title - 10 nov 2023\r\n> feed 1 - title - 09 nov 2023\r\n> feed 1 - title - 08 nov 2023\r\n> feed 2 - title - 11 nov 2023\r\n> feed 2 - title - 10 nov 2023\r\n> feed 2 - title - 09 nov 2023\r\n> feed 2 - title - 08 nov 2023\r\n> and so on...\r\n\r\nWhat I want is to have all in cronological order:\r\n\r\n> feed 1 - title - 11 nov 2023\r\n> feed 2 - title - 11 nov 2023\r\n> feed 1 - title - 10 nov 2023\r\n> feed 2 - title - 10 nov 2023\r\n> feed 1 - title - 09 nov 2023\r\n> feed 2 - title - 09 nov 2023\r\n> feed 1 - title - 08 nov 2023\r\n> feed 2 - title - 08 nov 2023\r\n\r\n\r\nIf I click the \"older/newest first\" button the situation doesn't change, feeds are inverted, but always grouped.\r\n\r\n[Here is a short video recording of the issue](https://screenrec.com/share/HGYvbo5hys).\r\n\r\nAm I missing something?",
                    "state": "CLOSED",
                    "comments": {
                        "nodes": [
                            {
                                "author": {
                                    "login": "Alkarex"
                                },
                                "body": "Hello,\r\nThis behaviour occurs when adding new feeds one at a time (importing several feeds by OPML mitigates the issue).\r\nThis is by design at the moment, and the apparent problem becomes reduced when feeds gets regularly refreshed.\r\n\r\nThe order you see **is** chronological, just the chronology of when articles have been discovered/received (just like e.g. by e-mail clients), not the date the articles advertise (the advertised date is not a robust sorting criteria as dates might very well a long time in the past or in the future, as in usual in the case of academic articles, book publications, chapters of science fiction, etc.)\r\n\r\nA longer explanation of the rationale for the current behaviour can be see on e.g.\r\n\r\n- https://github.com/FreshRSS/FreshRSS/issues/1771#issuecomment-359195655\r\n- https://github.com/FreshRSS/FreshRSS/issues/2083#issuecomment-433622668\r\n\r\nAnd there is a plan to customise sorting (on different criteria including advertised date):\r\n\r\n- https://github.com/FreshRSS/FreshRSS/issues/2596#issuecomment-1541934281\r\n"
                            }
                        ]
                    }
                }
            }
        }
    }
]