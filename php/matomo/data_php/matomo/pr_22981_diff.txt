diff --git a/core/DataAccess/Model.php b/core/DataAccess/Model.php
index 6d7e0bbed6f..fc3875c6a47 100644
--- a/core/DataAccess/Model.php
+++ b/core/DataAccess/Model.php
@@ -713,54 +713,16 @@ public function startArchive($invalidation)
         $table = Common::prefixTable('archive_invalidations');
 
         // set archive value to in progress if not set already
-        $statement = Db::query("UPDATE `$table` SET `status` = ?, ts_started = NOW() WHERE idinvalidation = ? AND status = ?", [
+        $statement = Db::query("UPDATE `$table` SET `status` = ?, `processing_host` = ?, `process_id` = ?, `ts_started` = NOW() WHERE `idinvalidation` = ? AND `status` = ?", [
             ArchiveInvalidator::INVALIDATION_STATUS_IN_PROGRESS,
+            gethostname() ?: null,
+            Common::getProcessId(),
             $invalidation['idinvalidation'],
             ArchiveInvalidator::INVALIDATION_STATUS_QUEUED,
         ]);
 
-        if ($statement->rowCount() > 0) { // if we updated, then we've marked the archive as started
-            return true;
-        }
-
-        // archive was not originally started or was started within the expected time, so we assume it's ongoing and another process
-        // (on this machine or another) is actively archiving it.
-        $archiveFailureRecoveryTimeout = GeneralConfig::getConfigValue('archive_failure_recovery_timeout', $invalidation['idsite']);
-        if (
-            empty($invalidation['ts_started'])
-            || $invalidation['ts_started'] > Date::now()->subSeconds($archiveFailureRecoveryTimeout)->getTimestamp()
-        ) {
-            return false;
-        }
-
-        // archive was started over 24 hours ago, we assume it failed and take it over
-        Db::query("UPDATE `$table` SET `status` = ?, ts_started = NOW() WHERE idinvalidation = ?", [
-            ArchiveInvalidator::INVALIDATION_STATUS_IN_PROGRESS,
-            $invalidation['idinvalidation'],
-        ]);
-
-        // remove similar invalidations w/ lesser idinvalidation values
-        $bind = [
-            $invalidation['idsite'],
-            $invalidation['period'],
-            $invalidation['date1'],
-            $invalidation['date2'],
-            $invalidation['name'],
-            ArchiveInvalidator::INVALIDATION_STATUS_IN_PROGRESS,
-        ];
-
-        if (empty($invalidation['report'])) {
-            $reportClause = "(report IS NULL OR report = '')";
-        } else {
-            $reportClause = "report = ?";
-            $bind[] = $invalidation['report'];
-        }
-
-        $sql = "DELETE FROM " . Common::prefixTable('archive_invalidations') . " WHERE idinvalidation < ? AND idsite = ? AND "
-            . "date1 = ? AND date2 = ? AND `period` = ? AND `name` = ? AND $reportClause";
-        Db::query($sql, $bind);
-
-        return true;
+        // if we updated, then we've marked the archive as started
+        return $statement->rowCount() > 0;
     }
 
     public function isSimilarArchiveInProgress($invalidation)
@@ -1009,7 +971,7 @@ private function getRemoveInvalidationsIdSitesClause($idSite)
     public function releaseInProgressInvalidation($idinvalidation)
     {
         $table = Common::prefixTable('archive_invalidations');
-        $sql = "UPDATE $table SET status = " . ArchiveInvalidator::INVALIDATION_STATUS_QUEUED . ", ts_started = NULL WHERE idinvalidation = ?";
+        $sql = "UPDATE $table SET status = " . ArchiveInvalidator::INVALIDATION_STATUS_QUEUED . ", ts_started = NULL, processing_host = NULL, process_id = NULL WHERE idinvalidation = ?";
         Db::query($sql, [$idinvalidation]);
     }
 
diff --git a/core/Db/Schema/Mysql.php b/core/Db/Schema/Mysql.php
index 7c3cd280f94..41dc7c5f183 100644
--- a/core/Db/Schema/Mysql.php
+++ b/core/Db/Schema/Mysql.php
@@ -332,6 +332,8 @@ public function getTablesCreateSql()
                                             ts_started DATETIME NULL,
                                             status TINYINT(1) UNSIGNED DEFAULT 0,
                                             `report` VARCHAR(255) NULL,
+                                            processing_host VARCHAR(100) NULL DEFAULT NULL,
+                                            process_id VARCHAR(15) NULL DEFAULT NULL,
                                             PRIMARY KEY(idinvalidation),
                                             INDEX index_idsite_dates_period_name(idsite, date1, period)
                                         ) $tableOptions
diff --git a/core/Updates/5.3.0-b1.php b/core/Updates/5.3.0-b1.php
new file mode 100644
index 00000000000..86e65683583
--- /dev/null
+++ b/core/Updates/5.3.0-b1.php
@@ -0,0 +1,42 @@
+<?php
+
+/**
+ * Matomo - free/libre analytics platform
+ *
+ * @link    https://matomo.org
+ * @license https://www.gnu.org/licenses/gpl-3.0.html GPL v3 or later
+ */
+
+namespace Piwik\Updates;
+
+use Piwik\Updater;
+use Piwik\Updater\Migration\Factory as MigrationFactory;
+use Piwik\Updates;
+
+class Updates_5_3_0_b1 extends Updates
+{
+    /**
+     * @var MigrationFactory
+     */
+    private $migration;
+
+    public function __construct(MigrationFactory $factory)
+    {
+        $this->migration = $factory;
+    }
+
+    public function getMigrations(Updater $updater)
+    {
+        return [
+            $this->migration->db->addColumns('archive_invalidations', [
+                'processing_host' => 'VARCHAR(100) NULL DEFAULT NULL',
+                'process_id' => 'VARCHAR(15) NULL DEFAULT NULL',
+            ])
+        ];
+    }
+
+    public function doUpdate(Updater $updater)
+    {
+        $updater->executeMigrations(__FILE__, $this->getMigrations($updater));
+    }
+}
diff --git a/core/Version.php b/core/Version.php
index ea5ffb45b52..322df4f3d98 100644
--- a/core/Version.php
+++ b/core/Version.php
@@ -22,7 +22,7 @@ final class Version
      * The current Matomo version.
      * @var string
      */
-    public const VERSION = '5.3.0-alpha';
+    public const VERSION = '5.3.0-b1';
 
     public const MAJOR_VERSION = 5;
 
diff --git a/tests/PHPUnit/Integration/CronArchive/QueueConsumerTest.php b/tests/PHPUnit/Integration/CronArchive/QueueConsumerTest.php
index 7ae15d16572..bf440cdba27 100644
--- a/tests/PHPUnit/Integration/CronArchive/QueueConsumerTest.php
+++ b/tests/PHPUnit/Integration/CronArchive/QueueConsumerTest.php
@@ -117,6 +117,8 @@ public function testConsumerIgnoresPeriodsThatHaveBeenDisabledInApi()
                     'report' => null,
                     'plugin' => null,
                     'segment' => '',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [
@@ -132,6 +134,8 @@ public function testConsumerIgnoresPeriodsThatHaveBeenDisabledInApi()
                     'report' => null,
                     'plugin' => null,
                     'segment' => '',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [],
@@ -260,6 +264,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
                 array (
                     'idarchive' => '1',
@@ -273,6 +279,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
                 array (
                     'idarchive' => '1',
@@ -286,6 +294,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -301,6 +311,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
                 array (
                     'idarchive' => '1',
@@ -314,6 +326,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
                 array (
                     'idarchive' => '1',
@@ -327,6 +341,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -342,6 +358,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
                 array (
                     'idarchive' => '1',
@@ -355,6 +373,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -370,6 +390,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -385,6 +407,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -400,6 +424,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -415,6 +441,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -430,6 +458,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -445,6 +475,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array (
@@ -460,6 +492,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => 'browserCode==IE;dimension1==val',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array ( // end of idsite=1
@@ -477,6 +511,8 @@ public function testInvalidateConsumeOrder()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ),
             ),
             array ( // end of idsite=2
@@ -568,7 +604,7 @@ public function testPluginInvalidationDeletedIfUsableArchiveExists()
 
         $expectedInvalidationsFound = [
             array(
-                ['idarchive' => '1', 'idsite' => '1', 'date1' => '2018-03-04', 'date2' => '2018-03-04', 'period' => '3', 'name' => 'done', 'report' => null, 'plugin' => null, 'segment' => '', 'ts_started' => null, 'status' => '0']
+                ['idarchive' => '1', 'idsite' => '1', 'date1' => '2018-03-04', 'date2' => '2018-03-04', 'period' => '3', 'name' => 'done', 'report' => null, 'plugin' => null, 'segment' => '', 'ts_started' => null, 'status' => '0', 'processing_host' => null, 'process_id' => null]
             ),
             array()
         ];
@@ -665,6 +701,8 @@ public function testSkipSegmentsToday()
                     'segment' => '',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
                 [
                     'idarchive' => '3',
@@ -678,6 +716,8 @@ public function testSkipSegmentsToday()
                     'segment' => 'browserCode==IE',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [
@@ -693,6 +733,8 @@ public function testSkipSegmentsToday()
                     'segment' => 'browserCode==IE',
                     'ts_started' => null,
                     'status' => '0',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [
@@ -708,6 +750,8 @@ public function testSkipSegmentsToday()
                     'report' => null,
                     'plugin' => null,
                     'segment' => '',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [
@@ -723,6 +767,8 @@ public function testSkipSegmentsToday()
                     'report' => null,
                     'plugin' => null,
                     'segment' => 'browserCode==FF',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ],
             [// end of idsite=1
@@ -884,6 +930,8 @@ public function testMaxWebsitesToProcess()
                     'report' => null,
                     'plugin' => null,
                     'segment' => '',
+                    'processing_host' => null,
+                    'process_id' => null,
                 ],
             ]
         ];
diff --git a/tests/PHPUnit/Integration/DataAccess/ModelTest.php b/tests/PHPUnit/Integration/DataAccess/ModelTest.php
index 24eed4858a3..68497f356bb 100644
--- a/tests/PHPUnit/Integration/DataAccess/ModelTest.php
+++ b/tests/PHPUnit/Integration/DataAccess/ModelTest.php
@@ -9,6 +9,7 @@
 
 namespace Piwik\Tests\Integration\DataAccess;
 
+use Piwik\Archive\ArchiveInvalidator;
 use Piwik\Common;
 use Piwik\Config;
 use Piwik\DataAccess\ArchiveTableCreator;
@@ -410,6 +411,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '12',
@@ -422,6 +425,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '13',
@@ -434,6 +439,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '19',
@@ -446,6 +453,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '5',
@@ -458,6 +467,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '15',
@@ -470,6 +481,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '8',
@@ -482,6 +495,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '14',
@@ -494,6 +509,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '20',
@@ -506,6 +523,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '3',
@@ -518,6 +537,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '2',
@@ -530,6 +551,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '10',
@@ -542,6 +565,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '17',
@@ -554,6 +579,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '22',
@@ -566,6 +593,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '7',
@@ -578,6 +607,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '1',
@@ -590,6 +621,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '16',
@@ -602,6 +635,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '6',
@@ -614,6 +649,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '9',
@@ -626,6 +663,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '18',
@@ -638,6 +677,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '21',
@@ -650,6 +691,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
             array (
                 'idinvalidation' => '4',
@@ -662,6 +705,8 @@ public function testGetNextInvalidatedArchiveReturnsCorrectOrder()
                 'report' => null,
                 'ts_started' => null,
                 'status' => 0,
+                'processing_host' => null,
+                'process_id' => null,
             ),
         );
 
@@ -693,6 +738,38 @@ public function testDeleteInvalidationsForDeletedSites()
         ], $invalidations);
     }
 
+    public function testStartArchiveEnrichesRecordWithHostnameAndProcessId()
+    {
+        Fixture::createWebsite('2014-01-01 00:00:00');
+
+        $this->insertInvalidations([
+            ['idsite' => 1, 'date1' => '2014-02-04', 'date2' => '2014-02-04', 'period' => 1, 'name' => 'done', 'ts_started' => Date::now()->getDatetime(), 'status' => ArchiveInvalidator::INVALIDATION_STATUS_IN_PROGRESS],
+            ['idsite' => 1, 'date1' => '2014-02-01', 'date2' => '2014-02-28', 'period' => 2, 'name' => 'done', 'status' => ArchiveInvalidator::INVALIDATION_STATUS_QUEUED],
+        ]);
+
+        $invalidations = Db::fetchAll("SELECT * FROM " . Common::prefixTable('archive_invalidations') . " ORDER BY idinvalidation ASC");
+
+        self::assertEmpty($invalidations[0]['processing_host']);
+        self::assertEmpty($invalidations[0]['process_id']);
+        self::assertEmpty($invalidations[1]['processing_host']);
+        self::assertEmpty($invalidations[1]['process_id']);
+
+        self::assertCount(2, $invalidations);
+
+        $this->model->startArchive($invalidations[0]);
+        $this->model->startArchive($invalidations[1]);
+
+        $invalidations = Db::fetchAll("SELECT * FROM " . Common::prefixTable('archive_invalidations') . " ORDER BY idinvalidation ASC");
+
+        self::assertCount(2, $invalidations);
+
+        // first one should not be updated as it's already running
+        self::assertEmpty($invalidations[0]['processing_host']);
+        self::assertEmpty($invalidations[0]['process_id']);
+        self::assertNotEmpty($invalidations[1]['processing_host']);
+        self::assertNotEmpty($invalidations[1]['process_id']);
+    }
+
     private function insertArchiveData($archivesToInsert)
     {
         $idarchive = 1;
